// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/storage/v1/storage.proto
// Original file comments:
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fstorage_2fv1_2fstorage_2eproto__INCLUDED
#define GRPC_google_2fstorage_2fv1_2fstorage_2eproto__INCLUDED

#include "google/storage/v1/storage.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace storage {
namespace v1 {

// Manages Google Cloud Storage resources.
class Storage final {
 public:
  static constexpr char const* service_full_name() {
    return "google.storage.v1.Storage";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Permanently deletes the ACL entry for the specified entity on the specified
    // bucket.
    virtual ::grpc::Status DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteBucketAccessControlRaw(context, request, cq));
    }
    // Returns the ACL entry for the specified entity on the specified bucket.
    virtual ::grpc::Status GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> AsyncGetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(AsyncGetBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> PrepareAsyncGetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncGetBucketAccessControlRaw(context, request, cq));
    }
    // Creates a new ACL entry on the specified bucket.
    virtual ::grpc::Status InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> AsyncInsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(AsyncInsertBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> PrepareAsyncInsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncInsertBucketAccessControlRaw(context, request, cq));
    }
    // Retrieves ACL entries on the specified bucket.
    virtual ::grpc::Status ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::google::storage::v1::ListBucketAccessControlsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketAccessControlsResponse>> AsyncListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketAccessControlsResponse>>(AsyncListBucketAccessControlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketAccessControlsResponse>> PrepareAsyncListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketAccessControlsResponse>>(PrepareAsyncListBucketAccessControlsRaw(context, request, cq));
    }
    // Updates an ACL entry on the specified bucket. Equivalent to
    // PatchBucketAccessControl, but all unspecified fields will be
    // reset to their default values.
    virtual ::grpc::Status UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> AsyncUpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(AsyncUpdateBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> PrepareAsyncUpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncUpdateBucketAccessControlRaw(context, request, cq));
    }
    // Updates an ACL entry on the specified bucket.
    virtual ::grpc::Status PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> AsyncPatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(AsyncPatchBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>> PrepareAsyncPatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncPatchBucketAccessControlRaw(context, request, cq));
    }
    // Permanently deletes an empty bucket.
    virtual ::grpc::Status DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteBucketRaw(context, request, cq));
    }
    // Returns metadata for the specified bucket.
    virtual ::grpc::Status GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::google::storage::v1::Bucket* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> AsyncGetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(AsyncGetBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> PrepareAsyncGetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(PrepareAsyncGetBucketRaw(context, request, cq));
    }
    // Creates a new bucket.
    virtual ::grpc::Status InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::google::storage::v1::Bucket* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> AsyncInsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(AsyncInsertBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> PrepareAsyncInsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(PrepareAsyncInsertBucketRaw(context, request, cq));
    }
    // List active object change notification channels for this bucket.
    virtual ::grpc::Status ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::google::storage::v1::ListChannelsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListChannelsResponse>> AsyncListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListChannelsResponse>>(AsyncListChannelsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListChannelsResponse>> PrepareAsyncListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListChannelsResponse>>(PrepareAsyncListChannelsRaw(context, request, cq));
    }
    // Retrieves a list of buckets for a given project.
    virtual ::grpc::Status ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::google::storage::v1::ListBucketsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketsResponse>> AsyncListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketsResponse>>(AsyncListBucketsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketsResponse>> PrepareAsyncListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketsResponse>>(PrepareAsyncListBucketsRaw(context, request, cq));
    }
    // Locks retention policy on a bucket.
    virtual ::grpc::Status LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::google::storage::v1::Bucket* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> AsyncLockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(AsyncLockBucketRetentionPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> PrepareAsyncLockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(PrepareAsyncLockBucketRetentionPolicyRaw(context, request, cq));
    }
    // Gets the IAM policy for the specified bucket.
    virtual ::grpc::Status GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncGetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncGetBucketIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncGetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncGetBucketIamPolicyRaw(context, request, cq));
    }
    // Updates an IAM policy for the specified bucket.
    virtual ::grpc::Status SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncSetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncSetBucketIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncSetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncSetBucketIamPolicyRaw(context, request, cq));
    }
    // Tests a set of permissions on the given bucket to see which, if
    // any, are held by the caller.
    virtual ::grpc::Status TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestBucketIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestBucketIamPermissionsRaw(context, request, cq));
    }
    // Updates a bucket. Changes to the bucket will be readable immediately after
    // writing, but configuration changes may take time to propagate.
    virtual ::grpc::Status PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::google::storage::v1::Bucket* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> AsyncPatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(AsyncPatchBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> PrepareAsyncPatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(PrepareAsyncPatchBucketRaw(context, request, cq));
    }
    // Updates a bucket. Equivalent to PatchBucket, but always replaces all
    // mutatable fields of the bucket with new values, reverting all
    // unspecified fields to their default values.
    // Like PatchBucket, Changes to the bucket will be readable immediately after
    // writing, but configuration changes may take time to propagate.
    virtual ::grpc::Status UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::google::storage::v1::Bucket* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> AsyncUpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(AsyncUpdateBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>> PrepareAsyncUpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>>(PrepareAsyncUpdateBucketRaw(context, request, cq));
    }
    // Halts "Object Change Notification" push messagages.
    // See https://cloud.google.com/storage/docs/object-change-notification
    // Note: this is not related to the newer "Notifications" resource, which
    // are stopped using DeleteNotification.
    virtual ::grpc::Status StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStopChannelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStopChannelRaw(context, request, cq));
    }
    // Permanently deletes the default object ACL entry for the specified entity
    // on the specified bucket.
    virtual ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteDefaultObjectAccessControlRaw(context, request, cq));
    }
    // Returns the default object ACL entry for the specified entity on the
    // specified bucket.
    virtual ::grpc::Status GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncGetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncGetDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncGetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncGetDefaultObjectAccessControlRaw(context, request, cq));
    }
    // Creates a new default object ACL entry on the specified bucket.
    virtual ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncInsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncInsertDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncInsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncInsertDefaultObjectAccessControlRaw(context, request, cq));
    }
    // Retrieves default object ACL entries on the specified bucket.
    virtual ::grpc::Status ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::google::storage::v1::ListObjectAccessControlsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>> AsyncListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>>(AsyncListDefaultObjectAccessControlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>> PrepareAsyncListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>>(PrepareAsyncListDefaultObjectAccessControlsRaw(context, request, cq));
    }
    // Updates a default object ACL entry on the specified bucket.
    virtual ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncPatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncPatchDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncPatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncPatchDefaultObjectAccessControlRaw(context, request, cq));
    }
    // Updates a default object ACL entry on the specified bucket. Equivalent to
    // PatchDefaultObjectAccessControl, but modifies all unspecified fields to
    // their default values.
    virtual ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncUpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncUpdateDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncUpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncUpdateDefaultObjectAccessControlRaw(context, request, cq));
    }
    // Permanently deletes a notification subscription.
    // Note: Older, "Object Change Notification" push subscriptions should be
    // deleted using StopChannel instead.
    virtual ::grpc::Status DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteNotificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteNotificationRaw(context, request, cq));
    }
    // View a notification configuration.
    virtual ::grpc::Status GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::google::storage::v1::Notification* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>> AsyncGetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>>(AsyncGetNotificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>> PrepareAsyncGetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>>(PrepareAsyncGetNotificationRaw(context, request, cq));
    }
    // Creates a notification subscription for a given bucket.
    // These notifications, when triggered, publish messages to the specified
    // Cloud Pub/Sub topics.
    // See https://cloud.google.com/storage/docs/pubsub-notifications.
    virtual ::grpc::Status InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::google::storage::v1::Notification* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>> AsyncInsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>>(AsyncInsertNotificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>> PrepareAsyncInsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>>(PrepareAsyncInsertNotificationRaw(context, request, cq));
    }
    // Retrieves a list of notification subscriptions for a given bucket.
    virtual ::grpc::Status ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::google::storage::v1::ListNotificationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListNotificationsResponse>> AsyncListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListNotificationsResponse>>(AsyncListNotificationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListNotificationsResponse>> PrepareAsyncListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListNotificationsResponse>>(PrepareAsyncListNotificationsRaw(context, request, cq));
    }
    // Permanently deletes the ACL entry for the specified entity on the specified
    // object.
    virtual ::grpc::Status DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteObjectAccessControlRaw(context, request, cq));
    }
    // Returns the ACL entry for the specified entity on the specified object.
    virtual ::grpc::Status GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncGetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncGetObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncGetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncGetObjectAccessControlRaw(context, request, cq));
    }
    // Creates a new ACL entry on the specified object.
    virtual ::grpc::Status InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncInsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncInsertObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncInsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncInsertObjectAccessControlRaw(context, request, cq));
    }
    // Retrieves ACL entries on the specified object.
    virtual ::grpc::Status ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::google::storage::v1::ListObjectAccessControlsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>> AsyncListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>>(AsyncListObjectAccessControlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>> PrepareAsyncListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>>(PrepareAsyncListObjectAccessControlsRaw(context, request, cq));
    }
    // Patches an ACL entry on the specified object.  Patch is similar to update,
    // but only applies or appends the specified fields in the
    // object_access_control object.  Other fields are unaffected.
    virtual ::grpc::Status PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncPatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncPatchObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncPatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncPatchObjectAccessControlRaw(context, request, cq));
    }
    // Updates an ACL entry on the specified object.
    virtual ::grpc::Status UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> AsyncUpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(AsyncUpdateObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncUpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncUpdateObjectAccessControlRaw(context, request, cq));
    }
    // Concatenates a list of existing objects into a new object in the same
    // bucket.
    virtual ::grpc::Status ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::google::storage::v1::Object* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> AsyncComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(AsyncComposeObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> PrepareAsyncComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(PrepareAsyncComposeObjectRaw(context, request, cq));
    }
    // Copies a source object to a destination object. Optionally overrides
    // metadata.
    virtual ::grpc::Status CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::google::storage::v1::Object* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> AsyncCopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(AsyncCopyObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> PrepareAsyncCopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(PrepareAsyncCopyObjectRaw(context, request, cq));
    }
    // Deletes an object and its metadata. Deletions are permanent if versioning
    // is not enabled for the bucket, or if the `generation` parameter
    // is used.
    virtual ::grpc::Status DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteObjectRaw(context, request, cq));
    }
    // Retrieves an object's metadata.
    virtual ::grpc::Status GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::google::storage::v1::Object* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> AsyncGetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(AsyncGetObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> PrepareAsyncGetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(PrepareAsyncGetObjectRaw(context, request, cq));
    }
    // Reads an object's data.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::google::storage::v1::GetObjectMediaResponse>> GetObjectMedia(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::google::storage::v1::GetObjectMediaResponse>>(GetObjectMediaRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::google::storage::v1::GetObjectMediaResponse>> AsyncGetObjectMedia(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::google::storage::v1::GetObjectMediaResponse>>(AsyncGetObjectMediaRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::google::storage::v1::GetObjectMediaResponse>> PrepareAsyncGetObjectMedia(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::google::storage::v1::GetObjectMediaResponse>>(PrepareAsyncGetObjectMediaRaw(context, request, cq));
    }
    // Stores a new object and metadata.
    //
    // An object can be written either in a single message stream or in a
    // resumable sequence of message streams. To write using a single stream,
    // the client should include in the first message of the stream an
    // `InsertObjectSpec` describing the destination bucket, object, and any
    // preconditions. Additionally, the final message must set 'finish_write' to
    // true, or else it is an error.
    //
    // For a resumable write, the client should instead call
    // `StartResumableWrite()` and provide that method an `InsertObjectSpec.`
    // They should then attach the returned `upload_id` to the first message of
    // each following call to `Insert`. If there is an error or the connection is
    // broken during the resumable `Insert()`, the client should check the status
    // of the `Insert()` by calling `QueryWriteStatus()` and continue writing from
    // the returned `committed_size`. This may be less than the amount of data the
    // client previously sent.
    //
    // The service will not view the object as complete until the client has
    // sent an `Insert` with `finish_write` set to `true`. Sending any
    // requests on a stream after sending a request with `finish_write` set to
    // `true` will cause an error. The client **should** check the
    // `Object` it receives to determine how much data the service was
    // able to commit and whether the service views the object as complete.
    std::unique_ptr< ::grpc::ClientWriterInterface< ::google::storage::v1::InsertObjectRequest>> InsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::google::storage::v1::InsertObjectRequest>>(InsertObjectRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::google::storage::v1::InsertObjectRequest>> AsyncInsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::google::storage::v1::InsertObjectRequest>>(AsyncInsertObjectRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::google::storage::v1::InsertObjectRequest>> PrepareAsyncInsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::google::storage::v1::InsertObjectRequest>>(PrepareAsyncInsertObjectRaw(context, response, cq));
    }
    // Retrieves a list of objects matching the criteria.
    virtual ::grpc::Status ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::google::storage::v1::ListObjectsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectsResponse>> AsyncListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectsResponse>>(AsyncListObjectsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectsResponse>> PrepareAsyncListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectsResponse>>(PrepareAsyncListObjectsRaw(context, request, cq));
    }
    // Rewrites a source object to a destination object. Optionally overrides
    // metadata.
    virtual ::grpc::Status RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::google::storage::v1::RewriteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::RewriteResponse>> AsyncRewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::RewriteResponse>>(AsyncRewriteObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::RewriteResponse>> PrepareAsyncRewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::RewriteResponse>>(PrepareAsyncRewriteObjectRaw(context, request, cq));
    }
    // Starts a resumable write. How long the write operation remains valid, and
    // what happens when the write operation becomes invalid, are
    // service-dependent.
    virtual ::grpc::Status StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::google::storage::v1::StartResumableWriteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::StartResumableWriteResponse>> AsyncStartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::StartResumableWriteResponse>>(AsyncStartResumableWriteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::StartResumableWriteResponse>> PrepareAsyncStartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::StartResumableWriteResponse>>(PrepareAsyncStartResumableWriteRaw(context, request, cq));
    }
    // Determines the `committed_size` for an object that is being written, which
    // can then be used as the `write_offset` for the next `Write()` call.
    //
    // If the object does not exist (i.e., the object has been deleted, or the
    // first `Write()` has not yet reached the service), this method returns the
    // error `NOT_FOUND`.
    //
    // The client **may** call `QueryWriteStatus()` at any time to determine how
    // much data has been processed for this object. This is useful if the
    // client is buffering data and needs to know which data can be safely
    // evicted. For any sequence of `QueryWriteStatus()` calls for a given
    // object name, the sequence of returned `committed_size` values will be
    // non-decreasing.
    virtual ::grpc::Status QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::google::storage::v1::QueryWriteStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::QueryWriteStatusResponse>> AsyncQueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::QueryWriteStatusResponse>>(AsyncQueryWriteStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::QueryWriteStatusResponse>> PrepareAsyncQueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::QueryWriteStatusResponse>>(PrepareAsyncQueryWriteStatusRaw(context, request, cq));
    }
    // Updates an object's metadata.
    virtual ::grpc::Status PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::google::storage::v1::Object* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> AsyncPatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(AsyncPatchObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> PrepareAsyncPatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(PrepareAsyncPatchObjectRaw(context, request, cq));
    }
    // Updates an object's metadata. Equivalent to PatchObject, but always
    // replaces all mutatable fields of the bucket with new values, reverting all
    // unspecified fields to their default values.
    virtual ::grpc::Status UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::google::storage::v1::Object* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> AsyncUpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(AsyncUpdateObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>> PrepareAsyncUpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>>(PrepareAsyncUpdateObjectRaw(context, request, cq));
    }
    // Gets the IAM policy for the specified object.
    virtual ::grpc::Status GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncGetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncGetObjectIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncGetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncGetObjectIamPolicyRaw(context, request, cq));
    }
    // Updates an IAM policy for the specified object.
    virtual ::grpc::Status SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncSetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncSetObjectIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncSetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncSetObjectIamPolicyRaw(context, request, cq));
    }
    // Tests a set of permissions on the given object to see which, if
    // any, are held by the caller.
    virtual ::grpc::Status TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestObjectIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestObjectIamPermissionsRaw(context, request, cq));
    }
    // Watch for changes on all objects in a bucket.
    virtual ::grpc::Status WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::google::storage::v1::Channel* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Channel>> AsyncWatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Channel>>(AsyncWatchAllObjectsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Channel>> PrepareAsyncWatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Channel>>(PrepareAsyncWatchAllObjectsRaw(context, request, cq));
    }
    // Retrieves the name of a project's Google Cloud Storage service account.
    virtual ::grpc::Status GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::google::storage::v1::ServiceAccount* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ServiceAccount>> AsyncGetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ServiceAccount>>(AsyncGetServiceAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ServiceAccount>> PrepareAsyncGetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ServiceAccount>>(PrepareAsyncGetServiceAccountRaw(context, request, cq));
    }
    // Creates a new HMAC key for the given service account.
    virtual ::grpc::Status CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::google::storage::v1::CreateHmacKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::CreateHmacKeyResponse>> AsyncCreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::CreateHmacKeyResponse>>(AsyncCreateHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::CreateHmacKeyResponse>> PrepareAsyncCreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::CreateHmacKeyResponse>>(PrepareAsyncCreateHmacKeyRaw(context, request, cq));
    }
    // Deletes a given HMAC key.  Key must be in an INACTIVE state.
    virtual ::grpc::Status DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteHmacKeyRaw(context, request, cq));
    }
    // Gets an existing HMAC key metadata for the given id.
    virtual ::grpc::Status GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::google::storage::v1::HmacKeyMetadata* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>> AsyncGetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>>(AsyncGetHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>> PrepareAsyncGetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>>(PrepareAsyncGetHmacKeyRaw(context, request, cq));
    }
    // Lists HMAC keys under a given project with the additional filters provided.
    virtual ::grpc::Status ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::google::storage::v1::ListHmacKeysResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListHmacKeysResponse>> AsyncListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListHmacKeysResponse>>(AsyncListHmacKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListHmacKeysResponse>> PrepareAsyncListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListHmacKeysResponse>>(PrepareAsyncListHmacKeysRaw(context, request, cq));
    }
    // Updates a given HMAC key state between ACTIVE and INACTIVE.
    virtual ::grpc::Status UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::google::storage::v1::HmacKeyMetadata* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>> AsyncUpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>>(AsyncUpdateHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>> PrepareAsyncUpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>>(PrepareAsyncUpdateHmacKeyRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Permanently deletes the ACL entry for the specified entity on the specified
      // bucket.
      virtual void DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Returns the ACL entry for the specified entity on the specified bucket.
      virtual void GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a new ACL entry on the specified bucket.
      virtual void InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves ACL entries on the specified bucket.
      virtual void ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates an ACL entry on the specified bucket. Equivalent to
      // PatchBucketAccessControl, but all unspecified fields will be
      // reset to their default values.
      virtual void UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates an ACL entry on the specified bucket.
      virtual void PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Permanently deletes an empty bucket.
      virtual void DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Returns metadata for the specified bucket.
      virtual void GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a new bucket.
      virtual void InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // List active object change notification channels for this bucket.
      virtual void ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves a list of buckets for a given project.
      virtual void ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Locks retention policy on a bucket.
      virtual void LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets the IAM policy for the specified bucket.
      virtual void GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates an IAM policy for the specified bucket.
      virtual void SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Tests a set of permissions on the given bucket to see which, if
      // any, are held by the caller.
      virtual void TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates a bucket. Changes to the bucket will be readable immediately after
      // writing, but configuration changes may take time to propagate.
      virtual void PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates a bucket. Equivalent to PatchBucket, but always replaces all
      // mutatable fields of the bucket with new values, reverting all
      // unspecified fields to their default values.
      // Like PatchBucket, Changes to the bucket will be readable immediately after
      // writing, but configuration changes may take time to propagate.
      virtual void UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Halts "Object Change Notification" push messagages.
      // See https://cloud.google.com/storage/docs/object-change-notification
      // Note: this is not related to the newer "Notifications" resource, which
      // are stopped using DeleteNotification.
      virtual void StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Permanently deletes the default object ACL entry for the specified entity
      // on the specified bucket.
      virtual void DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Returns the default object ACL entry for the specified entity on the
      // specified bucket.
      virtual void GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a new default object ACL entry on the specified bucket.
      virtual void InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves default object ACL entries on the specified bucket.
      virtual void ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates a default object ACL entry on the specified bucket.
      virtual void PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates a default object ACL entry on the specified bucket. Equivalent to
      // PatchDefaultObjectAccessControl, but modifies all unspecified fields to
      // their default values.
      virtual void UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Permanently deletes a notification subscription.
      // Note: Older, "Object Change Notification" push subscriptions should be
      // deleted using StopChannel instead.
      virtual void DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // View a notification configuration.
      virtual void GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a notification subscription for a given bucket.
      // These notifications, when triggered, publish messages to the specified
      // Cloud Pub/Sub topics.
      // See https://cloud.google.com/storage/docs/pubsub-notifications.
      virtual void InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves a list of notification subscriptions for a given bucket.
      virtual void ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Permanently deletes the ACL entry for the specified entity on the specified
      // object.
      virtual void DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Returns the ACL entry for the specified entity on the specified object.
      virtual void GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a new ACL entry on the specified object.
      virtual void InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves ACL entries on the specified object.
      virtual void ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Patches an ACL entry on the specified object.  Patch is similar to update,
      // but only applies or appends the specified fields in the
      // object_access_control object.  Other fields are unaffected.
      virtual void PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates an ACL entry on the specified object.
      virtual void UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Concatenates a list of existing objects into a new object in the same
      // bucket.
      virtual void ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Copies a source object to a destination object. Optionally overrides
      // metadata.
      virtual void CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Deletes an object and its metadata. Deletions are permanent if versioning
      // is not enabled for the bucket, or if the `generation` parameter
      // is used.
      virtual void DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves an object's metadata.
      virtual void GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Reads an object's data.
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetObjectMedia(::grpc::ClientContext* context, ::google::storage::v1::GetObjectMediaRequest* request, ::grpc::ClientReadReactor< ::google::storage::v1::GetObjectMediaResponse>* reactor) = 0;
      #else
      virtual void GetObjectMedia(::grpc::ClientContext* context, ::google::storage::v1::GetObjectMediaRequest* request, ::grpc::experimental::ClientReadReactor< ::google::storage::v1::GetObjectMediaResponse>* reactor) = 0;
      #endif
      // Stores a new object and metadata.
      //
      // An object can be written either in a single message stream or in a
      // resumable sequence of message streams. To write using a single stream,
      // the client should include in the first message of the stream an
      // `InsertObjectSpec` describing the destination bucket, object, and any
      // preconditions. Additionally, the final message must set 'finish_write' to
      // true, or else it is an error.
      //
      // For a resumable write, the client should instead call
      // `StartResumableWrite()` and provide that method an `InsertObjectSpec.`
      // They should then attach the returned `upload_id` to the first message of
      // each following call to `Insert`. If there is an error or the connection is
      // broken during the resumable `Insert()`, the client should check the status
      // of the `Insert()` by calling `QueryWriteStatus()` and continue writing from
      // the returned `committed_size`. This may be less than the amount of data the
      // client previously sent.
      //
      // The service will not view the object as complete until the client has
      // sent an `Insert` with `finish_write` set to `true`. Sending any
      // requests on a stream after sending a request with `finish_write` set to
      // `true` will cause an error. The client **should** check the
      // `Object` it receives to determine how much data the service was
      // able to commit and whether the service views the object as complete.
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::ClientWriteReactor< ::google::storage::v1::InsertObjectRequest>* reactor) = 0;
      #else
      virtual void InsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::experimental::ClientWriteReactor< ::google::storage::v1::InsertObjectRequest>* reactor) = 0;
      #endif
      // Retrieves a list of objects matching the criteria.
      virtual void ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Rewrites a source object to a destination object. Optionally overrides
      // metadata.
      virtual void RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Starts a resumable write. How long the write operation remains valid, and
      // what happens when the write operation becomes invalid, are
      // service-dependent.
      virtual void StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Determines the `committed_size` for an object that is being written, which
      // can then be used as the `write_offset` for the next `Write()` call.
      //
      // If the object does not exist (i.e., the object has been deleted, or the
      // first `Write()` has not yet reached the service), this method returns the
      // error `NOT_FOUND`.
      //
      // The client **may** call `QueryWriteStatus()` at any time to determine how
      // much data has been processed for this object. This is useful if the
      // client is buffering data and needs to know which data can be safely
      // evicted. For any sequence of `QueryWriteStatus()` calls for a given
      // object name, the sequence of returned `committed_size` values will be
      // non-decreasing.
      virtual void QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates an object's metadata.
      virtual void PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates an object's metadata. Equivalent to PatchObject, but always
      // replaces all mutatable fields of the bucket with new values, reverting all
      // unspecified fields to their default values.
      virtual void UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets the IAM policy for the specified object.
      virtual void GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates an IAM policy for the specified object.
      virtual void SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Tests a set of permissions on the given object to see which, if
      // any, are held by the caller.
      virtual void TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Watch for changes on all objects in a bucket.
      virtual void WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves the name of a project's Google Cloud Storage service account.
      virtual void GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a new HMAC key for the given service account.
      virtual void CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Deletes a given HMAC key.  Key must be in an INACTIVE state.
      virtual void DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets an existing HMAC key metadata for the given id.
      virtual void GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Lists HMAC keys under a given project with the additional filters provided.
      virtual void ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates a given HMAC key state between ACTIVE and INACTIVE.
      virtual void UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* AsyncGetBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* PrepareAsyncGetBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* AsyncInsertBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* PrepareAsyncInsertBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketAccessControlsResponse>* AsyncListBucketAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketAccessControlsResponse>* PrepareAsyncListBucketAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* AsyncUpdateBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* PrepareAsyncUpdateBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* AsyncPatchBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::BucketAccessControl>* PrepareAsyncPatchBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* AsyncGetBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* PrepareAsyncGetBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* AsyncInsertBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* PrepareAsyncInsertBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListChannelsResponse>* AsyncListChannelsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListChannelsResponse>* PrepareAsyncListChannelsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketsResponse>* AsyncListBucketsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListBucketsResponse>* PrepareAsyncListBucketsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* AsyncLockBucketRetentionPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* PrepareAsyncLockBucketRetentionPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncGetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncGetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncSetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncSetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestBucketIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestBucketIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* AsyncPatchBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* PrepareAsyncPatchBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* AsyncUpdateBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Bucket>* PrepareAsyncUpdateBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStopChannelRaw(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStopChannelRaw(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncGetDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncGetDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncInsertDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncInsertDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>* AsyncListDefaultObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>* PrepareAsyncListDefaultObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncPatchDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncPatchDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncUpdateDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncUpdateDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>* AsyncGetNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>* PrepareAsyncGetNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>* AsyncInsertNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Notification>* PrepareAsyncInsertNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListNotificationsResponse>* AsyncListNotificationsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListNotificationsResponse>* PrepareAsyncListNotificationsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncGetObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncGetObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncInsertObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncInsertObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>* AsyncListObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectAccessControlsResponse>* PrepareAsyncListObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncPatchObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncPatchObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* AsyncUpdateObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncUpdateObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* AsyncComposeObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* PrepareAsyncComposeObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* AsyncCopyObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* PrepareAsyncCopyObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* AsyncGetObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* PrepareAsyncGetObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::google::storage::v1::GetObjectMediaResponse>* GetObjectMediaRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::google::storage::v1::GetObjectMediaResponse>* AsyncGetObjectMediaRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::google::storage::v1::GetObjectMediaResponse>* PrepareAsyncGetObjectMediaRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::google::storage::v1::InsertObjectRequest>* InsertObjectRaw(::grpc::ClientContext* context, ::google::storage::v1::Object* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::google::storage::v1::InsertObjectRequest>* AsyncInsertObjectRaw(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::google::storage::v1::InsertObjectRequest>* PrepareAsyncInsertObjectRaw(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectsResponse>* AsyncListObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListObjectsResponse>* PrepareAsyncListObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::RewriteResponse>* AsyncRewriteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::RewriteResponse>* PrepareAsyncRewriteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::StartResumableWriteResponse>* AsyncStartResumableWriteRaw(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::StartResumableWriteResponse>* PrepareAsyncStartResumableWriteRaw(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::QueryWriteStatusResponse>* AsyncQueryWriteStatusRaw(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::QueryWriteStatusResponse>* PrepareAsyncQueryWriteStatusRaw(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* AsyncPatchObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* PrepareAsyncPatchObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* AsyncUpdateObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Object>* PrepareAsyncUpdateObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncGetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncGetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncSetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncSetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestObjectIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestObjectIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Channel>* AsyncWatchAllObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::Channel>* PrepareAsyncWatchAllObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ServiceAccount>* AsyncGetServiceAccountRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ServiceAccount>* PrepareAsyncGetServiceAccountRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::CreateHmacKeyResponse>* AsyncCreateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::CreateHmacKeyResponse>* PrepareAsyncCreateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>* AsyncGetHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>* PrepareAsyncGetHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListHmacKeysResponse>* AsyncListHmacKeysRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::ListHmacKeysResponse>* PrepareAsyncListHmacKeysRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>* AsyncUpdateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::storage::v1::HmacKeyMetadata>* PrepareAsyncUpdateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteBucketAccessControlRaw(context, request, cq));
    }
    ::grpc::Status GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> AsyncGetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(AsyncGetBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> PrepareAsyncGetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncGetBucketAccessControlRaw(context, request, cq));
    }
    ::grpc::Status InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> AsyncInsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(AsyncInsertBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> PrepareAsyncInsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncInsertBucketAccessControlRaw(context, request, cq));
    }
    ::grpc::Status ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::google::storage::v1::ListBucketAccessControlsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketAccessControlsResponse>> AsyncListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketAccessControlsResponse>>(AsyncListBucketAccessControlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketAccessControlsResponse>> PrepareAsyncListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketAccessControlsResponse>>(PrepareAsyncListBucketAccessControlsRaw(context, request, cq));
    }
    ::grpc::Status UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> AsyncUpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(AsyncUpdateBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> PrepareAsyncUpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncUpdateBucketAccessControlRaw(context, request, cq));
    }
    ::grpc::Status PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::google::storage::v1::BucketAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> AsyncPatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(AsyncPatchBucketAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>> PrepareAsyncPatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>>(PrepareAsyncPatchBucketAccessControlRaw(context, request, cq));
    }
    ::grpc::Status DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteBucketRaw(context, request, cq));
    }
    ::grpc::Status GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::google::storage::v1::Bucket* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> AsyncGetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(AsyncGetBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> PrepareAsyncGetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(PrepareAsyncGetBucketRaw(context, request, cq));
    }
    ::grpc::Status InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::google::storage::v1::Bucket* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> AsyncInsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(AsyncInsertBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> PrepareAsyncInsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(PrepareAsyncInsertBucketRaw(context, request, cq));
    }
    ::grpc::Status ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::google::storage::v1::ListChannelsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListChannelsResponse>> AsyncListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListChannelsResponse>>(AsyncListChannelsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListChannelsResponse>> PrepareAsyncListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListChannelsResponse>>(PrepareAsyncListChannelsRaw(context, request, cq));
    }
    ::grpc::Status ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::google::storage::v1::ListBucketsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketsResponse>> AsyncListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketsResponse>>(AsyncListBucketsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketsResponse>> PrepareAsyncListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketsResponse>>(PrepareAsyncListBucketsRaw(context, request, cq));
    }
    ::grpc::Status LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::google::storage::v1::Bucket* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> AsyncLockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(AsyncLockBucketRetentionPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> PrepareAsyncLockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(PrepareAsyncLockBucketRetentionPolicyRaw(context, request, cq));
    }
    ::grpc::Status GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncGetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncGetBucketIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncGetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncGetBucketIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncSetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncSetBucketIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncSetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncSetBucketIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestBucketIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestBucketIamPermissionsRaw(context, request, cq));
    }
    ::grpc::Status PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::google::storage::v1::Bucket* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> AsyncPatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(AsyncPatchBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> PrepareAsyncPatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(PrepareAsyncPatchBucketRaw(context, request, cq));
    }
    ::grpc::Status UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::google::storage::v1::Bucket* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> AsyncUpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(AsyncUpdateBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>> PrepareAsyncUpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>>(PrepareAsyncUpdateBucketRaw(context, request, cq));
    }
    ::grpc::Status StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStopChannelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStopChannelRaw(context, request, cq));
    }
    ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteDefaultObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncGetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncGetDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncGetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncGetDefaultObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncInsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncInsertDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncInsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncInsertDefaultObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::google::storage::v1::ListObjectAccessControlsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>> AsyncListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>>(AsyncListDefaultObjectAccessControlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>> PrepareAsyncListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>>(PrepareAsyncListDefaultObjectAccessControlsRaw(context, request, cq));
    }
    ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncPatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncPatchDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncPatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncPatchDefaultObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncUpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncUpdateDefaultObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncUpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncUpdateDefaultObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteNotificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteNotificationRaw(context, request, cq));
    }
    ::grpc::Status GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::google::storage::v1::Notification* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>> AsyncGetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>>(AsyncGetNotificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>> PrepareAsyncGetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>>(PrepareAsyncGetNotificationRaw(context, request, cq));
    }
    ::grpc::Status InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::google::storage::v1::Notification* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>> AsyncInsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>>(AsyncInsertNotificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>> PrepareAsyncInsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>>(PrepareAsyncInsertNotificationRaw(context, request, cq));
    }
    ::grpc::Status ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::google::storage::v1::ListNotificationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListNotificationsResponse>> AsyncListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListNotificationsResponse>>(AsyncListNotificationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListNotificationsResponse>> PrepareAsyncListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListNotificationsResponse>>(PrepareAsyncListNotificationsRaw(context, request, cq));
    }
    ::grpc::Status DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncGetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncGetObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncGetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncGetObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncInsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncInsertObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncInsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncInsertObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::google::storage::v1::ListObjectAccessControlsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>> AsyncListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>>(AsyncListObjectAccessControlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>> PrepareAsyncListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>>(PrepareAsyncListObjectAccessControlsRaw(context, request, cq));
    }
    ::grpc::Status PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncPatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncPatchObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncPatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncPatchObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::google::storage::v1::ObjectAccessControl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> AsyncUpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(AsyncUpdateObjectAccessControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>> PrepareAsyncUpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>>(PrepareAsyncUpdateObjectAccessControlRaw(context, request, cq));
    }
    ::grpc::Status ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::google::storage::v1::Object* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> AsyncComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(AsyncComposeObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> PrepareAsyncComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(PrepareAsyncComposeObjectRaw(context, request, cq));
    }
    ::grpc::Status CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::google::storage::v1::Object* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> AsyncCopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(AsyncCopyObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> PrepareAsyncCopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(PrepareAsyncCopyObjectRaw(context, request, cq));
    }
    ::grpc::Status DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteObjectRaw(context, request, cq));
    }
    ::grpc::Status GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::google::storage::v1::Object* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> AsyncGetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(AsyncGetObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> PrepareAsyncGetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(PrepareAsyncGetObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::google::storage::v1::GetObjectMediaResponse>> GetObjectMedia(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::google::storage::v1::GetObjectMediaResponse>>(GetObjectMediaRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::google::storage::v1::GetObjectMediaResponse>> AsyncGetObjectMedia(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::google::storage::v1::GetObjectMediaResponse>>(AsyncGetObjectMediaRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::google::storage::v1::GetObjectMediaResponse>> PrepareAsyncGetObjectMedia(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::google::storage::v1::GetObjectMediaResponse>>(PrepareAsyncGetObjectMediaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::google::storage::v1::InsertObjectRequest>> InsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::google::storage::v1::InsertObjectRequest>>(InsertObjectRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::google::storage::v1::InsertObjectRequest>> AsyncInsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::google::storage::v1::InsertObjectRequest>>(AsyncInsertObjectRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::google::storage::v1::InsertObjectRequest>> PrepareAsyncInsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::google::storage::v1::InsertObjectRequest>>(PrepareAsyncInsertObjectRaw(context, response, cq));
    }
    ::grpc::Status ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::google::storage::v1::ListObjectsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectsResponse>> AsyncListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectsResponse>>(AsyncListObjectsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectsResponse>> PrepareAsyncListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectsResponse>>(PrepareAsyncListObjectsRaw(context, request, cq));
    }
    ::grpc::Status RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::google::storage::v1::RewriteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::RewriteResponse>> AsyncRewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::RewriteResponse>>(AsyncRewriteObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::RewriteResponse>> PrepareAsyncRewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::RewriteResponse>>(PrepareAsyncRewriteObjectRaw(context, request, cq));
    }
    ::grpc::Status StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::google::storage::v1::StartResumableWriteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::StartResumableWriteResponse>> AsyncStartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::StartResumableWriteResponse>>(AsyncStartResumableWriteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::StartResumableWriteResponse>> PrepareAsyncStartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::StartResumableWriteResponse>>(PrepareAsyncStartResumableWriteRaw(context, request, cq));
    }
    ::grpc::Status QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::google::storage::v1::QueryWriteStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::QueryWriteStatusResponse>> AsyncQueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::QueryWriteStatusResponse>>(AsyncQueryWriteStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::QueryWriteStatusResponse>> PrepareAsyncQueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::QueryWriteStatusResponse>>(PrepareAsyncQueryWriteStatusRaw(context, request, cq));
    }
    ::grpc::Status PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::google::storage::v1::Object* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> AsyncPatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(AsyncPatchObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> PrepareAsyncPatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(PrepareAsyncPatchObjectRaw(context, request, cq));
    }
    ::grpc::Status UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::google::storage::v1::Object* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> AsyncUpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(AsyncUpdateObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>> PrepareAsyncUpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>>(PrepareAsyncUpdateObjectRaw(context, request, cq));
    }
    ::grpc::Status GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncGetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncGetObjectIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncGetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncGetObjectIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncSetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncSetObjectIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncSetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncSetObjectIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestObjectIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestObjectIamPermissionsRaw(context, request, cq));
    }
    ::grpc::Status WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::google::storage::v1::Channel* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Channel>> AsyncWatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Channel>>(AsyncWatchAllObjectsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Channel>> PrepareAsyncWatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Channel>>(PrepareAsyncWatchAllObjectsRaw(context, request, cq));
    }
    ::grpc::Status GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::google::storage::v1::ServiceAccount* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ServiceAccount>> AsyncGetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ServiceAccount>>(AsyncGetServiceAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ServiceAccount>> PrepareAsyncGetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ServiceAccount>>(PrepareAsyncGetServiceAccountRaw(context, request, cq));
    }
    ::grpc::Status CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::google::storage::v1::CreateHmacKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::CreateHmacKeyResponse>> AsyncCreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::CreateHmacKeyResponse>>(AsyncCreateHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::CreateHmacKeyResponse>> PrepareAsyncCreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::CreateHmacKeyResponse>>(PrepareAsyncCreateHmacKeyRaw(context, request, cq));
    }
    ::grpc::Status DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteHmacKeyRaw(context, request, cq));
    }
    ::grpc::Status GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::google::storage::v1::HmacKeyMetadata* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>> AsyncGetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>>(AsyncGetHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>> PrepareAsyncGetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>>(PrepareAsyncGetHmacKeyRaw(context, request, cq));
    }
    ::grpc::Status ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::google::storage::v1::ListHmacKeysResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListHmacKeysResponse>> AsyncListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListHmacKeysResponse>>(AsyncListHmacKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListHmacKeysResponse>> PrepareAsyncListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListHmacKeysResponse>>(PrepareAsyncListHmacKeysRaw(context, request, cq));
    }
    ::grpc::Status UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::google::storage::v1::HmacKeyMetadata* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>> AsyncUpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>>(AsyncUpdateHmacKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>> PrepareAsyncUpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>>(PrepareAsyncUpdateHmacKeyRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InsertBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListBucketAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PatchBucketAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteBucket(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetBucket(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InsertBucket(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListChannels(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListBuckets(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void LockBucketRetentionPolicy(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SetBucketIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TestBucketIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PatchBucket(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateBucket(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopChannel(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InsertDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListDefaultObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PatchDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateDefaultObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteNotification(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetNotification(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InsertNotification(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListNotifications(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InsertObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListObjectAccessControls(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PatchObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateObjectAccessControl(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ComposeObject(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CopyObject(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteObject(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetObject(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetObjectMedia(::grpc::ClientContext* context, ::google::storage::v1::GetObjectMediaRequest* request, ::grpc::ClientReadReactor< ::google::storage::v1::GetObjectMediaResponse>* reactor) override;
      #else
      void GetObjectMedia(::grpc::ClientContext* context, ::google::storage::v1::GetObjectMediaRequest* request, ::grpc::experimental::ClientReadReactor< ::google::storage::v1::GetObjectMediaResponse>* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::ClientWriteReactor< ::google::storage::v1::InsertObjectRequest>* reactor) override;
      #else
      void InsertObject(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::experimental::ClientWriteReactor< ::google::storage::v1::InsertObjectRequest>* reactor) override;
      #endif
      void ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListObjects(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RewriteObject(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartResumableWrite(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void QueryWriteStatus(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PatchObject(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateObject(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SetObjectIamPolicy(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TestObjectIamPermissions(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void WatchAllObjects(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetServiceAccount(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListHmacKeys(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateHmacKey(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* AsyncGetBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* PrepareAsyncGetBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* AsyncInsertBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* PrepareAsyncInsertBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketAccessControlsResponse>* AsyncListBucketAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketAccessControlsResponse>* PrepareAsyncListBucketAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* AsyncUpdateBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* PrepareAsyncUpdateBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* AsyncPatchBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::BucketAccessControl>* PrepareAsyncPatchBucketAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* AsyncGetBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* PrepareAsyncGetBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* AsyncInsertBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* PrepareAsyncInsertBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListChannelsResponse>* AsyncListChannelsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListChannelsResponse>* PrepareAsyncListChannelsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListChannelsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketsResponse>* AsyncListBucketsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListBucketsResponse>* PrepareAsyncListBucketsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListBucketsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* AsyncLockBucketRetentionPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* PrepareAsyncLockBucketRetentionPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::LockRetentionPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncGetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncGetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncSetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncSetBucketIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestBucketIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestBucketIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* AsyncPatchBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* PrepareAsyncPatchBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* AsyncUpdateBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Bucket>* PrepareAsyncUpdateBucketRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStopChannelRaw(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStopChannelRaw(::grpc::ClientContext* context, const ::google::storage::v1::StopChannelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncGetDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncGetDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncInsertDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncInsertDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>* AsyncListDefaultObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>* PrepareAsyncListDefaultObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncPatchDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncPatchDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncUpdateDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncUpdateDefaultObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteNotificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>* AsyncGetNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>* PrepareAsyncGetNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetNotificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>* AsyncInsertNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Notification>* PrepareAsyncInsertNotificationRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertNotificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListNotificationsResponse>* AsyncListNotificationsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListNotificationsResponse>* PrepareAsyncListNotificationsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListNotificationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncGetObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncGetObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncInsertObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncInsertObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>* AsyncListObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectAccessControlsResponse>* PrepareAsyncListObjectAccessControlsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncPatchObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncPatchObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* AsyncUpdateObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ObjectAccessControl>* PrepareAsyncUpdateObjectAccessControlRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* AsyncComposeObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* PrepareAsyncComposeObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::ComposeObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* AsyncCopyObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* PrepareAsyncCopyObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::CopyObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* AsyncGetObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* PrepareAsyncGetObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::google::storage::v1::GetObjectMediaResponse>* GetObjectMediaRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request) override;
    ::grpc::ClientAsyncReader< ::google::storage::v1::GetObjectMediaResponse>* AsyncGetObjectMediaRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::google::storage::v1::GetObjectMediaResponse>* PrepareAsyncGetObjectMediaRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetObjectMediaRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::google::storage::v1::InsertObjectRequest>* InsertObjectRaw(::grpc::ClientContext* context, ::google::storage::v1::Object* response) override;
    ::grpc::ClientAsyncWriter< ::google::storage::v1::InsertObjectRequest>* AsyncInsertObjectRaw(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::google::storage::v1::InsertObjectRequest>* PrepareAsyncInsertObjectRaw(::grpc::ClientContext* context, ::google::storage::v1::Object* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectsResponse>* AsyncListObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListObjectsResponse>* PrepareAsyncListObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListObjectsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::RewriteResponse>* AsyncRewriteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::RewriteResponse>* PrepareAsyncRewriteObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::RewriteObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::StartResumableWriteResponse>* AsyncStartResumableWriteRaw(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::StartResumableWriteResponse>* PrepareAsyncStartResumableWriteRaw(::grpc::ClientContext* context, const ::google::storage::v1::StartResumableWriteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::QueryWriteStatusResponse>* AsyncQueryWriteStatusRaw(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::QueryWriteStatusResponse>* PrepareAsyncQueryWriteStatusRaw(::grpc::ClientContext* context, const ::google::storage::v1::QueryWriteStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* AsyncPatchObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* PrepareAsyncPatchObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::PatchObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* AsyncUpdateObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Object>* PrepareAsyncUpdateObjectRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncGetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncGetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncSetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncSetObjectIamPolicyRaw(::grpc::ClientContext* context, const ::google::storage::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestObjectIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestObjectIamPermissionsRaw(::grpc::ClientContext* context, const ::google::storage::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Channel>* AsyncWatchAllObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::Channel>* PrepareAsyncWatchAllObjectsRaw(::grpc::ClientContext* context, const ::google::storage::v1::WatchAllObjectsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ServiceAccount>* AsyncGetServiceAccountRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ServiceAccount>* PrepareAsyncGetServiceAccountRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::CreateHmacKeyResponse>* AsyncCreateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::CreateHmacKeyResponse>* PrepareAsyncCreateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::CreateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::DeleteHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>* AsyncGetHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>* PrepareAsyncGetHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::GetHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListHmacKeysResponse>* AsyncListHmacKeysRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::ListHmacKeysResponse>* PrepareAsyncListHmacKeysRaw(::grpc::ClientContext* context, const ::google::storage::v1::ListHmacKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>* AsyncUpdateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::storage::v1::HmacKeyMetadata>* PrepareAsyncUpdateHmacKeyRaw(::grpc::ClientContext* context, const ::google::storage::v1::UpdateHmacKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteBucketAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBucketAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertBucketAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_ListBucketAccessControls_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateBucketAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchBucketAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteBucket_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBucket_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertBucket_;
    const ::grpc::internal::RpcMethod rpcmethod_ListChannels_;
    const ::grpc::internal::RpcMethod rpcmethod_ListBuckets_;
    const ::grpc::internal::RpcMethod rpcmethod_LockBucketRetentionPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBucketIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBucketIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_TestBucketIamPermissions_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchBucket_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateBucket_;
    const ::grpc::internal::RpcMethod rpcmethod_StopChannel_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDefaultObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDefaultObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertDefaultObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDefaultObjectAccessControls_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchDefaultObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDefaultObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteNotification_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNotification_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertNotification_;
    const ::grpc::internal::RpcMethod rpcmethod_ListNotifications_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_ListObjectAccessControls_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateObjectAccessControl_;
    const ::grpc::internal::RpcMethod rpcmethod_ComposeObject_;
    const ::grpc::internal::RpcMethod rpcmethod_CopyObject_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteObject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetObject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetObjectMedia_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertObject_;
    const ::grpc::internal::RpcMethod rpcmethod_ListObjects_;
    const ::grpc::internal::RpcMethod rpcmethod_RewriteObject_;
    const ::grpc::internal::RpcMethod rpcmethod_StartResumableWrite_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryWriteStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchObject_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateObject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetObjectIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_SetObjectIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_TestObjectIamPermissions_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchAllObjects_;
    const ::grpc::internal::RpcMethod rpcmethod_GetServiceAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateHmacKey_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteHmacKey_;
    const ::grpc::internal::RpcMethod rpcmethod_GetHmacKey_;
    const ::grpc::internal::RpcMethod rpcmethod_ListHmacKeys_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateHmacKey_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Permanently deletes the ACL entry for the specified entity on the specified
    // bucket.
    virtual ::grpc::Status DeleteBucketAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response);
    // Returns the ACL entry for the specified entity on the specified bucket.
    virtual ::grpc::Status GetBucketAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response);
    // Creates a new ACL entry on the specified bucket.
    virtual ::grpc::Status InsertBucketAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response);
    // Retrieves ACL entries on the specified bucket.
    virtual ::grpc::Status ListBucketAccessControls(::grpc::ServerContext* context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response);
    // Updates an ACL entry on the specified bucket. Equivalent to
    // PatchBucketAccessControl, but all unspecified fields will be
    // reset to their default values.
    virtual ::grpc::Status UpdateBucketAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response);
    // Updates an ACL entry on the specified bucket.
    virtual ::grpc::Status PatchBucketAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response);
    // Permanently deletes an empty bucket.
    virtual ::grpc::Status DeleteBucket(::grpc::ServerContext* context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response);
    // Returns metadata for the specified bucket.
    virtual ::grpc::Status GetBucket(::grpc::ServerContext* context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response);
    // Creates a new bucket.
    virtual ::grpc::Status InsertBucket(::grpc::ServerContext* context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response);
    // List active object change notification channels for this bucket.
    virtual ::grpc::Status ListChannels(::grpc::ServerContext* context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response);
    // Retrieves a list of buckets for a given project.
    virtual ::grpc::Status ListBuckets(::grpc::ServerContext* context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response);
    // Locks retention policy on a bucket.
    virtual ::grpc::Status LockBucketRetentionPolicy(::grpc::ServerContext* context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response);
    // Gets the IAM policy for the specified bucket.
    virtual ::grpc::Status GetBucketIamPolicy(::grpc::ServerContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Updates an IAM policy for the specified bucket.
    virtual ::grpc::Status SetBucketIamPolicy(::grpc::ServerContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Tests a set of permissions on the given bucket to see which, if
    // any, are held by the caller.
    virtual ::grpc::Status TestBucketIamPermissions(::grpc::ServerContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response);
    // Updates a bucket. Changes to the bucket will be readable immediately after
    // writing, but configuration changes may take time to propagate.
    virtual ::grpc::Status PatchBucket(::grpc::ServerContext* context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response);
    // Updates a bucket. Equivalent to PatchBucket, but always replaces all
    // mutatable fields of the bucket with new values, reverting all
    // unspecified fields to their default values.
    // Like PatchBucket, Changes to the bucket will be readable immediately after
    // writing, but configuration changes may take time to propagate.
    virtual ::grpc::Status UpdateBucket(::grpc::ServerContext* context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response);
    // Halts "Object Change Notification" push messagages.
    // See https://cloud.google.com/storage/docs/object-change-notification
    // Note: this is not related to the newer "Notifications" resource, which
    // are stopped using DeleteNotification.
    virtual ::grpc::Status StopChannel(::grpc::ServerContext* context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response);
    // Permanently deletes the default object ACL entry for the specified entity
    // on the specified bucket.
    virtual ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response);
    // Returns the default object ACL entry for the specified entity on the
    // specified bucket.
    virtual ::grpc::Status GetDefaultObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Creates a new default object ACL entry on the specified bucket.
    virtual ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Retrieves default object ACL entries on the specified bucket.
    virtual ::grpc::Status ListDefaultObjectAccessControls(::grpc::ServerContext* context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response);
    // Updates a default object ACL entry on the specified bucket.
    virtual ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Updates a default object ACL entry on the specified bucket. Equivalent to
    // PatchDefaultObjectAccessControl, but modifies all unspecified fields to
    // their default values.
    virtual ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Permanently deletes a notification subscription.
    // Note: Older, "Object Change Notification" push subscriptions should be
    // deleted using StopChannel instead.
    virtual ::grpc::Status DeleteNotification(::grpc::ServerContext* context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response);
    // View a notification configuration.
    virtual ::grpc::Status GetNotification(::grpc::ServerContext* context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response);
    // Creates a notification subscription for a given bucket.
    // These notifications, when triggered, publish messages to the specified
    // Cloud Pub/Sub topics.
    // See https://cloud.google.com/storage/docs/pubsub-notifications.
    virtual ::grpc::Status InsertNotification(::grpc::ServerContext* context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response);
    // Retrieves a list of notification subscriptions for a given bucket.
    virtual ::grpc::Status ListNotifications(::grpc::ServerContext* context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response);
    // Permanently deletes the ACL entry for the specified entity on the specified
    // object.
    virtual ::grpc::Status DeleteObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response);
    // Returns the ACL entry for the specified entity on the specified object.
    virtual ::grpc::Status GetObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Creates a new ACL entry on the specified object.
    virtual ::grpc::Status InsertObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Retrieves ACL entries on the specified object.
    virtual ::grpc::Status ListObjectAccessControls(::grpc::ServerContext* context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response);
    // Patches an ACL entry on the specified object.  Patch is similar to update,
    // but only applies or appends the specified fields in the
    // object_access_control object.  Other fields are unaffected.
    virtual ::grpc::Status PatchObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Updates an ACL entry on the specified object.
    virtual ::grpc::Status UpdateObjectAccessControl(::grpc::ServerContext* context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response);
    // Concatenates a list of existing objects into a new object in the same
    // bucket.
    virtual ::grpc::Status ComposeObject(::grpc::ServerContext* context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response);
    // Copies a source object to a destination object. Optionally overrides
    // metadata.
    virtual ::grpc::Status CopyObject(::grpc::ServerContext* context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response);
    // Deletes an object and its metadata. Deletions are permanent if versioning
    // is not enabled for the bucket, or if the `generation` parameter
    // is used.
    virtual ::grpc::Status DeleteObject(::grpc::ServerContext* context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response);
    // Retrieves an object's metadata.
    virtual ::grpc::Status GetObject(::grpc::ServerContext* context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response);
    // Reads an object's data.
    virtual ::grpc::Status GetObjectMedia(::grpc::ServerContext* context, const ::google::storage::v1::GetObjectMediaRequest* request, ::grpc::ServerWriter< ::google::storage::v1::GetObjectMediaResponse>* writer);
    // Stores a new object and metadata.
    //
    // An object can be written either in a single message stream or in a
    // resumable sequence of message streams. To write using a single stream,
    // the client should include in the first message of the stream an
    // `InsertObjectSpec` describing the destination bucket, object, and any
    // preconditions. Additionally, the final message must set 'finish_write' to
    // true, or else it is an error.
    //
    // For a resumable write, the client should instead call
    // `StartResumableWrite()` and provide that method an `InsertObjectSpec.`
    // They should then attach the returned `upload_id` to the first message of
    // each following call to `Insert`. If there is an error or the connection is
    // broken during the resumable `Insert()`, the client should check the status
    // of the `Insert()` by calling `QueryWriteStatus()` and continue writing from
    // the returned `committed_size`. This may be less than the amount of data the
    // client previously sent.
    //
    // The service will not view the object as complete until the client has
    // sent an `Insert` with `finish_write` set to `true`. Sending any
    // requests on a stream after sending a request with `finish_write` set to
    // `true` will cause an error. The client **should** check the
    // `Object` it receives to determine how much data the service was
    // able to commit and whether the service views the object as complete.
    virtual ::grpc::Status InsertObject(::grpc::ServerContext* context, ::grpc::ServerReader< ::google::storage::v1::InsertObjectRequest>* reader, ::google::storage::v1::Object* response);
    // Retrieves a list of objects matching the criteria.
    virtual ::grpc::Status ListObjects(::grpc::ServerContext* context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response);
    // Rewrites a source object to a destination object. Optionally overrides
    // metadata.
    virtual ::grpc::Status RewriteObject(::grpc::ServerContext* context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response);
    // Starts a resumable write. How long the write operation remains valid, and
    // what happens when the write operation becomes invalid, are
    // service-dependent.
    virtual ::grpc::Status StartResumableWrite(::grpc::ServerContext* context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response);
    // Determines the `committed_size` for an object that is being written, which
    // can then be used as the `write_offset` for the next `Write()` call.
    //
    // If the object does not exist (i.e., the object has been deleted, or the
    // first `Write()` has not yet reached the service), this method returns the
    // error `NOT_FOUND`.
    //
    // The client **may** call `QueryWriteStatus()` at any time to determine how
    // much data has been processed for this object. This is useful if the
    // client is buffering data and needs to know which data can be safely
    // evicted. For any sequence of `QueryWriteStatus()` calls for a given
    // object name, the sequence of returned `committed_size` values will be
    // non-decreasing.
    virtual ::grpc::Status QueryWriteStatus(::grpc::ServerContext* context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response);
    // Updates an object's metadata.
    virtual ::grpc::Status PatchObject(::grpc::ServerContext* context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response);
    // Updates an object's metadata. Equivalent to PatchObject, but always
    // replaces all mutatable fields of the bucket with new values, reverting all
    // unspecified fields to their default values.
    virtual ::grpc::Status UpdateObject(::grpc::ServerContext* context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response);
    // Gets the IAM policy for the specified object.
    virtual ::grpc::Status GetObjectIamPolicy(::grpc::ServerContext* context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Updates an IAM policy for the specified object.
    virtual ::grpc::Status SetObjectIamPolicy(::grpc::ServerContext* context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Tests a set of permissions on the given object to see which, if
    // any, are held by the caller.
    virtual ::grpc::Status TestObjectIamPermissions(::grpc::ServerContext* context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response);
    // Watch for changes on all objects in a bucket.
    virtual ::grpc::Status WatchAllObjects(::grpc::ServerContext* context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response);
    // Retrieves the name of a project's Google Cloud Storage service account.
    virtual ::grpc::Status GetServiceAccount(::grpc::ServerContext* context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response);
    // Creates a new HMAC key for the given service account.
    virtual ::grpc::Status CreateHmacKey(::grpc::ServerContext* context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response);
    // Deletes a given HMAC key.  Key must be in an INACTIVE state.
    virtual ::grpc::Status DeleteHmacKey(::grpc::ServerContext* context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response);
    // Gets an existing HMAC key metadata for the given id.
    virtual ::grpc::Status GetHmacKey(::grpc::ServerContext* context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response);
    // Lists HMAC keys under a given project with the additional filters provided.
    virtual ::grpc::Status ListHmacKeys(::grpc::ServerContext* context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response);
    // Updates a given HMAC key state between ACTIVE and INACTIVE.
    virtual ::grpc::Status UpdateHmacKey(::grpc::ServerContext* context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteBucketAccessControl() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_DeleteBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBucketAccessControl(::grpc::ServerContext* context, ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBucketAccessControl() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBucketAccessControl(::grpc::ServerContext* context, ::google::storage::v1::GetBucketAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::BucketAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertBucketAccessControl() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_InsertBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertBucketAccessControl(::grpc::ServerContext* context, ::google::storage::v1::InsertBucketAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::BucketAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListBucketAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListBucketAccessControls() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListBucketAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBucketAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBucketAccessControls(::grpc::ServerContext* context, ::google::storage::v1::ListBucketAccessControlsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListBucketAccessControlsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateBucketAccessControl() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBucketAccessControl(::grpc::ServerContext* context, ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::BucketAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchBucketAccessControl() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_PatchBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchBucketAccessControl(::grpc::ServerContext* context, ::google::storage::v1::PatchBucketAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::BucketAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteBucket() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_DeleteBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBucket(::grpc::ServerContext* context, ::google::storage::v1::DeleteBucketRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBucket() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBucket(::grpc::ServerContext* context, ::google::storage::v1::GetBucketRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Bucket>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertBucket() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_InsertBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertBucket(::grpc::ServerContext* context, ::google::storage::v1::InsertBucketRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Bucket>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListChannels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListChannels() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListChannels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListChannels(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListChannels(::grpc::ServerContext* context, ::google::storage::v1::ListChannelsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListChannelsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListBuckets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListBuckets() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ListBuckets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuckets(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBuckets(::grpc::ServerContext* context, ::google::storage::v1::ListBucketsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListBucketsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LockBucketRetentionPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LockBucketRetentionPolicy() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_LockBucketRetentionPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockBucketRetentionPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLockBucketRetentionPolicy(::grpc::ServerContext* context, ::google::storage::v1::LockRetentionPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Bucket>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBucketIamPolicy() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBucketIamPolicy(::grpc::ServerContext* context, ::google::storage::v1::GetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBucketIamPolicy() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBucketIamPolicy(::grpc::ServerContext* context, ::google::storage::v1::SetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TestBucketIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TestBucketIamPermissions() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_TestBucketIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestBucketIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestBucketIamPermissions(::grpc::ServerContext* context, ::google::storage::v1::TestIamPermissionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::TestIamPermissionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchBucket() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_PatchBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchBucket(::grpc::ServerContext* context, ::google::storage::v1::PatchBucketRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Bucket>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateBucket() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_UpdateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBucket(::grpc::ServerContext* context, ::google::storage::v1::UpdateBucketRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Bucket>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopChannel() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_StopChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopChannel(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopChannel(::grpc::ServerContext* context, ::google::storage::v1::StopChannelRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_DeleteDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDefaultObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDefaultObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_InsertDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertDefaultObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDefaultObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListDefaultObjectAccessControls() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_ListDefaultObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDefaultObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDefaultObjectAccessControls(::grpc::ServerContext* context, ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListObjectAccessControlsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_PatchDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchDefaultObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_UpdateDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDefaultObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteNotification() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_DeleteNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNotification(::grpc::ServerContext* context, ::google::storage::v1::DeleteNotificationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNotification() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_GetNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNotification(::grpc::ServerContext* context, ::google::storage::v1::GetNotificationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Notification>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertNotification() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_InsertNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertNotification(::grpc::ServerContext* context, ::google::storage::v1::InsertNotificationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Notification>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListNotifications() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_ListNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNotifications(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNotifications(::grpc::ServerContext* context, ::google::storage::v1::ListNotificationsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListNotificationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_DeleteObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_GetObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::GetObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_InsertObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::InsertObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListObjectAccessControls() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_ListObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListObjectAccessControls(::grpc::ServerContext* context, ::google::storage::v1::ListObjectAccessControlsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListObjectAccessControlsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_PatchObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::PatchObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateObjectAccessControl() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_UpdateObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateObjectAccessControl(::grpc::ServerContext* context, ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ObjectAccessControl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ComposeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ComposeObject() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_ComposeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ComposeObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestComposeObject(::grpc::ServerContext* context, ::google::storage::v1::ComposeObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Object>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CopyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CopyObject() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_CopyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CopyObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCopyObject(::grpc::ServerContext* context, ::google::storage::v1::CopyObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Object>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteObject() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_DeleteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteObject(::grpc::ServerContext* context, ::google::storage::v1::DeleteObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetObject() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_GetObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObject(::grpc::ServerContext* context, ::google::storage::v1::GetObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Object>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetObjectMedia : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetObjectMedia() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_GetObjectMedia() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectMedia(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/, ::grpc::ServerWriter< ::google::storage::v1::GetObjectMediaResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObjectMedia(::grpc::ServerContext* context, ::google::storage::v1::GetObjectMediaRequest* request, ::grpc::ServerAsyncWriter< ::google::storage::v1::GetObjectMediaResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(38, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertObject() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::google::storage::v1::InsertObjectRequest>* /*reader*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertObject(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::google::storage::v1::Object, ::google::storage::v1::InsertObjectRequest>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(39, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListObjects() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_ListObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListObjects(::grpc::ServerContext* context, ::google::storage::v1::ListObjectsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListObjectsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RewriteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RewriteObject() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_RewriteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RewriteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRewriteObject(::grpc::ServerContext* context, ::google::storage::v1::RewriteObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::RewriteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartResumableWrite : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartResumableWrite() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_StartResumableWrite() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartResumableWrite(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartResumableWrite(::grpc::ServerContext* context, ::google::storage::v1::StartResumableWriteRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::StartResumableWriteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryWriteStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryWriteStatus() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_QueryWriteStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryWriteStatus(::grpc::ServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryWriteStatus(::grpc::ServerContext* context, ::google::storage::v1::QueryWriteStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::QueryWriteStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchObject() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_PatchObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchObject(::grpc::ServerContext* context, ::google::storage::v1::PatchObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Object>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateObject() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_UpdateObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateObject(::grpc::ServerContext* context, ::google::storage::v1::UpdateObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Object>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetObjectIamPolicy() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_GetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObjectIamPolicy(::grpc::ServerContext* context, ::google::storage::v1::GetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetObjectIamPolicy() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_SetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetObjectIamPolicy(::grpc::ServerContext* context, ::google::storage::v1::SetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TestObjectIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TestObjectIamPermissions() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_TestObjectIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestObjectIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestObjectIamPermissions(::grpc::ServerContext* context, ::google::storage::v1::TestIamPermissionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::TestIamPermissionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchAllObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchAllObjects() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_WatchAllObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchAllObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchAllObjects(::grpc::ServerContext* context, ::google::storage::v1::WatchAllObjectsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::Channel>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetServiceAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetServiceAccount() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_GetServiceAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceAccount(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServiceAccount(::grpc::ServerContext* context, ::google::storage::v1::GetProjectServiceAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ServiceAccount>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateHmacKey() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_CreateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateHmacKey(::grpc::ServerContext* context, ::google::storage::v1::CreateHmacKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::CreateHmacKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteHmacKey() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_DeleteHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteHmacKey(::grpc::ServerContext* context, ::google::storage::v1::DeleteHmacKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetHmacKey() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_GetHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHmacKey(::grpc::ServerContext* context, ::google::storage::v1::GetHmacKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::HmacKeyMetadata>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListHmacKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListHmacKeys() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_ListHmacKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListHmacKeys(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListHmacKeys(::grpc::ServerContext* context, ::google::storage::v1::ListHmacKeysRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::ListHmacKeysResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateHmacKey() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_UpdateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateHmacKey(::grpc::ServerContext* context, ::google::storage::v1::UpdateHmacKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::storage::v1::HmacKeyMetadata>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_DeleteBucketAccessControl<WithAsyncMethod_GetBucketAccessControl<WithAsyncMethod_InsertBucketAccessControl<WithAsyncMethod_ListBucketAccessControls<WithAsyncMethod_UpdateBucketAccessControl<WithAsyncMethod_PatchBucketAccessControl<WithAsyncMethod_DeleteBucket<WithAsyncMethod_GetBucket<WithAsyncMethod_InsertBucket<WithAsyncMethod_ListChannels<WithAsyncMethod_ListBuckets<WithAsyncMethod_LockBucketRetentionPolicy<WithAsyncMethod_GetBucketIamPolicy<WithAsyncMethod_SetBucketIamPolicy<WithAsyncMethod_TestBucketIamPermissions<WithAsyncMethod_PatchBucket<WithAsyncMethod_UpdateBucket<WithAsyncMethod_StopChannel<WithAsyncMethod_DeleteDefaultObjectAccessControl<WithAsyncMethod_GetDefaultObjectAccessControl<WithAsyncMethod_InsertDefaultObjectAccessControl<WithAsyncMethod_ListDefaultObjectAccessControls<WithAsyncMethod_PatchDefaultObjectAccessControl<WithAsyncMethod_UpdateDefaultObjectAccessControl<WithAsyncMethod_DeleteNotification<WithAsyncMethod_GetNotification<WithAsyncMethod_InsertNotification<WithAsyncMethod_ListNotifications<WithAsyncMethod_DeleteObjectAccessControl<WithAsyncMethod_GetObjectAccessControl<WithAsyncMethod_InsertObjectAccessControl<WithAsyncMethod_ListObjectAccessControls<WithAsyncMethod_PatchObjectAccessControl<WithAsyncMethod_UpdateObjectAccessControl<WithAsyncMethod_ComposeObject<WithAsyncMethod_CopyObject<WithAsyncMethod_DeleteObject<WithAsyncMethod_GetObject<WithAsyncMethod_GetObjectMedia<WithAsyncMethod_InsertObject<WithAsyncMethod_ListObjects<WithAsyncMethod_RewriteObject<WithAsyncMethod_StartResumableWrite<WithAsyncMethod_QueryWriteStatus<WithAsyncMethod_PatchObject<WithAsyncMethod_UpdateObject<WithAsyncMethod_GetObjectIamPolicy<WithAsyncMethod_SetObjectIamPolicy<WithAsyncMethod_TestObjectIamPermissions<WithAsyncMethod_WatchAllObjects<WithAsyncMethod_GetServiceAccount<WithAsyncMethod_CreateHmacKey<WithAsyncMethod_DeleteHmacKey<WithAsyncMethod_GetHmacKey<WithAsyncMethod_ListHmacKeys<WithAsyncMethod_UpdateHmacKey<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteBucketAccessControlRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::DeleteBucketAccessControlRequest* request, ::google::protobuf::Empty* response) { return this->DeleteBucketAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteBucketAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::DeleteBucketAccessControlRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteBucketAccessControlRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response) { return this->GetBucketAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_GetBucketAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InsertBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InsertBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::InsertBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response) { return this->InsertBucketAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_InsertBucketAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::InsertBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InsertBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListBucketAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListBucketAccessControls() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListBucketAccessControlsRequest, ::google::storage::v1::ListBucketAccessControlsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListBucketAccessControlsRequest* request, ::google::storage::v1::ListBucketAccessControlsResponse* response) { return this->ListBucketAccessControls(context, request, response); }));}
    void SetMessageAllocatorFor_ListBucketAccessControls(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListBucketAccessControlsRequest, ::google::storage::v1::ListBucketAccessControlsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListBucketAccessControlsRequest, ::google::storage::v1::ListBucketAccessControlsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListBucketAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBucketAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListBucketAccessControls(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListBucketAccessControls(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::UpdateBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response) { return this->UpdateBucketAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateBucketAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::UpdateBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PatchBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PatchBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::PatchBucketAccessControlRequest* request, ::google::storage::v1::BucketAccessControl* response) { return this->PatchBucketAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_PatchBucketAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::PatchBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PatchBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteBucketRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::DeleteBucketRequest* request, ::google::protobuf::Empty* response) { return this->DeleteBucket(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteBucket(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::DeleteBucketRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteBucketRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetBucketRequest, ::google::storage::v1::Bucket>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetBucketRequest* request, ::google::storage::v1::Bucket* response) { return this->GetBucket(context, request, response); }));}
    void SetMessageAllocatorFor_GetBucket(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetBucketRequest, ::google::storage::v1::Bucket>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetBucketRequest, ::google::storage::v1::Bucket>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InsertBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InsertBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertBucketRequest, ::google::storage::v1::Bucket>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::InsertBucketRequest* request, ::google::storage::v1::Bucket* response) { return this->InsertBucket(context, request, response); }));}
    void SetMessageAllocatorFor_InsertBucket(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::InsertBucketRequest, ::google::storage::v1::Bucket>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(8);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertBucketRequest, ::google::storage::v1::Bucket>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InsertBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListChannels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListChannels() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListChannelsRequest, ::google::storage::v1::ListChannelsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListChannelsRequest* request, ::google::storage::v1::ListChannelsResponse* response) { return this->ListChannels(context, request, response); }));}
    void SetMessageAllocatorFor_ListChannels(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListChannelsRequest, ::google::storage::v1::ListChannelsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(9);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListChannelsRequest, ::google::storage::v1::ListChannelsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListChannels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListChannels(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListChannels(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListChannels(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListBuckets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListBuckets() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListBucketsRequest, ::google::storage::v1::ListBucketsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListBucketsRequest* request, ::google::storage::v1::ListBucketsResponse* response) { return this->ListBuckets(context, request, response); }));}
    void SetMessageAllocatorFor_ListBuckets(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListBucketsRequest, ::google::storage::v1::ListBucketsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(10);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListBucketsRequest, ::google::storage::v1::ListBucketsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListBuckets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuckets(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListBuckets(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListBuckets(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_LockBucketRetentionPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_LockBucketRetentionPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::LockRetentionPolicyRequest, ::google::storage::v1::Bucket>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::LockRetentionPolicyRequest* request, ::google::storage::v1::Bucket* response) { return this->LockBucketRetentionPolicy(context, request, response); }));}
    void SetMessageAllocatorFor_LockBucketRetentionPolicy(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::LockRetentionPolicyRequest, ::google::storage::v1::Bucket>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(11);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::LockRetentionPolicyRequest, ::google::storage::v1::Bucket>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_LockBucketRetentionPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockBucketRetentionPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* LockBucketRetentionPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* LockBucketRetentionPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetBucketIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) { return this->GetBucketIamPolicy(context, request, response); }));}
    void SetMessageAllocatorFor_GetBucketIamPolicy(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(12);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBucketIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBucketIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SetBucketIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) { return this->SetBucketIamPolicy(context, request, response); }));}
    void SetMessageAllocatorFor_SetBucketIamPolicy(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(13);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SetBucketIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SetBucketIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_TestBucketIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_TestBucketIamPermissions() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) { return this->TestBucketIamPermissions(context, request, response); }));}
    void SetMessageAllocatorFor_TestBucketIamPermissions(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(14);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_TestBucketIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestBucketIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TestBucketIamPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TestBucketIamPermissions(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PatchBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PatchBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchBucketRequest, ::google::storage::v1::Bucket>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::PatchBucketRequest* request, ::google::storage::v1::Bucket* response) { return this->PatchBucket(context, request, response); }));}
    void SetMessageAllocatorFor_PatchBucket(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::PatchBucketRequest, ::google::storage::v1::Bucket>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(15);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchBucketRequest, ::google::storage::v1::Bucket>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PatchBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateBucketRequest, ::google::storage::v1::Bucket>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::UpdateBucketRequest* request, ::google::storage::v1::Bucket* response) { return this->UpdateBucket(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateBucket(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::UpdateBucketRequest, ::google::storage::v1::Bucket>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(16);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateBucketRequest, ::google::storage::v1::Bucket>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopChannel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::StopChannelRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::StopChannelRequest* request, ::google::protobuf::Empty* response) { return this->StopChannel(context, request, response); }));}
    void SetMessageAllocatorFor_StopChannel(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::StopChannelRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(17);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::StopChannelRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopChannel(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopChannel(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopChannel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteDefaultObjectAccessControlRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* request, ::google::protobuf::Empty* response) { return this->DeleteDefaultObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDefaultObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::DeleteDefaultObjectAccessControlRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(18);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteDefaultObjectAccessControlRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->GetDefaultObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_GetDefaultObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(19);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InsertDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InsertDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->InsertDefaultObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_InsertDefaultObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::InsertDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(20);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InsertDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListDefaultObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListDefaultObjectAccessControls() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListDefaultObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response) { return this->ListDefaultObjectAccessControls(context, request, response); }));}
    void SetMessageAllocatorFor_ListDefaultObjectAccessControls(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListDefaultObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(21);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListDefaultObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListDefaultObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDefaultObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListDefaultObjectAccessControls(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListDefaultObjectAccessControls(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PatchDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PatchDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->PatchDefaultObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_PatchDefaultObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::PatchDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(22);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PatchDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->UpdateDefaultObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateDefaultObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::UpdateDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(23);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteNotification() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteNotificationRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::DeleteNotificationRequest* request, ::google::protobuf::Empty* response) { return this->DeleteNotification(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteNotification(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::DeleteNotificationRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(24);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteNotificationRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteNotification(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteNotification(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetNotification() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetNotificationRequest, ::google::storage::v1::Notification>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetNotificationRequest* request, ::google::storage::v1::Notification* response) { return this->GetNotification(context, request, response); }));}
    void SetMessageAllocatorFor_GetNotification(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetNotificationRequest, ::google::storage::v1::Notification>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(25);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetNotificationRequest, ::google::storage::v1::Notification>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetNotification(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetNotification(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InsertNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InsertNotification() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertNotificationRequest, ::google::storage::v1::Notification>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::InsertNotificationRequest* request, ::google::storage::v1::Notification* response) { return this->InsertNotification(context, request, response); }));}
    void SetMessageAllocatorFor_InsertNotification(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::InsertNotificationRequest, ::google::storage::v1::Notification>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(26);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertNotificationRequest, ::google::storage::v1::Notification>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InsertNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertNotification(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertNotification(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListNotifications() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListNotificationsRequest, ::google::storage::v1::ListNotificationsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListNotificationsRequest* request, ::google::storage::v1::ListNotificationsResponse* response) { return this->ListNotifications(context, request, response); }));}
    void SetMessageAllocatorFor_ListNotifications(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListNotificationsRequest, ::google::storage::v1::ListNotificationsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(27);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListNotificationsRequest, ::google::storage::v1::ListNotificationsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNotifications(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListNotifications(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListNotifications(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteObjectAccessControlRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::DeleteObjectAccessControlRequest* request, ::google::protobuf::Empty* response) { return this->DeleteObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::DeleteObjectAccessControlRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(28);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteObjectAccessControlRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->GetObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_GetObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(29);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InsertObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InsertObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::InsertObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->InsertObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_InsertObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::InsertObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(30);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::InsertObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InsertObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListObjectAccessControls() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListObjectAccessControlsRequest* request, ::google::storage::v1::ListObjectAccessControlsResponse* response) { return this->ListObjectAccessControls(context, request, response); }));}
    void SetMessageAllocatorFor_ListObjectAccessControls(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(31);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListObjectAccessControls(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListObjectAccessControls(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PatchObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PatchObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::PatchObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->PatchObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_PatchObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::PatchObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(32);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PatchObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::UpdateObjectAccessControlRequest* request, ::google::storage::v1::ObjectAccessControl* response) { return this->UpdateObjectAccessControl(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateObjectAccessControl(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::UpdateObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(33);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ComposeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ComposeObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ComposeObjectRequest, ::google::storage::v1::Object>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ComposeObjectRequest* request, ::google::storage::v1::Object* response) { return this->ComposeObject(context, request, response); }));}
    void SetMessageAllocatorFor_ComposeObject(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ComposeObjectRequest, ::google::storage::v1::Object>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(34);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ComposeObjectRequest, ::google::storage::v1::Object>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ComposeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ComposeObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ComposeObject(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ComposeObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CopyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CopyObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::CopyObjectRequest, ::google::storage::v1::Object>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::CopyObjectRequest* request, ::google::storage::v1::Object* response) { return this->CopyObject(context, request, response); }));}
    void SetMessageAllocatorFor_CopyObject(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::CopyObjectRequest, ::google::storage::v1::Object>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(35);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::CopyObjectRequest, ::google::storage::v1::Object>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CopyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CopyObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CopyObject(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CopyObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteObjectRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::DeleteObjectRequest* request, ::google::protobuf::Empty* response) { return this->DeleteObject(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteObject(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::DeleteObjectRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(36);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteObjectRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteObject(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetObjectRequest, ::google::storage::v1::Object>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetObjectRequest* request, ::google::storage::v1::Object* response) { return this->GetObject(context, request, response); }));}
    void SetMessageAllocatorFor_GetObject(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetObjectRequest, ::google::storage::v1::Object>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(37);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetObjectRequest, ::google::storage::v1::Object>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetObject(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetObjectMedia : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetObjectMedia() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(38,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::storage::v1::GetObjectMediaRequest, ::google::storage::v1::GetObjectMediaResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetObjectMediaRequest* request) { return this->GetObjectMedia(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetObjectMedia() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectMedia(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/, ::grpc::ServerWriter< ::google::storage::v1::GetObjectMediaResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::google::storage::v1::GetObjectMediaResponse>* GetObjectMedia(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::google::storage::v1::GetObjectMediaResponse>* GetObjectMedia(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InsertObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(39,
          new ::grpc::internal::CallbackClientStreamingHandler< ::google::storage::v1::InsertObjectRequest, ::google::storage::v1::Object>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, ::google::storage::v1::Object* response) { return this->InsertObject(context, response); }));
    }
    ~ExperimentalWithCallbackMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::google::storage::v1::InsertObjectRequest>* /*reader*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerReadReactor< ::google::storage::v1::InsertObjectRequest>* InsertObject(
      ::grpc::CallbackServerContext* /*context*/, ::google::storage::v1::Object* /*response*/)
    #else
    virtual ::grpc::experimental::ServerReadReactor< ::google::storage::v1::InsertObjectRequest>* InsertObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, ::google::storage::v1::Object* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListObjects() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListObjectsRequest, ::google::storage::v1::ListObjectsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListObjectsRequest* request, ::google::storage::v1::ListObjectsResponse* response) { return this->ListObjects(context, request, response); }));}
    void SetMessageAllocatorFor_ListObjects(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListObjectsRequest, ::google::storage::v1::ListObjectsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(40);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListObjectsRequest, ::google::storage::v1::ListObjectsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListObjects(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListObjects(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RewriteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RewriteObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::RewriteObjectRequest, ::google::storage::v1::RewriteResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::RewriteObjectRequest* request, ::google::storage::v1::RewriteResponse* response) { return this->RewriteObject(context, request, response); }));}
    void SetMessageAllocatorFor_RewriteObject(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::RewriteObjectRequest, ::google::storage::v1::RewriteResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(41);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::RewriteObjectRequest, ::google::storage::v1::RewriteResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RewriteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RewriteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RewriteObject(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RewriteObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartResumableWrite : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartResumableWrite() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::StartResumableWriteRequest, ::google::storage::v1::StartResumableWriteResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::StartResumableWriteRequest* request, ::google::storage::v1::StartResumableWriteResponse* response) { return this->StartResumableWrite(context, request, response); }));}
    void SetMessageAllocatorFor_StartResumableWrite(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::StartResumableWriteRequest, ::google::storage::v1::StartResumableWriteResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(42);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(42);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::StartResumableWriteRequest, ::google::storage::v1::StartResumableWriteResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartResumableWrite() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartResumableWrite(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartResumableWrite(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartResumableWrite(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_QueryWriteStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_QueryWriteStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::QueryWriteStatusRequest, ::google::storage::v1::QueryWriteStatusResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::QueryWriteStatusRequest* request, ::google::storage::v1::QueryWriteStatusResponse* response) { return this->QueryWriteStatus(context, request, response); }));}
    void SetMessageAllocatorFor_QueryWriteStatus(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::QueryWriteStatusRequest, ::google::storage::v1::QueryWriteStatusResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(43);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(43);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::QueryWriteStatusRequest, ::google::storage::v1::QueryWriteStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_QueryWriteStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryWriteStatus(::grpc::ServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* QueryWriteStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* QueryWriteStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PatchObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PatchObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchObjectRequest, ::google::storage::v1::Object>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::PatchObjectRequest* request, ::google::storage::v1::Object* response) { return this->PatchObject(context, request, response); }));}
    void SetMessageAllocatorFor_PatchObject(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::PatchObjectRequest, ::google::storage::v1::Object>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(44);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(44);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::PatchObjectRequest, ::google::storage::v1::Object>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PatchObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchObject(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateObjectRequest, ::google::storage::v1::Object>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::UpdateObjectRequest* request, ::google::storage::v1::Object* response) { return this->UpdateObject(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateObject(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::UpdateObjectRequest, ::google::storage::v1::Object>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(45);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(45);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateObjectRequest, ::google::storage::v1::Object>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateObject(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetObjectIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) { return this->GetObjectIamPolicy(context, request, response); }));}
    void SetMessageAllocatorFor_GetObjectIamPolicy(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(46);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(46);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetObjectIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetObjectIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SetObjectIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) { return this->SetObjectIamPolicy(context, request, response); }));}
    void SetMessageAllocatorFor_SetObjectIamPolicy(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(47);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(47);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SetObjectIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SetObjectIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_TestObjectIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_TestObjectIamPermissions() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) { return this->TestObjectIamPermissions(context, request, response); }));}
    void SetMessageAllocatorFor_TestObjectIamPermissions(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(48);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(48);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_TestObjectIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestObjectIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TestObjectIamPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TestObjectIamPermissions(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WatchAllObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WatchAllObjects() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::WatchAllObjectsRequest, ::google::storage::v1::Channel>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::WatchAllObjectsRequest* request, ::google::storage::v1::Channel* response) { return this->WatchAllObjects(context, request, response); }));}
    void SetMessageAllocatorFor_WatchAllObjects(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::WatchAllObjectsRequest, ::google::storage::v1::Channel>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(49);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(49);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::WatchAllObjectsRequest, ::google::storage::v1::Channel>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WatchAllObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchAllObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WatchAllObjects(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WatchAllObjects(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetServiceAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetServiceAccount() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetProjectServiceAccountRequest, ::google::storage::v1::ServiceAccount>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetProjectServiceAccountRequest* request, ::google::storage::v1::ServiceAccount* response) { return this->GetServiceAccount(context, request, response); }));}
    void SetMessageAllocatorFor_GetServiceAccount(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetProjectServiceAccountRequest, ::google::storage::v1::ServiceAccount>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(50);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(50);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetProjectServiceAccountRequest, ::google::storage::v1::ServiceAccount>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetServiceAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceAccount(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetServiceAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetServiceAccount(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::CreateHmacKeyRequest, ::google::storage::v1::CreateHmacKeyResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::CreateHmacKeyRequest* request, ::google::storage::v1::CreateHmacKeyResponse* response) { return this->CreateHmacKey(context, request, response); }));}
    void SetMessageAllocatorFor_CreateHmacKey(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::CreateHmacKeyRequest, ::google::storage::v1::CreateHmacKeyResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(51);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(51);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::CreateHmacKeyRequest, ::google::storage::v1::CreateHmacKeyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteHmacKeyRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::DeleteHmacKeyRequest* request, ::google::protobuf::Empty* response) { return this->DeleteHmacKey(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteHmacKey(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::DeleteHmacKeyRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(52);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(52);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::DeleteHmacKeyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::GetHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response) { return this->GetHmacKey(context, request, response); }));}
    void SetMessageAllocatorFor_GetHmacKey(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::GetHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(53);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(53);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::GetHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListHmacKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListHmacKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListHmacKeysRequest, ::google::storage::v1::ListHmacKeysResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::ListHmacKeysRequest* request, ::google::storage::v1::ListHmacKeysResponse* response) { return this->ListHmacKeys(context, request, response); }));}
    void SetMessageAllocatorFor_ListHmacKeys(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::ListHmacKeysRequest, ::google::storage::v1::ListHmacKeysResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(54);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(54);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::ListHmacKeysRequest, ::google::storage::v1::ListHmacKeysResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListHmacKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListHmacKeys(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListHmacKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListHmacKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::storage::v1::UpdateHmacKeyRequest* request, ::google::storage::v1::HmacKeyMetadata* response) { return this->UpdateHmacKey(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateHmacKey(
        ::grpc::experimental::MessageAllocator< ::google::storage::v1::UpdateHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(55);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(55);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::storage::v1::UpdateHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_DeleteBucketAccessControl<ExperimentalWithCallbackMethod_GetBucketAccessControl<ExperimentalWithCallbackMethod_InsertBucketAccessControl<ExperimentalWithCallbackMethod_ListBucketAccessControls<ExperimentalWithCallbackMethod_UpdateBucketAccessControl<ExperimentalWithCallbackMethod_PatchBucketAccessControl<ExperimentalWithCallbackMethod_DeleteBucket<ExperimentalWithCallbackMethod_GetBucket<ExperimentalWithCallbackMethod_InsertBucket<ExperimentalWithCallbackMethod_ListChannels<ExperimentalWithCallbackMethod_ListBuckets<ExperimentalWithCallbackMethod_LockBucketRetentionPolicy<ExperimentalWithCallbackMethod_GetBucketIamPolicy<ExperimentalWithCallbackMethod_SetBucketIamPolicy<ExperimentalWithCallbackMethod_TestBucketIamPermissions<ExperimentalWithCallbackMethod_PatchBucket<ExperimentalWithCallbackMethod_UpdateBucket<ExperimentalWithCallbackMethod_StopChannel<ExperimentalWithCallbackMethod_DeleteDefaultObjectAccessControl<ExperimentalWithCallbackMethod_GetDefaultObjectAccessControl<ExperimentalWithCallbackMethod_InsertDefaultObjectAccessControl<ExperimentalWithCallbackMethod_ListDefaultObjectAccessControls<ExperimentalWithCallbackMethod_PatchDefaultObjectAccessControl<ExperimentalWithCallbackMethod_UpdateDefaultObjectAccessControl<ExperimentalWithCallbackMethod_DeleteNotification<ExperimentalWithCallbackMethod_GetNotification<ExperimentalWithCallbackMethod_InsertNotification<ExperimentalWithCallbackMethod_ListNotifications<ExperimentalWithCallbackMethod_DeleteObjectAccessControl<ExperimentalWithCallbackMethod_GetObjectAccessControl<ExperimentalWithCallbackMethod_InsertObjectAccessControl<ExperimentalWithCallbackMethod_ListObjectAccessControls<ExperimentalWithCallbackMethod_PatchObjectAccessControl<ExperimentalWithCallbackMethod_UpdateObjectAccessControl<ExperimentalWithCallbackMethod_ComposeObject<ExperimentalWithCallbackMethod_CopyObject<ExperimentalWithCallbackMethod_DeleteObject<ExperimentalWithCallbackMethod_GetObject<ExperimentalWithCallbackMethod_GetObjectMedia<ExperimentalWithCallbackMethod_InsertObject<ExperimentalWithCallbackMethod_ListObjects<ExperimentalWithCallbackMethod_RewriteObject<ExperimentalWithCallbackMethod_StartResumableWrite<ExperimentalWithCallbackMethod_QueryWriteStatus<ExperimentalWithCallbackMethod_PatchObject<ExperimentalWithCallbackMethod_UpdateObject<ExperimentalWithCallbackMethod_GetObjectIamPolicy<ExperimentalWithCallbackMethod_SetObjectIamPolicy<ExperimentalWithCallbackMethod_TestObjectIamPermissions<ExperimentalWithCallbackMethod_WatchAllObjects<ExperimentalWithCallbackMethod_GetServiceAccount<ExperimentalWithCallbackMethod_CreateHmacKey<ExperimentalWithCallbackMethod_DeleteHmacKey<ExperimentalWithCallbackMethod_GetHmacKey<ExperimentalWithCallbackMethod_ListHmacKeys<ExperimentalWithCallbackMethod_UpdateHmacKey<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_DeleteBucketAccessControl<ExperimentalWithCallbackMethod_GetBucketAccessControl<ExperimentalWithCallbackMethod_InsertBucketAccessControl<ExperimentalWithCallbackMethod_ListBucketAccessControls<ExperimentalWithCallbackMethod_UpdateBucketAccessControl<ExperimentalWithCallbackMethod_PatchBucketAccessControl<ExperimentalWithCallbackMethod_DeleteBucket<ExperimentalWithCallbackMethod_GetBucket<ExperimentalWithCallbackMethod_InsertBucket<ExperimentalWithCallbackMethod_ListChannels<ExperimentalWithCallbackMethod_ListBuckets<ExperimentalWithCallbackMethod_LockBucketRetentionPolicy<ExperimentalWithCallbackMethod_GetBucketIamPolicy<ExperimentalWithCallbackMethod_SetBucketIamPolicy<ExperimentalWithCallbackMethod_TestBucketIamPermissions<ExperimentalWithCallbackMethod_PatchBucket<ExperimentalWithCallbackMethod_UpdateBucket<ExperimentalWithCallbackMethod_StopChannel<ExperimentalWithCallbackMethod_DeleteDefaultObjectAccessControl<ExperimentalWithCallbackMethod_GetDefaultObjectAccessControl<ExperimentalWithCallbackMethod_InsertDefaultObjectAccessControl<ExperimentalWithCallbackMethod_ListDefaultObjectAccessControls<ExperimentalWithCallbackMethod_PatchDefaultObjectAccessControl<ExperimentalWithCallbackMethod_UpdateDefaultObjectAccessControl<ExperimentalWithCallbackMethod_DeleteNotification<ExperimentalWithCallbackMethod_GetNotification<ExperimentalWithCallbackMethod_InsertNotification<ExperimentalWithCallbackMethod_ListNotifications<ExperimentalWithCallbackMethod_DeleteObjectAccessControl<ExperimentalWithCallbackMethod_GetObjectAccessControl<ExperimentalWithCallbackMethod_InsertObjectAccessControl<ExperimentalWithCallbackMethod_ListObjectAccessControls<ExperimentalWithCallbackMethod_PatchObjectAccessControl<ExperimentalWithCallbackMethod_UpdateObjectAccessControl<ExperimentalWithCallbackMethod_ComposeObject<ExperimentalWithCallbackMethod_CopyObject<ExperimentalWithCallbackMethod_DeleteObject<ExperimentalWithCallbackMethod_GetObject<ExperimentalWithCallbackMethod_GetObjectMedia<ExperimentalWithCallbackMethod_InsertObject<ExperimentalWithCallbackMethod_ListObjects<ExperimentalWithCallbackMethod_RewriteObject<ExperimentalWithCallbackMethod_StartResumableWrite<ExperimentalWithCallbackMethod_QueryWriteStatus<ExperimentalWithCallbackMethod_PatchObject<ExperimentalWithCallbackMethod_UpdateObject<ExperimentalWithCallbackMethod_GetObjectIamPolicy<ExperimentalWithCallbackMethod_SetObjectIamPolicy<ExperimentalWithCallbackMethod_TestObjectIamPermissions<ExperimentalWithCallbackMethod_WatchAllObjects<ExperimentalWithCallbackMethod_GetServiceAccount<ExperimentalWithCallbackMethod_CreateHmacKey<ExperimentalWithCallbackMethod_DeleteHmacKey<ExperimentalWithCallbackMethod_GetHmacKey<ExperimentalWithCallbackMethod_ListHmacKeys<ExperimentalWithCallbackMethod_UpdateHmacKey<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_DeleteBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteBucketAccessControl() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_DeleteBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBucketAccessControl() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertBucketAccessControl() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_InsertBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListBucketAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListBucketAccessControls() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListBucketAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBucketAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateBucketAccessControl() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchBucketAccessControl() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_PatchBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteBucket() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_DeleteBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBucket() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertBucket() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_InsertBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListChannels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListChannels() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListChannels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListChannels(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListBuckets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListBuckets() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ListBuckets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuckets(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LockBucketRetentionPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LockBucketRetentionPolicy() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_LockBucketRetentionPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockBucketRetentionPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBucketIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBucketIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TestBucketIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TestBucketIamPermissions() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_TestBucketIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestBucketIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchBucket() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_PatchBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateBucket() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_UpdateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopChannel() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_StopChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopChannel(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_DeleteDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_InsertDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDefaultObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListDefaultObjectAccessControls() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_ListDefaultObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDefaultObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_PatchDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_UpdateDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteNotification() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_DeleteNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNotification() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_GetNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertNotification() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_InsertNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListNotifications() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_ListNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNotifications(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_DeleteObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_GetObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_InsertObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListObjectAccessControls() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_ListObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_PatchObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateObjectAccessControl() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_UpdateObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ComposeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ComposeObject() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_ComposeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ComposeObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CopyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CopyObject() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_CopyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CopyObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteObject() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_DeleteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetObject() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_GetObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetObjectMedia : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetObjectMedia() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_GetObjectMedia() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectMedia(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/, ::grpc::ServerWriter< ::google::storage::v1::GetObjectMediaResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertObject() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::google::storage::v1::InsertObjectRequest>* /*reader*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListObjects() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_ListObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RewriteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RewriteObject() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_RewriteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RewriteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartResumableWrite : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartResumableWrite() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_StartResumableWrite() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartResumableWrite(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryWriteStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryWriteStatus() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_QueryWriteStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryWriteStatus(::grpc::ServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchObject() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_PatchObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateObject() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_UpdateObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetObjectIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_GetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetObjectIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_SetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TestObjectIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TestObjectIamPermissions() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_TestObjectIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestObjectIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchAllObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchAllObjects() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_WatchAllObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchAllObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetServiceAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetServiceAccount() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_GetServiceAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceAccount(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateHmacKey() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_CreateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteHmacKey() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_DeleteHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetHmacKey() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_GetHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListHmacKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListHmacKeys() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_ListHmacKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListHmacKeys(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateHmacKey() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_UpdateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteBucketAccessControl() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_DeleteBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBucketAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBucketAccessControl() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBucketAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertBucketAccessControl() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_InsertBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertBucketAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListBucketAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListBucketAccessControls() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListBucketAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBucketAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBucketAccessControls(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateBucketAccessControl() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UpdateBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBucketAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchBucketAccessControl() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_PatchBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchBucketAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteBucket() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_DeleteBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBucket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBucket() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBucket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertBucket() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_InsertBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertBucket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListChannels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListChannels() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListChannels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListChannels(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListChannels(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListBuckets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListBuckets() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ListBuckets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuckets(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBuckets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LockBucketRetentionPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LockBucketRetentionPolicy() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_LockBucketRetentionPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockBucketRetentionPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLockBucketRetentionPolicy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBucketIamPolicy() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBucketIamPolicy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBucketIamPolicy() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBucketIamPolicy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TestBucketIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TestBucketIamPermissions() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_TestBucketIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestBucketIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestBucketIamPermissions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchBucket() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_PatchBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchBucket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateBucket() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_UpdateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBucket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopChannel() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_StopChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopChannel(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopChannel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_DeleteDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_InsertDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDefaultObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListDefaultObjectAccessControls() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_ListDefaultObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDefaultObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDefaultObjectAccessControls(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_PatchDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_UpdateDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteNotification() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_DeleteNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNotification(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNotification() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_GetNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNotification(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertNotification() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_InsertNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertNotification(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListNotifications() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_ListNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNotifications(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNotifications(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_DeleteObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_GetObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_InsertObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListObjectAccessControls() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_ListObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListObjectAccessControls(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_PatchObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateObjectAccessControl() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_UpdateObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateObjectAccessControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ComposeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ComposeObject() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_ComposeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ComposeObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestComposeObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CopyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CopyObject() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_CopyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CopyObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCopyObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteObject() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_DeleteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetObject() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_GetObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetObjectMedia : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetObjectMedia() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_GetObjectMedia() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectMedia(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/, ::grpc::ServerWriter< ::google::storage::v1::GetObjectMediaResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObjectMedia(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(38, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertObject() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::google::storage::v1::InsertObjectRequest>* /*reader*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertObject(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(39, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListObjects() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_ListObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListObjects(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RewriteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RewriteObject() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_RewriteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RewriteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRewriteObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartResumableWrite : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartResumableWrite() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_StartResumableWrite() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartResumableWrite(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartResumableWrite(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryWriteStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryWriteStatus() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_QueryWriteStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryWriteStatus(::grpc::ServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryWriteStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchObject() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_PatchObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateObject() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_UpdateObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetObjectIamPolicy() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_GetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetObjectIamPolicy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetObjectIamPolicy() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_SetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetObjectIamPolicy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TestObjectIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TestObjectIamPermissions() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_TestObjectIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestObjectIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestObjectIamPermissions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchAllObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchAllObjects() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_WatchAllObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchAllObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchAllObjects(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetServiceAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetServiceAccount() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_GetServiceAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceAccount(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServiceAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateHmacKey() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_CreateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateHmacKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteHmacKey() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_DeleteHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteHmacKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetHmacKey() {
      ::grpc::Service::MarkMethodRaw(53);
    }
    ~WithRawMethod_GetHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHmacKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListHmacKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListHmacKeys() {
      ::grpc::Service::MarkMethodRaw(54);
    }
    ~WithRawMethod_ListHmacKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListHmacKeys(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListHmacKeys(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateHmacKey() {
      ::grpc::Service::MarkMethodRaw(55);
    }
    ~WithRawMethod_UpdateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateHmacKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteBucketAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBucketAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InsertBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InsertBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InsertBucketAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InsertBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListBucketAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListBucketAccessControls() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListBucketAccessControls(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListBucketAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBucketAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListBucketAccessControls(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListBucketAccessControls(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateBucketAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PatchBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PatchBucketAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchBucketAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PatchBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchBucketAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchBucketAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteBucket(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBucket(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InsertBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InsertBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InsertBucket(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InsertBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListChannels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListChannels() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListChannels(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListChannels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListChannels(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListChannels(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListChannels(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListBuckets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListBuckets() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListBuckets(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListBuckets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBuckets(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListBuckets(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListBuckets(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_LockBucketRetentionPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_LockBucketRetentionPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LockBucketRetentionPolicy(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_LockBucketRetentionPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockBucketRetentionPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* LockBucketRetentionPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* LockBucketRetentionPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetBucketIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBucketIamPolicy(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBucketIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBucketIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SetBucketIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBucketIamPolicy(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SetBucketIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SetBucketIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_TestBucketIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_TestBucketIamPermissions() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TestBucketIamPermissions(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_TestBucketIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestBucketIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TestBucketIamPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TestBucketIamPermissions(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PatchBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PatchBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchBucket(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PatchBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateBucket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateBucket(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateBucket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopChannel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopChannel(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopChannel(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopChannel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopChannel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDefaultObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDefaultObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InsertDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InsertDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InsertDefaultObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InsertDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListDefaultObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListDefaultObjectAccessControls() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListDefaultObjectAccessControls(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListDefaultObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDefaultObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListDefaultObjectAccessControls(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListDefaultObjectAccessControls(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PatchDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PatchDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchDefaultObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PatchDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateDefaultObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateDefaultObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateDefaultObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateDefaultObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteNotification() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteNotification(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteNotification(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteNotification(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetNotification() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNotification(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetNotification(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetNotification(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InsertNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InsertNotification() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InsertNotification(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InsertNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertNotification(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertNotification(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListNotifications() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListNotifications(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNotifications(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListNotifications(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListNotifications(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InsertObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InsertObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InsertObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InsertObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InsertObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InsertObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListObjectAccessControls() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListObjectAccessControls(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListObjectAccessControls(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListObjectAccessControls(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PatchObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PatchObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PatchObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateObjectAccessControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateObjectAccessControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateObjectAccessControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateObjectAccessControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ComposeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ComposeObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ComposeObject(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ComposeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ComposeObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ComposeObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ComposeObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CopyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CopyObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CopyObject(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CopyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CopyObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CopyObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CopyObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteObject(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetObject(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetObjectMedia : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetObjectMedia() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(38,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetObjectMedia(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetObjectMedia() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectMedia(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/, ::grpc::ServerWriter< ::google::storage::v1::GetObjectMediaResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetObjectMedia(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetObjectMedia(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InsertObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(39,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, ::grpc::ByteBuffer* response) { return this->InsertObject(context, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::google::storage::v1::InsertObjectRequest>* /*reader*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* InsertObject(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerReadReactor< ::grpc::ByteBuffer>* InsertObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListObjects() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListObjects(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListObjects(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListObjects(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RewriteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RewriteObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RewriteObject(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RewriteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RewriteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RewriteObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RewriteObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartResumableWrite : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartResumableWrite() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartResumableWrite(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartResumableWrite() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartResumableWrite(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartResumableWrite(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartResumableWrite(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_QueryWriteStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_QueryWriteStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryWriteStatus(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_QueryWriteStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryWriteStatus(::grpc::ServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* QueryWriteStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* QueryWriteStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PatchObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PatchObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchObject(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PatchObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PatchObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PatchObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateObject() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateObject(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateObject(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetObjectIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetObjectIamPolicy(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetObjectIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetObjectIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SetObjectIamPolicy() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetObjectIamPolicy(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SetObjectIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SetObjectIamPolicy(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_TestObjectIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_TestObjectIamPermissions() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TestObjectIamPermissions(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_TestObjectIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestObjectIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TestObjectIamPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TestObjectIamPermissions(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WatchAllObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WatchAllObjects() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WatchAllObjects(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_WatchAllObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchAllObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WatchAllObjects(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WatchAllObjects(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetServiceAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetServiceAccount() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetServiceAccount(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetServiceAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceAccount(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetServiceAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetServiceAccount(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateHmacKey(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteHmacKey(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetHmacKey(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListHmacKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListHmacKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListHmacKeys(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListHmacKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListHmacKeys(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListHmacKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListHmacKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateHmacKey() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateHmacKey(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateHmacKey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateHmacKey(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteBucketAccessControl() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::DeleteBucketAccessControlRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::DeleteBucketAccessControlRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteBucketAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteBucketAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::DeleteBucketAccessControlRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBucketAccessControl() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* streamer) {
                       return this->StreamedGetBucketAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBucketAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetBucketAccessControlRequest,::google::storage::v1::BucketAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InsertBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InsertBucketAccessControl() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::InsertBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::InsertBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* streamer) {
                       return this->StreamedInsertBucketAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InsertBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InsertBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsertBucketAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::InsertBucketAccessControlRequest,::google::storage::v1::BucketAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListBucketAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListBucketAccessControls() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListBucketAccessControlsRequest, ::google::storage::v1::ListBucketAccessControlsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListBucketAccessControlsRequest, ::google::storage::v1::ListBucketAccessControlsResponse>* streamer) {
                       return this->StreamedListBucketAccessControls(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListBucketAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListBucketAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketAccessControlsRequest* /*request*/, ::google::storage::v1::ListBucketAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListBucketAccessControls(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListBucketAccessControlsRequest,::google::storage::v1::ListBucketAccessControlsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateBucketAccessControl() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::UpdateBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::UpdateBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* streamer) {
                       return this->StreamedUpdateBucketAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateBucketAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::UpdateBucketAccessControlRequest,::google::storage::v1::BucketAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchBucketAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchBucketAccessControl() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::PatchBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::PatchBucketAccessControlRequest, ::google::storage::v1::BucketAccessControl>* streamer) {
                       return this->StreamedPatchBucketAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchBucketAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchBucketAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketAccessControlRequest* /*request*/, ::google::storage::v1::BucketAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchBucketAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::PatchBucketAccessControlRequest,::google::storage::v1::BucketAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteBucket() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::DeleteBucketRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::DeleteBucketRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteBucket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteBucketRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteBucket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::DeleteBucketRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBucket() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetBucketRequest, ::google::storage::v1::Bucket>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetBucketRequest, ::google::storage::v1::Bucket>* streamer) {
                       return this->StreamedGetBucket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBucket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetBucketRequest,::google::storage::v1::Bucket>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InsertBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InsertBucket() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::InsertBucketRequest, ::google::storage::v1::Bucket>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::InsertBucketRequest, ::google::storage::v1::Bucket>* streamer) {
                       return this->StreamedInsertBucket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InsertBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InsertBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsertBucket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::InsertBucketRequest,::google::storage::v1::Bucket>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListChannels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListChannels() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListChannelsRequest, ::google::storage::v1::ListChannelsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListChannelsRequest, ::google::storage::v1::ListChannelsResponse>* streamer) {
                       return this->StreamedListChannels(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListChannels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListChannels(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListChannelsRequest* /*request*/, ::google::storage::v1::ListChannelsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListChannels(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListChannelsRequest,::google::storage::v1::ListChannelsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListBuckets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListBuckets() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListBucketsRequest, ::google::storage::v1::ListBucketsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListBucketsRequest, ::google::storage::v1::ListBucketsResponse>* streamer) {
                       return this->StreamedListBuckets(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListBuckets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListBuckets(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListBucketsRequest* /*request*/, ::google::storage::v1::ListBucketsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListBuckets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListBucketsRequest,::google::storage::v1::ListBucketsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LockBucketRetentionPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LockBucketRetentionPolicy() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::LockRetentionPolicyRequest, ::google::storage::v1::Bucket>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::LockRetentionPolicyRequest, ::google::storage::v1::Bucket>* streamer) {
                       return this->StreamedLockBucketRetentionPolicy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LockBucketRetentionPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LockBucketRetentionPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::LockRetentionPolicyRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLockBucketRetentionPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::LockRetentionPolicyRequest,::google::storage::v1::Bucket>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBucketIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>* streamer) {
                       return this->StreamedGetBucketIamPolicy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBucketIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBucketIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBucketIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>* streamer) {
                       return this->StreamedSetBucketIamPolicy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBucketIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBucketIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBucketIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::SetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TestBucketIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TestBucketIamPermissions() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>* streamer) {
                       return this->StreamedTestBucketIamPermissions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TestBucketIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TestBucketIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTestBucketIamPermissions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::TestIamPermissionsRequest,::google::iam::v1::TestIamPermissionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchBucket() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::PatchBucketRequest, ::google::storage::v1::Bucket>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::PatchBucketRequest, ::google::storage::v1::Bucket>* streamer) {
                       return this->StreamedPatchBucket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchBucket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::PatchBucketRequest,::google::storage::v1::Bucket>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateBucket() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::UpdateBucketRequest, ::google::storage::v1::Bucket>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::UpdateBucketRequest, ::google::storage::v1::Bucket>* streamer) {
                       return this->StreamedUpdateBucket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateBucket(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateBucketRequest* /*request*/, ::google::storage::v1::Bucket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateBucket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::UpdateBucketRequest,::google::storage::v1::Bucket>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopChannel() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::StopChannelRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::StopChannelRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStopChannel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopChannel(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StopChannelRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopChannel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::StopChannelRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::DeleteDefaultObjectAccessControlRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::DeleteDefaultObjectAccessControlRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteDefaultObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteDefaultObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::DeleteDefaultObjectAccessControlRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedGetDefaultObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetDefaultObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InsertDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InsertDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::InsertDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::InsertDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedInsertDefaultObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InsertDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InsertDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsertDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::InsertDefaultObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDefaultObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListDefaultObjectAccessControls() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListDefaultObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListDefaultObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>* streamer) {
                       return this->StreamedListDefaultObjectAccessControls(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListDefaultObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDefaultObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListDefaultObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDefaultObjectAccessControls(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListDefaultObjectAccessControlsRequest,::google::storage::v1::ListObjectAccessControlsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::PatchDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::PatchDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedPatchDefaultObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::PatchDefaultObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDefaultObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateDefaultObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::UpdateDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::UpdateDefaultObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedUpdateDefaultObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateDefaultObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDefaultObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateDefaultObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDefaultObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::UpdateDefaultObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteNotification() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::DeleteNotificationRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::DeleteNotificationRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteNotification(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteNotificationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteNotification(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::DeleteNotificationRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNotification() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetNotificationRequest, ::google::storage::v1::Notification>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetNotificationRequest, ::google::storage::v1::Notification>* streamer) {
                       return this->StreamedGetNotification(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNotification(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetNotificationRequest,::google::storage::v1::Notification>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InsertNotification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InsertNotification() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::InsertNotificationRequest, ::google::storage::v1::Notification>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::InsertNotificationRequest, ::google::storage::v1::Notification>* streamer) {
                       return this->StreamedInsertNotification(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InsertNotification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InsertNotification(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertNotificationRequest* /*request*/, ::google::storage::v1::Notification* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsertNotification(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::InsertNotificationRequest,::google::storage::v1::Notification>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListNotifications() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListNotificationsRequest, ::google::storage::v1::ListNotificationsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListNotificationsRequest, ::google::storage::v1::ListNotificationsResponse>* streamer) {
                       return this->StreamedListNotifications(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListNotifications(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListNotificationsRequest* /*request*/, ::google::storage::v1::ListNotificationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListNotifications(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListNotificationsRequest,::google::storage::v1::ListNotificationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::DeleteObjectAccessControlRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::DeleteObjectAccessControlRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectAccessControlRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::DeleteObjectAccessControlRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedGetObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InsertObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InsertObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::InsertObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::InsertObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedInsertObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InsertObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InsertObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::InsertObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsertObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::InsertObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListObjectAccessControls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListObjectAccessControls() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListObjectAccessControlsRequest, ::google::storage::v1::ListObjectAccessControlsResponse>* streamer) {
                       return this->StreamedListObjectAccessControls(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListObjectAccessControls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListObjectAccessControls(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectAccessControlsRequest* /*request*/, ::google::storage::v1::ListObjectAccessControlsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListObjectAccessControls(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListObjectAccessControlsRequest,::google::storage::v1::ListObjectAccessControlsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::PatchObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::PatchObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedPatchObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::PatchObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateObjectAccessControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateObjectAccessControl() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::UpdateObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::UpdateObjectAccessControlRequest, ::google::storage::v1::ObjectAccessControl>* streamer) {
                       return this->StreamedUpdateObjectAccessControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateObjectAccessControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateObjectAccessControl(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectAccessControlRequest* /*request*/, ::google::storage::v1::ObjectAccessControl* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateObjectAccessControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::UpdateObjectAccessControlRequest,::google::storage::v1::ObjectAccessControl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ComposeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ComposeObject() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ComposeObjectRequest, ::google::storage::v1::Object>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ComposeObjectRequest, ::google::storage::v1::Object>* streamer) {
                       return this->StreamedComposeObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ComposeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ComposeObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ComposeObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedComposeObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ComposeObjectRequest,::google::storage::v1::Object>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CopyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CopyObject() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::CopyObjectRequest, ::google::storage::v1::Object>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::CopyObjectRequest, ::google::storage::v1::Object>* streamer) {
                       return this->StreamedCopyObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CopyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CopyObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CopyObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCopyObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::CopyObjectRequest,::google::storage::v1::Object>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteObject() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::DeleteObjectRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::DeleteObjectRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::DeleteObjectRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetObject() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetObjectRequest, ::google::storage::v1::Object>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetObjectRequest, ::google::storage::v1::Object>* streamer) {
                       return this->StreamedGetObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetObjectRequest,::google::storage::v1::Object>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListObjects() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListObjectsRequest, ::google::storage::v1::ListObjectsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListObjectsRequest, ::google::storage::v1::ListObjectsResponse>* streamer) {
                       return this->StreamedListObjects(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListObjectsRequest* /*request*/, ::google::storage::v1::ListObjectsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListObjects(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListObjectsRequest,::google::storage::v1::ListObjectsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RewriteObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RewriteObject() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::RewriteObjectRequest, ::google::storage::v1::RewriteResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::RewriteObjectRequest, ::google::storage::v1::RewriteResponse>* streamer) {
                       return this->StreamedRewriteObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RewriteObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RewriteObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::RewriteObjectRequest* /*request*/, ::google::storage::v1::RewriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRewriteObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::RewriteObjectRequest,::google::storage::v1::RewriteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartResumableWrite : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartResumableWrite() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::StartResumableWriteRequest, ::google::storage::v1::StartResumableWriteResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::StartResumableWriteRequest, ::google::storage::v1::StartResumableWriteResponse>* streamer) {
                       return this->StreamedStartResumableWrite(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartResumableWrite() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartResumableWrite(::grpc::ServerContext* /*context*/, const ::google::storage::v1::StartResumableWriteRequest* /*request*/, ::google::storage::v1::StartResumableWriteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartResumableWrite(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::StartResumableWriteRequest,::google::storage::v1::StartResumableWriteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryWriteStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryWriteStatus() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::QueryWriteStatusRequest, ::google::storage::v1::QueryWriteStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::QueryWriteStatusRequest, ::google::storage::v1::QueryWriteStatusResponse>* streamer) {
                       return this->StreamedQueryWriteStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryWriteStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryWriteStatus(::grpc::ServerContext* /*context*/, const ::google::storage::v1::QueryWriteStatusRequest* /*request*/, ::google::storage::v1::QueryWriteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryWriteStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::QueryWriteStatusRequest,::google::storage::v1::QueryWriteStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchObject() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::PatchObjectRequest, ::google::storage::v1::Object>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::PatchObjectRequest, ::google::storage::v1::Object>* streamer) {
                       return this->StreamedPatchObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::PatchObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::PatchObjectRequest,::google::storage::v1::Object>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateObject() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::UpdateObjectRequest, ::google::storage::v1::Object>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::UpdateObjectRequest, ::google::storage::v1::Object>* streamer) {
                       return this->StreamedUpdateObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateObject(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateObjectRequest* /*request*/, ::google::storage::v1::Object* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::UpdateObjectRequest,::google::storage::v1::Object>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetObjectIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>* streamer) {
                       return this->StreamedGetObjectIamPolicy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetObjectIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetObjectIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetObjectIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>* streamer) {
                       return this->StreamedSetObjectIamPolicy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetObjectIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetObjectIamPolicy(::grpc::ServerContext* /*context*/, const ::google::storage::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetObjectIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::SetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TestObjectIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TestObjectIamPermissions() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>* streamer) {
                       return this->StreamedTestObjectIamPermissions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TestObjectIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TestObjectIamPermissions(::grpc::ServerContext* /*context*/, const ::google::storage::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTestObjectIamPermissions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::TestIamPermissionsRequest,::google::iam::v1::TestIamPermissionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WatchAllObjects : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WatchAllObjects() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::WatchAllObjectsRequest, ::google::storage::v1::Channel>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::WatchAllObjectsRequest, ::google::storage::v1::Channel>* streamer) {
                       return this->StreamedWatchAllObjects(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WatchAllObjects() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchAllObjects(::grpc::ServerContext* /*context*/, const ::google::storage::v1::WatchAllObjectsRequest* /*request*/, ::google::storage::v1::Channel* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWatchAllObjects(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::WatchAllObjectsRequest,::google::storage::v1::Channel>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetServiceAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetServiceAccount() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetProjectServiceAccountRequest, ::google::storage::v1::ServiceAccount>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetProjectServiceAccountRequest, ::google::storage::v1::ServiceAccount>* streamer) {
                       return this->StreamedGetServiceAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetServiceAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetServiceAccount(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetProjectServiceAccountRequest* /*request*/, ::google::storage::v1::ServiceAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetServiceAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetProjectServiceAccountRequest,::google::storage::v1::ServiceAccount>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateHmacKey() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::CreateHmacKeyRequest, ::google::storage::v1::CreateHmacKeyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::CreateHmacKeyRequest, ::google::storage::v1::CreateHmacKeyResponse>* streamer) {
                       return this->StreamedCreateHmacKey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::CreateHmacKeyRequest* /*request*/, ::google::storage::v1::CreateHmacKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateHmacKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::CreateHmacKeyRequest,::google::storage::v1::CreateHmacKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteHmacKey() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::DeleteHmacKeyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::DeleteHmacKeyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteHmacKey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::DeleteHmacKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteHmacKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::DeleteHmacKeyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetHmacKey() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::GetHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::GetHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>* streamer) {
                       return this->StreamedGetHmacKey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetHmacKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::GetHmacKeyRequest,::google::storage::v1::HmacKeyMetadata>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListHmacKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListHmacKeys() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::ListHmacKeysRequest, ::google::storage::v1::ListHmacKeysResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::ListHmacKeysRequest, ::google::storage::v1::ListHmacKeysResponse>* streamer) {
                       return this->StreamedListHmacKeys(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListHmacKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListHmacKeys(::grpc::ServerContext* /*context*/, const ::google::storage::v1::ListHmacKeysRequest* /*request*/, ::google::storage::v1::ListHmacKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListHmacKeys(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::ListHmacKeysRequest,::google::storage::v1::ListHmacKeysResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateHmacKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateHmacKey() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::storage::v1::UpdateHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::storage::v1::UpdateHmacKeyRequest, ::google::storage::v1::HmacKeyMetadata>* streamer) {
                       return this->StreamedUpdateHmacKey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateHmacKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateHmacKey(::grpc::ServerContext* /*context*/, const ::google::storage::v1::UpdateHmacKeyRequest* /*request*/, ::google::storage::v1::HmacKeyMetadata* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateHmacKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::storage::v1::UpdateHmacKeyRequest,::google::storage::v1::HmacKeyMetadata>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_DeleteBucketAccessControl<WithStreamedUnaryMethod_GetBucketAccessControl<WithStreamedUnaryMethod_InsertBucketAccessControl<WithStreamedUnaryMethod_ListBucketAccessControls<WithStreamedUnaryMethod_UpdateBucketAccessControl<WithStreamedUnaryMethod_PatchBucketAccessControl<WithStreamedUnaryMethod_DeleteBucket<WithStreamedUnaryMethod_GetBucket<WithStreamedUnaryMethod_InsertBucket<WithStreamedUnaryMethod_ListChannels<WithStreamedUnaryMethod_ListBuckets<WithStreamedUnaryMethod_LockBucketRetentionPolicy<WithStreamedUnaryMethod_GetBucketIamPolicy<WithStreamedUnaryMethod_SetBucketIamPolicy<WithStreamedUnaryMethod_TestBucketIamPermissions<WithStreamedUnaryMethod_PatchBucket<WithStreamedUnaryMethod_UpdateBucket<WithStreamedUnaryMethod_StopChannel<WithStreamedUnaryMethod_DeleteDefaultObjectAccessControl<WithStreamedUnaryMethod_GetDefaultObjectAccessControl<WithStreamedUnaryMethod_InsertDefaultObjectAccessControl<WithStreamedUnaryMethod_ListDefaultObjectAccessControls<WithStreamedUnaryMethod_PatchDefaultObjectAccessControl<WithStreamedUnaryMethod_UpdateDefaultObjectAccessControl<WithStreamedUnaryMethod_DeleteNotification<WithStreamedUnaryMethod_GetNotification<WithStreamedUnaryMethod_InsertNotification<WithStreamedUnaryMethod_ListNotifications<WithStreamedUnaryMethod_DeleteObjectAccessControl<WithStreamedUnaryMethod_GetObjectAccessControl<WithStreamedUnaryMethod_InsertObjectAccessControl<WithStreamedUnaryMethod_ListObjectAccessControls<WithStreamedUnaryMethod_PatchObjectAccessControl<WithStreamedUnaryMethod_UpdateObjectAccessControl<WithStreamedUnaryMethod_ComposeObject<WithStreamedUnaryMethod_CopyObject<WithStreamedUnaryMethod_DeleteObject<WithStreamedUnaryMethod_GetObject<WithStreamedUnaryMethod_ListObjects<WithStreamedUnaryMethod_RewriteObject<WithStreamedUnaryMethod_StartResumableWrite<WithStreamedUnaryMethod_QueryWriteStatus<WithStreamedUnaryMethod_PatchObject<WithStreamedUnaryMethod_UpdateObject<WithStreamedUnaryMethod_GetObjectIamPolicy<WithStreamedUnaryMethod_SetObjectIamPolicy<WithStreamedUnaryMethod_TestObjectIamPermissions<WithStreamedUnaryMethod_WatchAllObjects<WithStreamedUnaryMethod_GetServiceAccount<WithStreamedUnaryMethod_CreateHmacKey<WithStreamedUnaryMethod_DeleteHmacKey<WithStreamedUnaryMethod_GetHmacKey<WithStreamedUnaryMethod_ListHmacKeys<WithStreamedUnaryMethod_UpdateHmacKey<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetObjectMedia : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetObjectMedia() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::storage::v1::GetObjectMediaRequest, ::google::storage::v1::GetObjectMediaResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::storage::v1::GetObjectMediaRequest, ::google::storage::v1::GetObjectMediaResponse>* streamer) {
                       return this->StreamedGetObjectMedia(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetObjectMedia() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetObjectMedia(::grpc::ServerContext* /*context*/, const ::google::storage::v1::GetObjectMediaRequest* /*request*/, ::grpc::ServerWriter< ::google::storage::v1::GetObjectMediaResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetObjectMedia(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::storage::v1::GetObjectMediaRequest,::google::storage::v1::GetObjectMediaResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetObjectMedia<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_DeleteBucketAccessControl<WithStreamedUnaryMethod_GetBucketAccessControl<WithStreamedUnaryMethod_InsertBucketAccessControl<WithStreamedUnaryMethod_ListBucketAccessControls<WithStreamedUnaryMethod_UpdateBucketAccessControl<WithStreamedUnaryMethod_PatchBucketAccessControl<WithStreamedUnaryMethod_DeleteBucket<WithStreamedUnaryMethod_GetBucket<WithStreamedUnaryMethod_InsertBucket<WithStreamedUnaryMethod_ListChannels<WithStreamedUnaryMethod_ListBuckets<WithStreamedUnaryMethod_LockBucketRetentionPolicy<WithStreamedUnaryMethod_GetBucketIamPolicy<WithStreamedUnaryMethod_SetBucketIamPolicy<WithStreamedUnaryMethod_TestBucketIamPermissions<WithStreamedUnaryMethod_PatchBucket<WithStreamedUnaryMethod_UpdateBucket<WithStreamedUnaryMethod_StopChannel<WithStreamedUnaryMethod_DeleteDefaultObjectAccessControl<WithStreamedUnaryMethod_GetDefaultObjectAccessControl<WithStreamedUnaryMethod_InsertDefaultObjectAccessControl<WithStreamedUnaryMethod_ListDefaultObjectAccessControls<WithStreamedUnaryMethod_PatchDefaultObjectAccessControl<WithStreamedUnaryMethod_UpdateDefaultObjectAccessControl<WithStreamedUnaryMethod_DeleteNotification<WithStreamedUnaryMethod_GetNotification<WithStreamedUnaryMethod_InsertNotification<WithStreamedUnaryMethod_ListNotifications<WithStreamedUnaryMethod_DeleteObjectAccessControl<WithStreamedUnaryMethod_GetObjectAccessControl<WithStreamedUnaryMethod_InsertObjectAccessControl<WithStreamedUnaryMethod_ListObjectAccessControls<WithStreamedUnaryMethod_PatchObjectAccessControl<WithStreamedUnaryMethod_UpdateObjectAccessControl<WithStreamedUnaryMethod_ComposeObject<WithStreamedUnaryMethod_CopyObject<WithStreamedUnaryMethod_DeleteObject<WithStreamedUnaryMethod_GetObject<WithSplitStreamingMethod_GetObjectMedia<WithStreamedUnaryMethod_ListObjects<WithStreamedUnaryMethod_RewriteObject<WithStreamedUnaryMethod_StartResumableWrite<WithStreamedUnaryMethod_QueryWriteStatus<WithStreamedUnaryMethod_PatchObject<WithStreamedUnaryMethod_UpdateObject<WithStreamedUnaryMethod_GetObjectIamPolicy<WithStreamedUnaryMethod_SetObjectIamPolicy<WithStreamedUnaryMethod_TestObjectIamPermissions<WithStreamedUnaryMethod_WatchAllObjects<WithStreamedUnaryMethod_GetServiceAccount<WithStreamedUnaryMethod_CreateHmacKey<WithStreamedUnaryMethod_DeleteHmacKey<WithStreamedUnaryMethod_GetHmacKey<WithStreamedUnaryMethod_ListHmacKeys<WithStreamedUnaryMethod_UpdateHmacKey<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace storage
}  // namespace google


#endif  // GRPC_google_2fstorage_2fv1_2fstorage_2eproto__INCLUDED
