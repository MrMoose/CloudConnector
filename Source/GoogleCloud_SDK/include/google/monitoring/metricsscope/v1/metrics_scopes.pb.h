// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/metricsscope/v1/metrics_scopes.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include "google/longrunning/operations.pb.h"
#include "google/monitoring/metricsscope/v1/metrics_scope.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto_metadata_getter(int index);
namespace google {
namespace monitoring {
namespace metricsscope {
namespace v1 {
class CreateMonitoredProjectRequest;
struct CreateMonitoredProjectRequestDefaultTypeInternal;
extern CreateMonitoredProjectRequestDefaultTypeInternal _CreateMonitoredProjectRequest_default_instance_;
class DeleteMonitoredProjectRequest;
struct DeleteMonitoredProjectRequestDefaultTypeInternal;
extern DeleteMonitoredProjectRequestDefaultTypeInternal _DeleteMonitoredProjectRequest_default_instance_;
class GetMetricsScopeRequest;
struct GetMetricsScopeRequestDefaultTypeInternal;
extern GetMetricsScopeRequestDefaultTypeInternal _GetMetricsScopeRequest_default_instance_;
class ListMetricsScopesByMonitoredProjectRequest;
struct ListMetricsScopesByMonitoredProjectRequestDefaultTypeInternal;
extern ListMetricsScopesByMonitoredProjectRequestDefaultTypeInternal _ListMetricsScopesByMonitoredProjectRequest_default_instance_;
class ListMetricsScopesByMonitoredProjectResponse;
struct ListMetricsScopesByMonitoredProjectResponseDefaultTypeInternal;
extern ListMetricsScopesByMonitoredProjectResponseDefaultTypeInternal _ListMetricsScopesByMonitoredProjectResponse_default_instance_;
class OperationMetadata;
struct OperationMetadataDefaultTypeInternal;
extern OperationMetadataDefaultTypeInternal _OperationMetadata_default_instance_;
}  // namespace v1
}  // namespace metricsscope
}  // namespace monitoring
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::monitoring::metricsscope::v1::CreateMonitoredProjectRequest* Arena::CreateMaybeMessage<::google::monitoring::metricsscope::v1::CreateMonitoredProjectRequest>(Arena*);
template<> ::google::monitoring::metricsscope::v1::DeleteMonitoredProjectRequest* Arena::CreateMaybeMessage<::google::monitoring::metricsscope::v1::DeleteMonitoredProjectRequest>(Arena*);
template<> ::google::monitoring::metricsscope::v1::GetMetricsScopeRequest* Arena::CreateMaybeMessage<::google::monitoring::metricsscope::v1::GetMetricsScopeRequest>(Arena*);
template<> ::google::monitoring::metricsscope::v1::ListMetricsScopesByMonitoredProjectRequest* Arena::CreateMaybeMessage<::google::monitoring::metricsscope::v1::ListMetricsScopesByMonitoredProjectRequest>(Arena*);
template<> ::google::monitoring::metricsscope::v1::ListMetricsScopesByMonitoredProjectResponse* Arena::CreateMaybeMessage<::google::monitoring::metricsscope::v1::ListMetricsScopesByMonitoredProjectResponse>(Arena*);
template<> ::google::monitoring::metricsscope::v1::OperationMetadata* Arena::CreateMaybeMessage<::google::monitoring::metricsscope::v1::OperationMetadata>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace monitoring {
namespace metricsscope {
namespace v1 {

enum OperationMetadata_State : int {
  OperationMetadata_State_STATE_UNSPECIFIED = 0,
  OperationMetadata_State_CREATED = 1,
  OperationMetadata_State_RUNNING = 2,
  OperationMetadata_State_DONE = 3,
  OperationMetadata_State_CANCELLED = 4,
  OperationMetadata_State_OperationMetadata_State_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  OperationMetadata_State_OperationMetadata_State_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool OperationMetadata_State_IsValid(int value);
constexpr OperationMetadata_State OperationMetadata_State_State_MIN = OperationMetadata_State_STATE_UNSPECIFIED;
constexpr OperationMetadata_State OperationMetadata_State_State_MAX = OperationMetadata_State_CANCELLED;
constexpr int OperationMetadata_State_State_ARRAYSIZE = OperationMetadata_State_State_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OperationMetadata_State_descriptor();
template<typename T>
inline const std::string& OperationMetadata_State_Name(T enum_t_value) {
  static_assert(::std::is_same<T, OperationMetadata_State>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function OperationMetadata_State_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    OperationMetadata_State_descriptor(), enum_t_value);
}
inline bool OperationMetadata_State_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, OperationMetadata_State* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<OperationMetadata_State>(
    OperationMetadata_State_descriptor(), name, value);
}
// ===================================================================

class GetMetricsScopeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.monitoring.metricsscope.v1.GetMetricsScopeRequest) */ {
 public:
  inline GetMetricsScopeRequest() : GetMetricsScopeRequest(nullptr) {}
  virtual ~GetMetricsScopeRequest();
  explicit constexpr GetMetricsScopeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetMetricsScopeRequest(const GetMetricsScopeRequest& from);
  GetMetricsScopeRequest(GetMetricsScopeRequest&& from) noexcept
    : GetMetricsScopeRequest() {
    *this = ::std::move(from);
  }

  inline GetMetricsScopeRequest& operator=(const GetMetricsScopeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMetricsScopeRequest& operator=(GetMetricsScopeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetMetricsScopeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMetricsScopeRequest* internal_default_instance() {
    return reinterpret_cast<const GetMetricsScopeRequest*>(
               &_GetMetricsScopeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetMetricsScopeRequest& a, GetMetricsScopeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMetricsScopeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMetricsScopeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetMetricsScopeRequest* New() const final {
    return CreateMaybeMessage<GetMetricsScopeRequest>(nullptr);
  }

  GetMetricsScopeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetMetricsScopeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetMetricsScopeRequest& from);
  void MergeFrom(const GetMetricsScopeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMetricsScopeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.monitoring.metricsscope.v1.GetMetricsScopeRequest";
  }
  protected:
  explicit GetMetricsScopeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.monitoring.metricsscope.v1.GetMetricsScopeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto;
};
// -------------------------------------------------------------------

class ListMetricsScopesByMonitoredProjectRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest) */ {
 public:
  inline ListMetricsScopesByMonitoredProjectRequest() : ListMetricsScopesByMonitoredProjectRequest(nullptr) {}
  virtual ~ListMetricsScopesByMonitoredProjectRequest();
  explicit constexpr ListMetricsScopesByMonitoredProjectRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListMetricsScopesByMonitoredProjectRequest(const ListMetricsScopesByMonitoredProjectRequest& from);
  ListMetricsScopesByMonitoredProjectRequest(ListMetricsScopesByMonitoredProjectRequest&& from) noexcept
    : ListMetricsScopesByMonitoredProjectRequest() {
    *this = ::std::move(from);
  }

  inline ListMetricsScopesByMonitoredProjectRequest& operator=(const ListMetricsScopesByMonitoredProjectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMetricsScopesByMonitoredProjectRequest& operator=(ListMetricsScopesByMonitoredProjectRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListMetricsScopesByMonitoredProjectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMetricsScopesByMonitoredProjectRequest* internal_default_instance() {
    return reinterpret_cast<const ListMetricsScopesByMonitoredProjectRequest*>(
               &_ListMetricsScopesByMonitoredProjectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ListMetricsScopesByMonitoredProjectRequest& a, ListMetricsScopesByMonitoredProjectRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListMetricsScopesByMonitoredProjectRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMetricsScopesByMonitoredProjectRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListMetricsScopesByMonitoredProjectRequest* New() const final {
    return CreateMaybeMessage<ListMetricsScopesByMonitoredProjectRequest>(nullptr);
  }

  ListMetricsScopesByMonitoredProjectRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListMetricsScopesByMonitoredProjectRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListMetricsScopesByMonitoredProjectRequest& from);
  void MergeFrom(const ListMetricsScopesByMonitoredProjectRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListMetricsScopesByMonitoredProjectRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest";
  }
  protected:
  explicit ListMetricsScopesByMonitoredProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMonitoredResourceContainerFieldNumber = 1,
  };
  // string monitored_resource_container = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_monitored_resource_container();
  const std::string& monitored_resource_container() const;
  void set_monitored_resource_container(const std::string& value);
  void set_monitored_resource_container(std::string&& value);
  void set_monitored_resource_container(const char* value);
  void set_monitored_resource_container(const char* value, size_t size);
  std::string* mutable_monitored_resource_container();
  std::string* release_monitored_resource_container();
  void set_allocated_monitored_resource_container(std::string* monitored_resource_container);
  private:
  const std::string& _internal_monitored_resource_container() const;
  void _internal_set_monitored_resource_container(const std::string& value);
  std::string* _internal_mutable_monitored_resource_container();
  public:

  // @@protoc_insertion_point(class_scope:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr monitored_resource_container_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto;
};
// -------------------------------------------------------------------

class ListMetricsScopesByMonitoredProjectResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse) */ {
 public:
  inline ListMetricsScopesByMonitoredProjectResponse() : ListMetricsScopesByMonitoredProjectResponse(nullptr) {}
  virtual ~ListMetricsScopesByMonitoredProjectResponse();
  explicit constexpr ListMetricsScopesByMonitoredProjectResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListMetricsScopesByMonitoredProjectResponse(const ListMetricsScopesByMonitoredProjectResponse& from);
  ListMetricsScopesByMonitoredProjectResponse(ListMetricsScopesByMonitoredProjectResponse&& from) noexcept
    : ListMetricsScopesByMonitoredProjectResponse() {
    *this = ::std::move(from);
  }

  inline ListMetricsScopesByMonitoredProjectResponse& operator=(const ListMetricsScopesByMonitoredProjectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMetricsScopesByMonitoredProjectResponse& operator=(ListMetricsScopesByMonitoredProjectResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListMetricsScopesByMonitoredProjectResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMetricsScopesByMonitoredProjectResponse* internal_default_instance() {
    return reinterpret_cast<const ListMetricsScopesByMonitoredProjectResponse*>(
               &_ListMetricsScopesByMonitoredProjectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListMetricsScopesByMonitoredProjectResponse& a, ListMetricsScopesByMonitoredProjectResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListMetricsScopesByMonitoredProjectResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMetricsScopesByMonitoredProjectResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListMetricsScopesByMonitoredProjectResponse* New() const final {
    return CreateMaybeMessage<ListMetricsScopesByMonitoredProjectResponse>(nullptr);
  }

  ListMetricsScopesByMonitoredProjectResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListMetricsScopesByMonitoredProjectResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListMetricsScopesByMonitoredProjectResponse& from);
  void MergeFrom(const ListMetricsScopesByMonitoredProjectResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListMetricsScopesByMonitoredProjectResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse";
  }
  protected:
  explicit ListMetricsScopesByMonitoredProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsScopesFieldNumber = 1,
  };
  // repeated .google.monitoring.metricsscope.v1.MetricsScope metrics_scopes = 1;
  int metrics_scopes_size() const;
  private:
  int _internal_metrics_scopes_size() const;
  public:
  void clear_metrics_scopes();
  ::google::monitoring::metricsscope::v1::MetricsScope* mutable_metrics_scopes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::monitoring::metricsscope::v1::MetricsScope >*
      mutable_metrics_scopes();
  private:
  const ::google::monitoring::metricsscope::v1::MetricsScope& _internal_metrics_scopes(int index) const;
  ::google::monitoring::metricsscope::v1::MetricsScope* _internal_add_metrics_scopes();
  public:
  const ::google::monitoring::metricsscope::v1::MetricsScope& metrics_scopes(int index) const;
  ::google::monitoring::metricsscope::v1::MetricsScope* add_metrics_scopes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::monitoring::metricsscope::v1::MetricsScope >&
      metrics_scopes() const;

  // @@protoc_insertion_point(class_scope:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::monitoring::metricsscope::v1::MetricsScope > metrics_scopes_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto;
};
// -------------------------------------------------------------------

class CreateMonitoredProjectRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest) */ {
 public:
  inline CreateMonitoredProjectRequest() : CreateMonitoredProjectRequest(nullptr) {}
  virtual ~CreateMonitoredProjectRequest();
  explicit constexpr CreateMonitoredProjectRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateMonitoredProjectRequest(const CreateMonitoredProjectRequest& from);
  CreateMonitoredProjectRequest(CreateMonitoredProjectRequest&& from) noexcept
    : CreateMonitoredProjectRequest() {
    *this = ::std::move(from);
  }

  inline CreateMonitoredProjectRequest& operator=(const CreateMonitoredProjectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateMonitoredProjectRequest& operator=(CreateMonitoredProjectRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateMonitoredProjectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateMonitoredProjectRequest* internal_default_instance() {
    return reinterpret_cast<const CreateMonitoredProjectRequest*>(
               &_CreateMonitoredProjectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CreateMonitoredProjectRequest& a, CreateMonitoredProjectRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateMonitoredProjectRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateMonitoredProjectRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateMonitoredProjectRequest* New() const final {
    return CreateMaybeMessage<CreateMonitoredProjectRequest>(nullptr);
  }

  CreateMonitoredProjectRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateMonitoredProjectRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateMonitoredProjectRequest& from);
  void MergeFrom(const CreateMonitoredProjectRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateMonitoredProjectRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest";
  }
  protected:
  explicit CreateMonitoredProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kMonitoredProjectFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  void set_parent(const std::string& value);
  void set_parent(std::string&& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  std::string* mutable_parent();
  std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // .google.monitoring.metricsscope.v1.MonitoredProject monitored_project = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_monitored_project() const;
  private:
  bool _internal_has_monitored_project() const;
  public:
  void clear_monitored_project();
  const ::google::monitoring::metricsscope::v1::MonitoredProject& monitored_project() const;
  ::google::monitoring::metricsscope::v1::MonitoredProject* release_monitored_project();
  ::google::monitoring::metricsscope::v1::MonitoredProject* mutable_monitored_project();
  void set_allocated_monitored_project(::google::monitoring::metricsscope::v1::MonitoredProject* monitored_project);
  private:
  const ::google::monitoring::metricsscope::v1::MonitoredProject& _internal_monitored_project() const;
  ::google::monitoring::metricsscope::v1::MonitoredProject* _internal_mutable_monitored_project();
  public:
  void unsafe_arena_set_allocated_monitored_project(
      ::google::monitoring::metricsscope::v1::MonitoredProject* monitored_project);
  ::google::monitoring::metricsscope::v1::MonitoredProject* unsafe_arena_release_monitored_project();

  // @@protoc_insertion_point(class_scope:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
  ::google::monitoring::metricsscope::v1::MonitoredProject* monitored_project_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto;
};
// -------------------------------------------------------------------

class DeleteMonitoredProjectRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest) */ {
 public:
  inline DeleteMonitoredProjectRequest() : DeleteMonitoredProjectRequest(nullptr) {}
  virtual ~DeleteMonitoredProjectRequest();
  explicit constexpr DeleteMonitoredProjectRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteMonitoredProjectRequest(const DeleteMonitoredProjectRequest& from);
  DeleteMonitoredProjectRequest(DeleteMonitoredProjectRequest&& from) noexcept
    : DeleteMonitoredProjectRequest() {
    *this = ::std::move(from);
  }

  inline DeleteMonitoredProjectRequest& operator=(const DeleteMonitoredProjectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMonitoredProjectRequest& operator=(DeleteMonitoredProjectRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteMonitoredProjectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMonitoredProjectRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteMonitoredProjectRequest*>(
               &_DeleteMonitoredProjectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DeleteMonitoredProjectRequest& a, DeleteMonitoredProjectRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteMonitoredProjectRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMonitoredProjectRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteMonitoredProjectRequest* New() const final {
    return CreateMaybeMessage<DeleteMonitoredProjectRequest>(nullptr);
  }

  DeleteMonitoredProjectRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteMonitoredProjectRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteMonitoredProjectRequest& from);
  void MergeFrom(const DeleteMonitoredProjectRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteMonitoredProjectRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest";
  }
  protected:
  explicit DeleteMonitoredProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto;
};
// -------------------------------------------------------------------

class OperationMetadata PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.monitoring.metricsscope.v1.OperationMetadata) */ {
 public:
  inline OperationMetadata() : OperationMetadata(nullptr) {}
  virtual ~OperationMetadata();
  explicit constexpr OperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OperationMetadata(const OperationMetadata& from);
  OperationMetadata(OperationMetadata&& from) noexcept
    : OperationMetadata() {
    *this = ::std::move(from);
  }

  inline OperationMetadata& operator=(const OperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperationMetadata& operator=(OperationMetadata&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperationMetadata* internal_default_instance() {
    return reinterpret_cast<const OperationMetadata*>(
               &_OperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(OperationMetadata& a, OperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(OperationMetadata* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OperationMetadata* New() const final {
    return CreateMaybeMessage<OperationMetadata>(nullptr);
  }

  OperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OperationMetadata>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OperationMetadata& from);
  void MergeFrom(const OperationMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperationMetadata* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.monitoring.metricsscope.v1.OperationMetadata";
  }
  protected:
  explicit OperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef OperationMetadata_State State;
  static constexpr State STATE_UNSPECIFIED =
    OperationMetadata_State_STATE_UNSPECIFIED;
  static constexpr State CREATED =
    OperationMetadata_State_CREATED;
  static constexpr State RUNNING =
    OperationMetadata_State_RUNNING;
  static constexpr State DONE =
    OperationMetadata_State_DONE;
  static constexpr State CANCELLED =
    OperationMetadata_State_CANCELLED;
  static inline bool State_IsValid(int value) {
    return OperationMetadata_State_IsValid(value);
  }
  static constexpr State State_MIN =
    OperationMetadata_State_State_MIN;
  static constexpr State State_MAX =
    OperationMetadata_State_State_MAX;
  static constexpr int State_ARRAYSIZE =
    OperationMetadata_State_State_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  State_descriptor() {
    return OperationMetadata_State_descriptor();
  }
  template<typename T>
  static inline const std::string& State_Name(T enum_t_value) {
    static_assert(::std::is_same<T, State>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function State_Name.");
    return OperationMetadata_State_Name(enum_t_value);
  }
  static inline bool State_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      State* value) {
    return OperationMetadata_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCreateTimeFieldNumber = 5,
    kUpdateTimeFieldNumber = 6,
    kStateFieldNumber = 1,
  };
  // .google.protobuf.Timestamp create_time = 5;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.protobuf.Timestamp update_time = 6;
  bool has_update_time() const;
  private:
  bool _internal_has_update_time() const;
  public:
  void clear_update_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& update_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_update_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_update_time();
  void set_allocated_update_time(PROTOBUF_NAMESPACE_ID::Timestamp* update_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_update_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_update_time();
  public:
  void unsafe_arena_set_allocated_update_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* update_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_update_time();

  // .google.monitoring.metricsscope.v1.OperationMetadata.State state = 1;
  void clear_state();
  ::google::monitoring::metricsscope::v1::OperationMetadata_State state() const;
  void set_state(::google::monitoring::metricsscope::v1::OperationMetadata_State value);
  private:
  ::google::monitoring::metricsscope::v1::OperationMetadata_State _internal_state() const;
  void _internal_set_state(::google::monitoring::metricsscope::v1::OperationMetadata_State value);
  public:

  // @@protoc_insertion_point(class_scope:google.monitoring.metricsscope.v1.OperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
  PROTOBUF_NAMESPACE_ID::Timestamp* update_time_;
  int state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetMetricsScopeRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void GetMetricsScopeRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetMetricsScopeRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
  return _internal_name();
}
inline void GetMetricsScopeRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
}
inline std::string* GetMetricsScopeRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
  return _internal_mutable_name();
}
inline const std::string& GetMetricsScopeRequest::_internal_name() const {
  return name_.Get();
}
inline void GetMetricsScopeRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetMetricsScopeRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
}
inline void GetMetricsScopeRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
}
inline void GetMetricsScopeRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
}
inline std::string* GetMetricsScopeRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetMetricsScopeRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetMetricsScopeRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.metricsscope.v1.GetMetricsScopeRequest.name)
}

// -------------------------------------------------------------------

// ListMetricsScopesByMonitoredProjectRequest

// string monitored_resource_container = 1 [(.google.api.field_behavior) = REQUIRED];
inline void ListMetricsScopesByMonitoredProjectRequest::clear_monitored_resource_container() {
  monitored_resource_container_.ClearToEmpty();
}
inline const std::string& ListMetricsScopesByMonitoredProjectRequest::monitored_resource_container() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
  return _internal_monitored_resource_container();
}
inline void ListMetricsScopesByMonitoredProjectRequest::set_monitored_resource_container(const std::string& value) {
  _internal_set_monitored_resource_container(value);
  // @@protoc_insertion_point(field_set:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
}
inline std::string* ListMetricsScopesByMonitoredProjectRequest::mutable_monitored_resource_container() {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
  return _internal_mutable_monitored_resource_container();
}
inline const std::string& ListMetricsScopesByMonitoredProjectRequest::_internal_monitored_resource_container() const {
  return monitored_resource_container_.Get();
}
inline void ListMetricsScopesByMonitoredProjectRequest::_internal_set_monitored_resource_container(const std::string& value) {
  
  monitored_resource_container_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListMetricsScopesByMonitoredProjectRequest::set_monitored_resource_container(std::string&& value) {
  
  monitored_resource_container_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
}
inline void ListMetricsScopesByMonitoredProjectRequest::set_monitored_resource_container(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  monitored_resource_container_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
}
inline void ListMetricsScopesByMonitoredProjectRequest::set_monitored_resource_container(const char* value,
    size_t size) {
  
  monitored_resource_container_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
}
inline std::string* ListMetricsScopesByMonitoredProjectRequest::_internal_mutable_monitored_resource_container() {
  
  return monitored_resource_container_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListMetricsScopesByMonitoredProjectRequest::release_monitored_resource_container() {
  // @@protoc_insertion_point(field_release:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
  return monitored_resource_container_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListMetricsScopesByMonitoredProjectRequest::set_allocated_monitored_resource_container(std::string* monitored_resource_container) {
  if (monitored_resource_container != nullptr) {
    
  } else {
    
  }
  monitored_resource_container_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), monitored_resource_container,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectRequest.monitored_resource_container)
}

// -------------------------------------------------------------------

// ListMetricsScopesByMonitoredProjectResponse

// repeated .google.monitoring.metricsscope.v1.MetricsScope metrics_scopes = 1;
inline int ListMetricsScopesByMonitoredProjectResponse::_internal_metrics_scopes_size() const {
  return metrics_scopes_.size();
}
inline int ListMetricsScopesByMonitoredProjectResponse::metrics_scopes_size() const {
  return _internal_metrics_scopes_size();
}
inline ::google::monitoring::metricsscope::v1::MetricsScope* ListMetricsScopesByMonitoredProjectResponse::mutable_metrics_scopes(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse.metrics_scopes)
  return metrics_scopes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::monitoring::metricsscope::v1::MetricsScope >*
ListMetricsScopesByMonitoredProjectResponse::mutable_metrics_scopes() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse.metrics_scopes)
  return &metrics_scopes_;
}
inline const ::google::monitoring::metricsscope::v1::MetricsScope& ListMetricsScopesByMonitoredProjectResponse::_internal_metrics_scopes(int index) const {
  return metrics_scopes_.Get(index);
}
inline const ::google::monitoring::metricsscope::v1::MetricsScope& ListMetricsScopesByMonitoredProjectResponse::metrics_scopes(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse.metrics_scopes)
  return _internal_metrics_scopes(index);
}
inline ::google::monitoring::metricsscope::v1::MetricsScope* ListMetricsScopesByMonitoredProjectResponse::_internal_add_metrics_scopes() {
  return metrics_scopes_.Add();
}
inline ::google::monitoring::metricsscope::v1::MetricsScope* ListMetricsScopesByMonitoredProjectResponse::add_metrics_scopes() {
  // @@protoc_insertion_point(field_add:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse.metrics_scopes)
  return _internal_add_metrics_scopes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::monitoring::metricsscope::v1::MetricsScope >&
ListMetricsScopesByMonitoredProjectResponse::metrics_scopes() const {
  // @@protoc_insertion_point(field_list:google.monitoring.metricsscope.v1.ListMetricsScopesByMonitoredProjectResponse.metrics_scopes)
  return metrics_scopes_;
}

// -------------------------------------------------------------------

// CreateMonitoredProjectRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void CreateMonitoredProjectRequest::clear_parent() {
  parent_.ClearToEmpty();
}
inline const std::string& CreateMonitoredProjectRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
  return _internal_parent();
}
inline void CreateMonitoredProjectRequest::set_parent(const std::string& value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
}
inline std::string* CreateMonitoredProjectRequest::mutable_parent() {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
  return _internal_mutable_parent();
}
inline const std::string& CreateMonitoredProjectRequest::_internal_parent() const {
  return parent_.Get();
}
inline void CreateMonitoredProjectRequest::_internal_set_parent(const std::string& value) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CreateMonitoredProjectRequest::set_parent(std::string&& value) {
  
  parent_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
}
inline void CreateMonitoredProjectRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
}
inline void CreateMonitoredProjectRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
}
inline std::string* CreateMonitoredProjectRequest::_internal_mutable_parent() {
  
  return parent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CreateMonitoredProjectRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
  return parent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateMonitoredProjectRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), parent,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.parent)
}

// .google.monitoring.metricsscope.v1.MonitoredProject monitored_project = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool CreateMonitoredProjectRequest::_internal_has_monitored_project() const {
  return this != internal_default_instance() && monitored_project_ != nullptr;
}
inline bool CreateMonitoredProjectRequest::has_monitored_project() const {
  return _internal_has_monitored_project();
}
inline const ::google::monitoring::metricsscope::v1::MonitoredProject& CreateMonitoredProjectRequest::_internal_monitored_project() const {
  const ::google::monitoring::metricsscope::v1::MonitoredProject* p = monitored_project_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::monitoring::metricsscope::v1::MonitoredProject&>(
      ::google::monitoring::metricsscope::v1::_MonitoredProject_default_instance_);
}
inline const ::google::monitoring::metricsscope::v1::MonitoredProject& CreateMonitoredProjectRequest::monitored_project() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.monitored_project)
  return _internal_monitored_project();
}
inline void CreateMonitoredProjectRequest::unsafe_arena_set_allocated_monitored_project(
    ::google::monitoring::metricsscope::v1::MonitoredProject* monitored_project) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(monitored_project_);
  }
  monitored_project_ = monitored_project;
  if (monitored_project) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.monitored_project)
}
inline ::google::monitoring::metricsscope::v1::MonitoredProject* CreateMonitoredProjectRequest::release_monitored_project() {
  
  ::google::monitoring::metricsscope::v1::MonitoredProject* temp = monitored_project_;
  monitored_project_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::monitoring::metricsscope::v1::MonitoredProject* CreateMonitoredProjectRequest::unsafe_arena_release_monitored_project() {
  // @@protoc_insertion_point(field_release:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.monitored_project)
  
  ::google::monitoring::metricsscope::v1::MonitoredProject* temp = monitored_project_;
  monitored_project_ = nullptr;
  return temp;
}
inline ::google::monitoring::metricsscope::v1::MonitoredProject* CreateMonitoredProjectRequest::_internal_mutable_monitored_project() {
  
  if (monitored_project_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::monitoring::metricsscope::v1::MonitoredProject>(GetArena());
    monitored_project_ = p;
  }
  return monitored_project_;
}
inline ::google::monitoring::metricsscope::v1::MonitoredProject* CreateMonitoredProjectRequest::mutable_monitored_project() {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.monitored_project)
  return _internal_mutable_monitored_project();
}
inline void CreateMonitoredProjectRequest::set_allocated_monitored_project(::google::monitoring::metricsscope::v1::MonitoredProject* monitored_project) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(monitored_project_);
  }
  if (monitored_project) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(monitored_project)->GetArena();
    if (message_arena != submessage_arena) {
      monitored_project = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, monitored_project, submessage_arena);
    }
    
  } else {
    
  }
  monitored_project_ = monitored_project;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.metricsscope.v1.CreateMonitoredProjectRequest.monitored_project)
}

// -------------------------------------------------------------------

// DeleteMonitoredProjectRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void DeleteMonitoredProjectRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& DeleteMonitoredProjectRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
  return _internal_name();
}
inline void DeleteMonitoredProjectRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
}
inline std::string* DeleteMonitoredProjectRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
  return _internal_mutable_name();
}
inline const std::string& DeleteMonitoredProjectRequest::_internal_name() const {
  return name_.Get();
}
inline void DeleteMonitoredProjectRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DeleteMonitoredProjectRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
}
inline void DeleteMonitoredProjectRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
}
inline void DeleteMonitoredProjectRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
}
inline std::string* DeleteMonitoredProjectRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DeleteMonitoredProjectRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteMonitoredProjectRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.metricsscope.v1.DeleteMonitoredProjectRequest.name)
}

// -------------------------------------------------------------------

// OperationMetadata

// .google.monitoring.metricsscope.v1.OperationMetadata.State state = 1;
inline void OperationMetadata::clear_state() {
  state_ = 0;
}
inline ::google::monitoring::metricsscope::v1::OperationMetadata_State OperationMetadata::_internal_state() const {
  return static_cast< ::google::monitoring::metricsscope::v1::OperationMetadata_State >(state_);
}
inline ::google::monitoring::metricsscope::v1::OperationMetadata_State OperationMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.OperationMetadata.state)
  return _internal_state();
}
inline void OperationMetadata::_internal_set_state(::google::monitoring::metricsscope::v1::OperationMetadata_State value) {
  
  state_ = value;
}
inline void OperationMetadata::set_state(::google::monitoring::metricsscope::v1::OperationMetadata_State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:google.monitoring.metricsscope.v1.OperationMetadata.state)
}

// .google.protobuf.Timestamp create_time = 5;
inline bool OperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && create_time_ != nullptr;
}
inline bool OperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& OperationMetadata::_internal_create_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = create_time_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& OperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.OperationMetadata.create_time)
  return _internal_create_time();
}
inline void OperationMetadata::unsafe_arena_set_allocated_create_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time_);
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.monitoring.metricsscope.v1.OperationMetadata.create_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::release_create_time() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = create_time_;
  create_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.monitoring.metricsscope.v1.OperationMetadata.create_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = create_time_;
  create_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::_internal_mutable_create_time() {
  
  if (create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    create_time_ = p;
  }
  return create_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::mutable_create_time() {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.OperationMetadata.create_time)
  return _internal_mutable_create_time();
}
inline void OperationMetadata::set_allocated_create_time(PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.metricsscope.v1.OperationMetadata.create_time)
}

// .google.protobuf.Timestamp update_time = 6;
inline bool OperationMetadata::_internal_has_update_time() const {
  return this != internal_default_instance() && update_time_ != nullptr;
}
inline bool OperationMetadata::has_update_time() const {
  return _internal_has_update_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& OperationMetadata::_internal_update_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = update_time_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& OperationMetadata::update_time() const {
  // @@protoc_insertion_point(field_get:google.monitoring.metricsscope.v1.OperationMetadata.update_time)
  return _internal_update_time();
}
inline void OperationMetadata::unsafe_arena_set_allocated_update_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* update_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_time_);
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.monitoring.metricsscope.v1.OperationMetadata.update_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::release_update_time() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = update_time_;
  update_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::unsafe_arena_release_update_time() {
  // @@protoc_insertion_point(field_release:google.monitoring.metricsscope.v1.OperationMetadata.update_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = update_time_;
  update_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::_internal_mutable_update_time() {
  
  if (update_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    update_time_ = p;
  }
  return update_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OperationMetadata::mutable_update_time() {
  // @@protoc_insertion_point(field_mutable:google.monitoring.metricsscope.v1.OperationMetadata.update_time)
  return _internal_mutable_update_time();
}
inline void OperationMetadata::set_allocated_update_time(PROTOBUF_NAMESPACE_ID::Timestamp* update_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.metricsscope.v1.OperationMetadata.update_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace metricsscope
}  // namespace monitoring
}  // namespace google

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::google::monitoring::metricsscope::v1::OperationMetadata_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::monitoring::metricsscope::v1::OperationMetadata_State>() {
  return ::google::monitoring::metricsscope::v1::OperationMetadata_State_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fmonitoring_2fmetricsscope_2fv1_2fmetrics_5fscopes_2eproto
