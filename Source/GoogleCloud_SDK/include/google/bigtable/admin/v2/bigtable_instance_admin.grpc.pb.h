// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto__INCLUDED
#define GRPC_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto__INCLUDED

#include "google/bigtable/admin/v2/bigtable_instance_admin.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

// Service for creating, configuring, and deleting Cloud Bigtable Instances and
// Clusters. Provides access to the Instance and Cluster schemas only, not the
// tables' metadata or data stored in those tables.
class BigtableInstanceAdmin final {
 public:
  static constexpr char const* service_full_name() {
    return "google.bigtable.admin.v2.BigtableInstanceAdmin";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create an instance within a project.
    //
    // Note that exactly one of Cluster.serve_nodes and
    // Cluster.cluster_config.cluster_autoscaling_config can be set. If
    // serve_nodes is set to non-zero, then the cluster is manually scaled. If
    // cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
    // enabled.
    virtual ::grpc::Status CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncCreateInstanceRaw(context, request, cq));
    }
    // Gets information about an instance.
    virtual ::grpc::Status GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::google::bigtable::admin::v2::Instance* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> AsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(AsyncGetInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> PrepareAsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncGetInstanceRaw(context, request, cq));
    }
    // Lists information about instances in a project.
    virtual ::grpc::Status ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::google::bigtable::admin::v2::ListInstancesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>> AsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>>(AsyncListInstancesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>> PrepareAsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>>(PrepareAsyncListInstancesRaw(context, request, cq));
    }
    // Updates an instance within a project. This method updates only the display
    // name and type for an Instance. To update other Instance properties, such as
    // labels, use PartialUpdateInstance.
    virtual ::grpc::Status UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::google::bigtable::admin::v2::Instance* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> AsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(AsyncUpdateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>> PrepareAsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncUpdateInstanceRaw(context, request, cq));
    }
    // Partially updates an instance within a project. This method can modify all
    // fields of an Instance and is the preferred way to update an Instance.
    virtual ::grpc::Status PartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncPartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncPartialUpdateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncPartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncPartialUpdateInstanceRaw(context, request, cq));
    }
    // Delete an instance from a project.
    virtual ::grpc::Status DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteInstanceRaw(context, request, cq));
    }
    // Creates a cluster within an instance.
    //
    // Note that exactly one of Cluster.serve_nodes and
    // Cluster.cluster_config.cluster_autoscaling_config can be set. If
    // serve_nodes is set to non-zero, then the cluster is manually scaled. If
    // cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
    // enabled.
    virtual ::grpc::Status CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncCreateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncCreateClusterRaw(context, request, cq));
    }
    // Gets information about a cluster.
    virtual ::grpc::Status GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::google::bigtable::admin::v2::Cluster* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>> AsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>>(AsyncGetClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>> PrepareAsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>>(PrepareAsyncGetClusterRaw(context, request, cq));
    }
    // Lists information about clusters in an instance.
    virtual ::grpc::Status ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::google::bigtable::admin::v2::ListClustersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>> AsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>>(AsyncListClustersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>> PrepareAsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>>(PrepareAsyncListClustersRaw(context, request, cq));
    }
    // Updates a cluster within an instance.
    //
    // Note that UpdateCluster does not support updating
    // cluster_config.cluster_autoscaling_config. In order to update it, you
    // must use PartialUpdateCluster.
    virtual ::grpc::Status UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncUpdateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncUpdateClusterRaw(context, request, cq));
    }
    // Partially updates a cluster within a project. This method is the preferred
    // way to update a Cluster.
    //
    // To enable and update autoscaling, set
    // cluster_config.cluster_autoscaling_config. When autoscaling is enabled,
    // serve_nodes is treated as an OUTPUT_ONLY field, meaning that updates to it
    // are ignored. Note that an update cannot simultaneously set serve_nodes to
    // non-zero and cluster_config.cluster_autoscaling_config to non-empty, and
    // also specify both in the update_mask.
    //
    // To disable autoscaling, clear cluster_config.cluster_autoscaling_config,
    // and explicitly set a serve_node count via the update_mask.
    virtual ::grpc::Status PartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncPartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncPartialUpdateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncPartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncPartialUpdateClusterRaw(context, request, cq));
    }
    // Deletes a cluster from an instance.
    virtual ::grpc::Status DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteClusterRaw(context, request, cq));
    }
    // Creates an app profile within an instance.
    virtual ::grpc::Status CreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::google::bigtable::admin::v2::AppProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>> AsyncCreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>>(AsyncCreateAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>> PrepareAsyncCreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>>(PrepareAsyncCreateAppProfileRaw(context, request, cq));
    }
    // Gets information about an app profile.
    virtual ::grpc::Status GetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::google::bigtable::admin::v2::AppProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>> AsyncGetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>>(AsyncGetAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>> PrepareAsyncGetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>>(PrepareAsyncGetAppProfileRaw(context, request, cq));
    }
    // Lists information about app profiles in an instance.
    virtual ::grpc::Status ListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListAppProfilesResponse>> AsyncListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListAppProfilesResponse>>(AsyncListAppProfilesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListAppProfilesResponse>> PrepareAsyncListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListAppProfilesResponse>>(PrepareAsyncListAppProfilesRaw(context, request, cq));
    }
    // Updates an app profile within an instance.
    virtual ::grpc::Status UpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncUpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncUpdateAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncUpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncUpdateAppProfileRaw(context, request, cq));
    }
    // Deletes an app profile from an instance.
    virtual ::grpc::Status DeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteAppProfileRaw(context, request, cq));
    }
    // Gets the access control policy for an instance resource. Returns an empty
    // policy if an instance exists but does not have a policy set.
    virtual ::grpc::Status GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncGetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncGetIamPolicyRaw(context, request, cq));
    }
    // Sets the access control policy on an instance resource. Replaces any
    // existing policy.
    virtual ::grpc::Status SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncSetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncSetIamPolicyRaw(context, request, cq));
    }
    // Returns permissions that the caller has on the specified instance resource.
    virtual ::grpc::Status TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestIamPermissionsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Create an instance within a project.
      //
      // Note that exactly one of Cluster.serve_nodes and
      // Cluster.cluster_config.cluster_autoscaling_config can be set. If
      // serve_nodes is set to non-zero, then the cluster is manually scaled. If
      // cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
      // enabled.
      virtual void CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets information about an instance.
      virtual void GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists information about instances in a project.
      virtual void ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates an instance within a project. This method updates only the display
      // name and type for an Instance. To update other Instance properties, such as
      // labels, use PartialUpdateInstance.
      virtual void UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Partially updates an instance within a project. This method can modify all
      // fields of an Instance and is the preferred way to update an Instance.
      virtual void PartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete an instance from a project.
      virtual void DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a cluster within an instance.
      //
      // Note that exactly one of Cluster.serve_nodes and
      // Cluster.cluster_config.cluster_autoscaling_config can be set. If
      // serve_nodes is set to non-zero, then the cluster is manually scaled. If
      // cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
      // enabled.
      virtual void CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets information about a cluster.
      virtual void GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists information about clusters in an instance.
      virtual void ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a cluster within an instance.
      //
      // Note that UpdateCluster does not support updating
      // cluster_config.cluster_autoscaling_config. In order to update it, you
      // must use PartialUpdateCluster.
      virtual void UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Partially updates a cluster within a project. This method is the preferred
      // way to update a Cluster.
      //
      // To enable and update autoscaling, set
      // cluster_config.cluster_autoscaling_config. When autoscaling is enabled,
      // serve_nodes is treated as an OUTPUT_ONLY field, meaning that updates to it
      // are ignored. Note that an update cannot simultaneously set serve_nodes to
      // non-zero and cluster_config.cluster_autoscaling_config to non-empty, and
      // also specify both in the update_mask.
      //
      // To disable autoscaling, clear cluster_config.cluster_autoscaling_config,
      // and explicitly set a serve_node count via the update_mask.
      virtual void PartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a cluster from an instance.
      virtual void DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates an app profile within an instance.
      virtual void CreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets information about an app profile.
      virtual void GetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists information about app profiles in an instance.
      virtual void ListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates an app profile within an instance.
      virtual void UpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes an app profile from an instance.
      virtual void DeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets the access control policy for an instance resource. Returns an empty
      // policy if an instance exists but does not have a policy set.
      virtual void GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Sets the access control policy on an instance resource. Replaces any
      // existing policy.
      virtual void SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns permissions that the caller has on the specified instance resource.
      virtual void TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* AsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* PrepareAsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>* AsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListInstancesResponse>* PrepareAsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* AsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Instance>* PrepareAsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncPartialUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncPartialUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>* AsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::Cluster>* PrepareAsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>* AsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListClustersResponse>* PrepareAsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncPartialUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncPartialUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>* AsyncCreateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>* PrepareAsyncCreateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>* AsyncGetAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::AppProfile>* PrepareAsyncGetAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListAppProfilesResponse>* AsyncListAppProfilesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::admin::v2::ListAppProfilesResponse>* PrepareAsyncListAppProfilesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncUpdateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncUpdateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncCreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncCreateInstanceRaw(context, request, cq));
    }
    ::grpc::Status GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::google::bigtable::admin::v2::Instance* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> AsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(AsyncGetInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> PrepareAsyncGetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncGetInstanceRaw(context, request, cq));
    }
    ::grpc::Status ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::google::bigtable::admin::v2::ListInstancesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>> AsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>>(AsyncListInstancesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>> PrepareAsyncListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>>(PrepareAsyncListInstancesRaw(context, request, cq));
    }
    ::grpc::Status UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::google::bigtable::admin::v2::Instance* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> AsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(AsyncUpdateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>> PrepareAsyncUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>>(PrepareAsyncUpdateInstanceRaw(context, request, cq));
    }
    ::grpc::Status PartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncPartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncPartialUpdateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncPartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncPartialUpdateInstanceRaw(context, request, cq));
    }
    ::grpc::Status DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteInstanceRaw(context, request, cq));
    }
    ::grpc::Status CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncCreateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncCreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncCreateClusterRaw(context, request, cq));
    }
    ::grpc::Status GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::google::bigtable::admin::v2::Cluster* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>> AsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>>(AsyncGetClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>> PrepareAsyncGetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>>(PrepareAsyncGetClusterRaw(context, request, cq));
    }
    ::grpc::Status ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::google::bigtable::admin::v2::ListClustersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>> AsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>>(AsyncListClustersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>> PrepareAsyncListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>>(PrepareAsyncListClustersRaw(context, request, cq));
    }
    ::grpc::Status UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncUpdateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncUpdateClusterRaw(context, request, cq));
    }
    ::grpc::Status PartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncPartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncPartialUpdateClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncPartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncPartialUpdateClusterRaw(context, request, cq));
    }
    ::grpc::Status DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteClusterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteClusterRaw(context, request, cq));
    }
    ::grpc::Status CreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::google::bigtable::admin::v2::AppProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>> AsyncCreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>>(AsyncCreateAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>> PrepareAsyncCreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>>(PrepareAsyncCreateAppProfileRaw(context, request, cq));
    }
    ::grpc::Status GetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::google::bigtable::admin::v2::AppProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>> AsyncGetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>>(AsyncGetAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>> PrepareAsyncGetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>>(PrepareAsyncGetAppProfileRaw(context, request, cq));
    }
    ::grpc::Status ListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>> AsyncListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>>(AsyncListAppProfilesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>> PrepareAsyncListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>>(PrepareAsyncListAppProfilesRaw(context, request, cq));
    }
    ::grpc::Status UpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncUpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncUpdateAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncUpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncUpdateAppProfileRaw(context, request, cq));
    }
    ::grpc::Status DeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteAppProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteAppProfileRaw(context, request, cq));
    }
    ::grpc::Status GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncGetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncGetIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncSetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncSetIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestIamPermissionsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      void CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response, std::function<void(::grpc::Status)>) override;
      void GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response, std::function<void(::grpc::Status)>) override;
      void UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      void PartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      void CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response, std::function<void(::grpc::Status)>) override;
      void GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response, std::function<void(::grpc::Status)>) override;
      void ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      void UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      void PartialUpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, std::function<void(::grpc::Status)>) override;
      void CreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, std::function<void(::grpc::Status)>) override;
      void GetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      void UpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) override;
      void GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, std::function<void(::grpc::Status)>) override;
      void SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response, ::grpc::ClientUnaryReactor* reactor) override;
      void TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, std::function<void(::grpc::Status)>) override;
      void TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* AsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* PrepareAsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>* AsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>* PrepareAsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* AsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* PrepareAsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncPartialUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncPartialUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>* AsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>* PrepareAsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>* AsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>* PrepareAsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncPartialUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncPartialUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* AsyncCreateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* PrepareAsyncCreateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* AsyncGetAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* PrepareAsyncGetAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>* AsyncListAppProfilesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>* PrepareAsyncListAppProfilesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncUpdateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncUpdateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInstances_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_PartialUpdateInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_ListClusters_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_PartialUpdateCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteCluster_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateAppProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAppProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAppProfiles_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAppProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAppProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_SetIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_TestIamPermissions_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create an instance within a project.
    //
    // Note that exactly one of Cluster.serve_nodes and
    // Cluster.cluster_config.cluster_autoscaling_config can be set. If
    // serve_nodes is set to non-zero, then the cluster is manually scaled. If
    // cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
    // enabled.
    virtual ::grpc::Status CreateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response);
    // Gets information about an instance.
    virtual ::grpc::Status GetInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response);
    // Lists information about instances in a project.
    virtual ::grpc::Status ListInstances(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response);
    // Updates an instance within a project. This method updates only the display
    // name and type for an Instance. To update other Instance properties, such as
    // labels, use PartialUpdateInstance.
    virtual ::grpc::Status UpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response);
    // Partially updates an instance within a project. This method can modify all
    // fields of an Instance and is the preferred way to update an Instance.
    virtual ::grpc::Status PartialUpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::google::longrunning::Operation* response);
    // Delete an instance from a project.
    virtual ::grpc::Status DeleteInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response);
    // Creates a cluster within an instance.
    //
    // Note that exactly one of Cluster.serve_nodes and
    // Cluster.cluster_config.cluster_autoscaling_config can be set. If
    // serve_nodes is set to non-zero, then the cluster is manually scaled. If
    // cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is
    // enabled.
    virtual ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response);
    // Gets information about a cluster.
    virtual ::grpc::Status GetCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response);
    // Lists information about clusters in an instance.
    virtual ::grpc::Status ListClusters(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response);
    // Updates a cluster within an instance.
    //
    // Note that UpdateCluster does not support updating
    // cluster_config.cluster_autoscaling_config. In order to update it, you
    // must use PartialUpdateCluster.
    virtual ::grpc::Status UpdateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response);
    // Partially updates a cluster within a project. This method is the preferred
    // way to update a Cluster.
    //
    // To enable and update autoscaling, set
    // cluster_config.cluster_autoscaling_config. When autoscaling is enabled,
    // serve_nodes is treated as an OUTPUT_ONLY field, meaning that updates to it
    // are ignored. Note that an update cannot simultaneously set serve_nodes to
    // non-zero and cluster_config.cluster_autoscaling_config to non-empty, and
    // also specify both in the update_mask.
    //
    // To disable autoscaling, clear cluster_config.cluster_autoscaling_config,
    // and explicitly set a serve_node count via the update_mask.
    virtual ::grpc::Status PartialUpdateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* request, ::google::longrunning::Operation* response);
    // Deletes a cluster from an instance.
    virtual ::grpc::Status DeleteCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response);
    // Creates an app profile within an instance.
    virtual ::grpc::Status CreateAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response);
    // Gets information about an app profile.
    virtual ::grpc::Status GetAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response);
    // Lists information about app profiles in an instance.
    virtual ::grpc::Status ListAppProfiles(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response);
    // Updates an app profile within an instance.
    virtual ::grpc::Status UpdateAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::google::longrunning::Operation* response);
    // Deletes an app profile from an instance.
    virtual ::grpc::Status DeleteAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::google::protobuf::Empty* response);
    // Gets the access control policy for an instance resource. Returns an empty
    // policy if an instance exists but does not have a policy set.
    virtual ::grpc::Status GetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Sets the access control policy on an instance resource. Replaces any
    // existing policy.
    virtual ::grpc::Status SetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Returns permissions that the caller has on the specified instance resource.
    virtual ::grpc::Status TestIamPermissions(::grpc::ServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateInstance() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetInstance() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetInstanceRequest* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::GetInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::Instance>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListInstances() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListInstancesRequest* /*request*/, ::google::bigtable::admin::v2::ListInstancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInstances(::grpc::ServerContext* context, ::google::bigtable::admin::v2::ListInstancesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::ListInstancesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Instance* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::Instance* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::Instance>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PartialUpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PartialUpdateInstance() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_PartialUpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPartialUpdateInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteInstanceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInstance(::grpc::ServerContext* context, ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateCluster() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::CreateClusterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCluster() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetClusterRequest* /*request*/, ::google::bigtable::admin::v2::Cluster* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::GetClusterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::Cluster>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListClusters() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListClustersRequest* /*request*/, ::google::bigtable::admin::v2::ListClustersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListClusters(::grpc::ServerContext* context, ::google::bigtable::admin::v2::ListClustersRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::ListClustersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Cluster* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::Cluster* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PartialUpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PartialUpdateCluster() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_PartialUpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPartialUpdateCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::PartialUpdateClusterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteClusterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCluster(::grpc::ServerContext* context, ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateAppProfile() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_CreateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAppProfile(::grpc::ServerContext* context, ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::AppProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAppProfile() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAppProfile(::grpc::ServerContext* context, ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::AppProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAppProfiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAppProfiles() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_ListAppProfiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAppProfiles(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListAppProfilesRequest* /*request*/, ::google::bigtable::admin::v2::ListAppProfilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAppProfiles(::grpc::ServerContext* context, ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::bigtable::admin::v2::ListAppProfilesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAppProfile() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_UpdateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAppProfile(::grpc::ServerContext* context, ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteAppProfile() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_DeleteAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAppProfile(::grpc::ServerContext* context, ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIamPolicy(::grpc::ServerContext* context, ::google::iam::v1::GetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetIamPolicy(::grpc::ServerContext* context, ::google::iam::v1::SetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* /*context*/, const ::google::iam::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestIamPermissions(::grpc::ServerContext* context, ::google::iam::v1::TestIamPermissionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::TestIamPermissionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateInstance<WithAsyncMethod_GetInstance<WithAsyncMethod_ListInstances<WithAsyncMethod_UpdateInstance<WithAsyncMethod_PartialUpdateInstance<WithAsyncMethod_DeleteInstance<WithAsyncMethod_CreateCluster<WithAsyncMethod_GetCluster<WithAsyncMethod_ListClusters<WithAsyncMethod_UpdateCluster<WithAsyncMethod_PartialUpdateCluster<WithAsyncMethod_DeleteCluster<WithAsyncMethod_CreateAppProfile<WithAsyncMethod_GetAppProfile<WithAsyncMethod_ListAppProfiles<WithAsyncMethod_UpdateAppProfile<WithAsyncMethod_DeleteAppProfile<WithAsyncMethod_GetIamPolicy<WithAsyncMethod_SetIamPolicy<WithAsyncMethod_TestIamPermissions<Service > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateInstance() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::CreateInstanceRequest, ::google::longrunning::Operation>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response) { return this->CreateInstance(context, request, response); }));}
    void SetMessageAllocatorFor_CreateInstance(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::CreateInstanceRequest, ::google::longrunning::Operation>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::CreateInstanceRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetInstance() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::GetInstanceRequest, ::google::bigtable::admin::v2::Instance>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response) { return this->GetInstance(context, request, response); }));}
    void SetMessageAllocatorFor_GetInstance(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::GetInstanceRequest, ::google::bigtable::admin::v2::Instance>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::GetInstanceRequest, ::google::bigtable::admin::v2::Instance>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetInstanceRequest* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::GetInstanceRequest* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListInstances() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::ListInstancesRequest, ::google::bigtable::admin::v2::ListInstancesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response) { return this->ListInstances(context, request, response); }));}
    void SetMessageAllocatorFor_ListInstances(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::ListInstancesRequest, ::google::bigtable::admin::v2::ListInstancesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::ListInstancesRequest, ::google::bigtable::admin::v2::ListInstancesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListInstancesRequest* /*request*/, ::google::bigtable::admin::v2::ListInstancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListInstances(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::ListInstancesRequest* /*request*/, ::google::bigtable::admin::v2::ListInstancesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::Instance, ::google::bigtable::admin::v2::Instance>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response) { return this->UpdateInstance(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateInstance(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::Instance, ::google::bigtable::admin::v2::Instance>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::Instance, ::google::bigtable::admin::v2::Instance>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Instance* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::Instance* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PartialUpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PartialUpdateInstance() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::PartialUpdateInstanceRequest, ::google::longrunning::Operation>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::google::longrunning::Operation* response) { return this->PartialUpdateInstance(context, request, response); }));}
    void SetMessageAllocatorFor_PartialUpdateInstance(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::PartialUpdateInstanceRequest, ::google::longrunning::Operation>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::PartialUpdateInstanceRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PartialUpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PartialUpdateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::DeleteInstanceRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response) { return this->DeleteInstance(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteInstance(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::DeleteInstanceRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::DeleteInstanceRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteInstanceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteInstanceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateCluster() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::CreateClusterRequest, ::google::longrunning::Operation>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response) { return this->CreateCluster(context, request, response); }));}
    void SetMessageAllocatorFor_CreateCluster(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::CreateClusterRequest, ::google::longrunning::Operation>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::CreateClusterRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCluster() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::GetClusterRequest, ::google::bigtable::admin::v2::Cluster>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response) { return this->GetCluster(context, request, response); }));}
    void SetMessageAllocatorFor_GetCluster(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::GetClusterRequest, ::google::bigtable::admin::v2::Cluster>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::GetClusterRequest, ::google::bigtable::admin::v2::Cluster>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetClusterRequest* /*request*/, ::google::bigtable::admin::v2::Cluster* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::GetClusterRequest* /*request*/, ::google::bigtable::admin::v2::Cluster* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListClusters() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::ListClustersRequest, ::google::bigtable::admin::v2::ListClustersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response) { return this->ListClusters(context, request, response); }));}
    void SetMessageAllocatorFor_ListClusters(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::ListClustersRequest, ::google::bigtable::admin::v2::ListClustersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::ListClustersRequest, ::google::bigtable::admin::v2::ListClustersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListClustersRequest* /*request*/, ::google::bigtable::admin::v2::ListClustersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListClusters(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::ListClustersRequest* /*request*/, ::google::bigtable::admin::v2::ListClustersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::Cluster, ::google::longrunning::Operation>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response) { return this->UpdateCluster(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateCluster(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::Cluster, ::google::longrunning::Operation>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::Cluster, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Cluster* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::Cluster* /*request*/, ::google::longrunning::Operation* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PartialUpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PartialUpdateCluster() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::PartialUpdateClusterRequest, ::google::longrunning::Operation>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* request, ::google::longrunning::Operation* response) { return this->PartialUpdateCluster(context, request, response); }));}
    void SetMessageAllocatorFor_PartialUpdateCluster(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::PartialUpdateClusterRequest, ::google::longrunning::Operation>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::PartialUpdateClusterRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PartialUpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PartialUpdateCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::DeleteClusterRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response) { return this->DeleteCluster(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteCluster(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::DeleteClusterRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::DeleteClusterRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteClusterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteClusterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateAppProfile() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::CreateAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response) { return this->CreateAppProfile(context, request, response); }));}
    void SetMessageAllocatorFor_CreateAppProfile(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::CreateAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::CreateAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAppProfile() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::GetAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response) { return this->GetAppProfile(context, request, response); }));}
    void SetMessageAllocatorFor_GetAppProfile(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::GetAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::GetAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::GetAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListAppProfiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAppProfiles() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::ListAppProfilesRequest, ::google::bigtable::admin::v2::ListAppProfilesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response) { return this->ListAppProfiles(context, request, response); }));}
    void SetMessageAllocatorFor_ListAppProfiles(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::ListAppProfilesRequest, ::google::bigtable::admin::v2::ListAppProfilesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::ListAppProfilesRequest, ::google::bigtable::admin::v2::ListAppProfilesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAppProfiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAppProfiles(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListAppProfilesRequest* /*request*/, ::google::bigtable::admin::v2::ListAppProfilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAppProfiles(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::ListAppProfilesRequest* /*request*/, ::google::bigtable::admin::v2::ListAppProfilesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAppProfile() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::UpdateAppProfileRequest, ::google::longrunning::Operation>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::google::longrunning::Operation* response) { return this->UpdateAppProfile(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAppProfile(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::UpdateAppProfileRequest, ::google::longrunning::Operation>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::UpdateAppProfileRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* /*request*/, ::google::longrunning::Operation* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteAppProfile() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::DeleteAppProfileRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::google::protobuf::Empty* response) { return this->DeleteAppProfile(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteAppProfile(
        ::grpc::MessageAllocator< ::google::bigtable::admin::v2::DeleteAppProfileRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::bigtable::admin::v2::DeleteAppProfileRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) { return this->GetIamPolicy(context, request, response); }));}
    void SetMessageAllocatorFor_GetIamPolicy(
        ::grpc::MessageAllocator< ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::google::iam::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) { return this->SetIamPolicy(context, request, response); }));}
    void SetMessageAllocatorFor_SetIamPolicy(
        ::grpc::MessageAllocator< ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::google::iam::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) { return this->TestIamPermissions(context, request, response); }));}
    void SetMessageAllocatorFor_TestIamPermissions(
        ::grpc::MessageAllocator< ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* /*context*/, const ::google::iam::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestIamPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::google::iam::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateInstance<WithCallbackMethod_GetInstance<WithCallbackMethod_ListInstances<WithCallbackMethod_UpdateInstance<WithCallbackMethod_PartialUpdateInstance<WithCallbackMethod_DeleteInstance<WithCallbackMethod_CreateCluster<WithCallbackMethod_GetCluster<WithCallbackMethod_ListClusters<WithCallbackMethod_UpdateCluster<WithCallbackMethod_PartialUpdateCluster<WithCallbackMethod_DeleteCluster<WithCallbackMethod_CreateAppProfile<WithCallbackMethod_GetAppProfile<WithCallbackMethod_ListAppProfiles<WithCallbackMethod_UpdateAppProfile<WithCallbackMethod_DeleteAppProfile<WithCallbackMethod_GetIamPolicy<WithCallbackMethod_SetIamPolicy<WithCallbackMethod_TestIamPermissions<Service > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateInstance() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetInstance() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetInstanceRequest* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListInstances() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListInstancesRequest* /*request*/, ::google::bigtable::admin::v2::ListInstancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Instance* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PartialUpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PartialUpdateInstance() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_PartialUpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteInstanceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateCluster() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCluster() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetClusterRequest* /*request*/, ::google::bigtable::admin::v2::Cluster* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListClusters() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListClustersRequest* /*request*/, ::google::bigtable::admin::v2::ListClustersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Cluster* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PartialUpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PartialUpdateCluster() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_PartialUpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteClusterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateAppProfile() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_CreateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAppProfile() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAppProfiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAppProfiles() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_ListAppProfiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAppProfiles(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListAppProfilesRequest* /*request*/, ::google::bigtable::admin::v2::ListAppProfilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAppProfile() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_UpdateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteAppProfile() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_DeleteAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* /*context*/, const ::google::iam::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateInstance() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetInstance() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetInstanceRequest* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListInstances() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListInstancesRequest* /*request*/, ::google::bigtable::admin::v2::ListInstancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInstances(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Instance* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PartialUpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PartialUpdateInstance() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_PartialUpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPartialUpdateInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteInstanceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateCluster() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCluster(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCluster() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetClusterRequest* /*request*/, ::google::bigtable::admin::v2::Cluster* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCluster(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListClusters() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListClustersRequest* /*request*/, ::google::bigtable::admin::v2::ListClustersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListClusters(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Cluster* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCluster(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PartialUpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PartialUpdateCluster() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_PartialUpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPartialUpdateCluster(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteClusterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCluster(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateAppProfile() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_CreateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAppProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAppProfile() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAppProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAppProfiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAppProfiles() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_ListAppProfiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAppProfiles(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListAppProfilesRequest* /*request*/, ::google::bigtable::admin::v2::ListAppProfilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAppProfiles(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAppProfile() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_UpdateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAppProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteAppProfile() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_DeleteAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAppProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIamPolicy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetIamPolicy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* /*context*/, const ::google::iam::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestIamPermissions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateInstance() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateInstance(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetInstance() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetInstance(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetInstanceRequest* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListInstances() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListInstances(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListInstancesRequest* /*request*/, ::google::bigtable::admin::v2::ListInstancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListInstances(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateInstance(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Instance* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PartialUpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PartialUpdateInstance() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PartialUpdateInstance(context, request, response); }));
    }
    ~WithRawCallbackMethod_PartialUpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PartialUpdateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteInstance(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteInstanceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateCluster() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateCluster(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCluster() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCluster(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetClusterRequest* /*request*/, ::google::bigtable::admin::v2::Cluster* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListClusters() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListClusters(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListClustersRequest* /*request*/, ::google::bigtable::admin::v2::ListClustersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListClusters(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateCluster(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Cluster* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PartialUpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PartialUpdateCluster() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PartialUpdateCluster(context, request, response); }));
    }
    ~WithRawCallbackMethod_PartialUpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PartialUpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PartialUpdateCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteCluster(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteClusterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCluster(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateAppProfile() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateAppProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAppProfile() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAppProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAppProfiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAppProfiles() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAppProfiles(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAppProfiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAppProfiles(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListAppProfilesRequest* /*request*/, ::google::bigtable::admin::v2::ListAppProfilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAppProfiles(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAppProfile() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAppProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteAppProfile() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteAppProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAppProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetIamPolicy(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetIamPolicy(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetIamPolicy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TestIamPermissions(context, request, response); }));
    }
    ~WithRawCallbackMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* /*context*/, const ::google::iam::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestIamPermissions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateInstance() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::CreateInstanceRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::CreateInstanceRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedCreateInstance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::CreateInstanceRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetInstance() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::GetInstanceRequest, ::google::bigtable::admin::v2::Instance>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::GetInstanceRequest, ::google::bigtable::admin::v2::Instance>* streamer) {
                       return this->StreamedGetInstance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetInstanceRequest* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::GetInstanceRequest,::google::bigtable::admin::v2::Instance>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInstances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListInstances() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::ListInstancesRequest, ::google::bigtable::admin::v2::ListInstancesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::ListInstancesRequest, ::google::bigtable::admin::v2::ListInstancesResponse>* streamer) {
                       return this->StreamedListInstances(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListInstances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInstances(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListInstancesRequest* /*request*/, ::google::bigtable::admin::v2::ListInstancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInstances(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::ListInstancesRequest,::google::bigtable::admin::v2::ListInstancesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateInstance() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::Instance, ::google::bigtable::admin::v2::Instance>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::Instance, ::google::bigtable::admin::v2::Instance>* streamer) {
                       return this->StreamedUpdateInstance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Instance* /*request*/, ::google::bigtable::admin::v2::Instance* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::Instance,::google::bigtable::admin::v2::Instance>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PartialUpdateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PartialUpdateInstance() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::PartialUpdateInstanceRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::PartialUpdateInstanceRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedPartialUpdateInstance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PartialUpdateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PartialUpdateInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPartialUpdateInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::PartialUpdateInstanceRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteInstance() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::DeleteInstanceRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::DeleteInstanceRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteInstance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteInstance(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteInstanceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::DeleteInstanceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateCluster() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::CreateClusterRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::CreateClusterRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedCreateCluster(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::CreateClusterRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCluster() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::GetClusterRequest, ::google::bigtable::admin::v2::Cluster>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::GetClusterRequest, ::google::bigtable::admin::v2::Cluster>* streamer) {
                       return this->StreamedGetCluster(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetClusterRequest* /*request*/, ::google::bigtable::admin::v2::Cluster* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::GetClusterRequest,::google::bigtable::admin::v2::Cluster>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListClusters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListClusters() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::ListClustersRequest, ::google::bigtable::admin::v2::ListClustersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::ListClustersRequest, ::google::bigtable::admin::v2::ListClustersResponse>* streamer) {
                       return this->StreamedListClusters(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListClusters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListClusters(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListClustersRequest* /*request*/, ::google::bigtable::admin::v2::ListClustersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListClusters(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::ListClustersRequest,::google::bigtable::admin::v2::ListClustersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateCluster() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::Cluster, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::Cluster, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedUpdateCluster(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::Cluster* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::Cluster,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PartialUpdateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PartialUpdateCluster() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::PartialUpdateClusterRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::PartialUpdateClusterRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedPartialUpdateCluster(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PartialUpdateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PartialUpdateCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::PartialUpdateClusterRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPartialUpdateCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::PartialUpdateClusterRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteCluster() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::DeleteClusterRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::DeleteClusterRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteCluster(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCluster(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteClusterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::DeleteClusterRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateAppProfile() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::CreateAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::CreateAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>* streamer) {
                       return this->StreamedCreateAppProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::CreateAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateAppProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::CreateAppProfileRequest,::google::bigtable::admin::v2::AppProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAppProfile() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::GetAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::GetAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>* streamer) {
                       return this->StreamedGetAppProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::GetAppProfileRequest* /*request*/, ::google::bigtable::admin::v2::AppProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAppProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::GetAppProfileRequest,::google::bigtable::admin::v2::AppProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAppProfiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAppProfiles() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::ListAppProfilesRequest, ::google::bigtable::admin::v2::ListAppProfilesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::ListAppProfilesRequest, ::google::bigtable::admin::v2::ListAppProfilesResponse>* streamer) {
                       return this->StreamedListAppProfiles(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAppProfiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAppProfiles(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::ListAppProfilesRequest* /*request*/, ::google::bigtable::admin::v2::ListAppProfilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAppProfiles(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::ListAppProfilesRequest,::google::bigtable::admin::v2::ListAppProfilesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAppProfile() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::UpdateAppProfileRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::UpdateAppProfileRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedUpdateAppProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAppProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::UpdateAppProfileRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAppProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteAppProfile() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::bigtable::admin::v2::DeleteAppProfileRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::bigtable::admin::v2::DeleteAppProfileRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteAppProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteAppProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAppProfile(::grpc::ServerContext* /*context*/, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAppProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::bigtable::admin::v2::DeleteAppProfileRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>* streamer) {
                       return this->StreamedGetIamPolicy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::GetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::iam::v1::GetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>* streamer) {
                       return this->StreamedSetIamPolicy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* /*context*/, const ::google::iam::v1::SetIamPolicyRequest* /*request*/, ::google::iam::v1::Policy* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::iam::v1::SetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>* streamer) {
                       return this->StreamedTestIamPermissions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* /*context*/, const ::google::iam::v1::TestIamPermissionsRequest* /*request*/, ::google::iam::v1::TestIamPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTestIamPermissions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::iam::v1::TestIamPermissionsRequest,::google::iam::v1::TestIamPermissionsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateInstance<WithStreamedUnaryMethod_GetInstance<WithStreamedUnaryMethod_ListInstances<WithStreamedUnaryMethod_UpdateInstance<WithStreamedUnaryMethod_PartialUpdateInstance<WithStreamedUnaryMethod_DeleteInstance<WithStreamedUnaryMethod_CreateCluster<WithStreamedUnaryMethod_GetCluster<WithStreamedUnaryMethod_ListClusters<WithStreamedUnaryMethod_UpdateCluster<WithStreamedUnaryMethod_PartialUpdateCluster<WithStreamedUnaryMethod_DeleteCluster<WithStreamedUnaryMethod_CreateAppProfile<WithStreamedUnaryMethod_GetAppProfile<WithStreamedUnaryMethod_ListAppProfiles<WithStreamedUnaryMethod_UpdateAppProfile<WithStreamedUnaryMethod_DeleteAppProfile<WithStreamedUnaryMethod_GetIamPolicy<WithStreamedUnaryMethod_SetIamPolicy<WithStreamedUnaryMethod_TestIamPermissions<Service > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateInstance<WithStreamedUnaryMethod_GetInstance<WithStreamedUnaryMethod_ListInstances<WithStreamedUnaryMethod_UpdateInstance<WithStreamedUnaryMethod_PartialUpdateInstance<WithStreamedUnaryMethod_DeleteInstance<WithStreamedUnaryMethod_CreateCluster<WithStreamedUnaryMethod_GetCluster<WithStreamedUnaryMethod_ListClusters<WithStreamedUnaryMethod_UpdateCluster<WithStreamedUnaryMethod_PartialUpdateCluster<WithStreamedUnaryMethod_DeleteCluster<WithStreamedUnaryMethod_CreateAppProfile<WithStreamedUnaryMethod_GetAppProfile<WithStreamedUnaryMethod_ListAppProfiles<WithStreamedUnaryMethod_UpdateAppProfile<WithStreamedUnaryMethod_DeleteAppProfile<WithStreamedUnaryMethod_GetIamPolicy<WithStreamedUnaryMethod_SetIamPolicy<WithStreamedUnaryMethod_TestIamPermissions<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google


#endif  // GRPC_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto__INCLUDED
