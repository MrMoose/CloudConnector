// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/migration/v2/migration_error_details.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/field_behavior.pb.h"
#include "google/rpc/error_details.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto;
namespace google {
namespace cloud {
namespace bigquery {
namespace migration {
namespace v2 {
class ErrorDetail;
struct ErrorDetailDefaultTypeInternal;
extern ErrorDetailDefaultTypeInternal _ErrorDetail_default_instance_;
class ErrorLocation;
struct ErrorLocationDefaultTypeInternal;
extern ErrorLocationDefaultTypeInternal _ErrorLocation_default_instance_;
class ResourceErrorDetail;
struct ResourceErrorDetailDefaultTypeInternal;
extern ResourceErrorDetailDefaultTypeInternal _ResourceErrorDetail_default_instance_;
}  // namespace v2
}  // namespace migration
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::cloud::bigquery::migration::v2::ErrorDetail* Arena::CreateMaybeMessage<::google::cloud::bigquery::migration::v2::ErrorDetail>(Arena*);
template<> ::google::cloud::bigquery::migration::v2::ErrorLocation* Arena::CreateMaybeMessage<::google::cloud::bigquery::migration::v2::ErrorLocation>(Arena*);
template<> ::google::cloud::bigquery::migration::v2::ResourceErrorDetail* Arena::CreateMaybeMessage<::google::cloud::bigquery::migration::v2::ResourceErrorDetail>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace cloud {
namespace bigquery {
namespace migration {
namespace v2 {

// ===================================================================

class ResourceErrorDetail final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.migration.v2.ResourceErrorDetail) */ {
 public:
  inline ResourceErrorDetail() : ResourceErrorDetail(nullptr) {}
  ~ResourceErrorDetail() override;
  explicit PROTOBUF_CONSTEXPR ResourceErrorDetail(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResourceErrorDetail(const ResourceErrorDetail& from);
  ResourceErrorDetail(ResourceErrorDetail&& from) noexcept
    : ResourceErrorDetail() {
    *this = ::std::move(from);
  }

  inline ResourceErrorDetail& operator=(const ResourceErrorDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceErrorDetail& operator=(ResourceErrorDetail&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceErrorDetail& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceErrorDetail* internal_default_instance() {
    return reinterpret_cast<const ResourceErrorDetail*>(
               &_ResourceErrorDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResourceErrorDetail& a, ResourceErrorDetail& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceErrorDetail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceErrorDetail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceErrorDetail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceErrorDetail>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ResourceErrorDetail& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ResourceErrorDetail& from) {
    ResourceErrorDetail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceErrorDetail* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.migration.v2.ResourceErrorDetail";
  }
  protected:
  explicit ResourceErrorDetail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorDetailsFieldNumber = 2,
    kResourceInfoFieldNumber = 1,
    kErrorCountFieldNumber = 3,
  };
  // repeated .google.cloud.bigquery.migration.v2.ErrorDetail error_details = 2 [(.google.api.field_behavior) = REQUIRED];
  int error_details_size() const;
  private:
  int _internal_error_details_size() const;
  public:
  void clear_error_details();
  ::google::cloud::bigquery::migration::v2::ErrorDetail* mutable_error_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::migration::v2::ErrorDetail >*
      mutable_error_details();
  private:
  const ::google::cloud::bigquery::migration::v2::ErrorDetail& _internal_error_details(int index) const;
  ::google::cloud::bigquery::migration::v2::ErrorDetail* _internal_add_error_details();
  public:
  const ::google::cloud::bigquery::migration::v2::ErrorDetail& error_details(int index) const;
  ::google::cloud::bigquery::migration::v2::ErrorDetail* add_error_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::migration::v2::ErrorDetail >&
      error_details() const;

  // .google.rpc.ResourceInfo resource_info = 1 [(.google.api.field_behavior) = REQUIRED];
  bool has_resource_info() const;
  private:
  bool _internal_has_resource_info() const;
  public:
  void clear_resource_info();
  const ::google::rpc::ResourceInfo& resource_info() const;
  PROTOBUF_NODISCARD ::google::rpc::ResourceInfo* release_resource_info();
  ::google::rpc::ResourceInfo* mutable_resource_info();
  void set_allocated_resource_info(::google::rpc::ResourceInfo* resource_info);
  private:
  const ::google::rpc::ResourceInfo& _internal_resource_info() const;
  ::google::rpc::ResourceInfo* _internal_mutable_resource_info();
  public:
  void unsafe_arena_set_allocated_resource_info(
      ::google::rpc::ResourceInfo* resource_info);
  ::google::rpc::ResourceInfo* unsafe_arena_release_resource_info();

  // int32 error_count = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_error_count();
  int32_t error_count() const;
  void set_error_count(int32_t value);
  private:
  int32_t _internal_error_count() const;
  void _internal_set_error_count(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.migration.v2.ResourceErrorDetail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::migration::v2::ErrorDetail > error_details_;
    ::google::rpc::ResourceInfo* resource_info_;
    int32_t error_count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto;
};
// -------------------------------------------------------------------

class ErrorDetail final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.migration.v2.ErrorDetail) */ {
 public:
  inline ErrorDetail() : ErrorDetail(nullptr) {}
  ~ErrorDetail() override;
  explicit PROTOBUF_CONSTEXPR ErrorDetail(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ErrorDetail(const ErrorDetail& from);
  ErrorDetail(ErrorDetail&& from) noexcept
    : ErrorDetail() {
    *this = ::std::move(from);
  }

  inline ErrorDetail& operator=(const ErrorDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline ErrorDetail& operator=(ErrorDetail&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ErrorDetail& default_instance() {
    return *internal_default_instance();
  }
  static inline const ErrorDetail* internal_default_instance() {
    return reinterpret_cast<const ErrorDetail*>(
               &_ErrorDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ErrorDetail& a, ErrorDetail& b) {
    a.Swap(&b);
  }
  inline void Swap(ErrorDetail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ErrorDetail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ErrorDetail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ErrorDetail>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ErrorDetail& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ErrorDetail& from) {
    ErrorDetail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorDetail* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.migration.v2.ErrorDetail";
  }
  protected:
  explicit ErrorDetail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 1,
    kErrorInfoFieldNumber = 2,
  };
  // .google.cloud.bigquery.migration.v2.ErrorLocation location = 1 [(.google.api.field_behavior) = OPTIONAL];
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::google::cloud::bigquery::migration::v2::ErrorLocation& location() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::migration::v2::ErrorLocation* release_location();
  ::google::cloud::bigquery::migration::v2::ErrorLocation* mutable_location();
  void set_allocated_location(::google::cloud::bigquery::migration::v2::ErrorLocation* location);
  private:
  const ::google::cloud::bigquery::migration::v2::ErrorLocation& _internal_location() const;
  ::google::cloud::bigquery::migration::v2::ErrorLocation* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::google::cloud::bigquery::migration::v2::ErrorLocation* location);
  ::google::cloud::bigquery::migration::v2::ErrorLocation* unsafe_arena_release_location();

  // .google.rpc.ErrorInfo error_info = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_error_info() const;
  private:
  bool _internal_has_error_info() const;
  public:
  void clear_error_info();
  const ::google::rpc::ErrorInfo& error_info() const;
  PROTOBUF_NODISCARD ::google::rpc::ErrorInfo* release_error_info();
  ::google::rpc::ErrorInfo* mutable_error_info();
  void set_allocated_error_info(::google::rpc::ErrorInfo* error_info);
  private:
  const ::google::rpc::ErrorInfo& _internal_error_info() const;
  ::google::rpc::ErrorInfo* _internal_mutable_error_info();
  public:
  void unsafe_arena_set_allocated_error_info(
      ::google::rpc::ErrorInfo* error_info);
  ::google::rpc::ErrorInfo* unsafe_arena_release_error_info();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.migration.v2.ErrorDetail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::cloud::bigquery::migration::v2::ErrorLocation* location_;
    ::google::rpc::ErrorInfo* error_info_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto;
};
// -------------------------------------------------------------------

class ErrorLocation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.migration.v2.ErrorLocation) */ {
 public:
  inline ErrorLocation() : ErrorLocation(nullptr) {}
  ~ErrorLocation() override;
  explicit PROTOBUF_CONSTEXPR ErrorLocation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ErrorLocation(const ErrorLocation& from);
  ErrorLocation(ErrorLocation&& from) noexcept
    : ErrorLocation() {
    *this = ::std::move(from);
  }

  inline ErrorLocation& operator=(const ErrorLocation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ErrorLocation& operator=(ErrorLocation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ErrorLocation& default_instance() {
    return *internal_default_instance();
  }
  static inline const ErrorLocation* internal_default_instance() {
    return reinterpret_cast<const ErrorLocation*>(
               &_ErrorLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ErrorLocation& a, ErrorLocation& b) {
    a.Swap(&b);
  }
  inline void Swap(ErrorLocation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ErrorLocation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ErrorLocation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ErrorLocation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ErrorLocation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ErrorLocation& from) {
    ErrorLocation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorLocation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.migration.v2.ErrorLocation";
  }
  protected:
  explicit ErrorLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineFieldNumber = 1,
    kColumnFieldNumber = 2,
  };
  // int32 line = 1 [(.google.api.field_behavior) = OPTIONAL];
  void clear_line();
  int32_t line() const;
  void set_line(int32_t value);
  private:
  int32_t _internal_line() const;
  void _internal_set_line(int32_t value);
  public:

  // int32 column = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_column();
  int32_t column() const;
  void set_column(int32_t value);
  private:
  int32_t _internal_column() const;
  void _internal_set_column(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.migration.v2.ErrorLocation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t line_;
    int32_t column_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResourceErrorDetail

// .google.rpc.ResourceInfo resource_info = 1 [(.google.api.field_behavior) = REQUIRED];
inline bool ResourceErrorDetail::_internal_has_resource_info() const {
  return this != internal_default_instance() && _impl_.resource_info_ != nullptr;
}
inline bool ResourceErrorDetail::has_resource_info() const {
  return _internal_has_resource_info();
}
inline const ::google::rpc::ResourceInfo& ResourceErrorDetail::_internal_resource_info() const {
  const ::google::rpc::ResourceInfo* p = _impl_.resource_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::rpc::ResourceInfo&>(
      ::google::rpc::_ResourceInfo_default_instance_);
}
inline const ::google::rpc::ResourceInfo& ResourceErrorDetail::resource_info() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.migration.v2.ResourceErrorDetail.resource_info)
  return _internal_resource_info();
}
inline void ResourceErrorDetail::unsafe_arena_set_allocated_resource_info(
    ::google::rpc::ResourceInfo* resource_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.resource_info_);
  }
  _impl_.resource_info_ = resource_info;
  if (resource_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.migration.v2.ResourceErrorDetail.resource_info)
}
inline ::google::rpc::ResourceInfo* ResourceErrorDetail::release_resource_info() {
  
  ::google::rpc::ResourceInfo* temp = _impl_.resource_info_;
  _impl_.resource_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::rpc::ResourceInfo* ResourceErrorDetail::unsafe_arena_release_resource_info() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.migration.v2.ResourceErrorDetail.resource_info)
  
  ::google::rpc::ResourceInfo* temp = _impl_.resource_info_;
  _impl_.resource_info_ = nullptr;
  return temp;
}
inline ::google::rpc::ResourceInfo* ResourceErrorDetail::_internal_mutable_resource_info() {
  
  if (_impl_.resource_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::rpc::ResourceInfo>(GetArenaForAllocation());
    _impl_.resource_info_ = p;
  }
  return _impl_.resource_info_;
}
inline ::google::rpc::ResourceInfo* ResourceErrorDetail::mutable_resource_info() {
  ::google::rpc::ResourceInfo* _msg = _internal_mutable_resource_info();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.migration.v2.ResourceErrorDetail.resource_info)
  return _msg;
}
inline void ResourceErrorDetail::set_allocated_resource_info(::google::rpc::ResourceInfo* resource_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.resource_info_);
  }
  if (resource_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(resource_info));
    if (message_arena != submessage_arena) {
      resource_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resource_info, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.resource_info_ = resource_info;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.migration.v2.ResourceErrorDetail.resource_info)
}

// repeated .google.cloud.bigquery.migration.v2.ErrorDetail error_details = 2 [(.google.api.field_behavior) = REQUIRED];
inline int ResourceErrorDetail::_internal_error_details_size() const {
  return _impl_.error_details_.size();
}
inline int ResourceErrorDetail::error_details_size() const {
  return _internal_error_details_size();
}
inline void ResourceErrorDetail::clear_error_details() {
  _impl_.error_details_.Clear();
}
inline ::google::cloud::bigquery::migration::v2::ErrorDetail* ResourceErrorDetail::mutable_error_details(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.migration.v2.ResourceErrorDetail.error_details)
  return _impl_.error_details_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::migration::v2::ErrorDetail >*
ResourceErrorDetail::mutable_error_details() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.migration.v2.ResourceErrorDetail.error_details)
  return &_impl_.error_details_;
}
inline const ::google::cloud::bigquery::migration::v2::ErrorDetail& ResourceErrorDetail::_internal_error_details(int index) const {
  return _impl_.error_details_.Get(index);
}
inline const ::google::cloud::bigquery::migration::v2::ErrorDetail& ResourceErrorDetail::error_details(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.migration.v2.ResourceErrorDetail.error_details)
  return _internal_error_details(index);
}
inline ::google::cloud::bigquery::migration::v2::ErrorDetail* ResourceErrorDetail::_internal_add_error_details() {
  return _impl_.error_details_.Add();
}
inline ::google::cloud::bigquery::migration::v2::ErrorDetail* ResourceErrorDetail::add_error_details() {
  ::google::cloud::bigquery::migration::v2::ErrorDetail* _add = _internal_add_error_details();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.migration.v2.ResourceErrorDetail.error_details)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::migration::v2::ErrorDetail >&
ResourceErrorDetail::error_details() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.migration.v2.ResourceErrorDetail.error_details)
  return _impl_.error_details_;
}

// int32 error_count = 3 [(.google.api.field_behavior) = REQUIRED];
inline void ResourceErrorDetail::clear_error_count() {
  _impl_.error_count_ = 0;
}
inline int32_t ResourceErrorDetail::_internal_error_count() const {
  return _impl_.error_count_;
}
inline int32_t ResourceErrorDetail::error_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.migration.v2.ResourceErrorDetail.error_count)
  return _internal_error_count();
}
inline void ResourceErrorDetail::_internal_set_error_count(int32_t value) {
  
  _impl_.error_count_ = value;
}
inline void ResourceErrorDetail::set_error_count(int32_t value) {
  _internal_set_error_count(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.migration.v2.ResourceErrorDetail.error_count)
}

// -------------------------------------------------------------------

// ErrorDetail

// .google.cloud.bigquery.migration.v2.ErrorLocation location = 1 [(.google.api.field_behavior) = OPTIONAL];
inline bool ErrorDetail::_internal_has_location() const {
  return this != internal_default_instance() && _impl_.location_ != nullptr;
}
inline bool ErrorDetail::has_location() const {
  return _internal_has_location();
}
inline void ErrorDetail::clear_location() {
  if (GetArenaForAllocation() == nullptr && _impl_.location_ != nullptr) {
    delete _impl_.location_;
  }
  _impl_.location_ = nullptr;
}
inline const ::google::cloud::bigquery::migration::v2::ErrorLocation& ErrorDetail::_internal_location() const {
  const ::google::cloud::bigquery::migration::v2::ErrorLocation* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::migration::v2::ErrorLocation&>(
      ::google::cloud::bigquery::migration::v2::_ErrorLocation_default_instance_);
}
inline const ::google::cloud::bigquery::migration::v2::ErrorLocation& ErrorDetail::location() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.migration.v2.ErrorDetail.location)
  return _internal_location();
}
inline void ErrorDetail::unsafe_arena_set_allocated_location(
    ::google::cloud::bigquery::migration::v2::ErrorLocation* location) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.migration.v2.ErrorDetail.location)
}
inline ::google::cloud::bigquery::migration::v2::ErrorLocation* ErrorDetail::release_location() {
  
  ::google::cloud::bigquery::migration::v2::ErrorLocation* temp = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::migration::v2::ErrorLocation* ErrorDetail::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.migration.v2.ErrorDetail.location)
  
  ::google::cloud::bigquery::migration::v2::ErrorLocation* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::migration::v2::ErrorLocation* ErrorDetail::_internal_mutable_location() {
  
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::migration::v2::ErrorLocation>(GetArenaForAllocation());
    _impl_.location_ = p;
  }
  return _impl_.location_;
}
inline ::google::cloud::bigquery::migration::v2::ErrorLocation* ErrorDetail::mutable_location() {
  ::google::cloud::bigquery::migration::v2::ErrorLocation* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.migration.v2.ErrorDetail.location)
  return _msg;
}
inline void ErrorDetail::set_allocated_location(::google::cloud::bigquery::migration::v2::ErrorLocation* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.location_ = location;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.migration.v2.ErrorDetail.location)
}

// .google.rpc.ErrorInfo error_info = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool ErrorDetail::_internal_has_error_info() const {
  return this != internal_default_instance() && _impl_.error_info_ != nullptr;
}
inline bool ErrorDetail::has_error_info() const {
  return _internal_has_error_info();
}
inline const ::google::rpc::ErrorInfo& ErrorDetail::_internal_error_info() const {
  const ::google::rpc::ErrorInfo* p = _impl_.error_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::rpc::ErrorInfo&>(
      ::google::rpc::_ErrorInfo_default_instance_);
}
inline const ::google::rpc::ErrorInfo& ErrorDetail::error_info() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.migration.v2.ErrorDetail.error_info)
  return _internal_error_info();
}
inline void ErrorDetail::unsafe_arena_set_allocated_error_info(
    ::google::rpc::ErrorInfo* error_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.error_info_);
  }
  _impl_.error_info_ = error_info;
  if (error_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.migration.v2.ErrorDetail.error_info)
}
inline ::google::rpc::ErrorInfo* ErrorDetail::release_error_info() {
  
  ::google::rpc::ErrorInfo* temp = _impl_.error_info_;
  _impl_.error_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::rpc::ErrorInfo* ErrorDetail::unsafe_arena_release_error_info() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.migration.v2.ErrorDetail.error_info)
  
  ::google::rpc::ErrorInfo* temp = _impl_.error_info_;
  _impl_.error_info_ = nullptr;
  return temp;
}
inline ::google::rpc::ErrorInfo* ErrorDetail::_internal_mutable_error_info() {
  
  if (_impl_.error_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::rpc::ErrorInfo>(GetArenaForAllocation());
    _impl_.error_info_ = p;
  }
  return _impl_.error_info_;
}
inline ::google::rpc::ErrorInfo* ErrorDetail::mutable_error_info() {
  ::google::rpc::ErrorInfo* _msg = _internal_mutable_error_info();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.migration.v2.ErrorDetail.error_info)
  return _msg;
}
inline void ErrorDetail::set_allocated_error_info(::google::rpc::ErrorInfo* error_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.error_info_);
  }
  if (error_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_info));
    if (message_arena != submessage_arena) {
      error_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error_info, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.error_info_ = error_info;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.migration.v2.ErrorDetail.error_info)
}

// -------------------------------------------------------------------

// ErrorLocation

// int32 line = 1 [(.google.api.field_behavior) = OPTIONAL];
inline void ErrorLocation::clear_line() {
  _impl_.line_ = 0;
}
inline int32_t ErrorLocation::_internal_line() const {
  return _impl_.line_;
}
inline int32_t ErrorLocation::line() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.migration.v2.ErrorLocation.line)
  return _internal_line();
}
inline void ErrorLocation::_internal_set_line(int32_t value) {
  
  _impl_.line_ = value;
}
inline void ErrorLocation::set_line(int32_t value) {
  _internal_set_line(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.migration.v2.ErrorLocation.line)
}

// int32 column = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void ErrorLocation::clear_column() {
  _impl_.column_ = 0;
}
inline int32_t ErrorLocation::_internal_column() const {
  return _impl_.column_;
}
inline int32_t ErrorLocation::column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.migration.v2.ErrorLocation.column)
  return _internal_column();
}
inline void ErrorLocation::_internal_set_column(int32_t value) {
  
  _impl_.column_ = value;
}
inline void ErrorLocation::set_column(int32_t value) {
  _internal_set_column(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.migration.v2.ErrorLocation.column)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace migration
}  // namespace bigquery
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5ferror_5fdetails_2eproto
