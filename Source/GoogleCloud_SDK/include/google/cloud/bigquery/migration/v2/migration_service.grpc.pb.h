// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/bigquery/migration/v2/migration_service.proto
// Original file comments:
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5fservice_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5fservice_2eproto__INCLUDED

#include "google/cloud/bigquery/migration/v2/migration_service.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace cloud {
namespace bigquery {
namespace migration {
namespace v2 {

// Service to handle EDW migrations.
class MigrationService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.bigquery.migration.v2.MigrationService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Creates a migration workflow.
    virtual ::grpc::Status CreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> AsyncCreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(AsyncCreateMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> PrepareAsyncCreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(PrepareAsyncCreateMigrationWorkflowRaw(context, request, cq));
    }
    // Gets a previously created migration workflow.
    virtual ::grpc::Status GetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> AsyncGetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(AsyncGetMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> PrepareAsyncGetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(PrepareAsyncGetMigrationWorkflowRaw(context, request, cq));
    }
    // Lists previously created migration workflow.
    virtual ::grpc::Status ListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>> AsyncListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>>(AsyncListMigrationWorkflowsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>> PrepareAsyncListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>>(PrepareAsyncListMigrationWorkflowsRaw(context, request, cq));
    }
    // Deletes a migration workflow by name.
    virtual ::grpc::Status DeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteMigrationWorkflowRaw(context, request, cq));
    }
    // Starts a previously created migration workflow. I.e., the state transitions
    // from DRAFT to RUNNING. This is a no-op if the state is already RUNNING.
    // An error will be signaled if the state is anything other than DRAFT or
    // RUNNING.
    virtual ::grpc::Status StartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartMigrationWorkflowRaw(context, request, cq));
    }
    // Gets a previously created migration subtask.
    virtual ::grpc::Status GetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationSubtask>> AsyncGetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationSubtask>>(AsyncGetMigrationSubtaskRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationSubtask>> PrepareAsyncGetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationSubtask>>(PrepareAsyncGetMigrationSubtaskRaw(context, request, cq));
    }
    // Lists previously created migration subtasks.
    virtual ::grpc::Status ListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>> AsyncListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>>(AsyncListMigrationSubtasksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>> PrepareAsyncListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>>(PrepareAsyncListMigrationSubtasksRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Creates a migration workflow.
      virtual void CreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets a previously created migration workflow.
      virtual void GetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists previously created migration workflow.
      virtual void ListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a migration workflow by name.
      virtual void DeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Starts a previously created migration workflow. I.e., the state transitions
      // from DRAFT to RUNNING. This is a no-op if the state is already RUNNING.
      // An error will be signaled if the state is anything other than DRAFT or
      // RUNNING.
      virtual void StartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets a previously created migration subtask.
      virtual void GetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists previously created migration subtasks.
      virtual void ListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* AsyncCreateMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* PrepareAsyncCreateMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* AsyncGetMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* PrepareAsyncGetMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* AsyncListMigrationWorkflowsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* PrepareAsyncListMigrationWorkflowsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationSubtask>* AsyncGetMigrationSubtaskRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::MigrationSubtask>* PrepareAsyncGetMigrationSubtaskRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* AsyncListMigrationSubtasksRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* PrepareAsyncListMigrationSubtasksRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> AsyncCreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(AsyncCreateMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> PrepareAsyncCreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(PrepareAsyncCreateMigrationWorkflowRaw(context, request, cq));
    }
    ::grpc::Status GetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> AsyncGetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(AsyncGetMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>> PrepareAsyncGetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>>(PrepareAsyncGetMigrationWorkflowRaw(context, request, cq));
    }
    ::grpc::Status ListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>> AsyncListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>>(AsyncListMigrationWorkflowsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>> PrepareAsyncListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>>(PrepareAsyncListMigrationWorkflowsRaw(context, request, cq));
    }
    ::grpc::Status DeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteMigrationWorkflowRaw(context, request, cq));
    }
    ::grpc::Status StartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartMigrationWorkflowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartMigrationWorkflowRaw(context, request, cq));
    }
    ::grpc::Status GetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationSubtask>> AsyncGetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationSubtask>>(AsyncGetMigrationSubtaskRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationSubtask>> PrepareAsyncGetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationSubtask>>(PrepareAsyncGetMigrationSubtaskRaw(context, request, cq));
    }
    ::grpc::Status ListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>> AsyncListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>>(AsyncListMigrationSubtasksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>> PrepareAsyncListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>>(PrepareAsyncListMigrationSubtasksRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, std::function<void(::grpc::Status)>) override;
      void CreateMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, std::function<void(::grpc::Status)>) override;
      void GetMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListMigrationWorkflows(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartMigrationWorkflow(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response, std::function<void(::grpc::Status)>) override;
      void GetMigrationSubtask(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response, std::function<void(::grpc::Status)>) override;
      void ListMigrationSubtasks(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* AsyncCreateMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* PrepareAsyncCreateMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* AsyncGetMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* PrepareAsyncGetMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* AsyncListMigrationWorkflowsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* PrepareAsyncListMigrationWorkflowsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartMigrationWorkflowRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationSubtask>* AsyncGetMigrationSubtaskRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::MigrationSubtask>* PrepareAsyncGetMigrationSubtaskRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* AsyncListMigrationSubtasksRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* PrepareAsyncListMigrationSubtasksRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateMigrationWorkflow_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMigrationWorkflow_;
    const ::grpc::internal::RpcMethod rpcmethod_ListMigrationWorkflows_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteMigrationWorkflow_;
    const ::grpc::internal::RpcMethod rpcmethod_StartMigrationWorkflow_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMigrationSubtask_;
    const ::grpc::internal::RpcMethod rpcmethod_ListMigrationSubtasks_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Creates a migration workflow.
    virtual ::grpc::Status CreateMigrationWorkflow(::grpc::ServerContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response);
    // Gets a previously created migration workflow.
    virtual ::grpc::Status GetMigrationWorkflow(::grpc::ServerContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response);
    // Lists previously created migration workflow.
    virtual ::grpc::Status ListMigrationWorkflows(::grpc::ServerContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response);
    // Deletes a migration workflow by name.
    virtual ::grpc::Status DeleteMigrationWorkflow(::grpc::ServerContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Starts a previously created migration workflow. I.e., the state transitions
    // from DRAFT to RUNNING. This is a no-op if the state is already RUNNING.
    // An error will be signaled if the state is anything other than DRAFT or
    // RUNNING.
    virtual ::grpc::Status StartMigrationWorkflow(::grpc::ServerContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Gets a previously created migration subtask.
    virtual ::grpc::Status GetMigrationSubtask(::grpc::ServerContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response);
    // Lists previously created migration subtasks.
    virtual ::grpc::Status ListMigrationSubtasks(::grpc::ServerContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateMigrationWorkflow() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMigrationWorkflow(::grpc::ServerContext* context, ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMigrationWorkflow() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMigrationWorkflow(::grpc::ServerContext* context, ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListMigrationWorkflows : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListMigrationWorkflows() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListMigrationWorkflows() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationWorkflows(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMigrationWorkflows(::grpc::ServerContext* context, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteMigrationWorkflow() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMigrationWorkflow(::grpc::ServerContext* context, ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartMigrationWorkflow() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_StartMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartMigrationWorkflow(::grpc::ServerContext* context, ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMigrationSubtask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMigrationSubtask() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetMigrationSubtask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationSubtask(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationSubtask* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMigrationSubtask(::grpc::ServerContext* context, ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::bigquery::migration::v2::MigrationSubtask>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListMigrationSubtasks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListMigrationSubtasks() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ListMigrationSubtasks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationSubtasks(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMigrationSubtasks(::grpc::ServerContext* context, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateMigrationWorkflow<WithAsyncMethod_GetMigrationWorkflow<WithAsyncMethod_ListMigrationWorkflows<WithAsyncMethod_DeleteMigrationWorkflow<WithAsyncMethod_StartMigrationWorkflow<WithAsyncMethod_GetMigrationSubtask<WithAsyncMethod_ListMigrationSubtasks<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateMigrationWorkflow() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response) { return this->CreateMigrationWorkflow(context, request, response); }));}
    void SetMessageAllocatorFor_CreateMigrationWorkflow(
        ::grpc::MessageAllocator< ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMigrationWorkflow() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* request, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* response) { return this->GetMigrationWorkflow(context, request, response); }));}
    void SetMessageAllocatorFor_GetMigrationWorkflow(
        ::grpc::MessageAllocator< ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListMigrationWorkflows : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListMigrationWorkflows() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* response) { return this->ListMigrationWorkflows(context, request, response); }));}
    void SetMessageAllocatorFor_ListMigrationWorkflows(
        ::grpc::MessageAllocator< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListMigrationWorkflows() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationWorkflows(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMigrationWorkflows(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteMigrationWorkflow() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->DeleteMigrationWorkflow(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteMigrationWorkflow(
        ::grpc::MessageAllocator< ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartMigrationWorkflow() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->StartMigrationWorkflow(context, request, response); }));}
    void SetMessageAllocatorFor_StartMigrationWorkflow(
        ::grpc::MessageAllocator< ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMigrationSubtask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMigrationSubtask() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest, ::google::cloud::bigquery::migration::v2::MigrationSubtask>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* request, ::google::cloud::bigquery::migration::v2::MigrationSubtask* response) { return this->GetMigrationSubtask(context, request, response); }));}
    void SetMessageAllocatorFor_GetMigrationSubtask(
        ::grpc::MessageAllocator< ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest, ::google::cloud::bigquery::migration::v2::MigrationSubtask>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest, ::google::cloud::bigquery::migration::v2::MigrationSubtask>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMigrationSubtask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationSubtask(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationSubtask* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMigrationSubtask(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationSubtask* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListMigrationSubtasks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListMigrationSubtasks() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* request, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* response) { return this->ListMigrationSubtasks(context, request, response); }));}
    void SetMessageAllocatorFor_ListMigrationSubtasks(
        ::grpc::MessageAllocator< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListMigrationSubtasks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationSubtasks(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMigrationSubtasks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateMigrationWorkflow<WithCallbackMethod_GetMigrationWorkflow<WithCallbackMethod_ListMigrationWorkflows<WithCallbackMethod_DeleteMigrationWorkflow<WithCallbackMethod_StartMigrationWorkflow<WithCallbackMethod_GetMigrationSubtask<WithCallbackMethod_ListMigrationSubtasks<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateMigrationWorkflow() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMigrationWorkflow() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListMigrationWorkflows : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListMigrationWorkflows() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListMigrationWorkflows() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationWorkflows(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteMigrationWorkflow() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartMigrationWorkflow() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_StartMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMigrationSubtask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMigrationSubtask() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetMigrationSubtask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationSubtask(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationSubtask* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListMigrationSubtasks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListMigrationSubtasks() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ListMigrationSubtasks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationSubtasks(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateMigrationWorkflow() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMigrationWorkflow() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListMigrationWorkflows : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListMigrationWorkflows() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListMigrationWorkflows() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationWorkflows(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMigrationWorkflows(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteMigrationWorkflow() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartMigrationWorkflow() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_StartMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMigrationSubtask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMigrationSubtask() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetMigrationSubtask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationSubtask(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationSubtask* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMigrationSubtask(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListMigrationSubtasks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListMigrationSubtasks() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ListMigrationSubtasks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationSubtasks(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMigrationSubtasks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateMigrationWorkflow() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateMigrationWorkflow(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMigrationWorkflow() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMigrationWorkflow(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListMigrationWorkflows : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListMigrationWorkflows() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListMigrationWorkflows(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListMigrationWorkflows() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationWorkflows(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMigrationWorkflows(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteMigrationWorkflow() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteMigrationWorkflow(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartMigrationWorkflow() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartMigrationWorkflow(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartMigrationWorkflow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMigrationSubtask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMigrationSubtask() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMigrationSubtask(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMigrationSubtask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrationSubtask(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationSubtask* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMigrationSubtask(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListMigrationSubtasks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListMigrationSubtasks() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListMigrationSubtasks(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListMigrationSubtasks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMigrationSubtasks(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMigrationSubtasks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateMigrationWorkflow() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* streamer) {
                       return this->StreamedCreateMigrationWorkflow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::bigquery::migration::v2::CreateMigrationWorkflowRequest,::google::cloud::bigquery::migration::v2::MigrationWorkflow>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMigrationWorkflow() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest, ::google::cloud::bigquery::migration::v2::MigrationWorkflow>* streamer) {
                       return this->StreamedGetMigrationWorkflow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationWorkflow* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::bigquery::migration::v2::GetMigrationWorkflowRequest,::google::cloud::bigquery::migration::v2::MigrationWorkflow>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListMigrationWorkflows : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListMigrationWorkflows() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* streamer) {
                       return this->StreamedListMigrationWorkflows(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListMigrationWorkflows() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListMigrationWorkflows(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListMigrationWorkflows(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsRequest,::google::cloud::bigquery::migration::v2::ListMigrationWorkflowsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteMigrationWorkflow() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteMigrationWorkflow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::bigquery::migration::v2::DeleteMigrationWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartMigrationWorkflow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartMigrationWorkflow() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartMigrationWorkflow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartMigrationWorkflow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartMigrationWorkflow(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartMigrationWorkflow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::bigquery::migration::v2::StartMigrationWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMigrationSubtask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMigrationSubtask() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest, ::google::cloud::bigquery::migration::v2::MigrationSubtask>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest, ::google::cloud::bigquery::migration::v2::MigrationSubtask>* streamer) {
                       return this->StreamedGetMigrationSubtask(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMigrationSubtask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMigrationSubtask(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest* /*request*/, ::google::cloud::bigquery::migration::v2::MigrationSubtask* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMigrationSubtask(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::bigquery::migration::v2::GetMigrationSubtaskRequest,::google::cloud::bigquery::migration::v2::MigrationSubtask>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListMigrationSubtasks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListMigrationSubtasks() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* streamer) {
                       return this->StreamedListMigrationSubtasks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListMigrationSubtasks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListMigrationSubtasks(::grpc::ServerContext* /*context*/, const ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest* /*request*/, ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListMigrationSubtasks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::bigquery::migration::v2::ListMigrationSubtasksRequest,::google::cloud::bigquery::migration::v2::ListMigrationSubtasksResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateMigrationWorkflow<WithStreamedUnaryMethod_GetMigrationWorkflow<WithStreamedUnaryMethod_ListMigrationWorkflows<WithStreamedUnaryMethod_DeleteMigrationWorkflow<WithStreamedUnaryMethod_StartMigrationWorkflow<WithStreamedUnaryMethod_GetMigrationSubtask<WithStreamedUnaryMethod_ListMigrationSubtasks<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateMigrationWorkflow<WithStreamedUnaryMethod_GetMigrationWorkflow<WithStreamedUnaryMethod_ListMigrationWorkflows<WithStreamedUnaryMethod_DeleteMigrationWorkflow<WithStreamedUnaryMethod_StartMigrationWorkflow<WithStreamedUnaryMethod_GetMigrationSubtask<WithStreamedUnaryMethod_ListMigrationSubtasks<Service > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace migration
}  // namespace bigquery
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fbigquery_2fmigration_2fv2_2fmigration_5fservice_2eproto__INCLUDED
