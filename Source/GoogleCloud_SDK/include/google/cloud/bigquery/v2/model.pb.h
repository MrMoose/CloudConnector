// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/v2/model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/cloud/bigquery/v2/encryption_config.pb.h"
#include "google/cloud/bigquery/v2/model_reference.pb.h"
#include "google/cloud/bigquery/v2/standard_sql.pb.h"
#include "google/cloud/bigquery/v2/table_reference.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
namespace google {
namespace cloud {
namespace bigquery {
namespace v2 {
class DeleteModelRequest;
struct DeleteModelRequestDefaultTypeInternal;
extern DeleteModelRequestDefaultTypeInternal _DeleteModelRequest_default_instance_;
class GetModelRequest;
struct GetModelRequestDefaultTypeInternal;
extern GetModelRequestDefaultTypeInternal _GetModelRequest_default_instance_;
class ListModelsRequest;
struct ListModelsRequestDefaultTypeInternal;
extern ListModelsRequestDefaultTypeInternal _ListModelsRequest_default_instance_;
class ListModelsResponse;
struct ListModelsResponseDefaultTypeInternal;
extern ListModelsResponseDefaultTypeInternal _ListModelsResponse_default_instance_;
class Model;
struct ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
class Model_AggregateClassificationMetrics;
struct Model_AggregateClassificationMetricsDefaultTypeInternal;
extern Model_AggregateClassificationMetricsDefaultTypeInternal _Model_AggregateClassificationMetrics_default_instance_;
class Model_ArimaFittingMetrics;
struct Model_ArimaFittingMetricsDefaultTypeInternal;
extern Model_ArimaFittingMetricsDefaultTypeInternal _Model_ArimaFittingMetrics_default_instance_;
class Model_ArimaForecastingMetrics;
struct Model_ArimaForecastingMetricsDefaultTypeInternal;
extern Model_ArimaForecastingMetricsDefaultTypeInternal _Model_ArimaForecastingMetrics_default_instance_;
class Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics;
struct Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetricsDefaultTypeInternal;
extern Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetricsDefaultTypeInternal _Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics_default_instance_;
class Model_ArimaOrder;
struct Model_ArimaOrderDefaultTypeInternal;
extern Model_ArimaOrderDefaultTypeInternal _Model_ArimaOrder_default_instance_;
class Model_BinaryClassificationMetrics;
struct Model_BinaryClassificationMetricsDefaultTypeInternal;
extern Model_BinaryClassificationMetricsDefaultTypeInternal _Model_BinaryClassificationMetrics_default_instance_;
class Model_BinaryClassificationMetrics_BinaryConfusionMatrix;
struct Model_BinaryClassificationMetrics_BinaryConfusionMatrixDefaultTypeInternal;
extern Model_BinaryClassificationMetrics_BinaryConfusionMatrixDefaultTypeInternal _Model_BinaryClassificationMetrics_BinaryConfusionMatrix_default_instance_;
class Model_ClusteringMetrics;
struct Model_ClusteringMetricsDefaultTypeInternal;
extern Model_ClusteringMetricsDefaultTypeInternal _Model_ClusteringMetrics_default_instance_;
class Model_ClusteringMetrics_Cluster;
struct Model_ClusteringMetrics_ClusterDefaultTypeInternal;
extern Model_ClusteringMetrics_ClusterDefaultTypeInternal _Model_ClusteringMetrics_Cluster_default_instance_;
class Model_ClusteringMetrics_Cluster_FeatureValue;
struct Model_ClusteringMetrics_Cluster_FeatureValueDefaultTypeInternal;
extern Model_ClusteringMetrics_Cluster_FeatureValueDefaultTypeInternal _Model_ClusteringMetrics_Cluster_FeatureValue_default_instance_;
class Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue;
struct Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValueDefaultTypeInternal;
extern Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValueDefaultTypeInternal _Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_default_instance_;
class Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount;
struct Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCountDefaultTypeInternal;
extern Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCountDefaultTypeInternal _Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount_default_instance_;
class Model_DataSplitResult;
struct Model_DataSplitResultDefaultTypeInternal;
extern Model_DataSplitResultDefaultTypeInternal _Model_DataSplitResult_default_instance_;
class Model_EvaluationMetrics;
struct Model_EvaluationMetricsDefaultTypeInternal;
extern Model_EvaluationMetricsDefaultTypeInternal _Model_EvaluationMetrics_default_instance_;
class Model_GlobalExplanation;
struct Model_GlobalExplanationDefaultTypeInternal;
extern Model_GlobalExplanationDefaultTypeInternal _Model_GlobalExplanation_default_instance_;
class Model_GlobalExplanation_Explanation;
struct Model_GlobalExplanation_ExplanationDefaultTypeInternal;
extern Model_GlobalExplanation_ExplanationDefaultTypeInternal _Model_GlobalExplanation_Explanation_default_instance_;
class Model_KmeansEnums;
struct Model_KmeansEnumsDefaultTypeInternal;
extern Model_KmeansEnumsDefaultTypeInternal _Model_KmeansEnums_default_instance_;
class Model_LabelsEntry_DoNotUse;
struct Model_LabelsEntry_DoNotUseDefaultTypeInternal;
extern Model_LabelsEntry_DoNotUseDefaultTypeInternal _Model_LabelsEntry_DoNotUse_default_instance_;
class Model_MultiClassClassificationMetrics;
struct Model_MultiClassClassificationMetricsDefaultTypeInternal;
extern Model_MultiClassClassificationMetricsDefaultTypeInternal _Model_MultiClassClassificationMetrics_default_instance_;
class Model_MultiClassClassificationMetrics_ConfusionMatrix;
struct Model_MultiClassClassificationMetrics_ConfusionMatrixDefaultTypeInternal;
extern Model_MultiClassClassificationMetrics_ConfusionMatrixDefaultTypeInternal _Model_MultiClassClassificationMetrics_ConfusionMatrix_default_instance_;
class Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry;
struct Model_MultiClassClassificationMetrics_ConfusionMatrix_EntryDefaultTypeInternal;
extern Model_MultiClassClassificationMetrics_ConfusionMatrix_EntryDefaultTypeInternal _Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry_default_instance_;
class Model_MultiClassClassificationMetrics_ConfusionMatrix_Row;
struct Model_MultiClassClassificationMetrics_ConfusionMatrix_RowDefaultTypeInternal;
extern Model_MultiClassClassificationMetrics_ConfusionMatrix_RowDefaultTypeInternal _Model_MultiClassClassificationMetrics_ConfusionMatrix_Row_default_instance_;
class Model_RankingMetrics;
struct Model_RankingMetricsDefaultTypeInternal;
extern Model_RankingMetricsDefaultTypeInternal _Model_RankingMetrics_default_instance_;
class Model_RegressionMetrics;
struct Model_RegressionMetricsDefaultTypeInternal;
extern Model_RegressionMetricsDefaultTypeInternal _Model_RegressionMetrics_default_instance_;
class Model_SeasonalPeriod;
struct Model_SeasonalPeriodDefaultTypeInternal;
extern Model_SeasonalPeriodDefaultTypeInternal _Model_SeasonalPeriod_default_instance_;
class Model_TrainingRun;
struct Model_TrainingRunDefaultTypeInternal;
extern Model_TrainingRunDefaultTypeInternal _Model_TrainingRun_default_instance_;
class Model_TrainingRun_IterationResult;
struct Model_TrainingRun_IterationResultDefaultTypeInternal;
extern Model_TrainingRun_IterationResultDefaultTypeInternal _Model_TrainingRun_IterationResult_default_instance_;
class Model_TrainingRun_IterationResult_ArimaResult;
struct Model_TrainingRun_IterationResult_ArimaResultDefaultTypeInternal;
extern Model_TrainingRun_IterationResult_ArimaResultDefaultTypeInternal _Model_TrainingRun_IterationResult_ArimaResult_default_instance_;
class Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients;
struct Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficientsDefaultTypeInternal;
extern Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficientsDefaultTypeInternal _Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients_default_instance_;
class Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo;
struct Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfoDefaultTypeInternal;
extern Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfoDefaultTypeInternal _Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo_default_instance_;
class Model_TrainingRun_IterationResult_ClusterInfo;
struct Model_TrainingRun_IterationResult_ClusterInfoDefaultTypeInternal;
extern Model_TrainingRun_IterationResult_ClusterInfoDefaultTypeInternal _Model_TrainingRun_IterationResult_ClusterInfo_default_instance_;
class Model_TrainingRun_TrainingOptions;
struct Model_TrainingRun_TrainingOptionsDefaultTypeInternal;
extern Model_TrainingRun_TrainingOptionsDefaultTypeInternal _Model_TrainingRun_TrainingOptions_default_instance_;
class Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse;
struct Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUseDefaultTypeInternal;
extern Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUseDefaultTypeInternal _Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse_default_instance_;
class PatchModelRequest;
struct PatchModelRequestDefaultTypeInternal;
extern PatchModelRequestDefaultTypeInternal _PatchModelRequest_default_instance_;
}  // namespace v2
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::cloud::bigquery::v2::DeleteModelRequest* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::DeleteModelRequest>(Arena*);
template<> ::google::cloud::bigquery::v2::GetModelRequest* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::GetModelRequest>(Arena*);
template<> ::google::cloud::bigquery::v2::ListModelsRequest* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::ListModelsRequest>(Arena*);
template<> ::google::cloud::bigquery::v2::ListModelsResponse* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::ListModelsResponse>(Arena*);
template<> ::google::cloud::bigquery::v2::Model* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaFittingMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ArimaOrder* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaOrder>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ClusteringMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ClusteringMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_DataSplitResult* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_DataSplitResult>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_EvaluationMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_EvaluationMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_GlobalExplanation* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_GlobalExplanation>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_KmeansEnums* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_KmeansEnums>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_LabelsEntry_DoNotUse>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_RankingMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_RankingMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_RegressionMetrics* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_RegressionMetrics>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_SeasonalPeriod* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_SeasonalPeriod>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions>(Arena*);
template<> ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse>(Arena*);
template<> ::google::cloud::bigquery::v2::PatchModelRequest* Arena::CreateMaybeMessage<::google::cloud::bigquery::v2::PatchModelRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace cloud {
namespace bigquery {
namespace v2 {

enum Model_SeasonalPeriod_SeasonalPeriodType : int {
  Model_SeasonalPeriod_SeasonalPeriodType_SEASONAL_PERIOD_TYPE_UNSPECIFIED = 0,
  Model_SeasonalPeriod_SeasonalPeriodType_NO_SEASONALITY = 1,
  Model_SeasonalPeriod_SeasonalPeriodType_DAILY = 2,
  Model_SeasonalPeriod_SeasonalPeriodType_WEEKLY = 3,
  Model_SeasonalPeriod_SeasonalPeriodType_MONTHLY = 4,
  Model_SeasonalPeriod_SeasonalPeriodType_QUARTERLY = 5,
  Model_SeasonalPeriod_SeasonalPeriodType_YEARLY = 6,
  Model_SeasonalPeriod_SeasonalPeriodType_Model_SeasonalPeriod_SeasonalPeriodType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_SeasonalPeriod_SeasonalPeriodType_Model_SeasonalPeriod_SeasonalPeriodType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_SeasonalPeriod_SeasonalPeriodType_IsValid(int value);
constexpr Model_SeasonalPeriod_SeasonalPeriodType Model_SeasonalPeriod_SeasonalPeriodType_SeasonalPeriodType_MIN = Model_SeasonalPeriod_SeasonalPeriodType_SEASONAL_PERIOD_TYPE_UNSPECIFIED;
constexpr Model_SeasonalPeriod_SeasonalPeriodType Model_SeasonalPeriod_SeasonalPeriodType_SeasonalPeriodType_MAX = Model_SeasonalPeriod_SeasonalPeriodType_YEARLY;
constexpr int Model_SeasonalPeriod_SeasonalPeriodType_SeasonalPeriodType_ARRAYSIZE = Model_SeasonalPeriod_SeasonalPeriodType_SeasonalPeriodType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_SeasonalPeriod_SeasonalPeriodType_descriptor();
template<typename T>
inline const std::string& Model_SeasonalPeriod_SeasonalPeriodType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_SeasonalPeriod_SeasonalPeriodType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_SeasonalPeriod_SeasonalPeriodType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_SeasonalPeriod_SeasonalPeriodType_descriptor(), enum_t_value);
}
inline bool Model_SeasonalPeriod_SeasonalPeriodType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_SeasonalPeriod_SeasonalPeriodType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_SeasonalPeriod_SeasonalPeriodType>(
    Model_SeasonalPeriod_SeasonalPeriodType_descriptor(), name, value);
}
enum Model_KmeansEnums_KmeansInitializationMethod : int {
  Model_KmeansEnums_KmeansInitializationMethod_KMEANS_INITIALIZATION_METHOD_UNSPECIFIED = 0,
  Model_KmeansEnums_KmeansInitializationMethod_RANDOM = 1,
  Model_KmeansEnums_KmeansInitializationMethod_CUSTOM = 2,
  Model_KmeansEnums_KmeansInitializationMethod_KMEANS_PLUS_PLUS = 3,
  Model_KmeansEnums_KmeansInitializationMethod_Model_KmeansEnums_KmeansInitializationMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_KmeansEnums_KmeansInitializationMethod_Model_KmeansEnums_KmeansInitializationMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_KmeansEnums_KmeansInitializationMethod_IsValid(int value);
constexpr Model_KmeansEnums_KmeansInitializationMethod Model_KmeansEnums_KmeansInitializationMethod_KmeansInitializationMethod_MIN = Model_KmeansEnums_KmeansInitializationMethod_KMEANS_INITIALIZATION_METHOD_UNSPECIFIED;
constexpr Model_KmeansEnums_KmeansInitializationMethod Model_KmeansEnums_KmeansInitializationMethod_KmeansInitializationMethod_MAX = Model_KmeansEnums_KmeansInitializationMethod_KMEANS_PLUS_PLUS;
constexpr int Model_KmeansEnums_KmeansInitializationMethod_KmeansInitializationMethod_ARRAYSIZE = Model_KmeansEnums_KmeansInitializationMethod_KmeansInitializationMethod_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_KmeansEnums_KmeansInitializationMethod_descriptor();
template<typename T>
inline const std::string& Model_KmeansEnums_KmeansInitializationMethod_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_KmeansEnums_KmeansInitializationMethod>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_KmeansEnums_KmeansInitializationMethod_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_KmeansEnums_KmeansInitializationMethod_descriptor(), enum_t_value);
}
inline bool Model_KmeansEnums_KmeansInitializationMethod_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_KmeansEnums_KmeansInitializationMethod* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_KmeansEnums_KmeansInitializationMethod>(
    Model_KmeansEnums_KmeansInitializationMethod_descriptor(), name, value);
}
enum Model_ModelType : int {
  Model_ModelType_MODEL_TYPE_UNSPECIFIED = 0,
  Model_ModelType_LINEAR_REGRESSION = 1,
  Model_ModelType_LOGISTIC_REGRESSION = 2,
  Model_ModelType_KMEANS = 3,
  Model_ModelType_MATRIX_FACTORIZATION = 4,
  Model_ModelType_DNN_CLASSIFIER = 5,
  Model_ModelType_TENSORFLOW = 6,
  Model_ModelType_DNN_REGRESSOR = 7,
  Model_ModelType_BOOSTED_TREE_REGRESSOR = 9,
  Model_ModelType_BOOSTED_TREE_CLASSIFIER = 10,
  Model_ModelType_ARIMA = 11,
  Model_ModelType_AUTOML_REGRESSOR = 12,
  Model_ModelType_AUTOML_CLASSIFIER = 13,
  Model_ModelType_ARIMA_PLUS = 19,
  Model_ModelType_Model_ModelType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_ModelType_Model_ModelType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_ModelType_IsValid(int value);
constexpr Model_ModelType Model_ModelType_ModelType_MIN = Model_ModelType_MODEL_TYPE_UNSPECIFIED;
constexpr Model_ModelType Model_ModelType_ModelType_MAX = Model_ModelType_ARIMA_PLUS;
constexpr int Model_ModelType_ModelType_ARRAYSIZE = Model_ModelType_ModelType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_ModelType_descriptor();
template<typename T>
inline const std::string& Model_ModelType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_ModelType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_ModelType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_ModelType_descriptor(), enum_t_value);
}
inline bool Model_ModelType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_ModelType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_ModelType>(
    Model_ModelType_descriptor(), name, value);
}
enum Model_LossType : int {
  Model_LossType_LOSS_TYPE_UNSPECIFIED = 0,
  Model_LossType_MEAN_SQUARED_LOSS = 1,
  Model_LossType_MEAN_LOG_LOSS = 2,
  Model_LossType_Model_LossType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_LossType_Model_LossType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_LossType_IsValid(int value);
constexpr Model_LossType Model_LossType_LossType_MIN = Model_LossType_LOSS_TYPE_UNSPECIFIED;
constexpr Model_LossType Model_LossType_LossType_MAX = Model_LossType_MEAN_LOG_LOSS;
constexpr int Model_LossType_LossType_ARRAYSIZE = Model_LossType_LossType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_LossType_descriptor();
template<typename T>
inline const std::string& Model_LossType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_LossType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_LossType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_LossType_descriptor(), enum_t_value);
}
inline bool Model_LossType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_LossType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_LossType>(
    Model_LossType_descriptor(), name, value);
}
enum Model_DistanceType : int {
  Model_DistanceType_DISTANCE_TYPE_UNSPECIFIED = 0,
  Model_DistanceType_EUCLIDEAN = 1,
  Model_DistanceType_COSINE = 2,
  Model_DistanceType_Model_DistanceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_DistanceType_Model_DistanceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_DistanceType_IsValid(int value);
constexpr Model_DistanceType Model_DistanceType_DistanceType_MIN = Model_DistanceType_DISTANCE_TYPE_UNSPECIFIED;
constexpr Model_DistanceType Model_DistanceType_DistanceType_MAX = Model_DistanceType_COSINE;
constexpr int Model_DistanceType_DistanceType_ARRAYSIZE = Model_DistanceType_DistanceType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_DistanceType_descriptor();
template<typename T>
inline const std::string& Model_DistanceType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_DistanceType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_DistanceType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_DistanceType_descriptor(), enum_t_value);
}
inline bool Model_DistanceType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_DistanceType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_DistanceType>(
    Model_DistanceType_descriptor(), name, value);
}
enum Model_DataSplitMethod : int {
  Model_DataSplitMethod_DATA_SPLIT_METHOD_UNSPECIFIED = 0,
  Model_DataSplitMethod_RANDOM = 1,
  Model_DataSplitMethod_CUSTOM = 2,
  Model_DataSplitMethod_SEQUENTIAL = 3,
  Model_DataSplitMethod_NO_SPLIT = 4,
  Model_DataSplitMethod_AUTO_SPLIT = 5,
  Model_DataSplitMethod_Model_DataSplitMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_DataSplitMethod_Model_DataSplitMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_DataSplitMethod_IsValid(int value);
constexpr Model_DataSplitMethod Model_DataSplitMethod_DataSplitMethod_MIN = Model_DataSplitMethod_DATA_SPLIT_METHOD_UNSPECIFIED;
constexpr Model_DataSplitMethod Model_DataSplitMethod_DataSplitMethod_MAX = Model_DataSplitMethod_AUTO_SPLIT;
constexpr int Model_DataSplitMethod_DataSplitMethod_ARRAYSIZE = Model_DataSplitMethod_DataSplitMethod_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_DataSplitMethod_descriptor();
template<typename T>
inline const std::string& Model_DataSplitMethod_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_DataSplitMethod>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_DataSplitMethod_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_DataSplitMethod_descriptor(), enum_t_value);
}
inline bool Model_DataSplitMethod_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_DataSplitMethod* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_DataSplitMethod>(
    Model_DataSplitMethod_descriptor(), name, value);
}
enum Model_DataFrequency : int {
  Model_DataFrequency_DATA_FREQUENCY_UNSPECIFIED = 0,
  Model_DataFrequency_AUTO_FREQUENCY = 1,
  Model_DataFrequency_YEARLY = 2,
  Model_DataFrequency_QUARTERLY = 3,
  Model_DataFrequency_MONTHLY = 4,
  Model_DataFrequency_WEEKLY = 5,
  Model_DataFrequency_DAILY = 6,
  Model_DataFrequency_HOURLY = 7,
  Model_DataFrequency_PER_MINUTE = 8,
  Model_DataFrequency_Model_DataFrequency_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_DataFrequency_Model_DataFrequency_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_DataFrequency_IsValid(int value);
constexpr Model_DataFrequency Model_DataFrequency_DataFrequency_MIN = Model_DataFrequency_DATA_FREQUENCY_UNSPECIFIED;
constexpr Model_DataFrequency Model_DataFrequency_DataFrequency_MAX = Model_DataFrequency_PER_MINUTE;
constexpr int Model_DataFrequency_DataFrequency_ARRAYSIZE = Model_DataFrequency_DataFrequency_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_DataFrequency_descriptor();
template<typename T>
inline const std::string& Model_DataFrequency_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_DataFrequency>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_DataFrequency_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_DataFrequency_descriptor(), enum_t_value);
}
inline bool Model_DataFrequency_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_DataFrequency* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_DataFrequency>(
    Model_DataFrequency_descriptor(), name, value);
}
enum Model_HolidayRegion : int {
  Model_HolidayRegion_HOLIDAY_REGION_UNSPECIFIED = 0,
  Model_HolidayRegion_GLOBAL = 1,
  Model_HolidayRegion_NA = 2,
  Model_HolidayRegion_JAPAC = 3,
  Model_HolidayRegion_EMEA = 4,
  Model_HolidayRegion_LAC = 5,
  Model_HolidayRegion_AE = 6,
  Model_HolidayRegion_AR = 7,
  Model_HolidayRegion_AT = 8,
  Model_HolidayRegion_AU = 9,
  Model_HolidayRegion_BE = 10,
  Model_HolidayRegion_BR = 11,
  Model_HolidayRegion_CA = 12,
  Model_HolidayRegion_CH = 13,
  Model_HolidayRegion_CL = 14,
  Model_HolidayRegion_CN = 15,
  Model_HolidayRegion_CO = 16,
  Model_HolidayRegion_CS = 17,
  Model_HolidayRegion_CZ = 18,
  Model_HolidayRegion_DE = 19,
  Model_HolidayRegion_DK = 20,
  Model_HolidayRegion_DZ = 21,
  Model_HolidayRegion_EC = 22,
  Model_HolidayRegion_EE = 23,
  Model_HolidayRegion_EG = 24,
  Model_HolidayRegion_ES = 25,
  Model_HolidayRegion_FI = 26,
  Model_HolidayRegion_FR = 27,
  Model_HolidayRegion_GB = 28,
  Model_HolidayRegion_GR = 29,
  Model_HolidayRegion_HK = 30,
  Model_HolidayRegion_HU = 31,
  Model_HolidayRegion_ID = 32,
  Model_HolidayRegion_IE = 33,
  Model_HolidayRegion_IL = 34,
  Model_HolidayRegion_IN = 35,
  Model_HolidayRegion_IR = 36,
  Model_HolidayRegion_IT = 37,
  Model_HolidayRegion_JP = 38,
  Model_HolidayRegion_KR = 39,
  Model_HolidayRegion_LV = 40,
  Model_HolidayRegion_MA = 41,
  Model_HolidayRegion_MX = 42,
  Model_HolidayRegion_MY = 43,
  Model_HolidayRegion_NG = 44,
  Model_HolidayRegion_NL = 45,
  Model_HolidayRegion_NO = 46,
  Model_HolidayRegion_NZ = 47,
  Model_HolidayRegion_PE = 48,
  Model_HolidayRegion_PH = 49,
  Model_HolidayRegion_PK = 50,
  Model_HolidayRegion_PL = 51,
  Model_HolidayRegion_PT = 52,
  Model_HolidayRegion_RO = 53,
  Model_HolidayRegion_RS = 54,
  Model_HolidayRegion_RU = 55,
  Model_HolidayRegion_SA = 56,
  Model_HolidayRegion_SE = 57,
  Model_HolidayRegion_SG = 58,
  Model_HolidayRegion_SI = 59,
  Model_HolidayRegion_SK = 60,
  Model_HolidayRegion_TH = 61,
  Model_HolidayRegion_TR = 62,
  Model_HolidayRegion_TW = 63,
  Model_HolidayRegion_UA = 64,
  Model_HolidayRegion_US = 65,
  Model_HolidayRegion_VE = 66,
  Model_HolidayRegion_VN = 67,
  Model_HolidayRegion_ZA = 68,
  Model_HolidayRegion_Model_HolidayRegion_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_HolidayRegion_Model_HolidayRegion_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_HolidayRegion_IsValid(int value);
constexpr Model_HolidayRegion Model_HolidayRegion_HolidayRegion_MIN = Model_HolidayRegion_HOLIDAY_REGION_UNSPECIFIED;
constexpr Model_HolidayRegion Model_HolidayRegion_HolidayRegion_MAX = Model_HolidayRegion_ZA;
constexpr int Model_HolidayRegion_HolidayRegion_ARRAYSIZE = Model_HolidayRegion_HolidayRegion_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_HolidayRegion_descriptor();
template<typename T>
inline const std::string& Model_HolidayRegion_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_HolidayRegion>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_HolidayRegion_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_HolidayRegion_descriptor(), enum_t_value);
}
inline bool Model_HolidayRegion_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_HolidayRegion* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_HolidayRegion>(
    Model_HolidayRegion_descriptor(), name, value);
}
enum Model_LearnRateStrategy : int {
  Model_LearnRateStrategy_LEARN_RATE_STRATEGY_UNSPECIFIED = 0,
  Model_LearnRateStrategy_LINE_SEARCH = 1,
  Model_LearnRateStrategy_CONSTANT = 2,
  Model_LearnRateStrategy_Model_LearnRateStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_LearnRateStrategy_Model_LearnRateStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_LearnRateStrategy_IsValid(int value);
constexpr Model_LearnRateStrategy Model_LearnRateStrategy_LearnRateStrategy_MIN = Model_LearnRateStrategy_LEARN_RATE_STRATEGY_UNSPECIFIED;
constexpr Model_LearnRateStrategy Model_LearnRateStrategy_LearnRateStrategy_MAX = Model_LearnRateStrategy_CONSTANT;
constexpr int Model_LearnRateStrategy_LearnRateStrategy_ARRAYSIZE = Model_LearnRateStrategy_LearnRateStrategy_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_LearnRateStrategy_descriptor();
template<typename T>
inline const std::string& Model_LearnRateStrategy_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_LearnRateStrategy>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_LearnRateStrategy_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_LearnRateStrategy_descriptor(), enum_t_value);
}
inline bool Model_LearnRateStrategy_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_LearnRateStrategy* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_LearnRateStrategy>(
    Model_LearnRateStrategy_descriptor(), name, value);
}
enum Model_OptimizationStrategy : int {
  Model_OptimizationStrategy_OPTIMIZATION_STRATEGY_UNSPECIFIED = 0,
  Model_OptimizationStrategy_BATCH_GRADIENT_DESCENT = 1,
  Model_OptimizationStrategy_NORMAL_EQUATION = 2,
  Model_OptimizationStrategy_Model_OptimizationStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_OptimizationStrategy_Model_OptimizationStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_OptimizationStrategy_IsValid(int value);
constexpr Model_OptimizationStrategy Model_OptimizationStrategy_OptimizationStrategy_MIN = Model_OptimizationStrategy_OPTIMIZATION_STRATEGY_UNSPECIFIED;
constexpr Model_OptimizationStrategy Model_OptimizationStrategy_OptimizationStrategy_MAX = Model_OptimizationStrategy_NORMAL_EQUATION;
constexpr int Model_OptimizationStrategy_OptimizationStrategy_ARRAYSIZE = Model_OptimizationStrategy_OptimizationStrategy_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_OptimizationStrategy_descriptor();
template<typename T>
inline const std::string& Model_OptimizationStrategy_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_OptimizationStrategy>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_OptimizationStrategy_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_OptimizationStrategy_descriptor(), enum_t_value);
}
inline bool Model_OptimizationStrategy_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_OptimizationStrategy* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_OptimizationStrategy>(
    Model_OptimizationStrategy_descriptor(), name, value);
}
enum Model_FeedbackType : int {
  Model_FeedbackType_FEEDBACK_TYPE_UNSPECIFIED = 0,
  Model_FeedbackType_IMPLICIT = 1,
  Model_FeedbackType_EXPLICIT = 2,
  Model_FeedbackType_Model_FeedbackType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Model_FeedbackType_Model_FeedbackType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Model_FeedbackType_IsValid(int value);
constexpr Model_FeedbackType Model_FeedbackType_FeedbackType_MIN = Model_FeedbackType_FEEDBACK_TYPE_UNSPECIFIED;
constexpr Model_FeedbackType Model_FeedbackType_FeedbackType_MAX = Model_FeedbackType_EXPLICIT;
constexpr int Model_FeedbackType_FeedbackType_ARRAYSIZE = Model_FeedbackType_FeedbackType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Model_FeedbackType_descriptor();
template<typename T>
inline const std::string& Model_FeedbackType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Model_FeedbackType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Model_FeedbackType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Model_FeedbackType_descriptor(), enum_t_value);
}
inline bool Model_FeedbackType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Model_FeedbackType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Model_FeedbackType>(
    Model_FeedbackType_descriptor(), name, value);
}
// ===================================================================

class Model_SeasonalPeriod final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.SeasonalPeriod) */ {
 public:
  inline Model_SeasonalPeriod() : Model_SeasonalPeriod(nullptr) {}
  explicit PROTOBUF_CONSTEXPR Model_SeasonalPeriod(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_SeasonalPeriod(const Model_SeasonalPeriod& from);
  Model_SeasonalPeriod(Model_SeasonalPeriod&& from) noexcept
    : Model_SeasonalPeriod() {
    *this = ::std::move(from);
  }

  inline Model_SeasonalPeriod& operator=(const Model_SeasonalPeriod& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_SeasonalPeriod& operator=(Model_SeasonalPeriod&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_SeasonalPeriod& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_SeasonalPeriod* internal_default_instance() {
    return reinterpret_cast<const Model_SeasonalPeriod*>(
               &_Model_SeasonalPeriod_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Model_SeasonalPeriod& a, Model_SeasonalPeriod& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_SeasonalPeriod* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_SeasonalPeriod* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_SeasonalPeriod* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_SeasonalPeriod>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Model_SeasonalPeriod& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Model_SeasonalPeriod& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.SeasonalPeriod";
  }
  protected:
  explicit Model_SeasonalPeriod(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_SeasonalPeriod_SeasonalPeriodType SeasonalPeriodType;
  static constexpr SeasonalPeriodType SEASONAL_PERIOD_TYPE_UNSPECIFIED =
    Model_SeasonalPeriod_SeasonalPeriodType_SEASONAL_PERIOD_TYPE_UNSPECIFIED;
  static constexpr SeasonalPeriodType NO_SEASONALITY =
    Model_SeasonalPeriod_SeasonalPeriodType_NO_SEASONALITY;
  static constexpr SeasonalPeriodType DAILY =
    Model_SeasonalPeriod_SeasonalPeriodType_DAILY;
  static constexpr SeasonalPeriodType WEEKLY =
    Model_SeasonalPeriod_SeasonalPeriodType_WEEKLY;
  static constexpr SeasonalPeriodType MONTHLY =
    Model_SeasonalPeriod_SeasonalPeriodType_MONTHLY;
  static constexpr SeasonalPeriodType QUARTERLY =
    Model_SeasonalPeriod_SeasonalPeriodType_QUARTERLY;
  static constexpr SeasonalPeriodType YEARLY =
    Model_SeasonalPeriod_SeasonalPeriodType_YEARLY;
  static inline bool SeasonalPeriodType_IsValid(int value) {
    return Model_SeasonalPeriod_SeasonalPeriodType_IsValid(value);
  }
  static constexpr SeasonalPeriodType SeasonalPeriodType_MIN =
    Model_SeasonalPeriod_SeasonalPeriodType_SeasonalPeriodType_MIN;
  static constexpr SeasonalPeriodType SeasonalPeriodType_MAX =
    Model_SeasonalPeriod_SeasonalPeriodType_SeasonalPeriodType_MAX;
  static constexpr int SeasonalPeriodType_ARRAYSIZE =
    Model_SeasonalPeriod_SeasonalPeriodType_SeasonalPeriodType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  SeasonalPeriodType_descriptor() {
    return Model_SeasonalPeriod_SeasonalPeriodType_descriptor();
  }
  template<typename T>
  static inline const std::string& SeasonalPeriodType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, SeasonalPeriodType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function SeasonalPeriodType_Name.");
    return Model_SeasonalPeriod_SeasonalPeriodType_Name(enum_t_value);
  }
  static inline bool SeasonalPeriodType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      SeasonalPeriodType* value) {
    return Model_SeasonalPeriod_SeasonalPeriodType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.SeasonalPeriod)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_KmeansEnums final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.KmeansEnums) */ {
 public:
  inline Model_KmeansEnums() : Model_KmeansEnums(nullptr) {}
  explicit PROTOBUF_CONSTEXPR Model_KmeansEnums(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_KmeansEnums(const Model_KmeansEnums& from);
  Model_KmeansEnums(Model_KmeansEnums&& from) noexcept
    : Model_KmeansEnums() {
    *this = ::std::move(from);
  }

  inline Model_KmeansEnums& operator=(const Model_KmeansEnums& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_KmeansEnums& operator=(Model_KmeansEnums&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_KmeansEnums& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_KmeansEnums* internal_default_instance() {
    return reinterpret_cast<const Model_KmeansEnums*>(
               &_Model_KmeansEnums_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Model_KmeansEnums& a, Model_KmeansEnums& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_KmeansEnums* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_KmeansEnums* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_KmeansEnums* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_KmeansEnums>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Model_KmeansEnums& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Model_KmeansEnums& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.KmeansEnums";
  }
  protected:
  explicit Model_KmeansEnums(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_KmeansEnums_KmeansInitializationMethod KmeansInitializationMethod;
  static constexpr KmeansInitializationMethod KMEANS_INITIALIZATION_METHOD_UNSPECIFIED =
    Model_KmeansEnums_KmeansInitializationMethod_KMEANS_INITIALIZATION_METHOD_UNSPECIFIED;
  static constexpr KmeansInitializationMethod RANDOM =
    Model_KmeansEnums_KmeansInitializationMethod_RANDOM;
  static constexpr KmeansInitializationMethod CUSTOM =
    Model_KmeansEnums_KmeansInitializationMethod_CUSTOM;
  static constexpr KmeansInitializationMethod KMEANS_PLUS_PLUS =
    Model_KmeansEnums_KmeansInitializationMethod_KMEANS_PLUS_PLUS;
  static inline bool KmeansInitializationMethod_IsValid(int value) {
    return Model_KmeansEnums_KmeansInitializationMethod_IsValid(value);
  }
  static constexpr KmeansInitializationMethod KmeansInitializationMethod_MIN =
    Model_KmeansEnums_KmeansInitializationMethod_KmeansInitializationMethod_MIN;
  static constexpr KmeansInitializationMethod KmeansInitializationMethod_MAX =
    Model_KmeansEnums_KmeansInitializationMethod_KmeansInitializationMethod_MAX;
  static constexpr int KmeansInitializationMethod_ARRAYSIZE =
    Model_KmeansEnums_KmeansInitializationMethod_KmeansInitializationMethod_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  KmeansInitializationMethod_descriptor() {
    return Model_KmeansEnums_KmeansInitializationMethod_descriptor();
  }
  template<typename T>
  static inline const std::string& KmeansInitializationMethod_Name(T enum_t_value) {
    static_assert(::std::is_same<T, KmeansInitializationMethod>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function KmeansInitializationMethod_Name.");
    return Model_KmeansEnums_KmeansInitializationMethod_Name(enum_t_value);
  }
  static inline bool KmeansInitializationMethod_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      KmeansInitializationMethod* value) {
    return Model_KmeansEnums_KmeansInitializationMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.KmeansEnums)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_RegressionMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.RegressionMetrics) */ {
 public:
  inline Model_RegressionMetrics() : Model_RegressionMetrics(nullptr) {}
  ~Model_RegressionMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_RegressionMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_RegressionMetrics(const Model_RegressionMetrics& from);
  Model_RegressionMetrics(Model_RegressionMetrics&& from) noexcept
    : Model_RegressionMetrics() {
    *this = ::std::move(from);
  }

  inline Model_RegressionMetrics& operator=(const Model_RegressionMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_RegressionMetrics& operator=(Model_RegressionMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_RegressionMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_RegressionMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_RegressionMetrics*>(
               &_Model_RegressionMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Model_RegressionMetrics& a, Model_RegressionMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_RegressionMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_RegressionMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_RegressionMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_RegressionMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_RegressionMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_RegressionMetrics& from) {
    Model_RegressionMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_RegressionMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.RegressionMetrics";
  }
  protected:
  explicit Model_RegressionMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeanAbsoluteErrorFieldNumber = 1,
    kMeanSquaredErrorFieldNumber = 2,
    kMeanSquaredLogErrorFieldNumber = 3,
    kMedianAbsoluteErrorFieldNumber = 4,
    kRSquaredFieldNumber = 5,
  };
  // .google.protobuf.DoubleValue mean_absolute_error = 1;
  bool has_mean_absolute_error() const;
  private:
  bool _internal_has_mean_absolute_error() const;
  public:
  void clear_mean_absolute_error();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& mean_absolute_error() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_mean_absolute_error();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_mean_absolute_error();
  void set_allocated_mean_absolute_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_absolute_error);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_mean_absolute_error() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_mean_absolute_error();
  public:
  void unsafe_arena_set_allocated_mean_absolute_error(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_absolute_error);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_mean_absolute_error();

  // .google.protobuf.DoubleValue mean_squared_error = 2;
  bool has_mean_squared_error() const;
  private:
  bool _internal_has_mean_squared_error() const;
  public:
  void clear_mean_squared_error();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& mean_squared_error() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_mean_squared_error();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_mean_squared_error();
  void set_allocated_mean_squared_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_mean_squared_error() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_mean_squared_error();
  public:
  void unsafe_arena_set_allocated_mean_squared_error(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_mean_squared_error();

  // .google.protobuf.DoubleValue mean_squared_log_error = 3;
  bool has_mean_squared_log_error() const;
  private:
  bool _internal_has_mean_squared_log_error() const;
  public:
  void clear_mean_squared_log_error();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& mean_squared_log_error() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_mean_squared_log_error();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_mean_squared_log_error();
  void set_allocated_mean_squared_log_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_log_error);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_mean_squared_log_error() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_mean_squared_log_error();
  public:
  void unsafe_arena_set_allocated_mean_squared_log_error(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_log_error);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_mean_squared_log_error();

  // .google.protobuf.DoubleValue median_absolute_error = 4;
  bool has_median_absolute_error() const;
  private:
  bool _internal_has_median_absolute_error() const;
  public:
  void clear_median_absolute_error();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& median_absolute_error() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_median_absolute_error();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_median_absolute_error();
  void set_allocated_median_absolute_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* median_absolute_error);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_median_absolute_error() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_median_absolute_error();
  public:
  void unsafe_arena_set_allocated_median_absolute_error(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* median_absolute_error);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_median_absolute_error();

  // .google.protobuf.DoubleValue r_squared = 5;
  bool has_r_squared() const;
  private:
  bool _internal_has_r_squared() const;
  public:
  void clear_r_squared();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& r_squared() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_r_squared();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_r_squared();
  void set_allocated_r_squared(::PROTOBUF_NAMESPACE_ID::DoubleValue* r_squared);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_r_squared() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_r_squared();
  public:
  void unsafe_arena_set_allocated_r_squared(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* r_squared);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_r_squared();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.RegressionMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_absolute_error_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_log_error_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* median_absolute_error_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* r_squared_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_AggregateClassificationMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics) */ {
 public:
  inline Model_AggregateClassificationMetrics() : Model_AggregateClassificationMetrics(nullptr) {}
  ~Model_AggregateClassificationMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_AggregateClassificationMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_AggregateClassificationMetrics(const Model_AggregateClassificationMetrics& from);
  Model_AggregateClassificationMetrics(Model_AggregateClassificationMetrics&& from) noexcept
    : Model_AggregateClassificationMetrics() {
    *this = ::std::move(from);
  }

  inline Model_AggregateClassificationMetrics& operator=(const Model_AggregateClassificationMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_AggregateClassificationMetrics& operator=(Model_AggregateClassificationMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_AggregateClassificationMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_AggregateClassificationMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_AggregateClassificationMetrics*>(
               &_Model_AggregateClassificationMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Model_AggregateClassificationMetrics& a, Model_AggregateClassificationMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_AggregateClassificationMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_AggregateClassificationMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_AggregateClassificationMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_AggregateClassificationMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_AggregateClassificationMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_AggregateClassificationMetrics& from) {
    Model_AggregateClassificationMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_AggregateClassificationMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.AggregateClassificationMetrics";
  }
  protected:
  explicit Model_AggregateClassificationMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrecisionFieldNumber = 1,
    kRecallFieldNumber = 2,
    kAccuracyFieldNumber = 3,
    kThresholdFieldNumber = 4,
    kF1ScoreFieldNumber = 5,
    kLogLossFieldNumber = 6,
    kRocAucFieldNumber = 7,
  };
  // .google.protobuf.DoubleValue precision = 1;
  bool has_precision() const;
  private:
  bool _internal_has_precision() const;
  public:
  void clear_precision();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& precision() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_precision();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_precision();
  void set_allocated_precision(::PROTOBUF_NAMESPACE_ID::DoubleValue* precision);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_precision() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_precision();
  public:
  void unsafe_arena_set_allocated_precision(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* precision);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_precision();

  // .google.protobuf.DoubleValue recall = 2;
  bool has_recall() const;
  private:
  bool _internal_has_recall() const;
  public:
  void clear_recall();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& recall() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_recall();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_recall();
  void set_allocated_recall(::PROTOBUF_NAMESPACE_ID::DoubleValue* recall);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_recall() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_recall();
  public:
  void unsafe_arena_set_allocated_recall(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* recall);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_recall();

  // .google.protobuf.DoubleValue accuracy = 3;
  bool has_accuracy() const;
  private:
  bool _internal_has_accuracy() const;
  public:
  void clear_accuracy();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& accuracy() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_accuracy();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_accuracy();
  void set_allocated_accuracy(::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_accuracy() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_accuracy();
  public:
  void unsafe_arena_set_allocated_accuracy(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_accuracy();

  // .google.protobuf.DoubleValue threshold = 4;
  bool has_threshold() const;
  private:
  bool _internal_has_threshold() const;
  public:
  void clear_threshold();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& threshold() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_threshold();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_threshold();
  void set_allocated_threshold(::PROTOBUF_NAMESPACE_ID::DoubleValue* threshold);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_threshold() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_threshold();
  public:
  void unsafe_arena_set_allocated_threshold(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* threshold);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_threshold();

  // .google.protobuf.DoubleValue f1_score = 5;
  bool has_f1_score() const;
  private:
  bool _internal_has_f1_score() const;
  public:
  void clear_f1_score();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& f1_score() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_f1_score();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_f1_score();
  void set_allocated_f1_score(::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_f1_score() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_f1_score();
  public:
  void unsafe_arena_set_allocated_f1_score(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_f1_score();

  // .google.protobuf.DoubleValue log_loss = 6;
  bool has_log_loss() const;
  private:
  bool _internal_has_log_loss() const;
  public:
  void clear_log_loss();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& log_loss() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_log_loss();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_log_loss();
  void set_allocated_log_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* log_loss);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_log_loss() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_log_loss();
  public:
  void unsafe_arena_set_allocated_log_loss(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* log_loss);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_log_loss();

  // .google.protobuf.DoubleValue roc_auc = 7;
  bool has_roc_auc() const;
  private:
  bool _internal_has_roc_auc() const;
  public:
  void clear_roc_auc();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& roc_auc() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_roc_auc();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_roc_auc();
  void set_allocated_roc_auc(::PROTOBUF_NAMESPACE_ID::DoubleValue* roc_auc);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_roc_auc() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_roc_auc();
  public:
  void unsafe_arena_set_allocated_roc_auc(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* roc_auc);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_roc_auc();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* precision_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* recall_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* threshold_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* log_loss_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* roc_auc_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_BinaryClassificationMetrics_BinaryConfusionMatrix final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix) */ {
 public:
  inline Model_BinaryClassificationMetrics_BinaryConfusionMatrix() : Model_BinaryClassificationMetrics_BinaryConfusionMatrix(nullptr) {}
  ~Model_BinaryClassificationMetrics_BinaryConfusionMatrix() override;
  explicit PROTOBUF_CONSTEXPR Model_BinaryClassificationMetrics_BinaryConfusionMatrix(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_BinaryClassificationMetrics_BinaryConfusionMatrix(const Model_BinaryClassificationMetrics_BinaryConfusionMatrix& from);
  Model_BinaryClassificationMetrics_BinaryConfusionMatrix(Model_BinaryClassificationMetrics_BinaryConfusionMatrix&& from) noexcept
    : Model_BinaryClassificationMetrics_BinaryConfusionMatrix() {
    *this = ::std::move(from);
  }

  inline Model_BinaryClassificationMetrics_BinaryConfusionMatrix& operator=(const Model_BinaryClassificationMetrics_BinaryConfusionMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_BinaryClassificationMetrics_BinaryConfusionMatrix& operator=(Model_BinaryClassificationMetrics_BinaryConfusionMatrix&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_BinaryClassificationMetrics_BinaryConfusionMatrix& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_BinaryClassificationMetrics_BinaryConfusionMatrix* internal_default_instance() {
    return reinterpret_cast<const Model_BinaryClassificationMetrics_BinaryConfusionMatrix*>(
               &_Model_BinaryClassificationMetrics_BinaryConfusionMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Model_BinaryClassificationMetrics_BinaryConfusionMatrix& a, Model_BinaryClassificationMetrics_BinaryConfusionMatrix& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_BinaryClassificationMetrics_BinaryConfusionMatrix* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_BinaryClassificationMetrics_BinaryConfusionMatrix* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_BinaryClassificationMetrics_BinaryConfusionMatrix* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_BinaryClassificationMetrics_BinaryConfusionMatrix>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_BinaryClassificationMetrics_BinaryConfusionMatrix& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_BinaryClassificationMetrics_BinaryConfusionMatrix& from) {
    Model_BinaryClassificationMetrics_BinaryConfusionMatrix::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_BinaryClassificationMetrics_BinaryConfusionMatrix* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix";
  }
  protected:
  explicit Model_BinaryClassificationMetrics_BinaryConfusionMatrix(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositiveClassThresholdFieldNumber = 1,
    kTruePositivesFieldNumber = 2,
    kFalsePositivesFieldNumber = 3,
    kTrueNegativesFieldNumber = 4,
    kFalseNegativesFieldNumber = 5,
    kPrecisionFieldNumber = 6,
    kRecallFieldNumber = 7,
    kF1ScoreFieldNumber = 8,
    kAccuracyFieldNumber = 9,
  };
  // .google.protobuf.DoubleValue positive_class_threshold = 1;
  bool has_positive_class_threshold() const;
  private:
  bool _internal_has_positive_class_threshold() const;
  public:
  void clear_positive_class_threshold();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& positive_class_threshold() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_positive_class_threshold();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_positive_class_threshold();
  void set_allocated_positive_class_threshold(::PROTOBUF_NAMESPACE_ID::DoubleValue* positive_class_threshold);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_positive_class_threshold() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_positive_class_threshold();
  public:
  void unsafe_arena_set_allocated_positive_class_threshold(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* positive_class_threshold);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_positive_class_threshold();

  // .google.protobuf.Int64Value true_positives = 2;
  bool has_true_positives() const;
  private:
  bool _internal_has_true_positives() const;
  public:
  void clear_true_positives();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& true_positives() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_true_positives();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_true_positives();
  void set_allocated_true_positives(::PROTOBUF_NAMESPACE_ID::Int64Value* true_positives);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_true_positives() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_true_positives();
  public:
  void unsafe_arena_set_allocated_true_positives(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* true_positives);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_true_positives();

  // .google.protobuf.Int64Value false_positives = 3;
  bool has_false_positives() const;
  private:
  bool _internal_has_false_positives() const;
  public:
  void clear_false_positives();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& false_positives() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_false_positives();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_false_positives();
  void set_allocated_false_positives(::PROTOBUF_NAMESPACE_ID::Int64Value* false_positives);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_false_positives() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_false_positives();
  public:
  void unsafe_arena_set_allocated_false_positives(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* false_positives);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_false_positives();

  // .google.protobuf.Int64Value true_negatives = 4;
  bool has_true_negatives() const;
  private:
  bool _internal_has_true_negatives() const;
  public:
  void clear_true_negatives();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& true_negatives() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_true_negatives();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_true_negatives();
  void set_allocated_true_negatives(::PROTOBUF_NAMESPACE_ID::Int64Value* true_negatives);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_true_negatives() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_true_negatives();
  public:
  void unsafe_arena_set_allocated_true_negatives(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* true_negatives);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_true_negatives();

  // .google.protobuf.Int64Value false_negatives = 5;
  bool has_false_negatives() const;
  private:
  bool _internal_has_false_negatives() const;
  public:
  void clear_false_negatives();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& false_negatives() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_false_negatives();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_false_negatives();
  void set_allocated_false_negatives(::PROTOBUF_NAMESPACE_ID::Int64Value* false_negatives);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_false_negatives() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_false_negatives();
  public:
  void unsafe_arena_set_allocated_false_negatives(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* false_negatives);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_false_negatives();

  // .google.protobuf.DoubleValue precision = 6;
  bool has_precision() const;
  private:
  bool _internal_has_precision() const;
  public:
  void clear_precision();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& precision() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_precision();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_precision();
  void set_allocated_precision(::PROTOBUF_NAMESPACE_ID::DoubleValue* precision);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_precision() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_precision();
  public:
  void unsafe_arena_set_allocated_precision(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* precision);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_precision();

  // .google.protobuf.DoubleValue recall = 7;
  bool has_recall() const;
  private:
  bool _internal_has_recall() const;
  public:
  void clear_recall();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& recall() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_recall();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_recall();
  void set_allocated_recall(::PROTOBUF_NAMESPACE_ID::DoubleValue* recall);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_recall() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_recall();
  public:
  void unsafe_arena_set_allocated_recall(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* recall);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_recall();

  // .google.protobuf.DoubleValue f1_score = 8;
  bool has_f1_score() const;
  private:
  bool _internal_has_f1_score() const;
  public:
  void clear_f1_score();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& f1_score() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_f1_score();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_f1_score();
  void set_allocated_f1_score(::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_f1_score() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_f1_score();
  public:
  void unsafe_arena_set_allocated_f1_score(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_f1_score();

  // .google.protobuf.DoubleValue accuracy = 9;
  bool has_accuracy() const;
  private:
  bool _internal_has_accuracy() const;
  public:
  void clear_accuracy();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& accuracy() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_accuracy();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_accuracy();
  void set_allocated_accuracy(::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_accuracy() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_accuracy();
  public:
  void unsafe_arena_set_allocated_accuracy(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_accuracy();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* positive_class_threshold_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* true_positives_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* false_positives_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* true_negatives_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* false_negatives_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* precision_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* recall_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_BinaryClassificationMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics) */ {
 public:
  inline Model_BinaryClassificationMetrics() : Model_BinaryClassificationMetrics(nullptr) {}
  ~Model_BinaryClassificationMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_BinaryClassificationMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_BinaryClassificationMetrics(const Model_BinaryClassificationMetrics& from);
  Model_BinaryClassificationMetrics(Model_BinaryClassificationMetrics&& from) noexcept
    : Model_BinaryClassificationMetrics() {
    *this = ::std::move(from);
  }

  inline Model_BinaryClassificationMetrics& operator=(const Model_BinaryClassificationMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_BinaryClassificationMetrics& operator=(Model_BinaryClassificationMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_BinaryClassificationMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_BinaryClassificationMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_BinaryClassificationMetrics*>(
               &_Model_BinaryClassificationMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Model_BinaryClassificationMetrics& a, Model_BinaryClassificationMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_BinaryClassificationMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_BinaryClassificationMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_BinaryClassificationMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_BinaryClassificationMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_BinaryClassificationMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_BinaryClassificationMetrics& from) {
    Model_BinaryClassificationMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_BinaryClassificationMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.BinaryClassificationMetrics";
  }
  protected:
  explicit Model_BinaryClassificationMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_BinaryClassificationMetrics_BinaryConfusionMatrix BinaryConfusionMatrix;

  // accessors -------------------------------------------------------

  enum : int {
    kBinaryConfusionMatrixListFieldNumber = 2,
    kPositiveLabelFieldNumber = 3,
    kNegativeLabelFieldNumber = 4,
    kAggregateClassificationMetricsFieldNumber = 1,
  };
  // repeated .google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix binary_confusion_matrix_list = 2;
  int binary_confusion_matrix_list_size() const;
  private:
  int _internal_binary_confusion_matrix_list_size() const;
  public:
  void clear_binary_confusion_matrix_list();
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* mutable_binary_confusion_matrix_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix >*
      mutable_binary_confusion_matrix_list();
  private:
  const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix& _internal_binary_confusion_matrix_list(int index) const;
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* _internal_add_binary_confusion_matrix_list();
  public:
  const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix& binary_confusion_matrix_list(int index) const;
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* add_binary_confusion_matrix_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix >&
      binary_confusion_matrix_list() const;

  // string positive_label = 3;
  void clear_positive_label();
  const std::string& positive_label() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_positive_label(ArgT0&& arg0, ArgT... args);
  std::string* mutable_positive_label();
  PROTOBUF_NODISCARD std::string* release_positive_label();
  void set_allocated_positive_label(std::string* positive_label);
  private:
  const std::string& _internal_positive_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_positive_label(const std::string& value);
  std::string* _internal_mutable_positive_label();
  public:

  // string negative_label = 4;
  void clear_negative_label();
  const std::string& negative_label() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_negative_label(ArgT0&& arg0, ArgT... args);
  std::string* mutable_negative_label();
  PROTOBUF_NODISCARD std::string* release_negative_label();
  void set_allocated_negative_label(std::string* negative_label);
  private:
  const std::string& _internal_negative_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_negative_label(const std::string& value);
  std::string* _internal_mutable_negative_label();
  public:

  // .google.cloud.bigquery.v2.Model.AggregateClassificationMetrics aggregate_classification_metrics = 1;
  bool has_aggregate_classification_metrics() const;
  private:
  bool _internal_has_aggregate_classification_metrics() const;
  public:
  void clear_aggregate_classification_metrics();
  const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& aggregate_classification_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* release_aggregate_classification_metrics();
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* mutable_aggregate_classification_metrics();
  void set_allocated_aggregate_classification_metrics(::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& _internal_aggregate_classification_metrics() const;
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* _internal_mutable_aggregate_classification_metrics();
  public:
  void unsafe_arena_set_allocated_aggregate_classification_metrics(
      ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics);
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* unsafe_arena_release_aggregate_classification_metrics();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix > binary_confusion_matrix_list_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr positive_label_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr negative_label_;
    ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry) */ {
 public:
  inline Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry() : Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry(nullptr) {}
  ~Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry() override;
  explicit PROTOBUF_CONSTEXPR Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry(const Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& from);
  Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry(Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry&& from) noexcept
    : Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry() {
    *this = ::std::move(from);
  }

  inline Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& operator=(const Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& operator=(Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* internal_default_instance() {
    return reinterpret_cast<const Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry*>(
               &_Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& a, Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& from) {
    Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry";
  }
  protected:
  explicit Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPredictedLabelFieldNumber = 1,
    kItemCountFieldNumber = 2,
  };
  // string predicted_label = 1;
  void clear_predicted_label();
  const std::string& predicted_label() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_predicted_label(ArgT0&& arg0, ArgT... args);
  std::string* mutable_predicted_label();
  PROTOBUF_NODISCARD std::string* release_predicted_label();
  void set_allocated_predicted_label(std::string* predicted_label);
  private:
  const std::string& _internal_predicted_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_predicted_label(const std::string& value);
  std::string* _internal_mutable_predicted_label();
  public:

  // .google.protobuf.Int64Value item_count = 2;
  bool has_item_count() const;
  private:
  bool _internal_has_item_count() const;
  public:
  void clear_item_count();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& item_count() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_item_count();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_item_count();
  void set_allocated_item_count(::PROTOBUF_NAMESPACE_ID::Int64Value* item_count);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_item_count() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_item_count();
  public:
  void unsafe_arena_set_allocated_item_count(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* item_count);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_item_count();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr predicted_label_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* item_count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_MultiClassClassificationMetrics_ConfusionMatrix_Row final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row) */ {
 public:
  inline Model_MultiClassClassificationMetrics_ConfusionMatrix_Row() : Model_MultiClassClassificationMetrics_ConfusionMatrix_Row(nullptr) {}
  ~Model_MultiClassClassificationMetrics_ConfusionMatrix_Row() override;
  explicit PROTOBUF_CONSTEXPR Model_MultiClassClassificationMetrics_ConfusionMatrix_Row(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_MultiClassClassificationMetrics_ConfusionMatrix_Row(const Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& from);
  Model_MultiClassClassificationMetrics_ConfusionMatrix_Row(Model_MultiClassClassificationMetrics_ConfusionMatrix_Row&& from) noexcept
    : Model_MultiClassClassificationMetrics_ConfusionMatrix_Row() {
    *this = ::std::move(from);
  }

  inline Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& operator=(const Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& operator=(Model_MultiClassClassificationMetrics_ConfusionMatrix_Row&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* internal_default_instance() {
    return reinterpret_cast<const Model_MultiClassClassificationMetrics_ConfusionMatrix_Row*>(
               &_Model_MultiClassClassificationMetrics_ConfusionMatrix_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& a, Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_MultiClassClassificationMetrics_ConfusionMatrix_Row>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& from) {
    Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row";
  }
  protected:
  explicit Model_MultiClassClassificationMetrics_ConfusionMatrix_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 2,
    kActualLabelFieldNumber = 1,
  };
  // repeated .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry entries = 2;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry >*
      mutable_entries();
  private:
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& _internal_entries(int index) const;
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* _internal_add_entries();
  public:
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& entries(int index) const;
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry >&
      entries() const;

  // string actual_label = 1;
  void clear_actual_label();
  const std::string& actual_label() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_actual_label(ArgT0&& arg0, ArgT... args);
  std::string* mutable_actual_label();
  PROTOBUF_NODISCARD std::string* release_actual_label();
  void set_allocated_actual_label(std::string* actual_label);
  private:
  const std::string& _internal_actual_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actual_label(const std::string& value);
  std::string* _internal_mutable_actual_label();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry > entries_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr actual_label_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_MultiClassClassificationMetrics_ConfusionMatrix final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix) */ {
 public:
  inline Model_MultiClassClassificationMetrics_ConfusionMatrix() : Model_MultiClassClassificationMetrics_ConfusionMatrix(nullptr) {}
  ~Model_MultiClassClassificationMetrics_ConfusionMatrix() override;
  explicit PROTOBUF_CONSTEXPR Model_MultiClassClassificationMetrics_ConfusionMatrix(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_MultiClassClassificationMetrics_ConfusionMatrix(const Model_MultiClassClassificationMetrics_ConfusionMatrix& from);
  Model_MultiClassClassificationMetrics_ConfusionMatrix(Model_MultiClassClassificationMetrics_ConfusionMatrix&& from) noexcept
    : Model_MultiClassClassificationMetrics_ConfusionMatrix() {
    *this = ::std::move(from);
  }

  inline Model_MultiClassClassificationMetrics_ConfusionMatrix& operator=(const Model_MultiClassClassificationMetrics_ConfusionMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_MultiClassClassificationMetrics_ConfusionMatrix& operator=(Model_MultiClassClassificationMetrics_ConfusionMatrix&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_MultiClassClassificationMetrics_ConfusionMatrix& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_MultiClassClassificationMetrics_ConfusionMatrix* internal_default_instance() {
    return reinterpret_cast<const Model_MultiClassClassificationMetrics_ConfusionMatrix*>(
               &_Model_MultiClassClassificationMetrics_ConfusionMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Model_MultiClassClassificationMetrics_ConfusionMatrix& a, Model_MultiClassClassificationMetrics_ConfusionMatrix& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_MultiClassClassificationMetrics_ConfusionMatrix* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_MultiClassClassificationMetrics_ConfusionMatrix* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_MultiClassClassificationMetrics_ConfusionMatrix* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_MultiClassClassificationMetrics_ConfusionMatrix>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_MultiClassClassificationMetrics_ConfusionMatrix& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_MultiClassClassificationMetrics_ConfusionMatrix& from) {
    Model_MultiClassClassificationMetrics_ConfusionMatrix::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_MultiClassClassificationMetrics_ConfusionMatrix* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix";
  }
  protected:
  explicit Model_MultiClassClassificationMetrics_ConfusionMatrix(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry Entry;
  typedef Model_MultiClassClassificationMetrics_ConfusionMatrix_Row Row;

  // accessors -------------------------------------------------------

  enum : int {
    kRowsFieldNumber = 2,
    kConfidenceThresholdFieldNumber = 1,
  };
  // repeated .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row rows = 2;
  int rows_size() const;
  private:
  int _internal_rows_size() const;
  public:
  void clear_rows();
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* mutable_rows(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row >*
      mutable_rows();
  private:
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& _internal_rows(int index) const;
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* _internal_add_rows();
  public:
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& rows(int index) const;
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* add_rows();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row >&
      rows() const;

  // .google.protobuf.DoubleValue confidence_threshold = 1;
  bool has_confidence_threshold() const;
  private:
  bool _internal_has_confidence_threshold() const;
  public:
  void clear_confidence_threshold();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& confidence_threshold() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_confidence_threshold();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_confidence_threshold();
  void set_allocated_confidence_threshold(::PROTOBUF_NAMESPACE_ID::DoubleValue* confidence_threshold);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_confidence_threshold() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_confidence_threshold();
  public:
  void unsafe_arena_set_allocated_confidence_threshold(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* confidence_threshold);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_confidence_threshold();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row > rows_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* confidence_threshold_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_MultiClassClassificationMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics) */ {
 public:
  inline Model_MultiClassClassificationMetrics() : Model_MultiClassClassificationMetrics(nullptr) {}
  ~Model_MultiClassClassificationMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_MultiClassClassificationMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_MultiClassClassificationMetrics(const Model_MultiClassClassificationMetrics& from);
  Model_MultiClassClassificationMetrics(Model_MultiClassClassificationMetrics&& from) noexcept
    : Model_MultiClassClassificationMetrics() {
    *this = ::std::move(from);
  }

  inline Model_MultiClassClassificationMetrics& operator=(const Model_MultiClassClassificationMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_MultiClassClassificationMetrics& operator=(Model_MultiClassClassificationMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_MultiClassClassificationMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_MultiClassClassificationMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_MultiClassClassificationMetrics*>(
               &_Model_MultiClassClassificationMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Model_MultiClassClassificationMetrics& a, Model_MultiClassClassificationMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_MultiClassClassificationMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_MultiClassClassificationMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_MultiClassClassificationMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_MultiClassClassificationMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_MultiClassClassificationMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_MultiClassClassificationMetrics& from) {
    Model_MultiClassClassificationMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_MultiClassClassificationMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics";
  }
  protected:
  explicit Model_MultiClassClassificationMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_MultiClassClassificationMetrics_ConfusionMatrix ConfusionMatrix;

  // accessors -------------------------------------------------------

  enum : int {
    kConfusionMatrixListFieldNumber = 2,
    kAggregateClassificationMetricsFieldNumber = 1,
  };
  // repeated .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix confusion_matrix_list = 2;
  int confusion_matrix_list_size() const;
  private:
  int _internal_confusion_matrix_list_size() const;
  public:
  void clear_confusion_matrix_list();
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* mutable_confusion_matrix_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix >*
      mutable_confusion_matrix_list();
  private:
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix& _internal_confusion_matrix_list(int index) const;
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* _internal_add_confusion_matrix_list();
  public:
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix& confusion_matrix_list(int index) const;
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* add_confusion_matrix_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix >&
      confusion_matrix_list() const;

  // .google.cloud.bigquery.v2.Model.AggregateClassificationMetrics aggregate_classification_metrics = 1;
  bool has_aggregate_classification_metrics() const;
  private:
  bool _internal_has_aggregate_classification_metrics() const;
  public:
  void clear_aggregate_classification_metrics();
  const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& aggregate_classification_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* release_aggregate_classification_metrics();
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* mutable_aggregate_classification_metrics();
  void set_allocated_aggregate_classification_metrics(::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& _internal_aggregate_classification_metrics() const;
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* _internal_mutable_aggregate_classification_metrics();
  public:
  void unsafe_arena_set_allocated_aggregate_classification_metrics(
      ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics);
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* unsafe_arena_release_aggregate_classification_metrics();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix > confusion_matrix_list_;
    ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount) */ {
 public:
  inline Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount() : Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount(nullptr) {}
  ~Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount() override;
  explicit PROTOBUF_CONSTEXPR Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount(const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& from);
  Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount&& from) noexcept
    : Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount() {
    *this = ::std::move(from);
  }

  inline Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& operator=(const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& operator=(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* internal_default_instance() {
    return reinterpret_cast<const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount*>(
               &_Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& a, Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& from) {
    Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount";
  }
  protected:
  explicit Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // string category = 1;
  void clear_category();
  const std::string& category() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_category(ArgT0&& arg0, ArgT... args);
  std::string* mutable_category();
  PROTOBUF_NODISCARD std::string* release_category();
  void set_allocated_category(std::string* category);
  private:
  const std::string& _internal_category() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category(const std::string& value);
  std::string* _internal_mutable_category();
  public:

  // .google.protobuf.Int64Value count = 2;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& count() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_count();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_count();
  void set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_count() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_count();
  public:
  void unsafe_arena_set_allocated_count(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_count();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr category_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue) */ {
 public:
  inline Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue() : Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue(nullptr) {}
  ~Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue() override;
  explicit PROTOBUF_CONSTEXPR Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue(const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& from);
  Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue&& from) noexcept
    : Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue() {
    *this = ::std::move(from);
  }

  inline Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& operator=(const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& operator=(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* internal_default_instance() {
    return reinterpret_cast<const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue*>(
               &_Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& a, Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& from) {
    Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue";
  }
  protected:
  explicit Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount CategoryCount;

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryCountsFieldNumber = 1,
  };
  // repeated .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount category_counts = 1;
  int category_counts_size() const;
  private:
  int _internal_category_counts_size() const;
  public:
  void clear_category_counts();
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* mutable_category_counts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount >*
      mutable_category_counts();
  private:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& _internal_category_counts(int index) const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* _internal_add_category_counts();
  public:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& category_counts(int index) const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* add_category_counts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount >&
      category_counts() const;

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount > category_counts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ClusteringMetrics_Cluster_FeatureValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue) */ {
 public:
  inline Model_ClusteringMetrics_Cluster_FeatureValue() : Model_ClusteringMetrics_Cluster_FeatureValue(nullptr) {}
  ~Model_ClusteringMetrics_Cluster_FeatureValue() override;
  explicit PROTOBUF_CONSTEXPR Model_ClusteringMetrics_Cluster_FeatureValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ClusteringMetrics_Cluster_FeatureValue(const Model_ClusteringMetrics_Cluster_FeatureValue& from);
  Model_ClusteringMetrics_Cluster_FeatureValue(Model_ClusteringMetrics_Cluster_FeatureValue&& from) noexcept
    : Model_ClusteringMetrics_Cluster_FeatureValue() {
    *this = ::std::move(from);
  }

  inline Model_ClusteringMetrics_Cluster_FeatureValue& operator=(const Model_ClusteringMetrics_Cluster_FeatureValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ClusteringMetrics_Cluster_FeatureValue& operator=(Model_ClusteringMetrics_Cluster_FeatureValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ClusteringMetrics_Cluster_FeatureValue& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kNumericalValue = 2,
    kCategoricalValue = 3,
    VALUE_NOT_SET = 0,
  };

  static inline const Model_ClusteringMetrics_Cluster_FeatureValue* internal_default_instance() {
    return reinterpret_cast<const Model_ClusteringMetrics_Cluster_FeatureValue*>(
               &_Model_ClusteringMetrics_Cluster_FeatureValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Model_ClusteringMetrics_Cluster_FeatureValue& a, Model_ClusteringMetrics_Cluster_FeatureValue& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ClusteringMetrics_Cluster_FeatureValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ClusteringMetrics_Cluster_FeatureValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ClusteringMetrics_Cluster_FeatureValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ClusteringMetrics_Cluster_FeatureValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ClusteringMetrics_Cluster_FeatureValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ClusteringMetrics_Cluster_FeatureValue& from) {
    Model_ClusteringMetrics_Cluster_FeatureValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ClusteringMetrics_Cluster_FeatureValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue";
  }
  protected:
  explicit Model_ClusteringMetrics_Cluster_FeatureValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue CategoricalValue;

  // accessors -------------------------------------------------------

  enum : int {
    kFeatureColumnFieldNumber = 1,
    kNumericalValueFieldNumber = 2,
    kCategoricalValueFieldNumber = 3,
  };
  // string feature_column = 1;
  void clear_feature_column();
  const std::string& feature_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_feature_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_feature_column();
  PROTOBUF_NODISCARD std::string* release_feature_column();
  void set_allocated_feature_column(std::string* feature_column);
  private:
  const std::string& _internal_feature_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_feature_column(const std::string& value);
  std::string* _internal_mutable_feature_column();
  public:

  // .google.protobuf.DoubleValue numerical_value = 2;
  bool has_numerical_value() const;
  private:
  bool _internal_has_numerical_value() const;
  public:
  void clear_numerical_value();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& numerical_value() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_numerical_value();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_numerical_value();
  void set_allocated_numerical_value(::PROTOBUF_NAMESPACE_ID::DoubleValue* numerical_value);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_numerical_value() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_numerical_value();
  public:
  void unsafe_arena_set_allocated_numerical_value(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* numerical_value);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_numerical_value();

  // .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue categorical_value = 3;
  bool has_categorical_value() const;
  private:
  bool _internal_has_categorical_value() const;
  public:
  void clear_categorical_value();
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& categorical_value() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* release_categorical_value();
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* mutable_categorical_value();
  void set_allocated_categorical_value(::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* categorical_value);
  private:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& _internal_categorical_value() const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* _internal_mutable_categorical_value();
  public:
  void unsafe_arena_set_allocated_categorical_value(
      ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* categorical_value);
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* unsafe_arena_release_categorical_value();

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue)
 private:
  class _Internal;
  void set_has_numerical_value();
  void set_has_categorical_value();

  inline bool has_value() const;
  inline void clear_has_value();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr feature_column_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* numerical_value_;
      ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* categorical_value_;
    } value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ClusteringMetrics_Cluster final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster) */ {
 public:
  inline Model_ClusteringMetrics_Cluster() : Model_ClusteringMetrics_Cluster(nullptr) {}
  ~Model_ClusteringMetrics_Cluster() override;
  explicit PROTOBUF_CONSTEXPR Model_ClusteringMetrics_Cluster(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ClusteringMetrics_Cluster(const Model_ClusteringMetrics_Cluster& from);
  Model_ClusteringMetrics_Cluster(Model_ClusteringMetrics_Cluster&& from) noexcept
    : Model_ClusteringMetrics_Cluster() {
    *this = ::std::move(from);
  }

  inline Model_ClusteringMetrics_Cluster& operator=(const Model_ClusteringMetrics_Cluster& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ClusteringMetrics_Cluster& operator=(Model_ClusteringMetrics_Cluster&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ClusteringMetrics_Cluster& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ClusteringMetrics_Cluster* internal_default_instance() {
    return reinterpret_cast<const Model_ClusteringMetrics_Cluster*>(
               &_Model_ClusteringMetrics_Cluster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Model_ClusteringMetrics_Cluster& a, Model_ClusteringMetrics_Cluster& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ClusteringMetrics_Cluster* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ClusteringMetrics_Cluster* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ClusteringMetrics_Cluster* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ClusteringMetrics_Cluster>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ClusteringMetrics_Cluster& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ClusteringMetrics_Cluster& from) {
    Model_ClusteringMetrics_Cluster::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ClusteringMetrics_Cluster* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster";
  }
  protected:
  explicit Model_ClusteringMetrics_Cluster(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_ClusteringMetrics_Cluster_FeatureValue FeatureValue;

  // accessors -------------------------------------------------------

  enum : int {
    kFeatureValuesFieldNumber = 2,
    kCountFieldNumber = 3,
    kCentroidIdFieldNumber = 1,
  };
  // repeated .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue feature_values = 2;
  int feature_values_size() const;
  private:
  int _internal_feature_values_size() const;
  public:
  void clear_feature_values();
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* mutable_feature_values(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue >*
      mutable_feature_values();
  private:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue& _internal_feature_values(int index) const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* _internal_add_feature_values();
  public:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue& feature_values(int index) const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* add_feature_values();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue >&
      feature_values() const;

  // .google.protobuf.Int64Value count = 3;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& count() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_count();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_count();
  void set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_count() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_count();
  public:
  void unsafe_arena_set_allocated_count(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_count();

  // int64 centroid_id = 1;
  void clear_centroid_id();
  int64_t centroid_id() const;
  void set_centroid_id(int64_t value);
  private:
  int64_t _internal_centroid_id() const;
  void _internal_set_centroid_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue > feature_values_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count_;
    int64_t centroid_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ClusteringMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ClusteringMetrics) */ {
 public:
  inline Model_ClusteringMetrics() : Model_ClusteringMetrics(nullptr) {}
  ~Model_ClusteringMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_ClusteringMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ClusteringMetrics(const Model_ClusteringMetrics& from);
  Model_ClusteringMetrics(Model_ClusteringMetrics&& from) noexcept
    : Model_ClusteringMetrics() {
    *this = ::std::move(from);
  }

  inline Model_ClusteringMetrics& operator=(const Model_ClusteringMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ClusteringMetrics& operator=(Model_ClusteringMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ClusteringMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ClusteringMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_ClusteringMetrics*>(
               &_Model_ClusteringMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Model_ClusteringMetrics& a, Model_ClusteringMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ClusteringMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ClusteringMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ClusteringMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ClusteringMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ClusteringMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ClusteringMetrics& from) {
    Model_ClusteringMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ClusteringMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ClusteringMetrics";
  }
  protected:
  explicit Model_ClusteringMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_ClusteringMetrics_Cluster Cluster;

  // accessors -------------------------------------------------------

  enum : int {
    kClustersFieldNumber = 3,
    kDaviesBouldinIndexFieldNumber = 1,
    kMeanSquaredDistanceFieldNumber = 2,
  };
  // repeated .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster clusters = 3;
  int clusters_size() const;
  private:
  int _internal_clusters_size() const;
  public:
  void clear_clusters();
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* mutable_clusters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster >*
      mutable_clusters();
  private:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster& _internal_clusters(int index) const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* _internal_add_clusters();
  public:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster& clusters(int index) const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* add_clusters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster >&
      clusters() const;

  // .google.protobuf.DoubleValue davies_bouldin_index = 1;
  bool has_davies_bouldin_index() const;
  private:
  bool _internal_has_davies_bouldin_index() const;
  public:
  void clear_davies_bouldin_index();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& davies_bouldin_index() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_davies_bouldin_index();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_davies_bouldin_index();
  void set_allocated_davies_bouldin_index(::PROTOBUF_NAMESPACE_ID::DoubleValue* davies_bouldin_index);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_davies_bouldin_index() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_davies_bouldin_index();
  public:
  void unsafe_arena_set_allocated_davies_bouldin_index(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* davies_bouldin_index);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_davies_bouldin_index();

  // .google.protobuf.DoubleValue mean_squared_distance = 2;
  bool has_mean_squared_distance() const;
  private:
  bool _internal_has_mean_squared_distance() const;
  public:
  void clear_mean_squared_distance();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& mean_squared_distance() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_mean_squared_distance();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_mean_squared_distance();
  void set_allocated_mean_squared_distance(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_distance);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_mean_squared_distance() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_mean_squared_distance();
  public:
  void unsafe_arena_set_allocated_mean_squared_distance(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_distance);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_mean_squared_distance();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ClusteringMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster > clusters_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* davies_bouldin_index_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_distance_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_RankingMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.RankingMetrics) */ {
 public:
  inline Model_RankingMetrics() : Model_RankingMetrics(nullptr) {}
  ~Model_RankingMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_RankingMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_RankingMetrics(const Model_RankingMetrics& from);
  Model_RankingMetrics(Model_RankingMetrics&& from) noexcept
    : Model_RankingMetrics() {
    *this = ::std::move(from);
  }

  inline Model_RankingMetrics& operator=(const Model_RankingMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_RankingMetrics& operator=(Model_RankingMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_RankingMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_RankingMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_RankingMetrics*>(
               &_Model_RankingMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Model_RankingMetrics& a, Model_RankingMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_RankingMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_RankingMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_RankingMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_RankingMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_RankingMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_RankingMetrics& from) {
    Model_RankingMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_RankingMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.RankingMetrics";
  }
  protected:
  explicit Model_RankingMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeanAveragePrecisionFieldNumber = 1,
    kMeanSquaredErrorFieldNumber = 2,
    kNormalizedDiscountedCumulativeGainFieldNumber = 3,
    kAverageRankFieldNumber = 4,
  };
  // .google.protobuf.DoubleValue mean_average_precision = 1;
  bool has_mean_average_precision() const;
  private:
  bool _internal_has_mean_average_precision() const;
  public:
  void clear_mean_average_precision();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& mean_average_precision() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_mean_average_precision();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_mean_average_precision();
  void set_allocated_mean_average_precision(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_average_precision);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_mean_average_precision() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_mean_average_precision();
  public:
  void unsafe_arena_set_allocated_mean_average_precision(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_average_precision);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_mean_average_precision();

  // .google.protobuf.DoubleValue mean_squared_error = 2;
  bool has_mean_squared_error() const;
  private:
  bool _internal_has_mean_squared_error() const;
  public:
  void clear_mean_squared_error();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& mean_squared_error() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_mean_squared_error();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_mean_squared_error();
  void set_allocated_mean_squared_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_mean_squared_error() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_mean_squared_error();
  public:
  void unsafe_arena_set_allocated_mean_squared_error(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_mean_squared_error();

  // .google.protobuf.DoubleValue normalized_discounted_cumulative_gain = 3;
  bool has_normalized_discounted_cumulative_gain() const;
  private:
  bool _internal_has_normalized_discounted_cumulative_gain() const;
  public:
  void clear_normalized_discounted_cumulative_gain();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& normalized_discounted_cumulative_gain() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_normalized_discounted_cumulative_gain();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_normalized_discounted_cumulative_gain();
  void set_allocated_normalized_discounted_cumulative_gain(::PROTOBUF_NAMESPACE_ID::DoubleValue* normalized_discounted_cumulative_gain);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_normalized_discounted_cumulative_gain() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_normalized_discounted_cumulative_gain();
  public:
  void unsafe_arena_set_allocated_normalized_discounted_cumulative_gain(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* normalized_discounted_cumulative_gain);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_normalized_discounted_cumulative_gain();

  // .google.protobuf.DoubleValue average_rank = 4;
  bool has_average_rank() const;
  private:
  bool _internal_has_average_rank() const;
  public:
  void clear_average_rank();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& average_rank() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_average_rank();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_average_rank();
  void set_allocated_average_rank(::PROTOBUF_NAMESPACE_ID::DoubleValue* average_rank);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_average_rank() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_average_rank();
  public:
  void unsafe_arena_set_allocated_average_rank(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* average_rank);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_average_rank();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.RankingMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_average_precision_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* normalized_discounted_cumulative_gain_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* average_rank_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics) */ {
 public:
  inline Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics() : Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics(nullptr) {}
  ~Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics(const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& from);
  Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics(Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics&& from) noexcept
    : Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics() {
    *this = ::std::move(from);
  }

  inline Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& operator=(const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& operator=(Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics*>(
               &_Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& a, Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& from) {
    Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics";
  }
  protected:
  explicit Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeasonalPeriodsFieldNumber = 5,
    kTimeSeriesIdsFieldNumber = 9,
    kTimeSeriesIdFieldNumber = 4,
    kNonSeasonalOrderFieldNumber = 1,
    kArimaFittingMetricsFieldNumber = 2,
    kHasHolidayEffectFieldNumber = 6,
    kHasSpikesAndDipsFieldNumber = 7,
    kHasStepChangesFieldNumber = 8,
    kHasDriftFieldNumber = 3,
  };
  // repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 5;
  int seasonal_periods_size() const;
  private:
  int _internal_seasonal_periods_size() const;
  public:
  void clear_seasonal_periods();
  private:
  ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType _internal_seasonal_periods(int index) const;
  void _internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_seasonal_periods();
  public:
  ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType seasonal_periods(int index) const;
  void set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  void add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& seasonal_periods() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_seasonal_periods();

  // repeated string time_series_ids = 9;
  int time_series_ids_size() const;
  private:
  int _internal_time_series_ids_size() const;
  public:
  void clear_time_series_ids();
  const std::string& time_series_ids(int index) const;
  std::string* mutable_time_series_ids(int index);
  void set_time_series_ids(int index, const std::string& value);
  void set_time_series_ids(int index, std::string&& value);
  void set_time_series_ids(int index, const char* value);
  void set_time_series_ids(int index, const char* value, size_t size);
  std::string* add_time_series_ids();
  void add_time_series_ids(const std::string& value);
  void add_time_series_ids(std::string&& value);
  void add_time_series_ids(const char* value);
  void add_time_series_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& time_series_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_time_series_ids();
  private:
  const std::string& _internal_time_series_ids(int index) const;
  std::string* _internal_add_time_series_ids();
  public:

  // string time_series_id = 4;
  void clear_time_series_id();
  const std::string& time_series_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_time_series_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_time_series_id();
  PROTOBUF_NODISCARD std::string* release_time_series_id();
  void set_allocated_time_series_id(std::string* time_series_id);
  private:
  const std::string& _internal_time_series_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_series_id(const std::string& value);
  std::string* _internal_mutable_time_series_id();
  public:

  // .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1;
  bool has_non_seasonal_order() const;
  private:
  bool _internal_has_non_seasonal_order() const;
  public:
  void clear_non_seasonal_order();
  const ::google::cloud::bigquery::v2::Model_ArimaOrder& non_seasonal_order() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ArimaOrder* release_non_seasonal_order();
  ::google::cloud::bigquery::v2::Model_ArimaOrder* mutable_non_seasonal_order();
  void set_allocated_non_seasonal_order(::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order);
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaOrder& _internal_non_seasonal_order() const;
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _internal_mutable_non_seasonal_order();
  public:
  void unsafe_arena_set_allocated_non_seasonal_order(
      ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order);
  ::google::cloud::bigquery::v2::Model_ArimaOrder* unsafe_arena_release_non_seasonal_order();

  // .google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 2;
  bool has_arima_fitting_metrics() const;
  private:
  bool _internal_has_arima_fitting_metrics() const;
  public:
  void clear_arima_fitting_metrics();
  const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& arima_fitting_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* release_arima_fitting_metrics();
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* mutable_arima_fitting_metrics();
  void set_allocated_arima_fitting_metrics(::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& _internal_arima_fitting_metrics() const;
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* _internal_mutable_arima_fitting_metrics();
  public:
  void unsafe_arena_set_allocated_arima_fitting_metrics(
      ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics);
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* unsafe_arena_release_arima_fitting_metrics();

  // .google.protobuf.BoolValue has_holiday_effect = 6;
  bool has_has_holiday_effect() const;
  private:
  bool _internal_has_has_holiday_effect() const;
  public:
  void clear_has_holiday_effect();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& has_holiday_effect() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_has_holiday_effect();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_has_holiday_effect();
  void set_allocated_has_holiday_effect(::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_has_holiday_effect() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_has_holiday_effect();
  public:
  void unsafe_arena_set_allocated_has_holiday_effect(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_has_holiday_effect();

  // .google.protobuf.BoolValue has_spikes_and_dips = 7;
  bool has_has_spikes_and_dips() const;
  private:
  bool _internal_has_has_spikes_and_dips() const;
  public:
  void clear_has_spikes_and_dips();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& has_spikes_and_dips() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_has_spikes_and_dips();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_has_spikes_and_dips();
  void set_allocated_has_spikes_and_dips(::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_has_spikes_and_dips() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_has_spikes_and_dips();
  public:
  void unsafe_arena_set_allocated_has_spikes_and_dips(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_has_spikes_and_dips();

  // .google.protobuf.BoolValue has_step_changes = 8;
  bool has_has_step_changes() const;
  private:
  bool _internal_has_has_step_changes() const;
  public:
  void clear_has_step_changes();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& has_step_changes() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_has_step_changes();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_has_step_changes();
  void set_allocated_has_step_changes(::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_has_step_changes() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_has_step_changes();
  public:
  void unsafe_arena_set_allocated_has_step_changes(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_has_step_changes();

  // bool has_drift = 3;
  void clear_has_drift();
  bool has_drift() const;
  void set_has_drift(bool value);
  private:
  bool _internal_has_drift() const;
  void _internal_set_has_drift(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> seasonal_periods_;
    mutable std::atomic<int> _seasonal_periods_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> time_series_ids_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_series_id_;
    ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order_;
    ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes_;
    bool has_drift_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ArimaForecastingMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics) */ {
 public:
  inline Model_ArimaForecastingMetrics() : Model_ArimaForecastingMetrics(nullptr) {}
  ~Model_ArimaForecastingMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_ArimaForecastingMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ArimaForecastingMetrics(const Model_ArimaForecastingMetrics& from);
  Model_ArimaForecastingMetrics(Model_ArimaForecastingMetrics&& from) noexcept
    : Model_ArimaForecastingMetrics() {
    *this = ::std::move(from);
  }

  inline Model_ArimaForecastingMetrics& operator=(const Model_ArimaForecastingMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ArimaForecastingMetrics& operator=(Model_ArimaForecastingMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ArimaForecastingMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ArimaForecastingMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_ArimaForecastingMetrics*>(
               &_Model_ArimaForecastingMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Model_ArimaForecastingMetrics& a, Model_ArimaForecastingMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ArimaForecastingMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ArimaForecastingMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ArimaForecastingMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ArimaForecastingMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ArimaForecastingMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ArimaForecastingMetrics& from) {
    Model_ArimaForecastingMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ArimaForecastingMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ArimaForecastingMetrics";
  }
  protected:
  explicit Model_ArimaForecastingMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics ArimaSingleModelForecastingMetrics;

  // accessors -------------------------------------------------------

  enum : int {
    kNonSeasonalOrderFieldNumber = 1,
    kArimaFittingMetricsFieldNumber = 2,
    kSeasonalPeriodsFieldNumber = 3,
    kHasDriftFieldNumber = 4,
    kTimeSeriesIdFieldNumber = 5,
    kArimaSingleModelForecastingMetricsFieldNumber = 6,
  };
  // repeated .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1 [deprecated = true];
  PROTOBUF_DEPRECATED int non_seasonal_order_size() const;
  private:
  int _internal_non_seasonal_order_size() const;
  public:
  PROTOBUF_DEPRECATED void clear_non_seasonal_order();
  PROTOBUF_DEPRECATED ::google::cloud::bigquery::v2::Model_ArimaOrder* mutable_non_seasonal_order(int index);
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaOrder >*
      mutable_non_seasonal_order();
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaOrder& _internal_non_seasonal_order(int index) const;
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _internal_add_non_seasonal_order();
  public:
  PROTOBUF_DEPRECATED const ::google::cloud::bigquery::v2::Model_ArimaOrder& non_seasonal_order(int index) const;
  PROTOBUF_DEPRECATED ::google::cloud::bigquery::v2::Model_ArimaOrder* add_non_seasonal_order();
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaOrder >&
      non_seasonal_order() const;

  // repeated .google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 2 [deprecated = true];
  PROTOBUF_DEPRECATED int arima_fitting_metrics_size() const;
  private:
  int _internal_arima_fitting_metrics_size() const;
  public:
  PROTOBUF_DEPRECATED void clear_arima_fitting_metrics();
  PROTOBUF_DEPRECATED ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* mutable_arima_fitting_metrics(int index);
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics >*
      mutable_arima_fitting_metrics();
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& _internal_arima_fitting_metrics(int index) const;
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* _internal_add_arima_fitting_metrics();
  public:
  PROTOBUF_DEPRECATED const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& arima_fitting_metrics(int index) const;
  PROTOBUF_DEPRECATED ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* add_arima_fitting_metrics();
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics >&
      arima_fitting_metrics() const;

  // repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 3 [deprecated = true];
  PROTOBUF_DEPRECATED int seasonal_periods_size() const;
  private:
  int _internal_seasonal_periods_size() const;
  public:
  PROTOBUF_DEPRECATED void clear_seasonal_periods();
  private:
  ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType _internal_seasonal_periods(int index) const;
  void _internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_seasonal_periods();
  public:
  PROTOBUF_DEPRECATED ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType seasonal_periods(int index) const;
  PROTOBUF_DEPRECATED void set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  PROTOBUF_DEPRECATED void add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& seasonal_periods() const;
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_seasonal_periods();

  // repeated bool has_drift = 4 [deprecated = true];
  PROTOBUF_DEPRECATED int has_drift_size() const;
  private:
  int _internal_has_drift_size() const;
  public:
  PROTOBUF_DEPRECATED void clear_has_drift();
  private:
  bool _internal_has_drift(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_has_drift() const;
  void _internal_add_has_drift(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_has_drift();
  public:
  PROTOBUF_DEPRECATED bool has_drift(int index) const;
  PROTOBUF_DEPRECATED void set_has_drift(int index, bool value);
  PROTOBUF_DEPRECATED void add_has_drift(bool value);
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      has_drift() const;
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_has_drift();

  // repeated string time_series_id = 5 [deprecated = true];
  PROTOBUF_DEPRECATED int time_series_id_size() const;
  private:
  int _internal_time_series_id_size() const;
  public:
  PROTOBUF_DEPRECATED void clear_time_series_id();
  PROTOBUF_DEPRECATED const std::string& time_series_id(int index) const;
  PROTOBUF_DEPRECATED std::string* mutable_time_series_id(int index);
  PROTOBUF_DEPRECATED void set_time_series_id(int index, const std::string& value);
  PROTOBUF_DEPRECATED void set_time_series_id(int index, std::string&& value);
  PROTOBUF_DEPRECATED void set_time_series_id(int index, const char* value);
  PROTOBUF_DEPRECATED void set_time_series_id(int index, const char* value, size_t size);
  PROTOBUF_DEPRECATED std::string* add_time_series_id();
  PROTOBUF_DEPRECATED void add_time_series_id(const std::string& value);
  PROTOBUF_DEPRECATED void add_time_series_id(std::string&& value);
  PROTOBUF_DEPRECATED void add_time_series_id(const char* value);
  PROTOBUF_DEPRECATED void add_time_series_id(const char* value, size_t size);
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& time_series_id() const;
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_time_series_id();
  private:
  const std::string& _internal_time_series_id(int index) const;
  std::string* _internal_add_time_series_id();
  public:

  // repeated .google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics arima_single_model_forecasting_metrics = 6;
  int arima_single_model_forecasting_metrics_size() const;
  private:
  int _internal_arima_single_model_forecasting_metrics_size() const;
  public:
  void clear_arima_single_model_forecasting_metrics();
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* mutable_arima_single_model_forecasting_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics >*
      mutable_arima_single_model_forecasting_metrics();
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& _internal_arima_single_model_forecasting_metrics(int index) const;
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* _internal_add_arima_single_model_forecasting_metrics();
  public:
  const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& arima_single_model_forecasting_metrics(int index) const;
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* add_arima_single_model_forecasting_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics >&
      arima_single_model_forecasting_metrics() const;

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaOrder > non_seasonal_order_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics > arima_fitting_metrics_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> seasonal_periods_;
    mutable std::atomic<int> _seasonal_periods_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > has_drift_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> time_series_id_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics > arima_single_model_forecasting_metrics_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_EvaluationMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.EvaluationMetrics) */ {
 public:
  inline Model_EvaluationMetrics() : Model_EvaluationMetrics(nullptr) {}
  ~Model_EvaluationMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_EvaluationMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_EvaluationMetrics(const Model_EvaluationMetrics& from);
  Model_EvaluationMetrics(Model_EvaluationMetrics&& from) noexcept
    : Model_EvaluationMetrics() {
    *this = ::std::move(from);
  }

  inline Model_EvaluationMetrics& operator=(const Model_EvaluationMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_EvaluationMetrics& operator=(Model_EvaluationMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_EvaluationMetrics& default_instance() {
    return *internal_default_instance();
  }
  enum MetricsCase {
    kRegressionMetrics = 1,
    kBinaryClassificationMetrics = 2,
    kMultiClassClassificationMetrics = 3,
    kClusteringMetrics = 4,
    kRankingMetrics = 5,
    kArimaForecastingMetrics = 6,
    METRICS_NOT_SET = 0,
  };

  static inline const Model_EvaluationMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_EvaluationMetrics*>(
               &_Model_EvaluationMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(Model_EvaluationMetrics& a, Model_EvaluationMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_EvaluationMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_EvaluationMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_EvaluationMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_EvaluationMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_EvaluationMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_EvaluationMetrics& from) {
    Model_EvaluationMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_EvaluationMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.EvaluationMetrics";
  }
  protected:
  explicit Model_EvaluationMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegressionMetricsFieldNumber = 1,
    kBinaryClassificationMetricsFieldNumber = 2,
    kMultiClassClassificationMetricsFieldNumber = 3,
    kClusteringMetricsFieldNumber = 4,
    kRankingMetricsFieldNumber = 5,
    kArimaForecastingMetricsFieldNumber = 6,
  };
  // .google.cloud.bigquery.v2.Model.RegressionMetrics regression_metrics = 1;
  bool has_regression_metrics() const;
  private:
  bool _internal_has_regression_metrics() const;
  public:
  void clear_regression_metrics();
  const ::google::cloud::bigquery::v2::Model_RegressionMetrics& regression_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_RegressionMetrics* release_regression_metrics();
  ::google::cloud::bigquery::v2::Model_RegressionMetrics* mutable_regression_metrics();
  void set_allocated_regression_metrics(::google::cloud::bigquery::v2::Model_RegressionMetrics* regression_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_RegressionMetrics& _internal_regression_metrics() const;
  ::google::cloud::bigquery::v2::Model_RegressionMetrics* _internal_mutable_regression_metrics();
  public:
  void unsafe_arena_set_allocated_regression_metrics(
      ::google::cloud::bigquery::v2::Model_RegressionMetrics* regression_metrics);
  ::google::cloud::bigquery::v2::Model_RegressionMetrics* unsafe_arena_release_regression_metrics();

  // .google.cloud.bigquery.v2.Model.BinaryClassificationMetrics binary_classification_metrics = 2;
  bool has_binary_classification_metrics() const;
  private:
  bool _internal_has_binary_classification_metrics() const;
  public:
  void clear_binary_classification_metrics();
  const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics& binary_classification_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* release_binary_classification_metrics();
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* mutable_binary_classification_metrics();
  void set_allocated_binary_classification_metrics(::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* binary_classification_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics& _internal_binary_classification_metrics() const;
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* _internal_mutable_binary_classification_metrics();
  public:
  void unsafe_arena_set_allocated_binary_classification_metrics(
      ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* binary_classification_metrics);
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* unsafe_arena_release_binary_classification_metrics();

  // .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics multi_class_classification_metrics = 3;
  bool has_multi_class_classification_metrics() const;
  private:
  bool _internal_has_multi_class_classification_metrics() const;
  public:
  void clear_multi_class_classification_metrics();
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics& multi_class_classification_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* release_multi_class_classification_metrics();
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* mutable_multi_class_classification_metrics();
  void set_allocated_multi_class_classification_metrics(::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* multi_class_classification_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics& _internal_multi_class_classification_metrics() const;
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* _internal_mutable_multi_class_classification_metrics();
  public:
  void unsafe_arena_set_allocated_multi_class_classification_metrics(
      ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* multi_class_classification_metrics);
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* unsafe_arena_release_multi_class_classification_metrics();

  // .google.cloud.bigquery.v2.Model.ClusteringMetrics clustering_metrics = 4;
  bool has_clustering_metrics() const;
  private:
  bool _internal_has_clustering_metrics() const;
  public:
  void clear_clustering_metrics();
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics& clustering_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ClusteringMetrics* release_clustering_metrics();
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics* mutable_clustering_metrics();
  void set_allocated_clustering_metrics(::google::cloud::bigquery::v2::Model_ClusteringMetrics* clustering_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_ClusteringMetrics& _internal_clustering_metrics() const;
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics* _internal_mutable_clustering_metrics();
  public:
  void unsafe_arena_set_allocated_clustering_metrics(
      ::google::cloud::bigquery::v2::Model_ClusteringMetrics* clustering_metrics);
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics* unsafe_arena_release_clustering_metrics();

  // .google.cloud.bigquery.v2.Model.RankingMetrics ranking_metrics = 5;
  bool has_ranking_metrics() const;
  private:
  bool _internal_has_ranking_metrics() const;
  public:
  void clear_ranking_metrics();
  const ::google::cloud::bigquery::v2::Model_RankingMetrics& ranking_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_RankingMetrics* release_ranking_metrics();
  ::google::cloud::bigquery::v2::Model_RankingMetrics* mutable_ranking_metrics();
  void set_allocated_ranking_metrics(::google::cloud::bigquery::v2::Model_RankingMetrics* ranking_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_RankingMetrics& _internal_ranking_metrics() const;
  ::google::cloud::bigquery::v2::Model_RankingMetrics* _internal_mutable_ranking_metrics();
  public:
  void unsafe_arena_set_allocated_ranking_metrics(
      ::google::cloud::bigquery::v2::Model_RankingMetrics* ranking_metrics);
  ::google::cloud::bigquery::v2::Model_RankingMetrics* unsafe_arena_release_ranking_metrics();

  // .google.cloud.bigquery.v2.Model.ArimaForecastingMetrics arima_forecasting_metrics = 6;
  bool has_arima_forecasting_metrics() const;
  private:
  bool _internal_has_arima_forecasting_metrics() const;
  public:
  void clear_arima_forecasting_metrics();
  const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics& arima_forecasting_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* release_arima_forecasting_metrics();
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* mutable_arima_forecasting_metrics();
  void set_allocated_arima_forecasting_metrics(::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* arima_forecasting_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics& _internal_arima_forecasting_metrics() const;
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* _internal_mutable_arima_forecasting_metrics();
  public:
  void unsafe_arena_set_allocated_arima_forecasting_metrics(
      ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* arima_forecasting_metrics);
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* unsafe_arena_release_arima_forecasting_metrics();

  void clear_metrics();
  MetricsCase metrics_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.EvaluationMetrics)
 private:
  class _Internal;
  void set_has_regression_metrics();
  void set_has_binary_classification_metrics();
  void set_has_multi_class_classification_metrics();
  void set_has_clustering_metrics();
  void set_has_ranking_metrics();
  void set_has_arima_forecasting_metrics();

  inline bool has_metrics() const;
  inline void clear_has_metrics();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union MetricsUnion {
      constexpr MetricsUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::google::cloud::bigquery::v2::Model_RegressionMetrics* regression_metrics_;
      ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* binary_classification_metrics_;
      ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* multi_class_classification_metrics_;
      ::google::cloud::bigquery::v2::Model_ClusteringMetrics* clustering_metrics_;
      ::google::cloud::bigquery::v2::Model_RankingMetrics* ranking_metrics_;
      ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* arima_forecasting_metrics_;
    } metrics_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_DataSplitResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.DataSplitResult) */ {
 public:
  inline Model_DataSplitResult() : Model_DataSplitResult(nullptr) {}
  ~Model_DataSplitResult() override;
  explicit PROTOBUF_CONSTEXPR Model_DataSplitResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_DataSplitResult(const Model_DataSplitResult& from);
  Model_DataSplitResult(Model_DataSplitResult&& from) noexcept
    : Model_DataSplitResult() {
    *this = ::std::move(from);
  }

  inline Model_DataSplitResult& operator=(const Model_DataSplitResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_DataSplitResult& operator=(Model_DataSplitResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_DataSplitResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_DataSplitResult* internal_default_instance() {
    return reinterpret_cast<const Model_DataSplitResult*>(
               &_Model_DataSplitResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(Model_DataSplitResult& a, Model_DataSplitResult& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_DataSplitResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_DataSplitResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_DataSplitResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_DataSplitResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_DataSplitResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_DataSplitResult& from) {
    Model_DataSplitResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_DataSplitResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.DataSplitResult";
  }
  protected:
  explicit Model_DataSplitResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainingTableFieldNumber = 1,
    kEvaluationTableFieldNumber = 2,
  };
  // .google.cloud.bigquery.v2.TableReference training_table = 1;
  bool has_training_table() const;
  private:
  bool _internal_has_training_table() const;
  public:
  void clear_training_table();
  const ::google::cloud::bigquery::v2::TableReference& training_table() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::TableReference* release_training_table();
  ::google::cloud::bigquery::v2::TableReference* mutable_training_table();
  void set_allocated_training_table(::google::cloud::bigquery::v2::TableReference* training_table);
  private:
  const ::google::cloud::bigquery::v2::TableReference& _internal_training_table() const;
  ::google::cloud::bigquery::v2::TableReference* _internal_mutable_training_table();
  public:
  void unsafe_arena_set_allocated_training_table(
      ::google::cloud::bigquery::v2::TableReference* training_table);
  ::google::cloud::bigquery::v2::TableReference* unsafe_arena_release_training_table();

  // .google.cloud.bigquery.v2.TableReference evaluation_table = 2;
  bool has_evaluation_table() const;
  private:
  bool _internal_has_evaluation_table() const;
  public:
  void clear_evaluation_table();
  const ::google::cloud::bigquery::v2::TableReference& evaluation_table() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::TableReference* release_evaluation_table();
  ::google::cloud::bigquery::v2::TableReference* mutable_evaluation_table();
  void set_allocated_evaluation_table(::google::cloud::bigquery::v2::TableReference* evaluation_table);
  private:
  const ::google::cloud::bigquery::v2::TableReference& _internal_evaluation_table() const;
  ::google::cloud::bigquery::v2::TableReference* _internal_mutable_evaluation_table();
  public:
  void unsafe_arena_set_allocated_evaluation_table(
      ::google::cloud::bigquery::v2::TableReference* evaluation_table);
  ::google::cloud::bigquery::v2::TableReference* unsafe_arena_release_evaluation_table();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.DataSplitResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::cloud::bigquery::v2::TableReference* training_table_;
    ::google::cloud::bigquery::v2::TableReference* evaluation_table_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ArimaOrder final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ArimaOrder) */ {
 public:
  inline Model_ArimaOrder() : Model_ArimaOrder(nullptr) {}
  ~Model_ArimaOrder() override;
  explicit PROTOBUF_CONSTEXPR Model_ArimaOrder(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ArimaOrder(const Model_ArimaOrder& from);
  Model_ArimaOrder(Model_ArimaOrder&& from) noexcept
    : Model_ArimaOrder() {
    *this = ::std::move(from);
  }

  inline Model_ArimaOrder& operator=(const Model_ArimaOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ArimaOrder& operator=(Model_ArimaOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ArimaOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ArimaOrder* internal_default_instance() {
    return reinterpret_cast<const Model_ArimaOrder*>(
               &_Model_ArimaOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(Model_ArimaOrder& a, Model_ArimaOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ArimaOrder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ArimaOrder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ArimaOrder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ArimaOrder>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ArimaOrder& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ArimaOrder& from) {
    Model_ArimaOrder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ArimaOrder* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ArimaOrder";
  }
  protected:
  explicit Model_ArimaOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPFieldNumber = 1,
    kDFieldNumber = 2,
    kQFieldNumber = 3,
  };
  // int64 p = 1;
  void clear_p();
  int64_t p() const;
  void set_p(int64_t value);
  private:
  int64_t _internal_p() const;
  void _internal_set_p(int64_t value);
  public:

  // int64 d = 2;
  void clear_d();
  int64_t d() const;
  void set_d(int64_t value);
  private:
  int64_t _internal_d() const;
  void _internal_set_d(int64_t value);
  public:

  // int64 q = 3;
  void clear_q();
  int64_t q() const;
  void set_q(int64_t value);
  private:
  int64_t _internal_q() const;
  void _internal_set_q(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ArimaOrder)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t p_;
    int64_t d_;
    int64_t q_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_ArimaFittingMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.ArimaFittingMetrics) */ {
 public:
  inline Model_ArimaFittingMetrics() : Model_ArimaFittingMetrics(nullptr) {}
  ~Model_ArimaFittingMetrics() override;
  explicit PROTOBUF_CONSTEXPR Model_ArimaFittingMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_ArimaFittingMetrics(const Model_ArimaFittingMetrics& from);
  Model_ArimaFittingMetrics(Model_ArimaFittingMetrics&& from) noexcept
    : Model_ArimaFittingMetrics() {
    *this = ::std::move(from);
  }

  inline Model_ArimaFittingMetrics& operator=(const Model_ArimaFittingMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_ArimaFittingMetrics& operator=(Model_ArimaFittingMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_ArimaFittingMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_ArimaFittingMetrics* internal_default_instance() {
    return reinterpret_cast<const Model_ArimaFittingMetrics*>(
               &_Model_ArimaFittingMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(Model_ArimaFittingMetrics& a, Model_ArimaFittingMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_ArimaFittingMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_ArimaFittingMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_ArimaFittingMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_ArimaFittingMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_ArimaFittingMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_ArimaFittingMetrics& from) {
    Model_ArimaFittingMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_ArimaFittingMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.ArimaFittingMetrics";
  }
  protected:
  explicit Model_ArimaFittingMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogLikelihoodFieldNumber = 1,
    kAicFieldNumber = 2,
    kVarianceFieldNumber = 3,
  };
  // double log_likelihood = 1;
  void clear_log_likelihood();
  double log_likelihood() const;
  void set_log_likelihood(double value);
  private:
  double _internal_log_likelihood() const;
  void _internal_set_log_likelihood(double value);
  public:

  // double aic = 2;
  void clear_aic();
  double aic() const;
  void set_aic(double value);
  private:
  double _internal_aic() const;
  void _internal_set_aic(double value);
  public:

  // double variance = 3;
  void clear_variance();
  double variance() const;
  void set_variance(double value);
  private:
  double _internal_variance() const;
  void _internal_set_variance(double value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.ArimaFittingMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double log_likelihood_;
    double aic_;
    double variance_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_GlobalExplanation_Explanation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation) */ {
 public:
  inline Model_GlobalExplanation_Explanation() : Model_GlobalExplanation_Explanation(nullptr) {}
  ~Model_GlobalExplanation_Explanation() override;
  explicit PROTOBUF_CONSTEXPR Model_GlobalExplanation_Explanation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_GlobalExplanation_Explanation(const Model_GlobalExplanation_Explanation& from);
  Model_GlobalExplanation_Explanation(Model_GlobalExplanation_Explanation&& from) noexcept
    : Model_GlobalExplanation_Explanation() {
    *this = ::std::move(from);
  }

  inline Model_GlobalExplanation_Explanation& operator=(const Model_GlobalExplanation_Explanation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_GlobalExplanation_Explanation& operator=(Model_GlobalExplanation_Explanation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_GlobalExplanation_Explanation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_GlobalExplanation_Explanation* internal_default_instance() {
    return reinterpret_cast<const Model_GlobalExplanation_Explanation*>(
               &_Model_GlobalExplanation_Explanation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Model_GlobalExplanation_Explanation& a, Model_GlobalExplanation_Explanation& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_GlobalExplanation_Explanation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_GlobalExplanation_Explanation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_GlobalExplanation_Explanation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_GlobalExplanation_Explanation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_GlobalExplanation_Explanation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_GlobalExplanation_Explanation& from) {
    Model_GlobalExplanation_Explanation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_GlobalExplanation_Explanation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation";
  }
  protected:
  explicit Model_GlobalExplanation_Explanation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeatureNameFieldNumber = 1,
    kAttributionFieldNumber = 2,
  };
  // string feature_name = 1;
  void clear_feature_name();
  const std::string& feature_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_feature_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_feature_name();
  PROTOBUF_NODISCARD std::string* release_feature_name();
  void set_allocated_feature_name(std::string* feature_name);
  private:
  const std::string& _internal_feature_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_feature_name(const std::string& value);
  std::string* _internal_mutable_feature_name();
  public:

  // .google.protobuf.DoubleValue attribution = 2;
  bool has_attribution() const;
  private:
  bool _internal_has_attribution() const;
  public:
  void clear_attribution();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& attribution() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_attribution();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_attribution();
  void set_allocated_attribution(::PROTOBUF_NAMESPACE_ID::DoubleValue* attribution);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_attribution() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_attribution();
  public:
  void unsafe_arena_set_allocated_attribution(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* attribution);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_attribution();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr feature_name_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* attribution_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_GlobalExplanation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.GlobalExplanation) */ {
 public:
  inline Model_GlobalExplanation() : Model_GlobalExplanation(nullptr) {}
  ~Model_GlobalExplanation() override;
  explicit PROTOBUF_CONSTEXPR Model_GlobalExplanation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_GlobalExplanation(const Model_GlobalExplanation& from);
  Model_GlobalExplanation(Model_GlobalExplanation&& from) noexcept
    : Model_GlobalExplanation() {
    *this = ::std::move(from);
  }

  inline Model_GlobalExplanation& operator=(const Model_GlobalExplanation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_GlobalExplanation& operator=(Model_GlobalExplanation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_GlobalExplanation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_GlobalExplanation* internal_default_instance() {
    return reinterpret_cast<const Model_GlobalExplanation*>(
               &_Model_GlobalExplanation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(Model_GlobalExplanation& a, Model_GlobalExplanation& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_GlobalExplanation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_GlobalExplanation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_GlobalExplanation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_GlobalExplanation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_GlobalExplanation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_GlobalExplanation& from) {
    Model_GlobalExplanation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_GlobalExplanation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.GlobalExplanation";
  }
  protected:
  explicit Model_GlobalExplanation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_GlobalExplanation_Explanation Explanation;

  // accessors -------------------------------------------------------

  enum : int {
    kExplanationsFieldNumber = 1,
    kClassLabelFieldNumber = 2,
  };
  // repeated .google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation explanations = 1;
  int explanations_size() const;
  private:
  int _internal_explanations_size() const;
  public:
  void clear_explanations();
  ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* mutable_explanations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation >*
      mutable_explanations();
  private:
  const ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation& _internal_explanations(int index) const;
  ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* _internal_add_explanations();
  public:
  const ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation& explanations(int index) const;
  ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* add_explanations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation >&
      explanations() const;

  // string class_label = 2;
  void clear_class_label();
  const std::string& class_label() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_class_label(ArgT0&& arg0, ArgT... args);
  std::string* mutable_class_label();
  PROTOBUF_NODISCARD std::string* release_class_label();
  void set_allocated_class_label(std::string* class_label);
  private:
  const std::string& _internal_class_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_class_label(const std::string& value);
  std::string* _internal_mutable_class_label();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.GlobalExplanation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation > explanations_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr class_label_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> SuperType;
  Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse& other);
  static const Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse*>(&_Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.LabelClassWeightsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};

// -------------------------------------------------------------------

class Model_TrainingRun_TrainingOptions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions) */ {
 public:
  inline Model_TrainingRun_TrainingOptions() : Model_TrainingRun_TrainingOptions(nullptr) {}
  ~Model_TrainingRun_TrainingOptions() override;
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun_TrainingOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_TrainingRun_TrainingOptions(const Model_TrainingRun_TrainingOptions& from);
  Model_TrainingRun_TrainingOptions(Model_TrainingRun_TrainingOptions&& from) noexcept
    : Model_TrainingRun_TrainingOptions() {
    *this = ::std::move(from);
  }

  inline Model_TrainingRun_TrainingOptions& operator=(const Model_TrainingRun_TrainingOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_TrainingRun_TrainingOptions& operator=(Model_TrainingRun_TrainingOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_TrainingRun_TrainingOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_TrainingRun_TrainingOptions* internal_default_instance() {
    return reinterpret_cast<const Model_TrainingRun_TrainingOptions*>(
               &_Model_TrainingRun_TrainingOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(Model_TrainingRun_TrainingOptions& a, Model_TrainingRun_TrainingOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_TrainingRun_TrainingOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_TrainingRun_TrainingOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_TrainingRun_TrainingOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_TrainingRun_TrainingOptions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_TrainingRun_TrainingOptions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_TrainingRun_TrainingOptions& from) {
    Model_TrainingRun_TrainingOptions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_TrainingRun_TrainingOptions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions";
  }
  protected:
  explicit Model_TrainingRun_TrainingOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kInputLabelColumnsFieldNumber = 9,
    kLabelClassWeightsFieldNumber = 17,
    kHiddenUnitsFieldNumber = 24,
    kTimeSeriesIdColumnsFieldNumber = 51,
    kDataSplitColumnFieldNumber = 12,
    kUserColumnFieldNumber = 18,
    kItemColumnFieldNumber = 19,
    kModelUriFieldNumber = 22,
    kKmeansInitializationColumnFieldNumber = 34,
    kTimeSeriesTimestampColumnFieldNumber = 35,
    kTimeSeriesDataColumnFieldNumber = 36,
    kTimeSeriesIdColumnFieldNumber = 43,
    kL1RegularizationFieldNumber = 4,
    kL2RegularizationFieldNumber = 5,
    kMinRelativeProgressFieldNumber = 6,
    kWarmStartFieldNumber = 7,
    kEarlyStopFieldNumber = 8,
    kDropoutFieldNumber = 26,
    kMinSplitLossFieldNumber = 29,
    kWalsAlphaFieldNumber = 32,
    kNonSeasonalOrderFieldNumber = 38,
    kDecomposeTimeSeriesFieldNumber = 50,
    kCleanSpikesAndDipsFieldNumber = 52,
    kAdjustStepChangesFieldNumber = 53,
    kMaxIterationsFieldNumber = 1,
    kLearnRateFieldNumber = 3,
    kLossTypeFieldNumber = 2,
    kDataSplitMethodFieldNumber = 10,
    kDataSplitEvalFractionFieldNumber = 11,
    kInitialLearnRateFieldNumber = 16,
    kLearnRateStrategyFieldNumber = 13,
    kDistanceTypeFieldNumber = 20,
    kNumClustersFieldNumber = 21,
    kBatchSizeFieldNumber = 25,
    kMaxTreeDepthFieldNumber = 27,
    kOptimizationStrategyFieldNumber = 23,
    kFeedbackTypeFieldNumber = 31,
    kSubsampleFieldNumber = 28,
    kNumFactorsFieldNumber = 30,
    kKmeansInitializationMethodFieldNumber = 33,
    kDataFrequencyFieldNumber = 39,
    kAutoArimaFieldNumber = 37,
    kIncludeDriftFieldNumber = 41,
    kPreserveInputStructsFieldNumber = 45,
    kHolidayRegionFieldNumber = 42,
    kHorizonFieldNumber = 44,
    kAutoArimaMaxOrderFieldNumber = 46,
  };
  // repeated string input_label_columns = 9;
  int input_label_columns_size() const;
  private:
  int _internal_input_label_columns_size() const;
  public:
  void clear_input_label_columns();
  const std::string& input_label_columns(int index) const;
  std::string* mutable_input_label_columns(int index);
  void set_input_label_columns(int index, const std::string& value);
  void set_input_label_columns(int index, std::string&& value);
  void set_input_label_columns(int index, const char* value);
  void set_input_label_columns(int index, const char* value, size_t size);
  std::string* add_input_label_columns();
  void add_input_label_columns(const std::string& value);
  void add_input_label_columns(std::string&& value);
  void add_input_label_columns(const char* value);
  void add_input_label_columns(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& input_label_columns() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_input_label_columns();
  private:
  const std::string& _internal_input_label_columns(int index) const;
  std::string* _internal_add_input_label_columns();
  public:

  // map<string, double> label_class_weights = 17;
  int label_class_weights_size() const;
  private:
  int _internal_label_class_weights_size() const;
  public:
  void clear_label_class_weights();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      _internal_label_class_weights() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      _internal_mutable_label_class_weights();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      label_class_weights() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      mutable_label_class_weights();

  // repeated int64 hidden_units = 24;
  int hidden_units_size() const;
  private:
  int _internal_hidden_units_size() const;
  public:
  void clear_hidden_units();
  private:
  int64_t _internal_hidden_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_hidden_units() const;
  void _internal_add_hidden_units(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_hidden_units();
  public:
  int64_t hidden_units(int index) const;
  void set_hidden_units(int index, int64_t value);
  void add_hidden_units(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      hidden_units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_hidden_units();

  // repeated string time_series_id_columns = 51;
  int time_series_id_columns_size() const;
  private:
  int _internal_time_series_id_columns_size() const;
  public:
  void clear_time_series_id_columns();
  const std::string& time_series_id_columns(int index) const;
  std::string* mutable_time_series_id_columns(int index);
  void set_time_series_id_columns(int index, const std::string& value);
  void set_time_series_id_columns(int index, std::string&& value);
  void set_time_series_id_columns(int index, const char* value);
  void set_time_series_id_columns(int index, const char* value, size_t size);
  std::string* add_time_series_id_columns();
  void add_time_series_id_columns(const std::string& value);
  void add_time_series_id_columns(std::string&& value);
  void add_time_series_id_columns(const char* value);
  void add_time_series_id_columns(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& time_series_id_columns() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_time_series_id_columns();
  private:
  const std::string& _internal_time_series_id_columns(int index) const;
  std::string* _internal_add_time_series_id_columns();
  public:

  // string data_split_column = 12;
  void clear_data_split_column();
  const std::string& data_split_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data_split_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data_split_column();
  PROTOBUF_NODISCARD std::string* release_data_split_column();
  void set_allocated_data_split_column(std::string* data_split_column);
  private:
  const std::string& _internal_data_split_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_split_column(const std::string& value);
  std::string* _internal_mutable_data_split_column();
  public:

  // string user_column = 18;
  void clear_user_column();
  const std::string& user_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_user_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_user_column();
  PROTOBUF_NODISCARD std::string* release_user_column();
  void set_allocated_user_column(std::string* user_column);
  private:
  const std::string& _internal_user_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_column(const std::string& value);
  std::string* _internal_mutable_user_column();
  public:

  // string item_column = 19;
  void clear_item_column();
  const std::string& item_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_item_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_item_column();
  PROTOBUF_NODISCARD std::string* release_item_column();
  void set_allocated_item_column(std::string* item_column);
  private:
  const std::string& _internal_item_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_item_column(const std::string& value);
  std::string* _internal_mutable_item_column();
  public:

  // string model_uri = 22;
  void clear_model_uri();
  const std::string& model_uri() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_model_uri(ArgT0&& arg0, ArgT... args);
  std::string* mutable_model_uri();
  PROTOBUF_NODISCARD std::string* release_model_uri();
  void set_allocated_model_uri(std::string* model_uri);
  private:
  const std::string& _internal_model_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_uri(const std::string& value);
  std::string* _internal_mutable_model_uri();
  public:

  // string kmeans_initialization_column = 34;
  void clear_kmeans_initialization_column();
  const std::string& kmeans_initialization_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_kmeans_initialization_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_kmeans_initialization_column();
  PROTOBUF_NODISCARD std::string* release_kmeans_initialization_column();
  void set_allocated_kmeans_initialization_column(std::string* kmeans_initialization_column);
  private:
  const std::string& _internal_kmeans_initialization_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kmeans_initialization_column(const std::string& value);
  std::string* _internal_mutable_kmeans_initialization_column();
  public:

  // string time_series_timestamp_column = 35;
  void clear_time_series_timestamp_column();
  const std::string& time_series_timestamp_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_time_series_timestamp_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_time_series_timestamp_column();
  PROTOBUF_NODISCARD std::string* release_time_series_timestamp_column();
  void set_allocated_time_series_timestamp_column(std::string* time_series_timestamp_column);
  private:
  const std::string& _internal_time_series_timestamp_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_series_timestamp_column(const std::string& value);
  std::string* _internal_mutable_time_series_timestamp_column();
  public:

  // string time_series_data_column = 36;
  void clear_time_series_data_column();
  const std::string& time_series_data_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_time_series_data_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_time_series_data_column();
  PROTOBUF_NODISCARD std::string* release_time_series_data_column();
  void set_allocated_time_series_data_column(std::string* time_series_data_column);
  private:
  const std::string& _internal_time_series_data_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_series_data_column(const std::string& value);
  std::string* _internal_mutable_time_series_data_column();
  public:

  // string time_series_id_column = 43;
  void clear_time_series_id_column();
  const std::string& time_series_id_column() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_time_series_id_column(ArgT0&& arg0, ArgT... args);
  std::string* mutable_time_series_id_column();
  PROTOBUF_NODISCARD std::string* release_time_series_id_column();
  void set_allocated_time_series_id_column(std::string* time_series_id_column);
  private:
  const std::string& _internal_time_series_id_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_series_id_column(const std::string& value);
  std::string* _internal_mutable_time_series_id_column();
  public:

  // .google.protobuf.DoubleValue l1_regularization = 4;
  bool has_l1_regularization() const;
  private:
  bool _internal_has_l1_regularization() const;
  public:
  void clear_l1_regularization();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& l1_regularization() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_l1_regularization();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_l1_regularization();
  void set_allocated_l1_regularization(::PROTOBUF_NAMESPACE_ID::DoubleValue* l1_regularization);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_l1_regularization() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_l1_regularization();
  public:
  void unsafe_arena_set_allocated_l1_regularization(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* l1_regularization);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_l1_regularization();

  // .google.protobuf.DoubleValue l2_regularization = 5;
  bool has_l2_regularization() const;
  private:
  bool _internal_has_l2_regularization() const;
  public:
  void clear_l2_regularization();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& l2_regularization() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_l2_regularization();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_l2_regularization();
  void set_allocated_l2_regularization(::PROTOBUF_NAMESPACE_ID::DoubleValue* l2_regularization);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_l2_regularization() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_l2_regularization();
  public:
  void unsafe_arena_set_allocated_l2_regularization(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* l2_regularization);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_l2_regularization();

  // .google.protobuf.DoubleValue min_relative_progress = 6;
  bool has_min_relative_progress() const;
  private:
  bool _internal_has_min_relative_progress() const;
  public:
  void clear_min_relative_progress();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& min_relative_progress() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_min_relative_progress();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_min_relative_progress();
  void set_allocated_min_relative_progress(::PROTOBUF_NAMESPACE_ID::DoubleValue* min_relative_progress);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_min_relative_progress() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_min_relative_progress();
  public:
  void unsafe_arena_set_allocated_min_relative_progress(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* min_relative_progress);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_min_relative_progress();

  // .google.protobuf.BoolValue warm_start = 7;
  bool has_warm_start() const;
  private:
  bool _internal_has_warm_start() const;
  public:
  void clear_warm_start();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& warm_start() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_warm_start();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_warm_start();
  void set_allocated_warm_start(::PROTOBUF_NAMESPACE_ID::BoolValue* warm_start);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_warm_start() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_warm_start();
  public:
  void unsafe_arena_set_allocated_warm_start(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* warm_start);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_warm_start();

  // .google.protobuf.BoolValue early_stop = 8;
  bool has_early_stop() const;
  private:
  bool _internal_has_early_stop() const;
  public:
  void clear_early_stop();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& early_stop() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_early_stop();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_early_stop();
  void set_allocated_early_stop(::PROTOBUF_NAMESPACE_ID::BoolValue* early_stop);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_early_stop() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_early_stop();
  public:
  void unsafe_arena_set_allocated_early_stop(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* early_stop);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_early_stop();

  // .google.protobuf.DoubleValue dropout = 26;
  bool has_dropout() const;
  private:
  bool _internal_has_dropout() const;
  public:
  void clear_dropout();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& dropout() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_dropout();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_dropout();
  void set_allocated_dropout(::PROTOBUF_NAMESPACE_ID::DoubleValue* dropout);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_dropout() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_dropout();
  public:
  void unsafe_arena_set_allocated_dropout(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* dropout);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_dropout();

  // .google.protobuf.DoubleValue min_split_loss = 29;
  bool has_min_split_loss() const;
  private:
  bool _internal_has_min_split_loss() const;
  public:
  void clear_min_split_loss();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& min_split_loss() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_min_split_loss();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_min_split_loss();
  void set_allocated_min_split_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* min_split_loss);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_min_split_loss() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_min_split_loss();
  public:
  void unsafe_arena_set_allocated_min_split_loss(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* min_split_loss);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_min_split_loss();

  // .google.protobuf.DoubleValue wals_alpha = 32;
  bool has_wals_alpha() const;
  private:
  bool _internal_has_wals_alpha() const;
  public:
  void clear_wals_alpha();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& wals_alpha() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_wals_alpha();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_wals_alpha();
  void set_allocated_wals_alpha(::PROTOBUF_NAMESPACE_ID::DoubleValue* wals_alpha);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_wals_alpha() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_wals_alpha();
  public:
  void unsafe_arena_set_allocated_wals_alpha(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* wals_alpha);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_wals_alpha();

  // .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 38;
  bool has_non_seasonal_order() const;
  private:
  bool _internal_has_non_seasonal_order() const;
  public:
  void clear_non_seasonal_order();
  const ::google::cloud::bigquery::v2::Model_ArimaOrder& non_seasonal_order() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ArimaOrder* release_non_seasonal_order();
  ::google::cloud::bigquery::v2::Model_ArimaOrder* mutable_non_seasonal_order();
  void set_allocated_non_seasonal_order(::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order);
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaOrder& _internal_non_seasonal_order() const;
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _internal_mutable_non_seasonal_order();
  public:
  void unsafe_arena_set_allocated_non_seasonal_order(
      ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order);
  ::google::cloud::bigquery::v2::Model_ArimaOrder* unsafe_arena_release_non_seasonal_order();

  // .google.protobuf.BoolValue decompose_time_series = 50;
  bool has_decompose_time_series() const;
  private:
  bool _internal_has_decompose_time_series() const;
  public:
  void clear_decompose_time_series();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& decompose_time_series() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_decompose_time_series();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_decompose_time_series();
  void set_allocated_decompose_time_series(::PROTOBUF_NAMESPACE_ID::BoolValue* decompose_time_series);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_decompose_time_series() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_decompose_time_series();
  public:
  void unsafe_arena_set_allocated_decompose_time_series(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* decompose_time_series);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_decompose_time_series();

  // .google.protobuf.BoolValue clean_spikes_and_dips = 52;
  bool has_clean_spikes_and_dips() const;
  private:
  bool _internal_has_clean_spikes_and_dips() const;
  public:
  void clear_clean_spikes_and_dips();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& clean_spikes_and_dips() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_clean_spikes_and_dips();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_clean_spikes_and_dips();
  void set_allocated_clean_spikes_and_dips(::PROTOBUF_NAMESPACE_ID::BoolValue* clean_spikes_and_dips);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_clean_spikes_and_dips() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_clean_spikes_and_dips();
  public:
  void unsafe_arena_set_allocated_clean_spikes_and_dips(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* clean_spikes_and_dips);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_clean_spikes_and_dips();

  // .google.protobuf.BoolValue adjust_step_changes = 53;
  bool has_adjust_step_changes() const;
  private:
  bool _internal_has_adjust_step_changes() const;
  public:
  void clear_adjust_step_changes();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& adjust_step_changes() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_adjust_step_changes();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_adjust_step_changes();
  void set_allocated_adjust_step_changes(::PROTOBUF_NAMESPACE_ID::BoolValue* adjust_step_changes);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_adjust_step_changes() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_adjust_step_changes();
  public:
  void unsafe_arena_set_allocated_adjust_step_changes(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* adjust_step_changes);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_adjust_step_changes();

  // int64 max_iterations = 1;
  void clear_max_iterations();
  int64_t max_iterations() const;
  void set_max_iterations(int64_t value);
  private:
  int64_t _internal_max_iterations() const;
  void _internal_set_max_iterations(int64_t value);
  public:

  // double learn_rate = 3;
  void clear_learn_rate();
  double learn_rate() const;
  void set_learn_rate(double value);
  private:
  double _internal_learn_rate() const;
  void _internal_set_learn_rate(double value);
  public:

  // .google.cloud.bigquery.v2.Model.LossType loss_type = 2;
  void clear_loss_type();
  ::google::cloud::bigquery::v2::Model_LossType loss_type() const;
  void set_loss_type(::google::cloud::bigquery::v2::Model_LossType value);
  private:
  ::google::cloud::bigquery::v2::Model_LossType _internal_loss_type() const;
  void _internal_set_loss_type(::google::cloud::bigquery::v2::Model_LossType value);
  public:

  // .google.cloud.bigquery.v2.Model.DataSplitMethod data_split_method = 10;
  void clear_data_split_method();
  ::google::cloud::bigquery::v2::Model_DataSplitMethod data_split_method() const;
  void set_data_split_method(::google::cloud::bigquery::v2::Model_DataSplitMethod value);
  private:
  ::google::cloud::bigquery::v2::Model_DataSplitMethod _internal_data_split_method() const;
  void _internal_set_data_split_method(::google::cloud::bigquery::v2::Model_DataSplitMethod value);
  public:

  // double data_split_eval_fraction = 11;
  void clear_data_split_eval_fraction();
  double data_split_eval_fraction() const;
  void set_data_split_eval_fraction(double value);
  private:
  double _internal_data_split_eval_fraction() const;
  void _internal_set_data_split_eval_fraction(double value);
  public:

  // double initial_learn_rate = 16;
  void clear_initial_learn_rate();
  double initial_learn_rate() const;
  void set_initial_learn_rate(double value);
  private:
  double _internal_initial_learn_rate() const;
  void _internal_set_initial_learn_rate(double value);
  public:

  // .google.cloud.bigquery.v2.Model.LearnRateStrategy learn_rate_strategy = 13;
  void clear_learn_rate_strategy();
  ::google::cloud::bigquery::v2::Model_LearnRateStrategy learn_rate_strategy() const;
  void set_learn_rate_strategy(::google::cloud::bigquery::v2::Model_LearnRateStrategy value);
  private:
  ::google::cloud::bigquery::v2::Model_LearnRateStrategy _internal_learn_rate_strategy() const;
  void _internal_set_learn_rate_strategy(::google::cloud::bigquery::v2::Model_LearnRateStrategy value);
  public:

  // .google.cloud.bigquery.v2.Model.DistanceType distance_type = 20;
  void clear_distance_type();
  ::google::cloud::bigquery::v2::Model_DistanceType distance_type() const;
  void set_distance_type(::google::cloud::bigquery::v2::Model_DistanceType value);
  private:
  ::google::cloud::bigquery::v2::Model_DistanceType _internal_distance_type() const;
  void _internal_set_distance_type(::google::cloud::bigquery::v2::Model_DistanceType value);
  public:

  // int64 num_clusters = 21;
  void clear_num_clusters();
  int64_t num_clusters() const;
  void set_num_clusters(int64_t value);
  private:
  int64_t _internal_num_clusters() const;
  void _internal_set_num_clusters(int64_t value);
  public:

  // int64 batch_size = 25;
  void clear_batch_size();
  int64_t batch_size() const;
  void set_batch_size(int64_t value);
  private:
  int64_t _internal_batch_size() const;
  void _internal_set_batch_size(int64_t value);
  public:

  // int64 max_tree_depth = 27;
  void clear_max_tree_depth();
  int64_t max_tree_depth() const;
  void set_max_tree_depth(int64_t value);
  private:
  int64_t _internal_max_tree_depth() const;
  void _internal_set_max_tree_depth(int64_t value);
  public:

  // .google.cloud.bigquery.v2.Model.OptimizationStrategy optimization_strategy = 23;
  void clear_optimization_strategy();
  ::google::cloud::bigquery::v2::Model_OptimizationStrategy optimization_strategy() const;
  void set_optimization_strategy(::google::cloud::bigquery::v2::Model_OptimizationStrategy value);
  private:
  ::google::cloud::bigquery::v2::Model_OptimizationStrategy _internal_optimization_strategy() const;
  void _internal_set_optimization_strategy(::google::cloud::bigquery::v2::Model_OptimizationStrategy value);
  public:

  // .google.cloud.bigquery.v2.Model.FeedbackType feedback_type = 31;
  void clear_feedback_type();
  ::google::cloud::bigquery::v2::Model_FeedbackType feedback_type() const;
  void set_feedback_type(::google::cloud::bigquery::v2::Model_FeedbackType value);
  private:
  ::google::cloud::bigquery::v2::Model_FeedbackType _internal_feedback_type() const;
  void _internal_set_feedback_type(::google::cloud::bigquery::v2::Model_FeedbackType value);
  public:

  // double subsample = 28;
  void clear_subsample();
  double subsample() const;
  void set_subsample(double value);
  private:
  double _internal_subsample() const;
  void _internal_set_subsample(double value);
  public:

  // int64 num_factors = 30;
  void clear_num_factors();
  int64_t num_factors() const;
  void set_num_factors(int64_t value);
  private:
  int64_t _internal_num_factors() const;
  void _internal_set_num_factors(int64_t value);
  public:

  // .google.cloud.bigquery.v2.Model.KmeansEnums.KmeansInitializationMethod kmeans_initialization_method = 33;
  void clear_kmeans_initialization_method();
  ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod kmeans_initialization_method() const;
  void set_kmeans_initialization_method(::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod value);
  private:
  ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod _internal_kmeans_initialization_method() const;
  void _internal_set_kmeans_initialization_method(::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod value);
  public:

  // .google.cloud.bigquery.v2.Model.DataFrequency data_frequency = 39;
  void clear_data_frequency();
  ::google::cloud::bigquery::v2::Model_DataFrequency data_frequency() const;
  void set_data_frequency(::google::cloud::bigquery::v2::Model_DataFrequency value);
  private:
  ::google::cloud::bigquery::v2::Model_DataFrequency _internal_data_frequency() const;
  void _internal_set_data_frequency(::google::cloud::bigquery::v2::Model_DataFrequency value);
  public:

  // bool auto_arima = 37;
  void clear_auto_arima();
  bool auto_arima() const;
  void set_auto_arima(bool value);
  private:
  bool _internal_auto_arima() const;
  void _internal_set_auto_arima(bool value);
  public:

  // bool include_drift = 41;
  void clear_include_drift();
  bool include_drift() const;
  void set_include_drift(bool value);
  private:
  bool _internal_include_drift() const;
  void _internal_set_include_drift(bool value);
  public:

  // bool preserve_input_structs = 45;
  void clear_preserve_input_structs();
  bool preserve_input_structs() const;
  void set_preserve_input_structs(bool value);
  private:
  bool _internal_preserve_input_structs() const;
  void _internal_set_preserve_input_structs(bool value);
  public:

  // .google.cloud.bigquery.v2.Model.HolidayRegion holiday_region = 42;
  void clear_holiday_region();
  ::google::cloud::bigquery::v2::Model_HolidayRegion holiday_region() const;
  void set_holiday_region(::google::cloud::bigquery::v2::Model_HolidayRegion value);
  private:
  ::google::cloud::bigquery::v2::Model_HolidayRegion _internal_holiday_region() const;
  void _internal_set_holiday_region(::google::cloud::bigquery::v2::Model_HolidayRegion value);
  public:

  // int64 horizon = 44;
  void clear_horizon();
  int64_t horizon() const;
  void set_horizon(int64_t value);
  private:
  int64_t _internal_horizon() const;
  void _internal_set_horizon(int64_t value);
  public:

  // int64 auto_arima_max_order = 46;
  void clear_auto_arima_max_order();
  int64_t auto_arima_max_order() const;
  void set_auto_arima_max_order(int64_t value);
  private:
  int64_t _internal_auto_arima_max_order() const;
  void _internal_set_auto_arima_max_order(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> input_label_columns_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        Model_TrainingRun_TrainingOptions_LabelClassWeightsEntry_DoNotUse,
        std::string, double,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> label_class_weights_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > hidden_units_;
    mutable std::atomic<int> _hidden_units_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> time_series_id_columns_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_split_column_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_column_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_column_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_uri_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kmeans_initialization_column_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_series_timestamp_column_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_series_data_column_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_series_id_column_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* l1_regularization_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* l2_regularization_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* min_relative_progress_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* warm_start_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* early_stop_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* dropout_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* min_split_loss_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* wals_alpha_;
    ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* decompose_time_series_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* clean_spikes_and_dips_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* adjust_step_changes_;
    int64_t max_iterations_;
    double learn_rate_;
    int loss_type_;
    int data_split_method_;
    double data_split_eval_fraction_;
    double initial_learn_rate_;
    int learn_rate_strategy_;
    int distance_type_;
    int64_t num_clusters_;
    int64_t batch_size_;
    int64_t max_tree_depth_;
    int optimization_strategy_;
    int feedback_type_;
    double subsample_;
    int64_t num_factors_;
    int kmeans_initialization_method_;
    int data_frequency_;
    bool auto_arima_;
    bool include_drift_;
    bool preserve_input_structs_;
    int holiday_region_;
    int64_t horizon_;
    int64_t auto_arima_max_order_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_TrainingRun_IterationResult_ClusterInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo) */ {
 public:
  inline Model_TrainingRun_IterationResult_ClusterInfo() : Model_TrainingRun_IterationResult_ClusterInfo(nullptr) {}
  ~Model_TrainingRun_IterationResult_ClusterInfo() override;
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun_IterationResult_ClusterInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_TrainingRun_IterationResult_ClusterInfo(const Model_TrainingRun_IterationResult_ClusterInfo& from);
  Model_TrainingRun_IterationResult_ClusterInfo(Model_TrainingRun_IterationResult_ClusterInfo&& from) noexcept
    : Model_TrainingRun_IterationResult_ClusterInfo() {
    *this = ::std::move(from);
  }

  inline Model_TrainingRun_IterationResult_ClusterInfo& operator=(const Model_TrainingRun_IterationResult_ClusterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_TrainingRun_IterationResult_ClusterInfo& operator=(Model_TrainingRun_IterationResult_ClusterInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_TrainingRun_IterationResult_ClusterInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_TrainingRun_IterationResult_ClusterInfo* internal_default_instance() {
    return reinterpret_cast<const Model_TrainingRun_IterationResult_ClusterInfo*>(
               &_Model_TrainingRun_IterationResult_ClusterInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(Model_TrainingRun_IterationResult_ClusterInfo& a, Model_TrainingRun_IterationResult_ClusterInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_TrainingRun_IterationResult_ClusterInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_TrainingRun_IterationResult_ClusterInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_TrainingRun_IterationResult_ClusterInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_TrainingRun_IterationResult_ClusterInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_TrainingRun_IterationResult_ClusterInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_TrainingRun_IterationResult_ClusterInfo& from) {
    Model_TrainingRun_IterationResult_ClusterInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_TrainingRun_IterationResult_ClusterInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo";
  }
  protected:
  explicit Model_TrainingRun_IterationResult_ClusterInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClusterRadiusFieldNumber = 2,
    kClusterSizeFieldNumber = 3,
    kCentroidIdFieldNumber = 1,
  };
  // .google.protobuf.DoubleValue cluster_radius = 2;
  bool has_cluster_radius() const;
  private:
  bool _internal_has_cluster_radius() const;
  public:
  void clear_cluster_radius();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& cluster_radius() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_cluster_radius();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_cluster_radius();
  void set_allocated_cluster_radius(::PROTOBUF_NAMESPACE_ID::DoubleValue* cluster_radius);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_cluster_radius() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_cluster_radius();
  public:
  void unsafe_arena_set_allocated_cluster_radius(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* cluster_radius);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_cluster_radius();

  // .google.protobuf.Int64Value cluster_size = 3;
  bool has_cluster_size() const;
  private:
  bool _internal_has_cluster_size() const;
  public:
  void clear_cluster_size();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& cluster_size() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_cluster_size();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_cluster_size();
  void set_allocated_cluster_size(::PROTOBUF_NAMESPACE_ID::Int64Value* cluster_size);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_cluster_size() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_cluster_size();
  public:
  void unsafe_arena_set_allocated_cluster_size(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* cluster_size);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_cluster_size();

  // int64 centroid_id = 1;
  void clear_centroid_id();
  int64_t centroid_id() const;
  void set_centroid_id(int64_t value);
  private:
  int64_t _internal_centroid_id() const;
  void _internal_set_centroid_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* cluster_radius_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* cluster_size_;
    int64_t centroid_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients) */ {
 public:
  inline Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients() : Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients(nullptr) {}
  ~Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients() override;
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients(const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& from);
  Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients(Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients&& from) noexcept
    : Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients() {
    *this = ::std::move(from);
  }

  inline Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& operator=(const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& operator=(Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* internal_default_instance() {
    return reinterpret_cast<const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients*>(
               &_Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& a, Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& from) {
    Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients";
  }
  protected:
  explicit Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutoRegressiveCoefficientsFieldNumber = 1,
    kMovingAverageCoefficientsFieldNumber = 2,
    kInterceptCoefficientFieldNumber = 3,
  };
  // repeated double auto_regressive_coefficients = 1;
  int auto_regressive_coefficients_size() const;
  private:
  int _internal_auto_regressive_coefficients_size() const;
  public:
  void clear_auto_regressive_coefficients();
  private:
  double _internal_auto_regressive_coefficients(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_auto_regressive_coefficients() const;
  void _internal_add_auto_regressive_coefficients(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_auto_regressive_coefficients();
  public:
  double auto_regressive_coefficients(int index) const;
  void set_auto_regressive_coefficients(int index, double value);
  void add_auto_regressive_coefficients(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      auto_regressive_coefficients() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_auto_regressive_coefficients();

  // repeated double moving_average_coefficients = 2;
  int moving_average_coefficients_size() const;
  private:
  int _internal_moving_average_coefficients_size() const;
  public:
  void clear_moving_average_coefficients();
  private:
  double _internal_moving_average_coefficients(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_moving_average_coefficients() const;
  void _internal_add_moving_average_coefficients(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_moving_average_coefficients();
  public:
  double moving_average_coefficients(int index) const;
  void set_moving_average_coefficients(int index, double value);
  void add_moving_average_coefficients(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      moving_average_coefficients() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_moving_average_coefficients();

  // double intercept_coefficient = 3;
  void clear_intercept_coefficient();
  double intercept_coefficient() const;
  void set_intercept_coefficient(double value);
  private:
  double _internal_intercept_coefficient() const;
  void _internal_set_intercept_coefficient(double value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > auto_regressive_coefficients_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > moving_average_coefficients_;
    double intercept_coefficient_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo) */ {
 public:
  inline Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo() : Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo(nullptr) {}
  ~Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo() override;
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo(const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& from);
  Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo(Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo&& from) noexcept
    : Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo() {
    *this = ::std::move(from);
  }

  inline Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& operator=(const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& operator=(Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* internal_default_instance() {
    return reinterpret_cast<const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo*>(
               &_Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& a, Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& from) {
    Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo";
  }
  protected:
  explicit Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeasonalPeriodsFieldNumber = 6,
    kTimeSeriesIdsFieldNumber = 10,
    kTimeSeriesIdFieldNumber = 5,
    kNonSeasonalOrderFieldNumber = 1,
    kArimaCoefficientsFieldNumber = 2,
    kArimaFittingMetricsFieldNumber = 3,
    kHasHolidayEffectFieldNumber = 7,
    kHasSpikesAndDipsFieldNumber = 8,
    kHasStepChangesFieldNumber = 9,
    kHasDriftFieldNumber = 4,
  };
  // repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 6;
  int seasonal_periods_size() const;
  private:
  int _internal_seasonal_periods_size() const;
  public:
  void clear_seasonal_periods();
  private:
  ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType _internal_seasonal_periods(int index) const;
  void _internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_seasonal_periods();
  public:
  ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType seasonal_periods(int index) const;
  void set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  void add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& seasonal_periods() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_seasonal_periods();

  // repeated string time_series_ids = 10;
  int time_series_ids_size() const;
  private:
  int _internal_time_series_ids_size() const;
  public:
  void clear_time_series_ids();
  const std::string& time_series_ids(int index) const;
  std::string* mutable_time_series_ids(int index);
  void set_time_series_ids(int index, const std::string& value);
  void set_time_series_ids(int index, std::string&& value);
  void set_time_series_ids(int index, const char* value);
  void set_time_series_ids(int index, const char* value, size_t size);
  std::string* add_time_series_ids();
  void add_time_series_ids(const std::string& value);
  void add_time_series_ids(std::string&& value);
  void add_time_series_ids(const char* value);
  void add_time_series_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& time_series_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_time_series_ids();
  private:
  const std::string& _internal_time_series_ids(int index) const;
  std::string* _internal_add_time_series_ids();
  public:

  // string time_series_id = 5;
  void clear_time_series_id();
  const std::string& time_series_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_time_series_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_time_series_id();
  PROTOBUF_NODISCARD std::string* release_time_series_id();
  void set_allocated_time_series_id(std::string* time_series_id);
  private:
  const std::string& _internal_time_series_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_series_id(const std::string& value);
  std::string* _internal_mutable_time_series_id();
  public:

  // .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1;
  bool has_non_seasonal_order() const;
  private:
  bool _internal_has_non_seasonal_order() const;
  public:
  void clear_non_seasonal_order();
  const ::google::cloud::bigquery::v2::Model_ArimaOrder& non_seasonal_order() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ArimaOrder* release_non_seasonal_order();
  ::google::cloud::bigquery::v2::Model_ArimaOrder* mutable_non_seasonal_order();
  void set_allocated_non_seasonal_order(::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order);
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaOrder& _internal_non_seasonal_order() const;
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _internal_mutable_non_seasonal_order();
  public:
  void unsafe_arena_set_allocated_non_seasonal_order(
      ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order);
  ::google::cloud::bigquery::v2::Model_ArimaOrder* unsafe_arena_release_non_seasonal_order();

  // .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients arima_coefficients = 2;
  bool has_arima_coefficients() const;
  private:
  bool _internal_has_arima_coefficients() const;
  public:
  void clear_arima_coefficients();
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& arima_coefficients() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* release_arima_coefficients();
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* mutable_arima_coefficients();
  void set_allocated_arima_coefficients(::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* arima_coefficients);
  private:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& _internal_arima_coefficients() const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* _internal_mutable_arima_coefficients();
  public:
  void unsafe_arena_set_allocated_arima_coefficients(
      ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* arima_coefficients);
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* unsafe_arena_release_arima_coefficients();

  // .google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 3;
  bool has_arima_fitting_metrics() const;
  private:
  bool _internal_has_arima_fitting_metrics() const;
  public:
  void clear_arima_fitting_metrics();
  const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& arima_fitting_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* release_arima_fitting_metrics();
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* mutable_arima_fitting_metrics();
  void set_allocated_arima_fitting_metrics(::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& _internal_arima_fitting_metrics() const;
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* _internal_mutable_arima_fitting_metrics();
  public:
  void unsafe_arena_set_allocated_arima_fitting_metrics(
      ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics);
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* unsafe_arena_release_arima_fitting_metrics();

  // .google.protobuf.BoolValue has_holiday_effect = 7;
  bool has_has_holiday_effect() const;
  private:
  bool _internal_has_has_holiday_effect() const;
  public:
  void clear_has_holiday_effect();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& has_holiday_effect() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_has_holiday_effect();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_has_holiday_effect();
  void set_allocated_has_holiday_effect(::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_has_holiday_effect() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_has_holiday_effect();
  public:
  void unsafe_arena_set_allocated_has_holiday_effect(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_has_holiday_effect();

  // .google.protobuf.BoolValue has_spikes_and_dips = 8;
  bool has_has_spikes_and_dips() const;
  private:
  bool _internal_has_has_spikes_and_dips() const;
  public:
  void clear_has_spikes_and_dips();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& has_spikes_and_dips() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_has_spikes_and_dips();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_has_spikes_and_dips();
  void set_allocated_has_spikes_and_dips(::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_has_spikes_and_dips() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_has_spikes_and_dips();
  public:
  void unsafe_arena_set_allocated_has_spikes_and_dips(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_has_spikes_and_dips();

  // .google.protobuf.BoolValue has_step_changes = 9;
  bool has_has_step_changes() const;
  private:
  bool _internal_has_has_step_changes() const;
  public:
  void clear_has_step_changes();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& has_step_changes() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_has_step_changes();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_has_step_changes();
  void set_allocated_has_step_changes(::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_has_step_changes() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_has_step_changes();
  public:
  void unsafe_arena_set_allocated_has_step_changes(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_has_step_changes();

  // bool has_drift = 4;
  void clear_has_drift();
  bool has_drift() const;
  void set_has_drift(bool value);
  private:
  bool _internal_has_drift() const;
  void _internal_set_has_drift(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> seasonal_periods_;
    mutable std::atomic<int> _seasonal_periods_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> time_series_ids_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_series_id_;
    ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order_;
    ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* arima_coefficients_;
    ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes_;
    bool has_drift_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_TrainingRun_IterationResult_ArimaResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult) */ {
 public:
  inline Model_TrainingRun_IterationResult_ArimaResult() : Model_TrainingRun_IterationResult_ArimaResult(nullptr) {}
  ~Model_TrainingRun_IterationResult_ArimaResult() override;
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun_IterationResult_ArimaResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_TrainingRun_IterationResult_ArimaResult(const Model_TrainingRun_IterationResult_ArimaResult& from);
  Model_TrainingRun_IterationResult_ArimaResult(Model_TrainingRun_IterationResult_ArimaResult&& from) noexcept
    : Model_TrainingRun_IterationResult_ArimaResult() {
    *this = ::std::move(from);
  }

  inline Model_TrainingRun_IterationResult_ArimaResult& operator=(const Model_TrainingRun_IterationResult_ArimaResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_TrainingRun_IterationResult_ArimaResult& operator=(Model_TrainingRun_IterationResult_ArimaResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_TrainingRun_IterationResult_ArimaResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_TrainingRun_IterationResult_ArimaResult* internal_default_instance() {
    return reinterpret_cast<const Model_TrainingRun_IterationResult_ArimaResult*>(
               &_Model_TrainingRun_IterationResult_ArimaResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(Model_TrainingRun_IterationResult_ArimaResult& a, Model_TrainingRun_IterationResult_ArimaResult& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_TrainingRun_IterationResult_ArimaResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_TrainingRun_IterationResult_ArimaResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_TrainingRun_IterationResult_ArimaResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_TrainingRun_IterationResult_ArimaResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_TrainingRun_IterationResult_ArimaResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_TrainingRun_IterationResult_ArimaResult& from) {
    Model_TrainingRun_IterationResult_ArimaResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_TrainingRun_IterationResult_ArimaResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult";
  }
  protected:
  explicit Model_TrainingRun_IterationResult_ArimaResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients ArimaCoefficients;
  typedef Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo ArimaModelInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kArimaModelInfoFieldNumber = 1,
    kSeasonalPeriodsFieldNumber = 2,
  };
  // repeated .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo arima_model_info = 1;
  int arima_model_info_size() const;
  private:
  int _internal_arima_model_info_size() const;
  public:
  void clear_arima_model_info();
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* mutable_arima_model_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo >*
      mutable_arima_model_info();
  private:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& _internal_arima_model_info(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* _internal_add_arima_model_info();
  public:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& arima_model_info(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* add_arima_model_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo >&
      arima_model_info() const;

  // repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 2;
  int seasonal_periods_size() const;
  private:
  int _internal_seasonal_periods_size() const;
  public:
  void clear_seasonal_periods();
  private:
  ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType _internal_seasonal_periods(int index) const;
  void _internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_seasonal_periods();
  public:
  ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType seasonal_periods(int index) const;
  void set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  void add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& seasonal_periods() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_seasonal_periods();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo > arima_model_info_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> seasonal_periods_;
    mutable std::atomic<int> _seasonal_periods_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_TrainingRun_IterationResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult) */ {
 public:
  inline Model_TrainingRun_IterationResult() : Model_TrainingRun_IterationResult(nullptr) {}
  ~Model_TrainingRun_IterationResult() override;
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun_IterationResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_TrainingRun_IterationResult(const Model_TrainingRun_IterationResult& from);
  Model_TrainingRun_IterationResult(Model_TrainingRun_IterationResult&& from) noexcept
    : Model_TrainingRun_IterationResult() {
    *this = ::std::move(from);
  }

  inline Model_TrainingRun_IterationResult& operator=(const Model_TrainingRun_IterationResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_TrainingRun_IterationResult& operator=(Model_TrainingRun_IterationResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_TrainingRun_IterationResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_TrainingRun_IterationResult* internal_default_instance() {
    return reinterpret_cast<const Model_TrainingRun_IterationResult*>(
               &_Model_TrainingRun_IterationResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(Model_TrainingRun_IterationResult& a, Model_TrainingRun_IterationResult& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_TrainingRun_IterationResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_TrainingRun_IterationResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_TrainingRun_IterationResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_TrainingRun_IterationResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_TrainingRun_IterationResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_TrainingRun_IterationResult& from) {
    Model_TrainingRun_IterationResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_TrainingRun_IterationResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.TrainingRun.IterationResult";
  }
  protected:
  explicit Model_TrainingRun_IterationResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_TrainingRun_IterationResult_ClusterInfo ClusterInfo;
  typedef Model_TrainingRun_IterationResult_ArimaResult ArimaResult;

  // accessors -------------------------------------------------------

  enum : int {
    kClusterInfosFieldNumber = 8,
    kIndexFieldNumber = 1,
    kDurationMsFieldNumber = 4,
    kTrainingLossFieldNumber = 5,
    kEvalLossFieldNumber = 6,
    kArimaResultFieldNumber = 9,
    kLearnRateFieldNumber = 7,
  };
  // repeated .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo cluster_infos = 8;
  int cluster_infos_size() const;
  private:
  int _internal_cluster_infos_size() const;
  public:
  void clear_cluster_infos();
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* mutable_cluster_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo >*
      mutable_cluster_infos();
  private:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo& _internal_cluster_infos(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* _internal_add_cluster_infos();
  public:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo& cluster_infos(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* add_cluster_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo >&
      cluster_infos() const;

  // .google.protobuf.Int32Value index = 1;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  const ::PROTOBUF_NAMESPACE_ID::Int32Value& index() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int32Value* release_index();
  ::PROTOBUF_NAMESPACE_ID::Int32Value* mutable_index();
  void set_allocated_index(::PROTOBUF_NAMESPACE_ID::Int32Value* index);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int32Value& _internal_index() const;
  ::PROTOBUF_NAMESPACE_ID::Int32Value* _internal_mutable_index();
  public:
  void unsafe_arena_set_allocated_index(
      ::PROTOBUF_NAMESPACE_ID::Int32Value* index);
  ::PROTOBUF_NAMESPACE_ID::Int32Value* unsafe_arena_release_index();

  // .google.protobuf.Int64Value duration_ms = 4;
  bool has_duration_ms() const;
  private:
  bool _internal_has_duration_ms() const;
  public:
  void clear_duration_ms();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& duration_ms() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_duration_ms();
  void set_allocated_duration_ms(::PROTOBUF_NAMESPACE_ID::Int64Value* duration_ms);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_duration_ms() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_duration_ms();
  public:
  void unsafe_arena_set_allocated_duration_ms(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* duration_ms);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_duration_ms();

  // .google.protobuf.DoubleValue training_loss = 5;
  bool has_training_loss() const;
  private:
  bool _internal_has_training_loss() const;
  public:
  void clear_training_loss();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& training_loss() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_training_loss();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_training_loss();
  void set_allocated_training_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* training_loss);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_training_loss() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_training_loss();
  public:
  void unsafe_arena_set_allocated_training_loss(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* training_loss);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_training_loss();

  // .google.protobuf.DoubleValue eval_loss = 6;
  bool has_eval_loss() const;
  private:
  bool _internal_has_eval_loss() const;
  public:
  void clear_eval_loss();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& eval_loss() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_eval_loss();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_eval_loss();
  void set_allocated_eval_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* eval_loss);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_eval_loss() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_eval_loss();
  public:
  void unsafe_arena_set_allocated_eval_loss(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* eval_loss);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_eval_loss();

  // .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult arima_result = 9;
  bool has_arima_result() const;
  private:
  bool _internal_has_arima_result() const;
  public:
  void clear_arima_result();
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult& arima_result() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* release_arima_result();
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* mutable_arima_result();
  void set_allocated_arima_result(::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* arima_result);
  private:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult& _internal_arima_result() const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* _internal_mutable_arima_result();
  public:
  void unsafe_arena_set_allocated_arima_result(
      ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* arima_result);
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* unsafe_arena_release_arima_result();

  // double learn_rate = 7;
  void clear_learn_rate();
  double learn_rate() const;
  void set_learn_rate(double value);
  private:
  double _internal_learn_rate() const;
  void _internal_set_learn_rate(double value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo > cluster_infos_;
    ::PROTOBUF_NAMESPACE_ID::Int32Value* index_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* duration_ms_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* training_loss_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* eval_loss_;
    ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* arima_result_;
    double learn_rate_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_TrainingRun final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model.TrainingRun) */ {
 public:
  inline Model_TrainingRun() : Model_TrainingRun(nullptr) {}
  ~Model_TrainingRun() override;
  explicit PROTOBUF_CONSTEXPR Model_TrainingRun(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model_TrainingRun(const Model_TrainingRun& from);
  Model_TrainingRun(Model_TrainingRun&& from) noexcept
    : Model_TrainingRun() {
    *this = ::std::move(from);
  }

  inline Model_TrainingRun& operator=(const Model_TrainingRun& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_TrainingRun& operator=(Model_TrainingRun&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model_TrainingRun& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model_TrainingRun* internal_default_instance() {
    return reinterpret_cast<const Model_TrainingRun*>(
               &_Model_TrainingRun_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(Model_TrainingRun& a, Model_TrainingRun& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_TrainingRun* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model_TrainingRun* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model_TrainingRun* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model_TrainingRun>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model_TrainingRun& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model_TrainingRun& from) {
    Model_TrainingRun::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_TrainingRun* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model.TrainingRun";
  }
  protected:
  explicit Model_TrainingRun(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_TrainingRun_TrainingOptions TrainingOptions;
  typedef Model_TrainingRun_IterationResult IterationResult;

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 6,
    kGlobalExplanationsFieldNumber = 10,
    kTrainingOptionsFieldNumber = 1,
    kEvaluationMetricsFieldNumber = 7,
    kStartTimeFieldNumber = 8,
    kDataSplitResultFieldNumber = 9,
  };
  // repeated .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult results = 6;
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult >*
      mutable_results();
  private:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult& _internal_results(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* _internal_add_results();
  public:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult& results(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult >&
      results() const;

  // repeated .google.cloud.bigquery.v2.Model.GlobalExplanation global_explanations = 10;
  int global_explanations_size() const;
  private:
  int _internal_global_explanations_size() const;
  public:
  void clear_global_explanations();
  ::google::cloud::bigquery::v2::Model_GlobalExplanation* mutable_global_explanations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation >*
      mutable_global_explanations();
  private:
  const ::google::cloud::bigquery::v2::Model_GlobalExplanation& _internal_global_explanations(int index) const;
  ::google::cloud::bigquery::v2::Model_GlobalExplanation* _internal_add_global_explanations();
  public:
  const ::google::cloud::bigquery::v2::Model_GlobalExplanation& global_explanations(int index) const;
  ::google::cloud::bigquery::v2::Model_GlobalExplanation* add_global_explanations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation >&
      global_explanations() const;

  // .google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions training_options = 1;
  bool has_training_options() const;
  private:
  bool _internal_has_training_options() const;
  public:
  void clear_training_options();
  const ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions& training_options() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* release_training_options();
  ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* mutable_training_options();
  void set_allocated_training_options(::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* training_options);
  private:
  const ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions& _internal_training_options() const;
  ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* _internal_mutable_training_options();
  public:
  void unsafe_arena_set_allocated_training_options(
      ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* training_options);
  ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* unsafe_arena_release_training_options();

  // .google.cloud.bigquery.v2.Model.EvaluationMetrics evaluation_metrics = 7;
  bool has_evaluation_metrics() const;
  private:
  bool _internal_has_evaluation_metrics() const;
  public:
  void clear_evaluation_metrics();
  const ::google::cloud::bigquery::v2::Model_EvaluationMetrics& evaluation_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_EvaluationMetrics* release_evaluation_metrics();
  ::google::cloud::bigquery::v2::Model_EvaluationMetrics* mutable_evaluation_metrics();
  void set_allocated_evaluation_metrics(::google::cloud::bigquery::v2::Model_EvaluationMetrics* evaluation_metrics);
  private:
  const ::google::cloud::bigquery::v2::Model_EvaluationMetrics& _internal_evaluation_metrics() const;
  ::google::cloud::bigquery::v2::Model_EvaluationMetrics* _internal_mutable_evaluation_metrics();
  public:
  void unsafe_arena_set_allocated_evaluation_metrics(
      ::google::cloud::bigquery::v2::Model_EvaluationMetrics* evaluation_metrics);
  ::google::cloud::bigquery::v2::Model_EvaluationMetrics* unsafe_arena_release_evaluation_metrics();

  // .google.protobuf.Timestamp start_time = 8;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& start_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_start_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_start_time();
  void set_allocated_start_time(::PROTOBUF_NAMESPACE_ID::Timestamp* start_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_start_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_start_time();
  public:
  void unsafe_arena_set_allocated_start_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* start_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_start_time();

  // .google.cloud.bigquery.v2.Model.DataSplitResult data_split_result = 9;
  bool has_data_split_result() const;
  private:
  bool _internal_has_data_split_result() const;
  public:
  void clear_data_split_result();
  const ::google::cloud::bigquery::v2::Model_DataSplitResult& data_split_result() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model_DataSplitResult* release_data_split_result();
  ::google::cloud::bigquery::v2::Model_DataSplitResult* mutable_data_split_result();
  void set_allocated_data_split_result(::google::cloud::bigquery::v2::Model_DataSplitResult* data_split_result);
  private:
  const ::google::cloud::bigquery::v2::Model_DataSplitResult& _internal_data_split_result() const;
  ::google::cloud::bigquery::v2::Model_DataSplitResult* _internal_mutable_data_split_result();
  public:
  void unsafe_arena_set_allocated_data_split_result(
      ::google::cloud::bigquery::v2::Model_DataSplitResult* data_split_result);
  ::google::cloud::bigquery::v2::Model_DataSplitResult* unsafe_arena_release_data_split_result();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model.TrainingRun)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult > results_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation > global_explanations_;
    ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* training_options_;
    ::google::cloud::bigquery::v2::Model_EvaluationMetrics* evaluation_metrics_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* start_time_;
    ::google::cloud::bigquery::v2::Model_DataSplitResult* data_split_result_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class Model_LabelsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Model_LabelsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Model_LabelsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Model_LabelsEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR Model_LabelsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit Model_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Model_LabelsEntry_DoNotUse& other);
  static const Model_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Model_LabelsEntry_DoNotUse*>(&_Model_LabelsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "google.cloud.bigquery.v2.Model.LabelsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "google.cloud.bigquery.v2.Model.LabelsEntry.value");
 }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};

// -------------------------------------------------------------------

class Model final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.Model) */ {
 public:
  inline Model() : Model(nullptr) {}
  ~Model() override;
  explicit PROTOBUF_CONSTEXPR Model(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Model(const Model& from);
  Model(Model&& from) noexcept
    : Model() {
    *this = ::std::move(from);
  }

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model& operator=(Model&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
               &_Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(Model& a, Model& b) {
    a.Swap(&b);
  }
  inline void Swap(Model* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Model>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Model& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Model& from) {
    Model::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.Model";
  }
  protected:
  explicit Model(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_SeasonalPeriod SeasonalPeriod;
  typedef Model_KmeansEnums KmeansEnums;
  typedef Model_RegressionMetrics RegressionMetrics;
  typedef Model_AggregateClassificationMetrics AggregateClassificationMetrics;
  typedef Model_BinaryClassificationMetrics BinaryClassificationMetrics;
  typedef Model_MultiClassClassificationMetrics MultiClassClassificationMetrics;
  typedef Model_ClusteringMetrics ClusteringMetrics;
  typedef Model_RankingMetrics RankingMetrics;
  typedef Model_ArimaForecastingMetrics ArimaForecastingMetrics;
  typedef Model_EvaluationMetrics EvaluationMetrics;
  typedef Model_DataSplitResult DataSplitResult;
  typedef Model_ArimaOrder ArimaOrder;
  typedef Model_ArimaFittingMetrics ArimaFittingMetrics;
  typedef Model_GlobalExplanation GlobalExplanation;
  typedef Model_TrainingRun TrainingRun;

  typedef Model_ModelType ModelType;
  static constexpr ModelType MODEL_TYPE_UNSPECIFIED =
    Model_ModelType_MODEL_TYPE_UNSPECIFIED;
  static constexpr ModelType LINEAR_REGRESSION =
    Model_ModelType_LINEAR_REGRESSION;
  static constexpr ModelType LOGISTIC_REGRESSION =
    Model_ModelType_LOGISTIC_REGRESSION;
  static constexpr ModelType KMEANS =
    Model_ModelType_KMEANS;
  static constexpr ModelType MATRIX_FACTORIZATION =
    Model_ModelType_MATRIX_FACTORIZATION;
  static constexpr ModelType DNN_CLASSIFIER =
    Model_ModelType_DNN_CLASSIFIER;
  static constexpr ModelType TENSORFLOW =
    Model_ModelType_TENSORFLOW;
  static constexpr ModelType DNN_REGRESSOR =
    Model_ModelType_DNN_REGRESSOR;
  static constexpr ModelType BOOSTED_TREE_REGRESSOR =
    Model_ModelType_BOOSTED_TREE_REGRESSOR;
  static constexpr ModelType BOOSTED_TREE_CLASSIFIER =
    Model_ModelType_BOOSTED_TREE_CLASSIFIER;
  static constexpr ModelType ARIMA =
    Model_ModelType_ARIMA;
  static constexpr ModelType AUTOML_REGRESSOR =
    Model_ModelType_AUTOML_REGRESSOR;
  static constexpr ModelType AUTOML_CLASSIFIER =
    Model_ModelType_AUTOML_CLASSIFIER;
  static constexpr ModelType ARIMA_PLUS =
    Model_ModelType_ARIMA_PLUS;
  static inline bool ModelType_IsValid(int value) {
    return Model_ModelType_IsValid(value);
  }
  static constexpr ModelType ModelType_MIN =
    Model_ModelType_ModelType_MIN;
  static constexpr ModelType ModelType_MAX =
    Model_ModelType_ModelType_MAX;
  static constexpr int ModelType_ARRAYSIZE =
    Model_ModelType_ModelType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ModelType_descriptor() {
    return Model_ModelType_descriptor();
  }
  template<typename T>
  static inline const std::string& ModelType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ModelType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ModelType_Name.");
    return Model_ModelType_Name(enum_t_value);
  }
  static inline bool ModelType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ModelType* value) {
    return Model_ModelType_Parse(name, value);
  }

  typedef Model_LossType LossType;
  static constexpr LossType LOSS_TYPE_UNSPECIFIED =
    Model_LossType_LOSS_TYPE_UNSPECIFIED;
  static constexpr LossType MEAN_SQUARED_LOSS =
    Model_LossType_MEAN_SQUARED_LOSS;
  static constexpr LossType MEAN_LOG_LOSS =
    Model_LossType_MEAN_LOG_LOSS;
  static inline bool LossType_IsValid(int value) {
    return Model_LossType_IsValid(value);
  }
  static constexpr LossType LossType_MIN =
    Model_LossType_LossType_MIN;
  static constexpr LossType LossType_MAX =
    Model_LossType_LossType_MAX;
  static constexpr int LossType_ARRAYSIZE =
    Model_LossType_LossType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  LossType_descriptor() {
    return Model_LossType_descriptor();
  }
  template<typename T>
  static inline const std::string& LossType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, LossType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function LossType_Name.");
    return Model_LossType_Name(enum_t_value);
  }
  static inline bool LossType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      LossType* value) {
    return Model_LossType_Parse(name, value);
  }

  typedef Model_DistanceType DistanceType;
  static constexpr DistanceType DISTANCE_TYPE_UNSPECIFIED =
    Model_DistanceType_DISTANCE_TYPE_UNSPECIFIED;
  static constexpr DistanceType EUCLIDEAN =
    Model_DistanceType_EUCLIDEAN;
  static constexpr DistanceType COSINE =
    Model_DistanceType_COSINE;
  static inline bool DistanceType_IsValid(int value) {
    return Model_DistanceType_IsValid(value);
  }
  static constexpr DistanceType DistanceType_MIN =
    Model_DistanceType_DistanceType_MIN;
  static constexpr DistanceType DistanceType_MAX =
    Model_DistanceType_DistanceType_MAX;
  static constexpr int DistanceType_ARRAYSIZE =
    Model_DistanceType_DistanceType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  DistanceType_descriptor() {
    return Model_DistanceType_descriptor();
  }
  template<typename T>
  static inline const std::string& DistanceType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, DistanceType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function DistanceType_Name.");
    return Model_DistanceType_Name(enum_t_value);
  }
  static inline bool DistanceType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      DistanceType* value) {
    return Model_DistanceType_Parse(name, value);
  }

  typedef Model_DataSplitMethod DataSplitMethod;
  static constexpr DataSplitMethod DATA_SPLIT_METHOD_UNSPECIFIED =
    Model_DataSplitMethod_DATA_SPLIT_METHOD_UNSPECIFIED;
  static constexpr DataSplitMethod RANDOM =
    Model_DataSplitMethod_RANDOM;
  static constexpr DataSplitMethod CUSTOM =
    Model_DataSplitMethod_CUSTOM;
  static constexpr DataSplitMethod SEQUENTIAL =
    Model_DataSplitMethod_SEQUENTIAL;
  static constexpr DataSplitMethod NO_SPLIT =
    Model_DataSplitMethod_NO_SPLIT;
  static constexpr DataSplitMethod AUTO_SPLIT =
    Model_DataSplitMethod_AUTO_SPLIT;
  static inline bool DataSplitMethod_IsValid(int value) {
    return Model_DataSplitMethod_IsValid(value);
  }
  static constexpr DataSplitMethod DataSplitMethod_MIN =
    Model_DataSplitMethod_DataSplitMethod_MIN;
  static constexpr DataSplitMethod DataSplitMethod_MAX =
    Model_DataSplitMethod_DataSplitMethod_MAX;
  static constexpr int DataSplitMethod_ARRAYSIZE =
    Model_DataSplitMethod_DataSplitMethod_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  DataSplitMethod_descriptor() {
    return Model_DataSplitMethod_descriptor();
  }
  template<typename T>
  static inline const std::string& DataSplitMethod_Name(T enum_t_value) {
    static_assert(::std::is_same<T, DataSplitMethod>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function DataSplitMethod_Name.");
    return Model_DataSplitMethod_Name(enum_t_value);
  }
  static inline bool DataSplitMethod_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      DataSplitMethod* value) {
    return Model_DataSplitMethod_Parse(name, value);
  }

  typedef Model_DataFrequency DataFrequency;
  static constexpr DataFrequency DATA_FREQUENCY_UNSPECIFIED =
    Model_DataFrequency_DATA_FREQUENCY_UNSPECIFIED;
  static constexpr DataFrequency AUTO_FREQUENCY =
    Model_DataFrequency_AUTO_FREQUENCY;
  static constexpr DataFrequency YEARLY =
    Model_DataFrequency_YEARLY;
  static constexpr DataFrequency QUARTERLY =
    Model_DataFrequency_QUARTERLY;
  static constexpr DataFrequency MONTHLY =
    Model_DataFrequency_MONTHLY;
  static constexpr DataFrequency WEEKLY =
    Model_DataFrequency_WEEKLY;
  static constexpr DataFrequency DAILY =
    Model_DataFrequency_DAILY;
  static constexpr DataFrequency HOURLY =
    Model_DataFrequency_HOURLY;
  static constexpr DataFrequency PER_MINUTE =
    Model_DataFrequency_PER_MINUTE;
  static inline bool DataFrequency_IsValid(int value) {
    return Model_DataFrequency_IsValid(value);
  }
  static constexpr DataFrequency DataFrequency_MIN =
    Model_DataFrequency_DataFrequency_MIN;
  static constexpr DataFrequency DataFrequency_MAX =
    Model_DataFrequency_DataFrequency_MAX;
  static constexpr int DataFrequency_ARRAYSIZE =
    Model_DataFrequency_DataFrequency_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  DataFrequency_descriptor() {
    return Model_DataFrequency_descriptor();
  }
  template<typename T>
  static inline const std::string& DataFrequency_Name(T enum_t_value) {
    static_assert(::std::is_same<T, DataFrequency>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function DataFrequency_Name.");
    return Model_DataFrequency_Name(enum_t_value);
  }
  static inline bool DataFrequency_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      DataFrequency* value) {
    return Model_DataFrequency_Parse(name, value);
  }

  typedef Model_HolidayRegion HolidayRegion;
  static constexpr HolidayRegion HOLIDAY_REGION_UNSPECIFIED =
    Model_HolidayRegion_HOLIDAY_REGION_UNSPECIFIED;
  static constexpr HolidayRegion GLOBAL =
    Model_HolidayRegion_GLOBAL;
  static constexpr HolidayRegion NA =
    Model_HolidayRegion_NA;
  static constexpr HolidayRegion JAPAC =
    Model_HolidayRegion_JAPAC;
  static constexpr HolidayRegion EMEA =
    Model_HolidayRegion_EMEA;
  static constexpr HolidayRegion LAC =
    Model_HolidayRegion_LAC;
  static constexpr HolidayRegion AE =
    Model_HolidayRegion_AE;
  static constexpr HolidayRegion AR =
    Model_HolidayRegion_AR;
  static constexpr HolidayRegion AT =
    Model_HolidayRegion_AT;
  static constexpr HolidayRegion AU =
    Model_HolidayRegion_AU;
  static constexpr HolidayRegion BE =
    Model_HolidayRegion_BE;
  static constexpr HolidayRegion BR =
    Model_HolidayRegion_BR;
  static constexpr HolidayRegion CA =
    Model_HolidayRegion_CA;
  static constexpr HolidayRegion CH =
    Model_HolidayRegion_CH;
  static constexpr HolidayRegion CL =
    Model_HolidayRegion_CL;
  static constexpr HolidayRegion CN =
    Model_HolidayRegion_CN;
  static constexpr HolidayRegion CO =
    Model_HolidayRegion_CO;
  static constexpr HolidayRegion CS =
    Model_HolidayRegion_CS;
  static constexpr HolidayRegion CZ =
    Model_HolidayRegion_CZ;
  static constexpr HolidayRegion DE =
    Model_HolidayRegion_DE;
  static constexpr HolidayRegion DK =
    Model_HolidayRegion_DK;
  static constexpr HolidayRegion DZ =
    Model_HolidayRegion_DZ;
  static constexpr HolidayRegion EC =
    Model_HolidayRegion_EC;
  static constexpr HolidayRegion EE =
    Model_HolidayRegion_EE;
  static constexpr HolidayRegion EG =
    Model_HolidayRegion_EG;
  static constexpr HolidayRegion ES =
    Model_HolidayRegion_ES;
  static constexpr HolidayRegion FI =
    Model_HolidayRegion_FI;
  static constexpr HolidayRegion FR =
    Model_HolidayRegion_FR;
  static constexpr HolidayRegion GB =
    Model_HolidayRegion_GB;
  static constexpr HolidayRegion GR =
    Model_HolidayRegion_GR;
  static constexpr HolidayRegion HK =
    Model_HolidayRegion_HK;
  static constexpr HolidayRegion HU =
    Model_HolidayRegion_HU;
  static constexpr HolidayRegion ID =
    Model_HolidayRegion_ID;
  static constexpr HolidayRegion IE =
    Model_HolidayRegion_IE;
  static constexpr HolidayRegion IL =
    Model_HolidayRegion_IL;
  static constexpr HolidayRegion IN =
    Model_HolidayRegion_IN;
  static constexpr HolidayRegion IR =
    Model_HolidayRegion_IR;
  static constexpr HolidayRegion IT =
    Model_HolidayRegion_IT;
  static constexpr HolidayRegion JP =
    Model_HolidayRegion_JP;
  static constexpr HolidayRegion KR =
    Model_HolidayRegion_KR;
  static constexpr HolidayRegion LV =
    Model_HolidayRegion_LV;
  static constexpr HolidayRegion MA =
    Model_HolidayRegion_MA;
  static constexpr HolidayRegion MX =
    Model_HolidayRegion_MX;
  static constexpr HolidayRegion MY =
    Model_HolidayRegion_MY;
  static constexpr HolidayRegion NG =
    Model_HolidayRegion_NG;
  static constexpr HolidayRegion NL =
    Model_HolidayRegion_NL;
  static constexpr HolidayRegion NO =
    Model_HolidayRegion_NO;
  static constexpr HolidayRegion NZ =
    Model_HolidayRegion_NZ;
  static constexpr HolidayRegion PE =
    Model_HolidayRegion_PE;
  static constexpr HolidayRegion PH =
    Model_HolidayRegion_PH;
  static constexpr HolidayRegion PK =
    Model_HolidayRegion_PK;
  static constexpr HolidayRegion PL =
    Model_HolidayRegion_PL;
  static constexpr HolidayRegion PT =
    Model_HolidayRegion_PT;
  static constexpr HolidayRegion RO =
    Model_HolidayRegion_RO;
  static constexpr HolidayRegion RS =
    Model_HolidayRegion_RS;
  static constexpr HolidayRegion RU =
    Model_HolidayRegion_RU;
  static constexpr HolidayRegion SA =
    Model_HolidayRegion_SA;
  static constexpr HolidayRegion SE =
    Model_HolidayRegion_SE;
  static constexpr HolidayRegion SG =
    Model_HolidayRegion_SG;
  static constexpr HolidayRegion SI =
    Model_HolidayRegion_SI;
  static constexpr HolidayRegion SK =
    Model_HolidayRegion_SK;
  static constexpr HolidayRegion TH =
    Model_HolidayRegion_TH;
  static constexpr HolidayRegion TR =
    Model_HolidayRegion_TR;
  static constexpr HolidayRegion TW =
    Model_HolidayRegion_TW;
  static constexpr HolidayRegion UA =
    Model_HolidayRegion_UA;
  static constexpr HolidayRegion US =
    Model_HolidayRegion_US;
  static constexpr HolidayRegion VE =
    Model_HolidayRegion_VE;
  static constexpr HolidayRegion VN =
    Model_HolidayRegion_VN;
  static constexpr HolidayRegion ZA =
    Model_HolidayRegion_ZA;
  static inline bool HolidayRegion_IsValid(int value) {
    return Model_HolidayRegion_IsValid(value);
  }
  static constexpr HolidayRegion HolidayRegion_MIN =
    Model_HolidayRegion_HolidayRegion_MIN;
  static constexpr HolidayRegion HolidayRegion_MAX =
    Model_HolidayRegion_HolidayRegion_MAX;
  static constexpr int HolidayRegion_ARRAYSIZE =
    Model_HolidayRegion_HolidayRegion_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  HolidayRegion_descriptor() {
    return Model_HolidayRegion_descriptor();
  }
  template<typename T>
  static inline const std::string& HolidayRegion_Name(T enum_t_value) {
    static_assert(::std::is_same<T, HolidayRegion>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function HolidayRegion_Name.");
    return Model_HolidayRegion_Name(enum_t_value);
  }
  static inline bool HolidayRegion_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      HolidayRegion* value) {
    return Model_HolidayRegion_Parse(name, value);
  }

  typedef Model_LearnRateStrategy LearnRateStrategy;
  static constexpr LearnRateStrategy LEARN_RATE_STRATEGY_UNSPECIFIED =
    Model_LearnRateStrategy_LEARN_RATE_STRATEGY_UNSPECIFIED;
  static constexpr LearnRateStrategy LINE_SEARCH =
    Model_LearnRateStrategy_LINE_SEARCH;
  static constexpr LearnRateStrategy CONSTANT =
    Model_LearnRateStrategy_CONSTANT;
  static inline bool LearnRateStrategy_IsValid(int value) {
    return Model_LearnRateStrategy_IsValid(value);
  }
  static constexpr LearnRateStrategy LearnRateStrategy_MIN =
    Model_LearnRateStrategy_LearnRateStrategy_MIN;
  static constexpr LearnRateStrategy LearnRateStrategy_MAX =
    Model_LearnRateStrategy_LearnRateStrategy_MAX;
  static constexpr int LearnRateStrategy_ARRAYSIZE =
    Model_LearnRateStrategy_LearnRateStrategy_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  LearnRateStrategy_descriptor() {
    return Model_LearnRateStrategy_descriptor();
  }
  template<typename T>
  static inline const std::string& LearnRateStrategy_Name(T enum_t_value) {
    static_assert(::std::is_same<T, LearnRateStrategy>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function LearnRateStrategy_Name.");
    return Model_LearnRateStrategy_Name(enum_t_value);
  }
  static inline bool LearnRateStrategy_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      LearnRateStrategy* value) {
    return Model_LearnRateStrategy_Parse(name, value);
  }

  typedef Model_OptimizationStrategy OptimizationStrategy;
  static constexpr OptimizationStrategy OPTIMIZATION_STRATEGY_UNSPECIFIED =
    Model_OptimizationStrategy_OPTIMIZATION_STRATEGY_UNSPECIFIED;
  static constexpr OptimizationStrategy BATCH_GRADIENT_DESCENT =
    Model_OptimizationStrategy_BATCH_GRADIENT_DESCENT;
  static constexpr OptimizationStrategy NORMAL_EQUATION =
    Model_OptimizationStrategy_NORMAL_EQUATION;
  static inline bool OptimizationStrategy_IsValid(int value) {
    return Model_OptimizationStrategy_IsValid(value);
  }
  static constexpr OptimizationStrategy OptimizationStrategy_MIN =
    Model_OptimizationStrategy_OptimizationStrategy_MIN;
  static constexpr OptimizationStrategy OptimizationStrategy_MAX =
    Model_OptimizationStrategy_OptimizationStrategy_MAX;
  static constexpr int OptimizationStrategy_ARRAYSIZE =
    Model_OptimizationStrategy_OptimizationStrategy_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  OptimizationStrategy_descriptor() {
    return Model_OptimizationStrategy_descriptor();
  }
  template<typename T>
  static inline const std::string& OptimizationStrategy_Name(T enum_t_value) {
    static_assert(::std::is_same<T, OptimizationStrategy>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function OptimizationStrategy_Name.");
    return Model_OptimizationStrategy_Name(enum_t_value);
  }
  static inline bool OptimizationStrategy_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      OptimizationStrategy* value) {
    return Model_OptimizationStrategy_Parse(name, value);
  }

  typedef Model_FeedbackType FeedbackType;
  static constexpr FeedbackType FEEDBACK_TYPE_UNSPECIFIED =
    Model_FeedbackType_FEEDBACK_TYPE_UNSPECIFIED;
  static constexpr FeedbackType IMPLICIT =
    Model_FeedbackType_IMPLICIT;
  static constexpr FeedbackType EXPLICIT =
    Model_FeedbackType_EXPLICIT;
  static inline bool FeedbackType_IsValid(int value) {
    return Model_FeedbackType_IsValid(value);
  }
  static constexpr FeedbackType FeedbackType_MIN =
    Model_FeedbackType_FeedbackType_MIN;
  static constexpr FeedbackType FeedbackType_MAX =
    Model_FeedbackType_FeedbackType_MAX;
  static constexpr int FeedbackType_ARRAYSIZE =
    Model_FeedbackType_FeedbackType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  FeedbackType_descriptor() {
    return Model_FeedbackType_descriptor();
  }
  template<typename T>
  static inline const std::string& FeedbackType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, FeedbackType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function FeedbackType_Name.");
    return Model_FeedbackType_Name(enum_t_value);
  }
  static inline bool FeedbackType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      FeedbackType* value) {
    return Model_FeedbackType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTrainingRunsFieldNumber = 9,
    kFeatureColumnsFieldNumber = 10,
    kLabelColumnsFieldNumber = 11,
    kLabelsFieldNumber = 15,
    kEtagFieldNumber = 1,
    kDescriptionFieldNumber = 12,
    kLocationFieldNumber = 13,
    kFriendlyNameFieldNumber = 14,
    kModelReferenceFieldNumber = 2,
    kEncryptionConfigurationFieldNumber = 17,
    kCreationTimeFieldNumber = 5,
    kLastModifiedTimeFieldNumber = 6,
    kExpirationTimeFieldNumber = 16,
    kBestTrialIdFieldNumber = 19,
    kModelTypeFieldNumber = 7,
  };
  // repeated .google.cloud.bigquery.v2.Model.TrainingRun training_runs = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
  int training_runs_size() const;
  private:
  int _internal_training_runs_size() const;
  public:
  void clear_training_runs();
  ::google::cloud::bigquery::v2::Model_TrainingRun* mutable_training_runs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun >*
      mutable_training_runs();
  private:
  const ::google::cloud::bigquery::v2::Model_TrainingRun& _internal_training_runs(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun* _internal_add_training_runs();
  public:
  const ::google::cloud::bigquery::v2::Model_TrainingRun& training_runs(int index) const;
  ::google::cloud::bigquery::v2::Model_TrainingRun* add_training_runs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun >&
      training_runs() const;

  // repeated .google.cloud.bigquery.v2.StandardSqlField feature_columns = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
  int feature_columns_size() const;
  private:
  int _internal_feature_columns_size() const;
  public:
  void clear_feature_columns();
  ::google::cloud::bigquery::v2::StandardSqlField* mutable_feature_columns(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >*
      mutable_feature_columns();
  private:
  const ::google::cloud::bigquery::v2::StandardSqlField& _internal_feature_columns(int index) const;
  ::google::cloud::bigquery::v2::StandardSqlField* _internal_add_feature_columns();
  public:
  const ::google::cloud::bigquery::v2::StandardSqlField& feature_columns(int index) const;
  ::google::cloud::bigquery::v2::StandardSqlField* add_feature_columns();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >&
      feature_columns() const;

  // repeated .google.cloud.bigquery.v2.StandardSqlField label_columns = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
  int label_columns_size() const;
  private:
  int _internal_label_columns_size() const;
  public:
  void clear_label_columns();
  ::google::cloud::bigquery::v2::StandardSqlField* mutable_label_columns(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >*
      mutable_label_columns();
  private:
  const ::google::cloud::bigquery::v2::StandardSqlField& _internal_label_columns(int index) const;
  ::google::cloud::bigquery::v2::StandardSqlField* _internal_add_label_columns();
  public:
  const ::google::cloud::bigquery::v2::StandardSqlField& label_columns(int index) const;
  ::google::cloud::bigquery::v2::StandardSqlField* add_label_columns();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >&
      label_columns() const;

  // map<string, string> labels = 15;
  int labels_size() const;
  private:
  int _internal_labels_size() const;
  public:
  void clear_labels();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_labels() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_labels();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      labels() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_labels();

  // string etag = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_etag();
  const std::string& etag() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_etag(ArgT0&& arg0, ArgT... args);
  std::string* mutable_etag();
  PROTOBUF_NODISCARD std::string* release_etag();
  void set_allocated_etag(std::string* etag);
  private:
  const std::string& _internal_etag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_etag(const std::string& value);
  std::string* _internal_mutable_etag();
  public:

  // string description = 12 [(.google.api.field_behavior) = OPTIONAL];
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // string location = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_location();
  const std::string& location() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_location(ArgT0&& arg0, ArgT... args);
  std::string* mutable_location();
  PROTOBUF_NODISCARD std::string* release_location();
  void set_allocated_location(std::string* location);
  private:
  const std::string& _internal_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_location(const std::string& value);
  std::string* _internal_mutable_location();
  public:

  // string friendly_name = 14 [(.google.api.field_behavior) = OPTIONAL];
  void clear_friendly_name();
  const std::string& friendly_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_friendly_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_friendly_name();
  PROTOBUF_NODISCARD std::string* release_friendly_name();
  void set_allocated_friendly_name(std::string* friendly_name);
  private:
  const std::string& _internal_friendly_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_friendly_name(const std::string& value);
  std::string* _internal_mutable_friendly_name();
  public:

  // .google.cloud.bigquery.v2.ModelReference model_reference = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_model_reference() const;
  private:
  bool _internal_has_model_reference() const;
  public:
  void clear_model_reference();
  const ::google::cloud::bigquery::v2::ModelReference& model_reference() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::ModelReference* release_model_reference();
  ::google::cloud::bigquery::v2::ModelReference* mutable_model_reference();
  void set_allocated_model_reference(::google::cloud::bigquery::v2::ModelReference* model_reference);
  private:
  const ::google::cloud::bigquery::v2::ModelReference& _internal_model_reference() const;
  ::google::cloud::bigquery::v2::ModelReference* _internal_mutable_model_reference();
  public:
  void unsafe_arena_set_allocated_model_reference(
      ::google::cloud::bigquery::v2::ModelReference* model_reference);
  ::google::cloud::bigquery::v2::ModelReference* unsafe_arena_release_model_reference();

  // .google.cloud.bigquery.v2.EncryptionConfiguration encryption_configuration = 17;
  bool has_encryption_configuration() const;
  private:
  bool _internal_has_encryption_configuration() const;
  public:
  void clear_encryption_configuration();
  const ::google::cloud::bigquery::v2::EncryptionConfiguration& encryption_configuration() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::EncryptionConfiguration* release_encryption_configuration();
  ::google::cloud::bigquery::v2::EncryptionConfiguration* mutable_encryption_configuration();
  void set_allocated_encryption_configuration(::google::cloud::bigquery::v2::EncryptionConfiguration* encryption_configuration);
  private:
  const ::google::cloud::bigquery::v2::EncryptionConfiguration& _internal_encryption_configuration() const;
  ::google::cloud::bigquery::v2::EncryptionConfiguration* _internal_mutable_encryption_configuration();
  public:
  void unsafe_arena_set_allocated_encryption_configuration(
      ::google::cloud::bigquery::v2::EncryptionConfiguration* encryption_configuration);
  ::google::cloud::bigquery::v2::EncryptionConfiguration* unsafe_arena_release_encryption_configuration();

  // int64 creation_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_creation_time();
  int64_t creation_time() const;
  void set_creation_time(int64_t value);
  private:
  int64_t _internal_creation_time() const;
  void _internal_set_creation_time(int64_t value);
  public:

  // int64 last_modified_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_last_modified_time();
  int64_t last_modified_time() const;
  void set_last_modified_time(int64_t value);
  private:
  int64_t _internal_last_modified_time() const;
  void _internal_set_last_modified_time(int64_t value);
  public:

  // int64 expiration_time = 16 [(.google.api.field_behavior) = OPTIONAL];
  void clear_expiration_time();
  int64_t expiration_time() const;
  void set_expiration_time(int64_t value);
  private:
  int64_t _internal_expiration_time() const;
  void _internal_set_expiration_time(int64_t value);
  public:

  // int64 best_trial_id = 19 [deprecated = true];
  PROTOBUF_DEPRECATED void clear_best_trial_id();
  PROTOBUF_DEPRECATED int64_t best_trial_id() const;
  PROTOBUF_DEPRECATED void set_best_trial_id(int64_t value);
  private:
  int64_t _internal_best_trial_id() const;
  void _internal_set_best_trial_id(int64_t value);
  public:

  // .google.cloud.bigquery.v2.Model.ModelType model_type = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_model_type();
  ::google::cloud::bigquery::v2::Model_ModelType model_type() const;
  void set_model_type(::google::cloud::bigquery::v2::Model_ModelType value);
  private:
  ::google::cloud::bigquery::v2::Model_ModelType _internal_model_type() const;
  void _internal_set_model_type(::google::cloud::bigquery::v2::Model_ModelType value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.Model)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun > training_runs_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField > feature_columns_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField > label_columns_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        Model_LabelsEntry_DoNotUse,
        std::string, std::string,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> labels_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr etag_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr location_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr friendly_name_;
    ::google::cloud::bigquery::v2::ModelReference* model_reference_;
    ::google::cloud::bigquery::v2::EncryptionConfiguration* encryption_configuration_;
    int64_t creation_time_;
    int64_t last_modified_time_;
    int64_t expiration_time_;
    int64_t best_trial_id_;
    int model_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class GetModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.GetModelRequest) */ {
 public:
  inline GetModelRequest() : GetModelRequest(nullptr) {}
  ~GetModelRequest() override;
  explicit PROTOBUF_CONSTEXPR GetModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetModelRequest(const GetModelRequest& from);
  GetModelRequest(GetModelRequest&& from) noexcept
    : GetModelRequest() {
    *this = ::std::move(from);
  }

  inline GetModelRequest& operator=(const GetModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModelRequest& operator=(GetModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModelRequest* internal_default_instance() {
    return reinterpret_cast<const GetModelRequest*>(
               &_GetModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(GetModelRequest& a, GetModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetModelRequest& from) {
    GetModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.GetModelRequest";
  }
  protected:
  explicit GetModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectIdFieldNumber = 1,
    kDatasetIdFieldNumber = 2,
    kModelIdFieldNumber = 3,
  };
  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_project_id();
  const std::string& project_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_project_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_project_id();
  PROTOBUF_NODISCARD std::string* release_project_id();
  void set_allocated_project_id(std::string* project_id);
  private:
  const std::string& _internal_project_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_project_id(const std::string& value);
  std::string* _internal_mutable_project_id();
  public:

  // string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_dataset_id();
  const std::string& dataset_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dataset_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dataset_id();
  PROTOBUF_NODISCARD std::string* release_dataset_id();
  void set_allocated_dataset_id(std::string* dataset_id);
  private:
  const std::string& _internal_dataset_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dataset_id(const std::string& value);
  std::string* _internal_mutable_dataset_id();
  public:

  // string model_id = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_model_id();
  const std::string& model_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_model_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* model_id);
  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(const std::string& value);
  std::string* _internal_mutable_model_id();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.GetModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dataset_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class PatchModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.PatchModelRequest) */ {
 public:
  inline PatchModelRequest() : PatchModelRequest(nullptr) {}
  ~PatchModelRequest() override;
  explicit PROTOBUF_CONSTEXPR PatchModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PatchModelRequest(const PatchModelRequest& from);
  PatchModelRequest(PatchModelRequest&& from) noexcept
    : PatchModelRequest() {
    *this = ::std::move(from);
  }

  inline PatchModelRequest& operator=(const PatchModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchModelRequest& operator=(PatchModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchModelRequest* internal_default_instance() {
    return reinterpret_cast<const PatchModelRequest*>(
               &_PatchModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(PatchModelRequest& a, PatchModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PatchModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PatchModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PatchModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PatchModelRequest& from) {
    PatchModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PatchModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.PatchModelRequest";
  }
  protected:
  explicit PatchModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectIdFieldNumber = 1,
    kDatasetIdFieldNumber = 2,
    kModelIdFieldNumber = 3,
    kModelFieldNumber = 4,
  };
  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_project_id();
  const std::string& project_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_project_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_project_id();
  PROTOBUF_NODISCARD std::string* release_project_id();
  void set_allocated_project_id(std::string* project_id);
  private:
  const std::string& _internal_project_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_project_id(const std::string& value);
  std::string* _internal_mutable_project_id();
  public:

  // string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_dataset_id();
  const std::string& dataset_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dataset_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dataset_id();
  PROTOBUF_NODISCARD std::string* release_dataset_id();
  void set_allocated_dataset_id(std::string* dataset_id);
  private:
  const std::string& _internal_dataset_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dataset_id(const std::string& value);
  std::string* _internal_mutable_dataset_id();
  public:

  // string model_id = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_model_id();
  const std::string& model_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_model_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* model_id);
  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(const std::string& value);
  std::string* _internal_mutable_model_id();
  public:

  // .google.cloud.bigquery.v2.Model model = 4 [(.google.api.field_behavior) = REQUIRED];
  bool has_model() const;
  private:
  bool _internal_has_model() const;
  public:
  void clear_model();
  const ::google::cloud::bigquery::v2::Model& model() const;
  PROTOBUF_NODISCARD ::google::cloud::bigquery::v2::Model* release_model();
  ::google::cloud::bigquery::v2::Model* mutable_model();
  void set_allocated_model(::google::cloud::bigquery::v2::Model* model);
  private:
  const ::google::cloud::bigquery::v2::Model& _internal_model() const;
  ::google::cloud::bigquery::v2::Model* _internal_mutable_model();
  public:
  void unsafe_arena_set_allocated_model(
      ::google::cloud::bigquery::v2::Model* model);
  ::google::cloud::bigquery::v2::Model* unsafe_arena_release_model();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.PatchModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dataset_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_id_;
    ::google::cloud::bigquery::v2::Model* model_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class DeleteModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.DeleteModelRequest) */ {
 public:
  inline DeleteModelRequest() : DeleteModelRequest(nullptr) {}
  ~DeleteModelRequest() override;
  explicit PROTOBUF_CONSTEXPR DeleteModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteModelRequest(const DeleteModelRequest& from);
  DeleteModelRequest(DeleteModelRequest&& from) noexcept
    : DeleteModelRequest() {
    *this = ::std::move(from);
  }

  inline DeleteModelRequest& operator=(const DeleteModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteModelRequest& operator=(DeleteModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteModelRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteModelRequest*>(
               &_DeleteModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(DeleteModelRequest& a, DeleteModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DeleteModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DeleteModelRequest& from) {
    DeleteModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.DeleteModelRequest";
  }
  protected:
  explicit DeleteModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectIdFieldNumber = 1,
    kDatasetIdFieldNumber = 2,
    kModelIdFieldNumber = 3,
  };
  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_project_id();
  const std::string& project_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_project_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_project_id();
  PROTOBUF_NODISCARD std::string* release_project_id();
  void set_allocated_project_id(std::string* project_id);
  private:
  const std::string& _internal_project_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_project_id(const std::string& value);
  std::string* _internal_mutable_project_id();
  public:

  // string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_dataset_id();
  const std::string& dataset_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dataset_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dataset_id();
  PROTOBUF_NODISCARD std::string* release_dataset_id();
  void set_allocated_dataset_id(std::string* dataset_id);
  private:
  const std::string& _internal_dataset_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dataset_id(const std::string& value);
  std::string* _internal_mutable_dataset_id();
  public:

  // string model_id = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_model_id();
  const std::string& model_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_model_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* model_id);
  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(const std::string& value);
  std::string* _internal_mutable_model_id();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.DeleteModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dataset_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ListModelsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.ListModelsRequest) */ {
 public:
  inline ListModelsRequest() : ListModelsRequest(nullptr) {}
  ~ListModelsRequest() override;
  explicit PROTOBUF_CONSTEXPR ListModelsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListModelsRequest(const ListModelsRequest& from);
  ListModelsRequest(ListModelsRequest&& from) noexcept
    : ListModelsRequest() {
    *this = ::std::move(from);
  }

  inline ListModelsRequest& operator=(const ListModelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListModelsRequest& operator=(ListModelsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListModelsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListModelsRequest* internal_default_instance() {
    return reinterpret_cast<const ListModelsRequest*>(
               &_ListModelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(ListModelsRequest& a, ListModelsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListModelsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListModelsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListModelsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListModelsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListModelsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListModelsRequest& from) {
    ListModelsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListModelsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.ListModelsRequest";
  }
  protected:
  explicit ListModelsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectIdFieldNumber = 1,
    kDatasetIdFieldNumber = 2,
    kPageTokenFieldNumber = 4,
    kMaxResultsFieldNumber = 3,
  };
  // string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_project_id();
  const std::string& project_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_project_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_project_id();
  PROTOBUF_NODISCARD std::string* release_project_id();
  void set_allocated_project_id(std::string* project_id);
  private:
  const std::string& _internal_project_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_project_id(const std::string& value);
  std::string* _internal_mutable_project_id();
  public:

  // string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_dataset_id();
  const std::string& dataset_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dataset_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dataset_id();
  PROTOBUF_NODISCARD std::string* release_dataset_id();
  void set_allocated_dataset_id(std::string* dataset_id);
  private:
  const std::string& _internal_dataset_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dataset_id(const std::string& value);
  std::string* _internal_mutable_dataset_id();
  public:

  // string page_token = 4;
  void clear_page_token();
  const std::string& page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // .google.protobuf.UInt32Value max_results = 3;
  bool has_max_results() const;
  private:
  bool _internal_has_max_results() const;
  public:
  void clear_max_results();
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value& max_results() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::UInt32Value* release_max_results();
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* mutable_max_results();
  void set_allocated_max_results(::PROTOBUF_NAMESPACE_ID::UInt32Value* max_results);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value& _internal_max_results() const;
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* _internal_mutable_max_results();
  public:
  void unsafe_arena_set_allocated_max_results(
      ::PROTOBUF_NAMESPACE_ID::UInt32Value* max_results);
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* unsafe_arena_release_max_results();

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.ListModelsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dataset_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
    ::PROTOBUF_NAMESPACE_ID::UInt32Value* max_results_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ListModelsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.bigquery.v2.ListModelsResponse) */ {
 public:
  inline ListModelsResponse() : ListModelsResponse(nullptr) {}
  ~ListModelsResponse() override;
  explicit PROTOBUF_CONSTEXPR ListModelsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListModelsResponse(const ListModelsResponse& from);
  ListModelsResponse(ListModelsResponse&& from) noexcept
    : ListModelsResponse() {
    *this = ::std::move(from);
  }

  inline ListModelsResponse& operator=(const ListModelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListModelsResponse& operator=(ListModelsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListModelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListModelsResponse* internal_default_instance() {
    return reinterpret_cast<const ListModelsResponse*>(
               &_ListModelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(ListModelsResponse& a, ListModelsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListModelsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListModelsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListModelsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListModelsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListModelsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListModelsResponse& from) {
    ListModelsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListModelsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.bigquery.v2.ListModelsResponse";
  }
  protected:
  explicit ListModelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .google.cloud.bigquery.v2.Model models = 1;
  int models_size() const;
  private:
  int _internal_models_size() const;
  public:
  void clear_models();
  ::google::cloud::bigquery::v2::Model* mutable_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model >*
      mutable_models();
  private:
  const ::google::cloud::bigquery::v2::Model& _internal_models(int index) const;
  ::google::cloud::bigquery::v2::Model* _internal_add_models();
  public:
  const ::google::cloud::bigquery::v2::Model& models(int index) const;
  ::google::cloud::bigquery::v2::Model* add_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model >&
      models() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.ListModelsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model > models_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Model_SeasonalPeriod

// -------------------------------------------------------------------

// Model_KmeansEnums

// -------------------------------------------------------------------

// Model_RegressionMetrics

// .google.protobuf.DoubleValue mean_absolute_error = 1;
inline bool Model_RegressionMetrics::_internal_has_mean_absolute_error() const {
  return this != internal_default_instance() && _impl_.mean_absolute_error_ != nullptr;
}
inline bool Model_RegressionMetrics::has_mean_absolute_error() const {
  return _internal_has_mean_absolute_error();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::_internal_mean_absolute_error() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.mean_absolute_error_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::mean_absolute_error() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_absolute_error)
  return _internal_mean_absolute_error();
}
inline void Model_RegressionMetrics::unsafe_arena_set_allocated_mean_absolute_error(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_absolute_error) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_absolute_error_);
  }
  _impl_.mean_absolute_error_ = mean_absolute_error;
  if (mean_absolute_error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_absolute_error)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::release_mean_absolute_error() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_absolute_error_;
  _impl_.mean_absolute_error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::unsafe_arena_release_mean_absolute_error() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_absolute_error)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_absolute_error_;
  _impl_.mean_absolute_error_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::_internal_mutable_mean_absolute_error() {
  
  if (_impl_.mean_absolute_error_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.mean_absolute_error_ = p;
  }
  return _impl_.mean_absolute_error_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::mutable_mean_absolute_error() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_mean_absolute_error();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_absolute_error)
  return _msg;
}
inline void Model_RegressionMetrics::set_allocated_mean_absolute_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_absolute_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_absolute_error_);
  }
  if (mean_absolute_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mean_absolute_error));
    if (message_arena != submessage_arena) {
      mean_absolute_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mean_absolute_error, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mean_absolute_error_ = mean_absolute_error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_absolute_error)
}

// .google.protobuf.DoubleValue mean_squared_error = 2;
inline bool Model_RegressionMetrics::_internal_has_mean_squared_error() const {
  return this != internal_default_instance() && _impl_.mean_squared_error_ != nullptr;
}
inline bool Model_RegressionMetrics::has_mean_squared_error() const {
  return _internal_has_mean_squared_error();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::_internal_mean_squared_error() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.mean_squared_error_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::mean_squared_error() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_error)
  return _internal_mean_squared_error();
}
inline void Model_RegressionMetrics::unsafe_arena_set_allocated_mean_squared_error(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_error_);
  }
  _impl_.mean_squared_error_ = mean_squared_error;
  if (mean_squared_error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_error)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::release_mean_squared_error() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_error_;
  _impl_.mean_squared_error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::unsafe_arena_release_mean_squared_error() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_error)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_error_;
  _impl_.mean_squared_error_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::_internal_mutable_mean_squared_error() {
  
  if (_impl_.mean_squared_error_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.mean_squared_error_ = p;
  }
  return _impl_.mean_squared_error_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::mutable_mean_squared_error() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_mean_squared_error();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_error)
  return _msg;
}
inline void Model_RegressionMetrics::set_allocated_mean_squared_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_error_);
  }
  if (mean_squared_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mean_squared_error));
    if (message_arena != submessage_arena) {
      mean_squared_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mean_squared_error, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mean_squared_error_ = mean_squared_error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_error)
}

// .google.protobuf.DoubleValue mean_squared_log_error = 3;
inline bool Model_RegressionMetrics::_internal_has_mean_squared_log_error() const {
  return this != internal_default_instance() && _impl_.mean_squared_log_error_ != nullptr;
}
inline bool Model_RegressionMetrics::has_mean_squared_log_error() const {
  return _internal_has_mean_squared_log_error();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::_internal_mean_squared_log_error() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.mean_squared_log_error_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::mean_squared_log_error() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_log_error)
  return _internal_mean_squared_log_error();
}
inline void Model_RegressionMetrics::unsafe_arena_set_allocated_mean_squared_log_error(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_log_error) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_log_error_);
  }
  _impl_.mean_squared_log_error_ = mean_squared_log_error;
  if (mean_squared_log_error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_log_error)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::release_mean_squared_log_error() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_log_error_;
  _impl_.mean_squared_log_error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::unsafe_arena_release_mean_squared_log_error() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_log_error)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_log_error_;
  _impl_.mean_squared_log_error_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::_internal_mutable_mean_squared_log_error() {
  
  if (_impl_.mean_squared_log_error_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.mean_squared_log_error_ = p;
  }
  return _impl_.mean_squared_log_error_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::mutable_mean_squared_log_error() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_mean_squared_log_error();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_log_error)
  return _msg;
}
inline void Model_RegressionMetrics::set_allocated_mean_squared_log_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_log_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_log_error_);
  }
  if (mean_squared_log_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mean_squared_log_error));
    if (message_arena != submessage_arena) {
      mean_squared_log_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mean_squared_log_error, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mean_squared_log_error_ = mean_squared_log_error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.mean_squared_log_error)
}

// .google.protobuf.DoubleValue median_absolute_error = 4;
inline bool Model_RegressionMetrics::_internal_has_median_absolute_error() const {
  return this != internal_default_instance() && _impl_.median_absolute_error_ != nullptr;
}
inline bool Model_RegressionMetrics::has_median_absolute_error() const {
  return _internal_has_median_absolute_error();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::_internal_median_absolute_error() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.median_absolute_error_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::median_absolute_error() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RegressionMetrics.median_absolute_error)
  return _internal_median_absolute_error();
}
inline void Model_RegressionMetrics::unsafe_arena_set_allocated_median_absolute_error(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* median_absolute_error) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.median_absolute_error_);
  }
  _impl_.median_absolute_error_ = median_absolute_error;
  if (median_absolute_error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.median_absolute_error)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::release_median_absolute_error() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.median_absolute_error_;
  _impl_.median_absolute_error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::unsafe_arena_release_median_absolute_error() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RegressionMetrics.median_absolute_error)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.median_absolute_error_;
  _impl_.median_absolute_error_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::_internal_mutable_median_absolute_error() {
  
  if (_impl_.median_absolute_error_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.median_absolute_error_ = p;
  }
  return _impl_.median_absolute_error_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::mutable_median_absolute_error() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_median_absolute_error();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RegressionMetrics.median_absolute_error)
  return _msg;
}
inline void Model_RegressionMetrics::set_allocated_median_absolute_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* median_absolute_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.median_absolute_error_);
  }
  if (median_absolute_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(median_absolute_error));
    if (message_arena != submessage_arena) {
      median_absolute_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, median_absolute_error, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.median_absolute_error_ = median_absolute_error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.median_absolute_error)
}

// .google.protobuf.DoubleValue r_squared = 5;
inline bool Model_RegressionMetrics::_internal_has_r_squared() const {
  return this != internal_default_instance() && _impl_.r_squared_ != nullptr;
}
inline bool Model_RegressionMetrics::has_r_squared() const {
  return _internal_has_r_squared();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::_internal_r_squared() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.r_squared_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RegressionMetrics::r_squared() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RegressionMetrics.r_squared)
  return _internal_r_squared();
}
inline void Model_RegressionMetrics::unsafe_arena_set_allocated_r_squared(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* r_squared) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.r_squared_);
  }
  _impl_.r_squared_ = r_squared;
  if (r_squared) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.r_squared)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::release_r_squared() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.r_squared_;
  _impl_.r_squared_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::unsafe_arena_release_r_squared() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RegressionMetrics.r_squared)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.r_squared_;
  _impl_.r_squared_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::_internal_mutable_r_squared() {
  
  if (_impl_.r_squared_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.r_squared_ = p;
  }
  return _impl_.r_squared_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RegressionMetrics::mutable_r_squared() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_r_squared();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RegressionMetrics.r_squared)
  return _msg;
}
inline void Model_RegressionMetrics::set_allocated_r_squared(::PROTOBUF_NAMESPACE_ID::DoubleValue* r_squared) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.r_squared_);
  }
  if (r_squared) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(r_squared));
    if (message_arena != submessage_arena) {
      r_squared = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, r_squared, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.r_squared_ = r_squared;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RegressionMetrics.r_squared)
}

// -------------------------------------------------------------------

// Model_AggregateClassificationMetrics

// .google.protobuf.DoubleValue precision = 1;
inline bool Model_AggregateClassificationMetrics::_internal_has_precision() const {
  return this != internal_default_instance() && _impl_.precision_ != nullptr;
}
inline bool Model_AggregateClassificationMetrics::has_precision() const {
  return _internal_has_precision();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::_internal_precision() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.precision_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::precision() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.precision)
  return _internal_precision();
}
inline void Model_AggregateClassificationMetrics::unsafe_arena_set_allocated_precision(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* precision) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.precision_);
  }
  _impl_.precision_ = precision;
  if (precision) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.precision)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::release_precision() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.precision_;
  _impl_.precision_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::unsafe_arena_release_precision() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.precision)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.precision_;
  _impl_.precision_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::_internal_mutable_precision() {
  
  if (_impl_.precision_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.precision_ = p;
  }
  return _impl_.precision_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::mutable_precision() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_precision();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.precision)
  return _msg;
}
inline void Model_AggregateClassificationMetrics::set_allocated_precision(::PROTOBUF_NAMESPACE_ID::DoubleValue* precision) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.precision_);
  }
  if (precision) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(precision));
    if (message_arena != submessage_arena) {
      precision = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, precision, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.precision_ = precision;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.precision)
}

// .google.protobuf.DoubleValue recall = 2;
inline bool Model_AggregateClassificationMetrics::_internal_has_recall() const {
  return this != internal_default_instance() && _impl_.recall_ != nullptr;
}
inline bool Model_AggregateClassificationMetrics::has_recall() const {
  return _internal_has_recall();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::_internal_recall() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.recall_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::recall() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.recall)
  return _internal_recall();
}
inline void Model_AggregateClassificationMetrics::unsafe_arena_set_allocated_recall(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* recall) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.recall_);
  }
  _impl_.recall_ = recall;
  if (recall) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.recall)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::release_recall() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.recall_;
  _impl_.recall_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::unsafe_arena_release_recall() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.recall)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.recall_;
  _impl_.recall_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::_internal_mutable_recall() {
  
  if (_impl_.recall_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.recall_ = p;
  }
  return _impl_.recall_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::mutable_recall() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_recall();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.recall)
  return _msg;
}
inline void Model_AggregateClassificationMetrics::set_allocated_recall(::PROTOBUF_NAMESPACE_ID::DoubleValue* recall) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.recall_);
  }
  if (recall) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(recall));
    if (message_arena != submessage_arena) {
      recall = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, recall, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.recall_ = recall;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.recall)
}

// .google.protobuf.DoubleValue accuracy = 3;
inline bool Model_AggregateClassificationMetrics::_internal_has_accuracy() const {
  return this != internal_default_instance() && _impl_.accuracy_ != nullptr;
}
inline bool Model_AggregateClassificationMetrics::has_accuracy() const {
  return _internal_has_accuracy();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::_internal_accuracy() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::accuracy() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.accuracy)
  return _internal_accuracy();
}
inline void Model_AggregateClassificationMetrics::unsafe_arena_set_allocated_accuracy(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.accuracy_);
  }
  _impl_.accuracy_ = accuracy;
  if (accuracy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.accuracy)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::release_accuracy() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.accuracy_;
  _impl_.accuracy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::unsafe_arena_release_accuracy() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.accuracy)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.accuracy_;
  _impl_.accuracy_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::_internal_mutable_accuracy() {
  
  if (_impl_.accuracy_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.accuracy_ = p;
  }
  return _impl_.accuracy_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::mutable_accuracy() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_accuracy();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.accuracy)
  return _msg;
}
inline void Model_AggregateClassificationMetrics::set_allocated_accuracy(::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.accuracy_);
  }
  if (accuracy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(accuracy));
    if (message_arena != submessage_arena) {
      accuracy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accuracy, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.accuracy_ = accuracy;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.accuracy)
}

// .google.protobuf.DoubleValue threshold = 4;
inline bool Model_AggregateClassificationMetrics::_internal_has_threshold() const {
  return this != internal_default_instance() && _impl_.threshold_ != nullptr;
}
inline bool Model_AggregateClassificationMetrics::has_threshold() const {
  return _internal_has_threshold();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::_internal_threshold() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.threshold_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::threshold() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.threshold)
  return _internal_threshold();
}
inline void Model_AggregateClassificationMetrics::unsafe_arena_set_allocated_threshold(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* threshold) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.threshold_);
  }
  _impl_.threshold_ = threshold;
  if (threshold) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.threshold)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::release_threshold() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.threshold_;
  _impl_.threshold_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::unsafe_arena_release_threshold() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.threshold)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.threshold_;
  _impl_.threshold_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::_internal_mutable_threshold() {
  
  if (_impl_.threshold_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.threshold_ = p;
  }
  return _impl_.threshold_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::mutable_threshold() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_threshold();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.threshold)
  return _msg;
}
inline void Model_AggregateClassificationMetrics::set_allocated_threshold(::PROTOBUF_NAMESPACE_ID::DoubleValue* threshold) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.threshold_);
  }
  if (threshold) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(threshold));
    if (message_arena != submessage_arena) {
      threshold = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, threshold, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.threshold_ = threshold;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.threshold)
}

// .google.protobuf.DoubleValue f1_score = 5;
inline bool Model_AggregateClassificationMetrics::_internal_has_f1_score() const {
  return this != internal_default_instance() && _impl_.f1_score_ != nullptr;
}
inline bool Model_AggregateClassificationMetrics::has_f1_score() const {
  return _internal_has_f1_score();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::_internal_f1_score() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.f1_score_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::f1_score() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.f1_score)
  return _internal_f1_score();
}
inline void Model_AggregateClassificationMetrics::unsafe_arena_set_allocated_f1_score(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.f1_score_);
  }
  _impl_.f1_score_ = f1_score;
  if (f1_score) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.f1_score)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::release_f1_score() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.f1_score_;
  _impl_.f1_score_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::unsafe_arena_release_f1_score() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.f1_score)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.f1_score_;
  _impl_.f1_score_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::_internal_mutable_f1_score() {
  
  if (_impl_.f1_score_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.f1_score_ = p;
  }
  return _impl_.f1_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::mutable_f1_score() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_f1_score();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.f1_score)
  return _msg;
}
inline void Model_AggregateClassificationMetrics::set_allocated_f1_score(::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.f1_score_);
  }
  if (f1_score) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(f1_score));
    if (message_arena != submessage_arena) {
      f1_score = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, f1_score, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.f1_score_ = f1_score;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.f1_score)
}

// .google.protobuf.DoubleValue log_loss = 6;
inline bool Model_AggregateClassificationMetrics::_internal_has_log_loss() const {
  return this != internal_default_instance() && _impl_.log_loss_ != nullptr;
}
inline bool Model_AggregateClassificationMetrics::has_log_loss() const {
  return _internal_has_log_loss();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::_internal_log_loss() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.log_loss_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::log_loss() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.log_loss)
  return _internal_log_loss();
}
inline void Model_AggregateClassificationMetrics::unsafe_arena_set_allocated_log_loss(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* log_loss) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.log_loss_);
  }
  _impl_.log_loss_ = log_loss;
  if (log_loss) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.log_loss)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::release_log_loss() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.log_loss_;
  _impl_.log_loss_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::unsafe_arena_release_log_loss() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.log_loss)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.log_loss_;
  _impl_.log_loss_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::_internal_mutable_log_loss() {
  
  if (_impl_.log_loss_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.log_loss_ = p;
  }
  return _impl_.log_loss_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::mutable_log_loss() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_log_loss();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.log_loss)
  return _msg;
}
inline void Model_AggregateClassificationMetrics::set_allocated_log_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* log_loss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.log_loss_);
  }
  if (log_loss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(log_loss));
    if (message_arena != submessage_arena) {
      log_loss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, log_loss, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.log_loss_ = log_loss;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.log_loss)
}

// .google.protobuf.DoubleValue roc_auc = 7;
inline bool Model_AggregateClassificationMetrics::_internal_has_roc_auc() const {
  return this != internal_default_instance() && _impl_.roc_auc_ != nullptr;
}
inline bool Model_AggregateClassificationMetrics::has_roc_auc() const {
  return _internal_has_roc_auc();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::_internal_roc_auc() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.roc_auc_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_AggregateClassificationMetrics::roc_auc() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.roc_auc)
  return _internal_roc_auc();
}
inline void Model_AggregateClassificationMetrics::unsafe_arena_set_allocated_roc_auc(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* roc_auc) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roc_auc_);
  }
  _impl_.roc_auc_ = roc_auc;
  if (roc_auc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.roc_auc)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::release_roc_auc() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.roc_auc_;
  _impl_.roc_auc_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::unsafe_arena_release_roc_auc() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.roc_auc)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.roc_auc_;
  _impl_.roc_auc_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::_internal_mutable_roc_auc() {
  
  if (_impl_.roc_auc_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.roc_auc_ = p;
  }
  return _impl_.roc_auc_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_AggregateClassificationMetrics::mutable_roc_auc() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_roc_auc();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.roc_auc)
  return _msg;
}
inline void Model_AggregateClassificationMetrics::set_allocated_roc_auc(::PROTOBUF_NAMESPACE_ID::DoubleValue* roc_auc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.roc_auc_);
  }
  if (roc_auc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roc_auc));
    if (message_arena != submessage_arena) {
      roc_auc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roc_auc, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.roc_auc_ = roc_auc;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.AggregateClassificationMetrics.roc_auc)
}

// -------------------------------------------------------------------

// Model_BinaryClassificationMetrics_BinaryConfusionMatrix

// .google.protobuf.DoubleValue positive_class_threshold = 1;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_positive_class_threshold() const {
  return this != internal_default_instance() && _impl_.positive_class_threshold_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_positive_class_threshold() const {
  return _internal_has_positive_class_threshold();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_positive_class_threshold() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.positive_class_threshold_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::positive_class_threshold() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.positive_class_threshold)
  return _internal_positive_class_threshold();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_positive_class_threshold(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* positive_class_threshold) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.positive_class_threshold_);
  }
  _impl_.positive_class_threshold_ = positive_class_threshold;
  if (positive_class_threshold) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.positive_class_threshold)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_positive_class_threshold() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.positive_class_threshold_;
  _impl_.positive_class_threshold_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_positive_class_threshold() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.positive_class_threshold)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.positive_class_threshold_;
  _impl_.positive_class_threshold_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_positive_class_threshold() {
  
  if (_impl_.positive_class_threshold_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.positive_class_threshold_ = p;
  }
  return _impl_.positive_class_threshold_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_positive_class_threshold() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_positive_class_threshold();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.positive_class_threshold)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_positive_class_threshold(::PROTOBUF_NAMESPACE_ID::DoubleValue* positive_class_threshold) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.positive_class_threshold_);
  }
  if (positive_class_threshold) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(positive_class_threshold));
    if (message_arena != submessage_arena) {
      positive_class_threshold = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, positive_class_threshold, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.positive_class_threshold_ = positive_class_threshold;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.positive_class_threshold)
}

// .google.protobuf.Int64Value true_positives = 2;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_true_positives() const {
  return this != internal_default_instance() && _impl_.true_positives_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_true_positives() const {
  return _internal_has_true_positives();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_true_positives() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.true_positives_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::true_positives() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_positives)
  return _internal_true_positives();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_true_positives(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* true_positives) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.true_positives_);
  }
  _impl_.true_positives_ = true_positives;
  if (true_positives) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_positives)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_true_positives() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.true_positives_;
  _impl_.true_positives_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_true_positives() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_positives)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.true_positives_;
  _impl_.true_positives_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_true_positives() {
  
  if (_impl_.true_positives_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.true_positives_ = p;
  }
  return _impl_.true_positives_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_true_positives() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_true_positives();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_positives)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_true_positives(::PROTOBUF_NAMESPACE_ID::Int64Value* true_positives) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.true_positives_);
  }
  if (true_positives) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(true_positives));
    if (message_arena != submessage_arena) {
      true_positives = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, true_positives, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.true_positives_ = true_positives;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_positives)
}

// .google.protobuf.Int64Value false_positives = 3;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_false_positives() const {
  return this != internal_default_instance() && _impl_.false_positives_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_false_positives() const {
  return _internal_has_false_positives();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_false_positives() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.false_positives_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::false_positives() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_positives)
  return _internal_false_positives();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_false_positives(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* false_positives) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.false_positives_);
  }
  _impl_.false_positives_ = false_positives;
  if (false_positives) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_positives)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_false_positives() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.false_positives_;
  _impl_.false_positives_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_false_positives() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_positives)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.false_positives_;
  _impl_.false_positives_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_false_positives() {
  
  if (_impl_.false_positives_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.false_positives_ = p;
  }
  return _impl_.false_positives_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_false_positives() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_false_positives();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_positives)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_false_positives(::PROTOBUF_NAMESPACE_ID::Int64Value* false_positives) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.false_positives_);
  }
  if (false_positives) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(false_positives));
    if (message_arena != submessage_arena) {
      false_positives = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, false_positives, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.false_positives_ = false_positives;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_positives)
}

// .google.protobuf.Int64Value true_negatives = 4;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_true_negatives() const {
  return this != internal_default_instance() && _impl_.true_negatives_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_true_negatives() const {
  return _internal_has_true_negatives();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_true_negatives() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.true_negatives_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::true_negatives() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_negatives)
  return _internal_true_negatives();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_true_negatives(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* true_negatives) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.true_negatives_);
  }
  _impl_.true_negatives_ = true_negatives;
  if (true_negatives) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_negatives)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_true_negatives() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.true_negatives_;
  _impl_.true_negatives_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_true_negatives() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_negatives)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.true_negatives_;
  _impl_.true_negatives_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_true_negatives() {
  
  if (_impl_.true_negatives_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.true_negatives_ = p;
  }
  return _impl_.true_negatives_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_true_negatives() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_true_negatives();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_negatives)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_true_negatives(::PROTOBUF_NAMESPACE_ID::Int64Value* true_negatives) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.true_negatives_);
  }
  if (true_negatives) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(true_negatives));
    if (message_arena != submessage_arena) {
      true_negatives = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, true_negatives, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.true_negatives_ = true_negatives;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.true_negatives)
}

// .google.protobuf.Int64Value false_negatives = 5;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_false_negatives() const {
  return this != internal_default_instance() && _impl_.false_negatives_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_false_negatives() const {
  return _internal_has_false_negatives();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_false_negatives() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.false_negatives_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::false_negatives() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_negatives)
  return _internal_false_negatives();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_false_negatives(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* false_negatives) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.false_negatives_);
  }
  _impl_.false_negatives_ = false_negatives;
  if (false_negatives) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_negatives)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_false_negatives() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.false_negatives_;
  _impl_.false_negatives_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_false_negatives() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_negatives)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.false_negatives_;
  _impl_.false_negatives_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_false_negatives() {
  
  if (_impl_.false_negatives_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.false_negatives_ = p;
  }
  return _impl_.false_negatives_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_false_negatives() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_false_negatives();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_negatives)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_false_negatives(::PROTOBUF_NAMESPACE_ID::Int64Value* false_negatives) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.false_negatives_);
  }
  if (false_negatives) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(false_negatives));
    if (message_arena != submessage_arena) {
      false_negatives = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, false_negatives, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.false_negatives_ = false_negatives;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.false_negatives)
}

// .google.protobuf.DoubleValue precision = 6;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_precision() const {
  return this != internal_default_instance() && _impl_.precision_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_precision() const {
  return _internal_has_precision();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_precision() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.precision_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::precision() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.precision)
  return _internal_precision();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_precision(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* precision) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.precision_);
  }
  _impl_.precision_ = precision;
  if (precision) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.precision)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_precision() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.precision_;
  _impl_.precision_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_precision() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.precision)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.precision_;
  _impl_.precision_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_precision() {
  
  if (_impl_.precision_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.precision_ = p;
  }
  return _impl_.precision_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_precision() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_precision();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.precision)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_precision(::PROTOBUF_NAMESPACE_ID::DoubleValue* precision) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.precision_);
  }
  if (precision) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(precision));
    if (message_arena != submessage_arena) {
      precision = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, precision, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.precision_ = precision;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.precision)
}

// .google.protobuf.DoubleValue recall = 7;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_recall() const {
  return this != internal_default_instance() && _impl_.recall_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_recall() const {
  return _internal_has_recall();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_recall() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.recall_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::recall() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.recall)
  return _internal_recall();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_recall(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* recall) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.recall_);
  }
  _impl_.recall_ = recall;
  if (recall) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.recall)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_recall() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.recall_;
  _impl_.recall_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_recall() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.recall)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.recall_;
  _impl_.recall_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_recall() {
  
  if (_impl_.recall_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.recall_ = p;
  }
  return _impl_.recall_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_recall() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_recall();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.recall)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_recall(::PROTOBUF_NAMESPACE_ID::DoubleValue* recall) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.recall_);
  }
  if (recall) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(recall));
    if (message_arena != submessage_arena) {
      recall = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, recall, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.recall_ = recall;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.recall)
}

// .google.protobuf.DoubleValue f1_score = 8;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_f1_score() const {
  return this != internal_default_instance() && _impl_.f1_score_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_f1_score() const {
  return _internal_has_f1_score();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_f1_score() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.f1_score_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::f1_score() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.f1_score)
  return _internal_f1_score();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_f1_score(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.f1_score_);
  }
  _impl_.f1_score_ = f1_score;
  if (f1_score) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.f1_score)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_f1_score() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.f1_score_;
  _impl_.f1_score_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_f1_score() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.f1_score)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.f1_score_;
  _impl_.f1_score_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_f1_score() {
  
  if (_impl_.f1_score_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.f1_score_ = p;
  }
  return _impl_.f1_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_f1_score() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_f1_score();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.f1_score)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_f1_score(::PROTOBUF_NAMESPACE_ID::DoubleValue* f1_score) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.f1_score_);
  }
  if (f1_score) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(f1_score));
    if (message_arena != submessage_arena) {
      f1_score = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, f1_score, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.f1_score_ = f1_score;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.f1_score)
}

// .google.protobuf.DoubleValue accuracy = 9;
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_has_accuracy() const {
  return this != internal_default_instance() && _impl_.accuracy_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics_BinaryConfusionMatrix::has_accuracy() const {
  return _internal_has_accuracy();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_accuracy() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_BinaryClassificationMetrics_BinaryConfusionMatrix::accuracy() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.accuracy)
  return _internal_accuracy();
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_set_allocated_accuracy(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.accuracy_);
  }
  _impl_.accuracy_ = accuracy;
  if (accuracy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.accuracy)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::release_accuracy() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.accuracy_;
  _impl_.accuracy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::unsafe_arena_release_accuracy() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.accuracy)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.accuracy_;
  _impl_.accuracy_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::_internal_mutable_accuracy() {
  
  if (_impl_.accuracy_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.accuracy_ = p;
  }
  return _impl_.accuracy_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_BinaryClassificationMetrics_BinaryConfusionMatrix::mutable_accuracy() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_accuracy();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.accuracy)
  return _msg;
}
inline void Model_BinaryClassificationMetrics_BinaryConfusionMatrix::set_allocated_accuracy(::PROTOBUF_NAMESPACE_ID::DoubleValue* accuracy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.accuracy_);
  }
  if (accuracy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(accuracy));
    if (message_arena != submessage_arena) {
      accuracy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accuracy, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.accuracy_ = accuracy;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix.accuracy)
}

// -------------------------------------------------------------------

// Model_BinaryClassificationMetrics

// .google.cloud.bigquery.v2.Model.AggregateClassificationMetrics aggregate_classification_metrics = 1;
inline bool Model_BinaryClassificationMetrics::_internal_has_aggregate_classification_metrics() const {
  return this != internal_default_instance() && _impl_.aggregate_classification_metrics_ != nullptr;
}
inline bool Model_BinaryClassificationMetrics::has_aggregate_classification_metrics() const {
  return _internal_has_aggregate_classification_metrics();
}
inline void Model_BinaryClassificationMetrics::clear_aggregate_classification_metrics() {
  if (GetArenaForAllocation() == nullptr && _impl_.aggregate_classification_metrics_ != nullptr) {
    delete _impl_.aggregate_classification_metrics_;
  }
  _impl_.aggregate_classification_metrics_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& Model_BinaryClassificationMetrics::_internal_aggregate_classification_metrics() const {
  const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* p = _impl_.aggregate_classification_metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics&>(
      ::google::cloud::bigquery::v2::_Model_AggregateClassificationMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& Model_BinaryClassificationMetrics::aggregate_classification_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.aggregate_classification_metrics)
  return _internal_aggregate_classification_metrics();
}
inline void Model_BinaryClassificationMetrics::unsafe_arena_set_allocated_aggregate_classification_metrics(
    ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.aggregate_classification_metrics_);
  }
  _impl_.aggregate_classification_metrics_ = aggregate_classification_metrics;
  if (aggregate_classification_metrics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.aggregate_classification_metrics)
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_BinaryClassificationMetrics::release_aggregate_classification_metrics() {
  
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* temp = _impl_.aggregate_classification_metrics_;
  _impl_.aggregate_classification_metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_BinaryClassificationMetrics::unsafe_arena_release_aggregate_classification_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.aggregate_classification_metrics)
  
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* temp = _impl_.aggregate_classification_metrics_;
  _impl_.aggregate_classification_metrics_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_BinaryClassificationMetrics::_internal_mutable_aggregate_classification_metrics() {
  
  if (_impl_.aggregate_classification_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics>(GetArenaForAllocation());
    _impl_.aggregate_classification_metrics_ = p;
  }
  return _impl_.aggregate_classification_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_BinaryClassificationMetrics::mutable_aggregate_classification_metrics() {
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* _msg = _internal_mutable_aggregate_classification_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.aggregate_classification_metrics)
  return _msg;
}
inline void Model_BinaryClassificationMetrics::set_allocated_aggregate_classification_metrics(::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.aggregate_classification_metrics_;
  }
  if (aggregate_classification_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(aggregate_classification_metrics);
    if (message_arena != submessage_arena) {
      aggregate_classification_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aggregate_classification_metrics, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.aggregate_classification_metrics_ = aggregate_classification_metrics;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.aggregate_classification_metrics)
}

// repeated .google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.BinaryConfusionMatrix binary_confusion_matrix_list = 2;
inline int Model_BinaryClassificationMetrics::_internal_binary_confusion_matrix_list_size() const {
  return _impl_.binary_confusion_matrix_list_.size();
}
inline int Model_BinaryClassificationMetrics::binary_confusion_matrix_list_size() const {
  return _internal_binary_confusion_matrix_list_size();
}
inline void Model_BinaryClassificationMetrics::clear_binary_confusion_matrix_list() {
  _impl_.binary_confusion_matrix_list_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* Model_BinaryClassificationMetrics::mutable_binary_confusion_matrix_list(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.binary_confusion_matrix_list)
  return _impl_.binary_confusion_matrix_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix >*
Model_BinaryClassificationMetrics::mutable_binary_confusion_matrix_list() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.binary_confusion_matrix_list)
  return &_impl_.binary_confusion_matrix_list_;
}
inline const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix& Model_BinaryClassificationMetrics::_internal_binary_confusion_matrix_list(int index) const {
  return _impl_.binary_confusion_matrix_list_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix& Model_BinaryClassificationMetrics::binary_confusion_matrix_list(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.binary_confusion_matrix_list)
  return _internal_binary_confusion_matrix_list(index);
}
inline ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* Model_BinaryClassificationMetrics::_internal_add_binary_confusion_matrix_list() {
  return _impl_.binary_confusion_matrix_list_.Add();
}
inline ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* Model_BinaryClassificationMetrics::add_binary_confusion_matrix_list() {
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix* _add = _internal_add_binary_confusion_matrix_list();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.binary_confusion_matrix_list)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics_BinaryConfusionMatrix >&
Model_BinaryClassificationMetrics::binary_confusion_matrix_list() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.binary_confusion_matrix_list)
  return _impl_.binary_confusion_matrix_list_;
}

// string positive_label = 3;
inline void Model_BinaryClassificationMetrics::clear_positive_label() {
  _impl_.positive_label_.ClearToEmpty();
}
inline const std::string& Model_BinaryClassificationMetrics::positive_label() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.positive_label)
  return _internal_positive_label();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_BinaryClassificationMetrics::set_positive_label(ArgT0&& arg0, ArgT... args) {
 
 _impl_.positive_label_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.positive_label)
}
inline std::string* Model_BinaryClassificationMetrics::mutable_positive_label() {
  std::string* _s = _internal_mutable_positive_label();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.positive_label)
  return _s;
}
inline const std::string& Model_BinaryClassificationMetrics::_internal_positive_label() const {
  return _impl_.positive_label_.Get();
}
inline void Model_BinaryClassificationMetrics::_internal_set_positive_label(const std::string& value) {
  
  _impl_.positive_label_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_BinaryClassificationMetrics::_internal_mutable_positive_label() {
  
  return _impl_.positive_label_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_BinaryClassificationMetrics::release_positive_label() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.positive_label)
  return _impl_.positive_label_.Release();
}
inline void Model_BinaryClassificationMetrics::set_allocated_positive_label(std::string* positive_label) {
  if (positive_label != nullptr) {
    
  } else {
    
  }
  _impl_.positive_label_.SetAllocated(positive_label, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.positive_label_.IsDefault()) {
    _impl_.positive_label_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.positive_label)
}

// string negative_label = 4;
inline void Model_BinaryClassificationMetrics::clear_negative_label() {
  _impl_.negative_label_.ClearToEmpty();
}
inline const std::string& Model_BinaryClassificationMetrics::negative_label() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.negative_label)
  return _internal_negative_label();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_BinaryClassificationMetrics::set_negative_label(ArgT0&& arg0, ArgT... args) {
 
 _impl_.negative_label_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.negative_label)
}
inline std::string* Model_BinaryClassificationMetrics::mutable_negative_label() {
  std::string* _s = _internal_mutable_negative_label();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.negative_label)
  return _s;
}
inline const std::string& Model_BinaryClassificationMetrics::_internal_negative_label() const {
  return _impl_.negative_label_.Get();
}
inline void Model_BinaryClassificationMetrics::_internal_set_negative_label(const std::string& value) {
  
  _impl_.negative_label_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_BinaryClassificationMetrics::_internal_mutable_negative_label() {
  
  return _impl_.negative_label_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_BinaryClassificationMetrics::release_negative_label() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.negative_label)
  return _impl_.negative_label_.Release();
}
inline void Model_BinaryClassificationMetrics::set_allocated_negative_label(std::string* negative_label) {
  if (negative_label != nullptr) {
    
  } else {
    
  }
  _impl_.negative_label_.SetAllocated(negative_label, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.negative_label_.IsDefault()) {
    _impl_.negative_label_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.BinaryClassificationMetrics.negative_label)
}

// -------------------------------------------------------------------

// Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry

// string predicted_label = 1;
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::clear_predicted_label() {
  _impl_.predicted_label_.ClearToEmpty();
}
inline const std::string& Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::predicted_label() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.predicted_label)
  return _internal_predicted_label();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::set_predicted_label(ArgT0&& arg0, ArgT... args) {
 
 _impl_.predicted_label_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.predicted_label)
}
inline std::string* Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::mutable_predicted_label() {
  std::string* _s = _internal_mutable_predicted_label();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.predicted_label)
  return _s;
}
inline const std::string& Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::_internal_predicted_label() const {
  return _impl_.predicted_label_.Get();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::_internal_set_predicted_label(const std::string& value) {
  
  _impl_.predicted_label_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::_internal_mutable_predicted_label() {
  
  return _impl_.predicted_label_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::release_predicted_label() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.predicted_label)
  return _impl_.predicted_label_.Release();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::set_allocated_predicted_label(std::string* predicted_label) {
  if (predicted_label != nullptr) {
    
  } else {
    
  }
  _impl_.predicted_label_.SetAllocated(predicted_label, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.predicted_label_.IsDefault()) {
    _impl_.predicted_label_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.predicted_label)
}

// .google.protobuf.Int64Value item_count = 2;
inline bool Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::_internal_has_item_count() const {
  return this != internal_default_instance() && _impl_.item_count_ != nullptr;
}
inline bool Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::has_item_count() const {
  return _internal_has_item_count();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::_internal_item_count() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.item_count_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::item_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.item_count)
  return _internal_item_count();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::unsafe_arena_set_allocated_item_count(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* item_count) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.item_count_);
  }
  _impl_.item_count_ = item_count;
  if (item_count) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.item_count)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::release_item_count() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.item_count_;
  _impl_.item_count_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::unsafe_arena_release_item_count() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.item_count)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.item_count_;
  _impl_.item_count_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::_internal_mutable_item_count() {
  
  if (_impl_.item_count_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.item_count_ = p;
  }
  return _impl_.item_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::mutable_item_count() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_item_count();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.item_count)
  return _msg;
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry::set_allocated_item_count(::PROTOBUF_NAMESPACE_ID::Int64Value* item_count) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.item_count_);
  }
  if (item_count) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(item_count));
    if (message_arena != submessage_arena) {
      item_count = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item_count, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.item_count_ = item_count;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry.item_count)
}

// -------------------------------------------------------------------

// Model_MultiClassClassificationMetrics_ConfusionMatrix_Row

// string actual_label = 1;
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::clear_actual_label() {
  _impl_.actual_label_.ClearToEmpty();
}
inline const std::string& Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::actual_label() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.actual_label)
  return _internal_actual_label();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::set_actual_label(ArgT0&& arg0, ArgT... args) {
 
 _impl_.actual_label_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.actual_label)
}
inline std::string* Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::mutable_actual_label() {
  std::string* _s = _internal_mutable_actual_label();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.actual_label)
  return _s;
}
inline const std::string& Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::_internal_actual_label() const {
  return _impl_.actual_label_.Get();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::_internal_set_actual_label(const std::string& value) {
  
  _impl_.actual_label_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::_internal_mutable_actual_label() {
  
  return _impl_.actual_label_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::release_actual_label() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.actual_label)
  return _impl_.actual_label_.Release();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::set_allocated_actual_label(std::string* actual_label) {
  if (actual_label != nullptr) {
    
  } else {
    
  }
  _impl_.actual_label_.SetAllocated(actual_label, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.actual_label_.IsDefault()) {
    _impl_.actual_label_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.actual_label)
}

// repeated .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Entry entries = 2;
inline int Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::_internal_entries_size() const {
  return _impl_.entries_.size();
}
inline int Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::entries_size() const {
  return _internal_entries_size();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::clear_entries() {
  _impl_.entries_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.entries)
  return _impl_.entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry >*
Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.entries)
  return &_impl_.entries_;
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::_internal_entries(int index) const {
  return _impl_.entries_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry& Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.entries)
  return _internal_entries(index);
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::_internal_add_entries() {
  return _impl_.entries_.Add();
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::add_entries() {
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry* _add = _internal_add_entries();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Entry >&
Model_MultiClassClassificationMetrics_ConfusionMatrix_Row::entries() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row.entries)
  return _impl_.entries_;
}

// -------------------------------------------------------------------

// Model_MultiClassClassificationMetrics_ConfusionMatrix

// .google.protobuf.DoubleValue confidence_threshold = 1;
inline bool Model_MultiClassClassificationMetrics_ConfusionMatrix::_internal_has_confidence_threshold() const {
  return this != internal_default_instance() && _impl_.confidence_threshold_ != nullptr;
}
inline bool Model_MultiClassClassificationMetrics_ConfusionMatrix::has_confidence_threshold() const {
  return _internal_has_confidence_threshold();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_MultiClassClassificationMetrics_ConfusionMatrix::_internal_confidence_threshold() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.confidence_threshold_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_MultiClassClassificationMetrics_ConfusionMatrix::confidence_threshold() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.confidence_threshold)
  return _internal_confidence_threshold();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix::unsafe_arena_set_allocated_confidence_threshold(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* confidence_threshold) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.confidence_threshold_);
  }
  _impl_.confidence_threshold_ = confidence_threshold;
  if (confidence_threshold) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.confidence_threshold)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_MultiClassClassificationMetrics_ConfusionMatrix::release_confidence_threshold() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.confidence_threshold_;
  _impl_.confidence_threshold_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_MultiClassClassificationMetrics_ConfusionMatrix::unsafe_arena_release_confidence_threshold() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.confidence_threshold)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.confidence_threshold_;
  _impl_.confidence_threshold_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_MultiClassClassificationMetrics_ConfusionMatrix::_internal_mutable_confidence_threshold() {
  
  if (_impl_.confidence_threshold_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.confidence_threshold_ = p;
  }
  return _impl_.confidence_threshold_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_MultiClassClassificationMetrics_ConfusionMatrix::mutable_confidence_threshold() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_confidence_threshold();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.confidence_threshold)
  return _msg;
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix::set_allocated_confidence_threshold(::PROTOBUF_NAMESPACE_ID::DoubleValue* confidence_threshold) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.confidence_threshold_);
  }
  if (confidence_threshold) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(confidence_threshold));
    if (message_arena != submessage_arena) {
      confidence_threshold = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, confidence_threshold, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.confidence_threshold_ = confidence_threshold;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.confidence_threshold)
}

// repeated .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.Row rows = 2;
inline int Model_MultiClassClassificationMetrics_ConfusionMatrix::_internal_rows_size() const {
  return _impl_.rows_.size();
}
inline int Model_MultiClassClassificationMetrics_ConfusionMatrix::rows_size() const {
  return _internal_rows_size();
}
inline void Model_MultiClassClassificationMetrics_ConfusionMatrix::clear_rows() {
  _impl_.rows_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* Model_MultiClassClassificationMetrics_ConfusionMatrix::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.rows)
  return _impl_.rows_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row >*
Model_MultiClassClassificationMetrics_ConfusionMatrix::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.rows)
  return &_impl_.rows_;
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& Model_MultiClassClassificationMetrics_ConfusionMatrix::_internal_rows(int index) const {
  return _impl_.rows_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row& Model_MultiClassClassificationMetrics_ConfusionMatrix::rows(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.rows)
  return _internal_rows(index);
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* Model_MultiClassClassificationMetrics_ConfusionMatrix::_internal_add_rows() {
  return _impl_.rows_.Add();
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* Model_MultiClassClassificationMetrics_ConfusionMatrix::add_rows() {
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row* _add = _internal_add_rows();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.rows)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix_Row >&
Model_MultiClassClassificationMetrics_ConfusionMatrix::rows() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix.rows)
  return _impl_.rows_;
}

// -------------------------------------------------------------------

// Model_MultiClassClassificationMetrics

// .google.cloud.bigquery.v2.Model.AggregateClassificationMetrics aggregate_classification_metrics = 1;
inline bool Model_MultiClassClassificationMetrics::_internal_has_aggregate_classification_metrics() const {
  return this != internal_default_instance() && _impl_.aggregate_classification_metrics_ != nullptr;
}
inline bool Model_MultiClassClassificationMetrics::has_aggregate_classification_metrics() const {
  return _internal_has_aggregate_classification_metrics();
}
inline void Model_MultiClassClassificationMetrics::clear_aggregate_classification_metrics() {
  if (GetArenaForAllocation() == nullptr && _impl_.aggregate_classification_metrics_ != nullptr) {
    delete _impl_.aggregate_classification_metrics_;
  }
  _impl_.aggregate_classification_metrics_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& Model_MultiClassClassificationMetrics::_internal_aggregate_classification_metrics() const {
  const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* p = _impl_.aggregate_classification_metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics&>(
      ::google::cloud::bigquery::v2::_Model_AggregateClassificationMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics& Model_MultiClassClassificationMetrics::aggregate_classification_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.aggregate_classification_metrics)
  return _internal_aggregate_classification_metrics();
}
inline void Model_MultiClassClassificationMetrics::unsafe_arena_set_allocated_aggregate_classification_metrics(
    ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.aggregate_classification_metrics_);
  }
  _impl_.aggregate_classification_metrics_ = aggregate_classification_metrics;
  if (aggregate_classification_metrics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.aggregate_classification_metrics)
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_MultiClassClassificationMetrics::release_aggregate_classification_metrics() {
  
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* temp = _impl_.aggregate_classification_metrics_;
  _impl_.aggregate_classification_metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_MultiClassClassificationMetrics::unsafe_arena_release_aggregate_classification_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.aggregate_classification_metrics)
  
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* temp = _impl_.aggregate_classification_metrics_;
  _impl_.aggregate_classification_metrics_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_MultiClassClassificationMetrics::_internal_mutable_aggregate_classification_metrics() {
  
  if (_impl_.aggregate_classification_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics>(GetArenaForAllocation());
    _impl_.aggregate_classification_metrics_ = p;
  }
  return _impl_.aggregate_classification_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* Model_MultiClassClassificationMetrics::mutable_aggregate_classification_metrics() {
  ::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* _msg = _internal_mutable_aggregate_classification_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.aggregate_classification_metrics)
  return _msg;
}
inline void Model_MultiClassClassificationMetrics::set_allocated_aggregate_classification_metrics(::google::cloud::bigquery::v2::Model_AggregateClassificationMetrics* aggregate_classification_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.aggregate_classification_metrics_;
  }
  if (aggregate_classification_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(aggregate_classification_metrics);
    if (message_arena != submessage_arena) {
      aggregate_classification_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aggregate_classification_metrics, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.aggregate_classification_metrics_ = aggregate_classification_metrics;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.aggregate_classification_metrics)
}

// repeated .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.ConfusionMatrix confusion_matrix_list = 2;
inline int Model_MultiClassClassificationMetrics::_internal_confusion_matrix_list_size() const {
  return _impl_.confusion_matrix_list_.size();
}
inline int Model_MultiClassClassificationMetrics::confusion_matrix_list_size() const {
  return _internal_confusion_matrix_list_size();
}
inline void Model_MultiClassClassificationMetrics::clear_confusion_matrix_list() {
  _impl_.confusion_matrix_list_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* Model_MultiClassClassificationMetrics::mutable_confusion_matrix_list(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.confusion_matrix_list)
  return _impl_.confusion_matrix_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix >*
Model_MultiClassClassificationMetrics::mutable_confusion_matrix_list() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.confusion_matrix_list)
  return &_impl_.confusion_matrix_list_;
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix& Model_MultiClassClassificationMetrics::_internal_confusion_matrix_list(int index) const {
  return _impl_.confusion_matrix_list_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix& Model_MultiClassClassificationMetrics::confusion_matrix_list(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.confusion_matrix_list)
  return _internal_confusion_matrix_list(index);
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* Model_MultiClassClassificationMetrics::_internal_add_confusion_matrix_list() {
  return _impl_.confusion_matrix_list_.Add();
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* Model_MultiClassClassificationMetrics::add_confusion_matrix_list() {
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix* _add = _internal_add_confusion_matrix_list();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.confusion_matrix_list)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics_ConfusionMatrix >&
Model_MultiClassClassificationMetrics::confusion_matrix_list() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics.confusion_matrix_list)
  return _impl_.confusion_matrix_list_;
}

// -------------------------------------------------------------------

// Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount

// string category = 1;
inline void Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::clear_category() {
  _impl_.category_.ClearToEmpty();
}
inline const std::string& Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::category() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.category)
  return _internal_category();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::set_category(ArgT0&& arg0, ArgT... args) {
 
 _impl_.category_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.category)
}
inline std::string* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::mutable_category() {
  std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.category)
  return _s;
}
inline const std::string& Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::_internal_category() const {
  return _impl_.category_.Get();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::_internal_set_category(const std::string& value) {
  
  _impl_.category_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::_internal_mutable_category() {
  
  return _impl_.category_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::release_category() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.category)
  return _impl_.category_.Release();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::set_allocated_category(std::string* category) {
  if (category != nullptr) {
    
  } else {
    
  }
  _impl_.category_.SetAllocated(category, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.category)
}

// .google.protobuf.Int64Value count = 2;
inline bool Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::_internal_has_count() const {
  return this != internal_default_instance() && _impl_.count_ != nullptr;
}
inline bool Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::has_count() const {
  return _internal_has_count();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::_internal_count() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.count_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::count() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.count)
  return _internal_count();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::unsafe_arena_set_allocated_count(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  _impl_.count_ = count;
  if (count) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.count)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::release_count() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::unsafe_arena_release_count() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.count)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::_internal_mutable_count() {
  
  if (_impl_.count_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.count_ = p;
  }
  return _impl_.count_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::mutable_count() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_count();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.count)
  return _msg;
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount::set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  if (count) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(count));
    if (message_arena != submessage_arena) {
      count = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.count_ = count;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount.count)
}

// -------------------------------------------------------------------

// Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue

// repeated .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.CategoryCount category_counts = 1;
inline int Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::_internal_category_counts_size() const {
  return _impl_.category_counts_.size();
}
inline int Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::category_counts_size() const {
  return _internal_category_counts_size();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::clear_category_counts() {
  _impl_.category_counts_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::mutable_category_counts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.category_counts)
  return _impl_.category_counts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount >*
Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::mutable_category_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.category_counts)
  return &_impl_.category_counts_;
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::_internal_category_counts(int index) const {
  return _impl_.category_counts_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount& Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::category_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.category_counts)
  return _internal_category_counts(index);
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::_internal_add_category_counts() {
  return _impl_.category_counts_.Add();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::add_category_counts() {
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount* _add = _internal_add_category_counts();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.category_counts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_CategoryCount >&
Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue::category_counts() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue.category_counts)
  return _impl_.category_counts_;
}

// -------------------------------------------------------------------

// Model_ClusteringMetrics_Cluster_FeatureValue

// string feature_column = 1;
inline void Model_ClusteringMetrics_Cluster_FeatureValue::clear_feature_column() {
  _impl_.feature_column_.ClearToEmpty();
}
inline const std::string& Model_ClusteringMetrics_Cluster_FeatureValue::feature_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.feature_column)
  return _internal_feature_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_ClusteringMetrics_Cluster_FeatureValue::set_feature_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.feature_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.feature_column)
}
inline std::string* Model_ClusteringMetrics_Cluster_FeatureValue::mutable_feature_column() {
  std::string* _s = _internal_mutable_feature_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.feature_column)
  return _s;
}
inline const std::string& Model_ClusteringMetrics_Cluster_FeatureValue::_internal_feature_column() const {
  return _impl_.feature_column_.Get();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::_internal_set_feature_column(const std::string& value) {
  
  _impl_.feature_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_ClusteringMetrics_Cluster_FeatureValue::_internal_mutable_feature_column() {
  
  return _impl_.feature_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_ClusteringMetrics_Cluster_FeatureValue::release_feature_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.feature_column)
  return _impl_.feature_column_.Release();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::set_allocated_feature_column(std::string* feature_column) {
  if (feature_column != nullptr) {
    
  } else {
    
  }
  _impl_.feature_column_.SetAllocated(feature_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.feature_column_.IsDefault()) {
    _impl_.feature_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.feature_column)
}

// .google.protobuf.DoubleValue numerical_value = 2;
inline bool Model_ClusteringMetrics_Cluster_FeatureValue::_internal_has_numerical_value() const {
  return value_case() == kNumericalValue;
}
inline bool Model_ClusteringMetrics_Cluster_FeatureValue::has_numerical_value() const {
  return _internal_has_numerical_value();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::set_has_numerical_value() {
  _impl_._oneof_case_[0] = kNumericalValue;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics_Cluster_FeatureValue::release_numerical_value() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.numerical_value)
  if (_internal_has_numerical_value()) {
    clear_has_value();
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.value_.numerical_value_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.numerical_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_ClusteringMetrics_Cluster_FeatureValue::_internal_numerical_value() const {
  return _internal_has_numerical_value()
      ? *_impl_.value_.numerical_value_
      : reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_ClusteringMetrics_Cluster_FeatureValue::numerical_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.numerical_value)
  return _internal_numerical_value();
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics_Cluster_FeatureValue::unsafe_arena_release_numerical_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.numerical_value)
  if (_internal_has_numerical_value()) {
    clear_has_value();
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.value_.numerical_value_;
    _impl_.value_.numerical_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::unsafe_arena_set_allocated_numerical_value(::PROTOBUF_NAMESPACE_ID::DoubleValue* numerical_value) {
  clear_value();
  if (numerical_value) {
    set_has_numerical_value();
    _impl_.value_.numerical_value_ = numerical_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.numerical_value)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics_Cluster_FeatureValue::_internal_mutable_numerical_value() {
  if (!_internal_has_numerical_value()) {
    clear_value();
    set_has_numerical_value();
    _impl_.value_.numerical_value_ = CreateMaybeMessage< ::PROTOBUF_NAMESPACE_ID::DoubleValue >(GetArenaForAllocation());
  }
  return _impl_.value_.numerical_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics_Cluster_FeatureValue::mutable_numerical_value() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_numerical_value();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.numerical_value)
  return _msg;
}

// .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.CategoricalValue categorical_value = 3;
inline bool Model_ClusteringMetrics_Cluster_FeatureValue::_internal_has_categorical_value() const {
  return value_case() == kCategoricalValue;
}
inline bool Model_ClusteringMetrics_Cluster_FeatureValue::has_categorical_value() const {
  return _internal_has_categorical_value();
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::set_has_categorical_value() {
  _impl_._oneof_case_[0] = kCategoricalValue;
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::clear_categorical_value() {
  if (_internal_has_categorical_value()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.value_.categorical_value_;
    }
    clear_has_value();
  }
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* Model_ClusteringMetrics_Cluster_FeatureValue::release_categorical_value() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.categorical_value)
  if (_internal_has_categorical_value()) {
    clear_has_value();
    ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* temp = _impl_.value_.categorical_value_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.categorical_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& Model_ClusteringMetrics_Cluster_FeatureValue::_internal_categorical_value() const {
  return _internal_has_categorical_value()
      ? *_impl_.value_.categorical_value_
      : reinterpret_cast< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue&>(::google::cloud::bigquery::v2::_Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue& Model_ClusteringMetrics_Cluster_FeatureValue::categorical_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.categorical_value)
  return _internal_categorical_value();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* Model_ClusteringMetrics_Cluster_FeatureValue::unsafe_arena_release_categorical_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.categorical_value)
  if (_internal_has_categorical_value()) {
    clear_has_value();
    ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* temp = _impl_.value_.categorical_value_;
    _impl_.value_.categorical_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::unsafe_arena_set_allocated_categorical_value(::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* categorical_value) {
  clear_value();
  if (categorical_value) {
    set_has_categorical_value();
    _impl_.value_.categorical_value_ = categorical_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.categorical_value)
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* Model_ClusteringMetrics_Cluster_FeatureValue::_internal_mutable_categorical_value() {
  if (!_internal_has_categorical_value()) {
    clear_value();
    set_has_categorical_value();
    _impl_.value_.categorical_value_ = CreateMaybeMessage< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue >(GetArenaForAllocation());
  }
  return _impl_.value_.categorical_value_;
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* Model_ClusteringMetrics_Cluster_FeatureValue::mutable_categorical_value() {
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue_CategoricalValue* _msg = _internal_mutable_categorical_value();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue.categorical_value)
  return _msg;
}

inline bool Model_ClusteringMetrics_Cluster_FeatureValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Model_ClusteringMetrics_Cluster_FeatureValue::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline Model_ClusteringMetrics_Cluster_FeatureValue::ValueCase Model_ClusteringMetrics_Cluster_FeatureValue::value_case() const {
  return Model_ClusteringMetrics_Cluster_FeatureValue::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Model_ClusteringMetrics_Cluster

// int64 centroid_id = 1;
inline void Model_ClusteringMetrics_Cluster::clear_centroid_id() {
  _impl_.centroid_id_ = int64_t{0};
}
inline int64_t Model_ClusteringMetrics_Cluster::_internal_centroid_id() const {
  return _impl_.centroid_id_;
}
inline int64_t Model_ClusteringMetrics_Cluster::centroid_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.centroid_id)
  return _internal_centroid_id();
}
inline void Model_ClusteringMetrics_Cluster::_internal_set_centroid_id(int64_t value) {
  
  _impl_.centroid_id_ = value;
}
inline void Model_ClusteringMetrics_Cluster::set_centroid_id(int64_t value) {
  _internal_set_centroid_id(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.centroid_id)
}

// repeated .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.FeatureValue feature_values = 2;
inline int Model_ClusteringMetrics_Cluster::_internal_feature_values_size() const {
  return _impl_.feature_values_.size();
}
inline int Model_ClusteringMetrics_Cluster::feature_values_size() const {
  return _internal_feature_values_size();
}
inline void Model_ClusteringMetrics_Cluster::clear_feature_values() {
  _impl_.feature_values_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* Model_ClusteringMetrics_Cluster::mutable_feature_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.feature_values)
  return _impl_.feature_values_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue >*
Model_ClusteringMetrics_Cluster::mutable_feature_values() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.feature_values)
  return &_impl_.feature_values_;
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue& Model_ClusteringMetrics_Cluster::_internal_feature_values(int index) const {
  return _impl_.feature_values_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue& Model_ClusteringMetrics_Cluster::feature_values(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.feature_values)
  return _internal_feature_values(index);
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* Model_ClusteringMetrics_Cluster::_internal_add_feature_values() {
  return _impl_.feature_values_.Add();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* Model_ClusteringMetrics_Cluster::add_feature_values() {
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue* _add = _internal_add_feature_values();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.feature_values)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster_FeatureValue >&
Model_ClusteringMetrics_Cluster::feature_values() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.feature_values)
  return _impl_.feature_values_;
}

// .google.protobuf.Int64Value count = 3;
inline bool Model_ClusteringMetrics_Cluster::_internal_has_count() const {
  return this != internal_default_instance() && _impl_.count_ != nullptr;
}
inline bool Model_ClusteringMetrics_Cluster::has_count() const {
  return _internal_has_count();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_ClusteringMetrics_Cluster::_internal_count() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.count_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_ClusteringMetrics_Cluster::count() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.count)
  return _internal_count();
}
inline void Model_ClusteringMetrics_Cluster::unsafe_arena_set_allocated_count(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  _impl_.count_ = count;
  if (count) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.count)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster::release_count() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster::unsafe_arena_release_count() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.count)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster::_internal_mutable_count() {
  
  if (_impl_.count_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.count_ = p;
  }
  return _impl_.count_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_ClusteringMetrics_Cluster::mutable_count() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_count();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.count)
  return _msg;
}
inline void Model_ClusteringMetrics_Cluster::set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  if (count) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(count));
    if (message_arena != submessage_arena) {
      count = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.count_ = count;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster.count)
}

// -------------------------------------------------------------------

// Model_ClusteringMetrics

// .google.protobuf.DoubleValue davies_bouldin_index = 1;
inline bool Model_ClusteringMetrics::_internal_has_davies_bouldin_index() const {
  return this != internal_default_instance() && _impl_.davies_bouldin_index_ != nullptr;
}
inline bool Model_ClusteringMetrics::has_davies_bouldin_index() const {
  return _internal_has_davies_bouldin_index();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_ClusteringMetrics::_internal_davies_bouldin_index() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.davies_bouldin_index_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_ClusteringMetrics::davies_bouldin_index() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.davies_bouldin_index)
  return _internal_davies_bouldin_index();
}
inline void Model_ClusteringMetrics::unsafe_arena_set_allocated_davies_bouldin_index(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* davies_bouldin_index) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.davies_bouldin_index_);
  }
  _impl_.davies_bouldin_index_ = davies_bouldin_index;
  if (davies_bouldin_index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.davies_bouldin_index)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::release_davies_bouldin_index() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.davies_bouldin_index_;
  _impl_.davies_bouldin_index_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::unsafe_arena_release_davies_bouldin_index() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.davies_bouldin_index)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.davies_bouldin_index_;
  _impl_.davies_bouldin_index_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::_internal_mutable_davies_bouldin_index() {
  
  if (_impl_.davies_bouldin_index_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.davies_bouldin_index_ = p;
  }
  return _impl_.davies_bouldin_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::mutable_davies_bouldin_index() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_davies_bouldin_index();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.davies_bouldin_index)
  return _msg;
}
inline void Model_ClusteringMetrics::set_allocated_davies_bouldin_index(::PROTOBUF_NAMESPACE_ID::DoubleValue* davies_bouldin_index) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.davies_bouldin_index_);
  }
  if (davies_bouldin_index) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(davies_bouldin_index));
    if (message_arena != submessage_arena) {
      davies_bouldin_index = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, davies_bouldin_index, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.davies_bouldin_index_ = davies_bouldin_index;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.davies_bouldin_index)
}

// .google.protobuf.DoubleValue mean_squared_distance = 2;
inline bool Model_ClusteringMetrics::_internal_has_mean_squared_distance() const {
  return this != internal_default_instance() && _impl_.mean_squared_distance_ != nullptr;
}
inline bool Model_ClusteringMetrics::has_mean_squared_distance() const {
  return _internal_has_mean_squared_distance();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_ClusteringMetrics::_internal_mean_squared_distance() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.mean_squared_distance_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_ClusteringMetrics::mean_squared_distance() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.mean_squared_distance)
  return _internal_mean_squared_distance();
}
inline void Model_ClusteringMetrics::unsafe_arena_set_allocated_mean_squared_distance(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_distance) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_distance_);
  }
  _impl_.mean_squared_distance_ = mean_squared_distance;
  if (mean_squared_distance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.mean_squared_distance)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::release_mean_squared_distance() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_distance_;
  _impl_.mean_squared_distance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::unsafe_arena_release_mean_squared_distance() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ClusteringMetrics.mean_squared_distance)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_distance_;
  _impl_.mean_squared_distance_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::_internal_mutable_mean_squared_distance() {
  
  if (_impl_.mean_squared_distance_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.mean_squared_distance_ = p;
  }
  return _impl_.mean_squared_distance_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_ClusteringMetrics::mutable_mean_squared_distance() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_mean_squared_distance();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.mean_squared_distance)
  return _msg;
}
inline void Model_ClusteringMetrics::set_allocated_mean_squared_distance(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_distance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_distance_);
  }
  if (mean_squared_distance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mean_squared_distance));
    if (message_arena != submessage_arena) {
      mean_squared_distance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mean_squared_distance, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mean_squared_distance_ = mean_squared_distance;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ClusteringMetrics.mean_squared_distance)
}

// repeated .google.cloud.bigquery.v2.Model.ClusteringMetrics.Cluster clusters = 3;
inline int Model_ClusteringMetrics::_internal_clusters_size() const {
  return _impl_.clusters_.size();
}
inline int Model_ClusteringMetrics::clusters_size() const {
  return _internal_clusters_size();
}
inline void Model_ClusteringMetrics::clear_clusters() {
  _impl_.clusters_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* Model_ClusteringMetrics::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ClusteringMetrics.clusters)
  return _impl_.clusters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster >*
Model_ClusteringMetrics::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ClusteringMetrics.clusters)
  return &_impl_.clusters_;
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster& Model_ClusteringMetrics::_internal_clusters(int index) const {
  return _impl_.clusters_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster& Model_ClusteringMetrics::clusters(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ClusteringMetrics.clusters)
  return _internal_clusters(index);
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* Model_ClusteringMetrics::_internal_add_clusters() {
  return _impl_.clusters_.Add();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* Model_ClusteringMetrics::add_clusters() {
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster* _add = _internal_add_clusters();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ClusteringMetrics.clusters)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ClusteringMetrics_Cluster >&
Model_ClusteringMetrics::clusters() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ClusteringMetrics.clusters)
  return _impl_.clusters_;
}

// -------------------------------------------------------------------

// Model_RankingMetrics

// .google.protobuf.DoubleValue mean_average_precision = 1;
inline bool Model_RankingMetrics::_internal_has_mean_average_precision() const {
  return this != internal_default_instance() && _impl_.mean_average_precision_ != nullptr;
}
inline bool Model_RankingMetrics::has_mean_average_precision() const {
  return _internal_has_mean_average_precision();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::_internal_mean_average_precision() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.mean_average_precision_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::mean_average_precision() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RankingMetrics.mean_average_precision)
  return _internal_mean_average_precision();
}
inline void Model_RankingMetrics::unsafe_arena_set_allocated_mean_average_precision(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_average_precision) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_average_precision_);
  }
  _impl_.mean_average_precision_ = mean_average_precision;
  if (mean_average_precision) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.mean_average_precision)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::release_mean_average_precision() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_average_precision_;
  _impl_.mean_average_precision_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::unsafe_arena_release_mean_average_precision() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RankingMetrics.mean_average_precision)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_average_precision_;
  _impl_.mean_average_precision_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::_internal_mutable_mean_average_precision() {
  
  if (_impl_.mean_average_precision_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.mean_average_precision_ = p;
  }
  return _impl_.mean_average_precision_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::mutable_mean_average_precision() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_mean_average_precision();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RankingMetrics.mean_average_precision)
  return _msg;
}
inline void Model_RankingMetrics::set_allocated_mean_average_precision(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_average_precision) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_average_precision_);
  }
  if (mean_average_precision) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mean_average_precision));
    if (message_arena != submessage_arena) {
      mean_average_precision = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mean_average_precision, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mean_average_precision_ = mean_average_precision;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.mean_average_precision)
}

// .google.protobuf.DoubleValue mean_squared_error = 2;
inline bool Model_RankingMetrics::_internal_has_mean_squared_error() const {
  return this != internal_default_instance() && _impl_.mean_squared_error_ != nullptr;
}
inline bool Model_RankingMetrics::has_mean_squared_error() const {
  return _internal_has_mean_squared_error();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::_internal_mean_squared_error() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.mean_squared_error_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::mean_squared_error() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RankingMetrics.mean_squared_error)
  return _internal_mean_squared_error();
}
inline void Model_RankingMetrics::unsafe_arena_set_allocated_mean_squared_error(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_error_);
  }
  _impl_.mean_squared_error_ = mean_squared_error;
  if (mean_squared_error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.mean_squared_error)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::release_mean_squared_error() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_error_;
  _impl_.mean_squared_error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::unsafe_arena_release_mean_squared_error() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RankingMetrics.mean_squared_error)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.mean_squared_error_;
  _impl_.mean_squared_error_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::_internal_mutable_mean_squared_error() {
  
  if (_impl_.mean_squared_error_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.mean_squared_error_ = p;
  }
  return _impl_.mean_squared_error_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::mutable_mean_squared_error() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_mean_squared_error();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RankingMetrics.mean_squared_error)
  return _msg;
}
inline void Model_RankingMetrics::set_allocated_mean_squared_error(::PROTOBUF_NAMESPACE_ID::DoubleValue* mean_squared_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mean_squared_error_);
  }
  if (mean_squared_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mean_squared_error));
    if (message_arena != submessage_arena) {
      mean_squared_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mean_squared_error, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mean_squared_error_ = mean_squared_error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.mean_squared_error)
}

// .google.protobuf.DoubleValue normalized_discounted_cumulative_gain = 3;
inline bool Model_RankingMetrics::_internal_has_normalized_discounted_cumulative_gain() const {
  return this != internal_default_instance() && _impl_.normalized_discounted_cumulative_gain_ != nullptr;
}
inline bool Model_RankingMetrics::has_normalized_discounted_cumulative_gain() const {
  return _internal_has_normalized_discounted_cumulative_gain();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::_internal_normalized_discounted_cumulative_gain() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.normalized_discounted_cumulative_gain_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::normalized_discounted_cumulative_gain() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RankingMetrics.normalized_discounted_cumulative_gain)
  return _internal_normalized_discounted_cumulative_gain();
}
inline void Model_RankingMetrics::unsafe_arena_set_allocated_normalized_discounted_cumulative_gain(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* normalized_discounted_cumulative_gain) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.normalized_discounted_cumulative_gain_);
  }
  _impl_.normalized_discounted_cumulative_gain_ = normalized_discounted_cumulative_gain;
  if (normalized_discounted_cumulative_gain) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.normalized_discounted_cumulative_gain)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::release_normalized_discounted_cumulative_gain() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.normalized_discounted_cumulative_gain_;
  _impl_.normalized_discounted_cumulative_gain_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::unsafe_arena_release_normalized_discounted_cumulative_gain() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RankingMetrics.normalized_discounted_cumulative_gain)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.normalized_discounted_cumulative_gain_;
  _impl_.normalized_discounted_cumulative_gain_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::_internal_mutable_normalized_discounted_cumulative_gain() {
  
  if (_impl_.normalized_discounted_cumulative_gain_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.normalized_discounted_cumulative_gain_ = p;
  }
  return _impl_.normalized_discounted_cumulative_gain_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::mutable_normalized_discounted_cumulative_gain() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_normalized_discounted_cumulative_gain();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RankingMetrics.normalized_discounted_cumulative_gain)
  return _msg;
}
inline void Model_RankingMetrics::set_allocated_normalized_discounted_cumulative_gain(::PROTOBUF_NAMESPACE_ID::DoubleValue* normalized_discounted_cumulative_gain) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.normalized_discounted_cumulative_gain_);
  }
  if (normalized_discounted_cumulative_gain) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(normalized_discounted_cumulative_gain));
    if (message_arena != submessage_arena) {
      normalized_discounted_cumulative_gain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, normalized_discounted_cumulative_gain, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.normalized_discounted_cumulative_gain_ = normalized_discounted_cumulative_gain;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.normalized_discounted_cumulative_gain)
}

// .google.protobuf.DoubleValue average_rank = 4;
inline bool Model_RankingMetrics::_internal_has_average_rank() const {
  return this != internal_default_instance() && _impl_.average_rank_ != nullptr;
}
inline bool Model_RankingMetrics::has_average_rank() const {
  return _internal_has_average_rank();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::_internal_average_rank() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.average_rank_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_RankingMetrics::average_rank() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.RankingMetrics.average_rank)
  return _internal_average_rank();
}
inline void Model_RankingMetrics::unsafe_arena_set_allocated_average_rank(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* average_rank) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.average_rank_);
  }
  _impl_.average_rank_ = average_rank;
  if (average_rank) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.average_rank)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::release_average_rank() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.average_rank_;
  _impl_.average_rank_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::unsafe_arena_release_average_rank() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.RankingMetrics.average_rank)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.average_rank_;
  _impl_.average_rank_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::_internal_mutable_average_rank() {
  
  if (_impl_.average_rank_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.average_rank_ = p;
  }
  return _impl_.average_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_RankingMetrics::mutable_average_rank() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_average_rank();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.RankingMetrics.average_rank)
  return _msg;
}
inline void Model_RankingMetrics::set_allocated_average_rank(::PROTOBUF_NAMESPACE_ID::DoubleValue* average_rank) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.average_rank_);
  }
  if (average_rank) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(average_rank));
    if (message_arena != submessage_arena) {
      average_rank = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, average_rank, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.average_rank_ = average_rank;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.RankingMetrics.average_rank)
}

// -------------------------------------------------------------------

// Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics

// .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1;
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_non_seasonal_order() const {
  return this != internal_default_instance() && _impl_.non_seasonal_order_ != nullptr;
}
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_non_seasonal_order() const {
  return _internal_has_non_seasonal_order();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::clear_non_seasonal_order() {
  if (GetArenaForAllocation() == nullptr && _impl_.non_seasonal_order_ != nullptr) {
    delete _impl_.non_seasonal_order_;
  }
  _impl_.non_seasonal_order_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_non_seasonal_order() const {
  const ::google::cloud::bigquery::v2::Model_ArimaOrder* p = _impl_.non_seasonal_order_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_ArimaOrder&>(
      ::google::cloud::bigquery::v2::_Model_ArimaOrder_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::non_seasonal_order() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.non_seasonal_order)
  return _internal_non_seasonal_order();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_set_allocated_non_seasonal_order(
    ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.non_seasonal_order_);
  }
  _impl_.non_seasonal_order_ = non_seasonal_order;
  if (non_seasonal_order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.non_seasonal_order)
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::release_non_seasonal_order() {
  
  ::google::cloud::bigquery::v2::Model_ArimaOrder* temp = _impl_.non_seasonal_order_;
  _impl_.non_seasonal_order_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_release_non_seasonal_order() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.non_seasonal_order)
  
  ::google::cloud::bigquery::v2::Model_ArimaOrder* temp = _impl_.non_seasonal_order_;
  _impl_.non_seasonal_order_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_mutable_non_seasonal_order() {
  
  if (_impl_.non_seasonal_order_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaOrder>(GetArenaForAllocation());
    _impl_.non_seasonal_order_ = p;
  }
  return _impl_.non_seasonal_order_;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_non_seasonal_order() {
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _msg = _internal_mutable_non_seasonal_order();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.non_seasonal_order)
  return _msg;
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_allocated_non_seasonal_order(::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.non_seasonal_order_;
  }
  if (non_seasonal_order) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(non_seasonal_order);
    if (message_arena != submessage_arena) {
      non_seasonal_order = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, non_seasonal_order, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.non_seasonal_order_ = non_seasonal_order;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.non_seasonal_order)
}

// .google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 2;
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_arima_fitting_metrics() const {
  return this != internal_default_instance() && _impl_.arima_fitting_metrics_ != nullptr;
}
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_arima_fitting_metrics() const {
  return _internal_has_arima_fitting_metrics();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::clear_arima_fitting_metrics() {
  if (GetArenaForAllocation() == nullptr && _impl_.arima_fitting_metrics_ != nullptr) {
    delete _impl_.arima_fitting_metrics_;
  }
  _impl_.arima_fitting_metrics_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_arima_fitting_metrics() const {
  const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* p = _impl_.arima_fitting_metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics&>(
      ::google::cloud::bigquery::v2::_Model_ArimaFittingMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::arima_fitting_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.arima_fitting_metrics)
  return _internal_arima_fitting_metrics();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_set_allocated_arima_fitting_metrics(
    ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.arima_fitting_metrics_);
  }
  _impl_.arima_fitting_metrics_ = arima_fitting_metrics;
  if (arima_fitting_metrics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.arima_fitting_metrics)
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::release_arima_fitting_metrics() {
  
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* temp = _impl_.arima_fitting_metrics_;
  _impl_.arima_fitting_metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_release_arima_fitting_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.arima_fitting_metrics)
  
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* temp = _impl_.arima_fitting_metrics_;
  _impl_.arima_fitting_metrics_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_mutable_arima_fitting_metrics() {
  
  if (_impl_.arima_fitting_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaFittingMetrics>(GetArenaForAllocation());
    _impl_.arima_fitting_metrics_ = p;
  }
  return _impl_.arima_fitting_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_arima_fitting_metrics() {
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* _msg = _internal_mutable_arima_fitting_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.arima_fitting_metrics)
  return _msg;
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_allocated_arima_fitting_metrics(::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.arima_fitting_metrics_;
  }
  if (arima_fitting_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(arima_fitting_metrics);
    if (message_arena != submessage_arena) {
      arima_fitting_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arima_fitting_metrics, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.arima_fitting_metrics_ = arima_fitting_metrics;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.arima_fitting_metrics)
}

// bool has_drift = 3;
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::clear_has_drift() {
  _impl_.has_drift_ = false;
}
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_drift() const {
  return _impl_.has_drift_;
}
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_drift() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_drift)
  return _internal_has_drift();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_set_has_drift(bool value) {
  
  _impl_.has_drift_ = value;
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_has_drift(bool value) {
  _internal_set_has_drift(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_drift)
}

// string time_series_id = 4;
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::clear_time_series_id() {
  _impl_.time_series_id_.ClearToEmpty();
}
inline const std::string& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::time_series_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_id)
  return _internal_time_series_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_time_series_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.time_series_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_id)
}
inline std::string* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_time_series_id() {
  std::string* _s = _internal_mutable_time_series_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_id)
  return _s;
}
inline const std::string& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_time_series_id() const {
  return _impl_.time_series_id_.Get();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_set_time_series_id(const std::string& value) {
  
  _impl_.time_series_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_mutable_time_series_id() {
  
  return _impl_.time_series_id_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::release_time_series_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_id)
  return _impl_.time_series_id_.Release();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_allocated_time_series_id(std::string* time_series_id) {
  if (time_series_id != nullptr) {
    
  } else {
    
  }
  _impl_.time_series_id_.SetAllocated(time_series_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.time_series_id_.IsDefault()) {
    _impl_.time_series_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_id)
}

// repeated string time_series_ids = 9;
inline int Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_time_series_ids_size() const {
  return _impl_.time_series_ids_.size();
}
inline int Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::time_series_ids_size() const {
  return _internal_time_series_ids_size();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::clear_time_series_ids() {
  _impl_.time_series_ids_.Clear();
}
inline std::string* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::add_time_series_ids() {
  std::string* _s = _internal_add_time_series_ids();
  // @@protoc_insertion_point(field_add_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
  return _s;
}
inline const std::string& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_time_series_ids(int index) const {
  return _impl_.time_series_ids_.Get(index);
}
inline const std::string& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::time_series_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
  return _internal_time_series_ids(index);
}
inline std::string* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_time_series_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
  return _impl_.time_series_ids_.Mutable(index);
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_time_series_ids(int index, const std::string& value) {
  _impl_.time_series_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_time_series_ids(int index, std::string&& value) {
  _impl_.time_series_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_time_series_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_time_series_ids(int index, const char* value, size_t size) {
  _impl_.time_series_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline std::string* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_add_time_series_ids() {
  return _impl_.time_series_ids_.Add();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::add_time_series_ids(const std::string& value) {
  _impl_.time_series_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::add_time_series_ids(std::string&& value) {
  _impl_.time_series_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::add_time_series_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::add_time_series_ids(const char* value, size_t size) {
  _impl_.time_series_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::time_series_ids() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
  return _impl_.time_series_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_time_series_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.time_series_ids)
  return &_impl_.time_series_ids_;
}

// repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 5;
inline int Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_seasonal_periods_size() const {
  return _impl_.seasonal_periods_.size();
}
inline int Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::seasonal_periods_size() const {
  return _internal_seasonal_periods_size();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::clear_seasonal_periods() {
  _impl_.seasonal_periods_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_seasonal_periods(int index) const {
  return static_cast< ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType >(_impl_.seasonal_periods_.Get(index));
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::seasonal_periods(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.seasonal_periods)
  return _internal_seasonal_periods(index);
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.seasonal_periods)
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Add(value);
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _internal_add_seasonal_periods(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.seasonal_periods)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::seasonal_periods() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.seasonal_periods)
  return _impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_mutable_seasonal_periods() {
  return &_impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_seasonal_periods() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.seasonal_periods)
  return _internal_mutable_seasonal_periods();
}

// .google.protobuf.BoolValue has_holiday_effect = 6;
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_has_holiday_effect() const {
  return this != internal_default_instance() && _impl_.has_holiday_effect_ != nullptr;
}
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_has_holiday_effect() const {
  return _internal_has_has_holiday_effect();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_holiday_effect() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.has_holiday_effect_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_holiday_effect() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_holiday_effect)
  return _internal_has_holiday_effect();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_set_allocated_has_holiday_effect(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_holiday_effect_);
  }
  _impl_.has_holiday_effect_ = has_holiday_effect;
  if (has_holiday_effect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_holiday_effect)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::release_has_holiday_effect() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_holiday_effect_;
  _impl_.has_holiday_effect_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_release_has_holiday_effect() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_holiday_effect)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_holiday_effect_;
  _impl_.has_holiday_effect_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_mutable_has_holiday_effect() {
  
  if (_impl_.has_holiday_effect_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.has_holiday_effect_ = p;
  }
  return _impl_.has_holiday_effect_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_has_holiday_effect() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_has_holiday_effect();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_holiday_effect)
  return _msg;
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_allocated_has_holiday_effect(::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_holiday_effect_);
  }
  if (has_holiday_effect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(has_holiday_effect));
    if (message_arena != submessage_arena) {
      has_holiday_effect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, has_holiday_effect, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.has_holiday_effect_ = has_holiday_effect;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_holiday_effect)
}

// .google.protobuf.BoolValue has_spikes_and_dips = 7;
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_has_spikes_and_dips() const {
  return this != internal_default_instance() && _impl_.has_spikes_and_dips_ != nullptr;
}
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_has_spikes_and_dips() const {
  return _internal_has_has_spikes_and_dips();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_spikes_and_dips() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.has_spikes_and_dips_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_spikes_and_dips() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_spikes_and_dips)
  return _internal_has_spikes_and_dips();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_set_allocated_has_spikes_and_dips(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_spikes_and_dips_);
  }
  _impl_.has_spikes_and_dips_ = has_spikes_and_dips;
  if (has_spikes_and_dips) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_spikes_and_dips)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::release_has_spikes_and_dips() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_spikes_and_dips_;
  _impl_.has_spikes_and_dips_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_release_has_spikes_and_dips() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_spikes_and_dips)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_spikes_and_dips_;
  _impl_.has_spikes_and_dips_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_mutable_has_spikes_and_dips() {
  
  if (_impl_.has_spikes_and_dips_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.has_spikes_and_dips_ = p;
  }
  return _impl_.has_spikes_and_dips_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_has_spikes_and_dips() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_has_spikes_and_dips();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_spikes_and_dips)
  return _msg;
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_allocated_has_spikes_and_dips(::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_spikes_and_dips_);
  }
  if (has_spikes_and_dips) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(has_spikes_and_dips));
    if (message_arena != submessage_arena) {
      has_spikes_and_dips = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, has_spikes_and_dips, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.has_spikes_and_dips_ = has_spikes_and_dips;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_spikes_and_dips)
}

// .google.protobuf.BoolValue has_step_changes = 8;
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_has_step_changes() const {
  return this != internal_default_instance() && _impl_.has_step_changes_ != nullptr;
}
inline bool Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_has_step_changes() const {
  return _internal_has_has_step_changes();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_has_step_changes() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.has_step_changes_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::has_step_changes() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_step_changes)
  return _internal_has_step_changes();
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_set_allocated_has_step_changes(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_step_changes_);
  }
  _impl_.has_step_changes_ = has_step_changes;
  if (has_step_changes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_step_changes)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::release_has_step_changes() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_step_changes_;
  _impl_.has_step_changes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::unsafe_arena_release_has_step_changes() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_step_changes)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_step_changes_;
  _impl_.has_step_changes_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::_internal_mutable_has_step_changes() {
  
  if (_impl_.has_step_changes_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.has_step_changes_ = p;
  }
  return _impl_.has_step_changes_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::mutable_has_step_changes() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_has_step_changes();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_step_changes)
  return _msg;
}
inline void Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics::set_allocated_has_step_changes(::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_step_changes_);
  }
  if (has_step_changes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(has_step_changes));
    if (message_arena != submessage_arena) {
      has_step_changes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, has_step_changes, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.has_step_changes_ = has_step_changes;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics.has_step_changes)
}

// -------------------------------------------------------------------

// Model_ArimaForecastingMetrics

// repeated .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1 [deprecated = true];
inline int Model_ArimaForecastingMetrics::_internal_non_seasonal_order_size() const {
  return _impl_.non_seasonal_order_.size();
}
inline int Model_ArimaForecastingMetrics::non_seasonal_order_size() const {
  return _internal_non_seasonal_order_size();
}
inline void Model_ArimaForecastingMetrics::clear_non_seasonal_order() {
  _impl_.non_seasonal_order_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_ArimaForecastingMetrics::mutable_non_seasonal_order(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.non_seasonal_order)
  return _impl_.non_seasonal_order_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaOrder >*
Model_ArimaForecastingMetrics::mutable_non_seasonal_order() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.non_seasonal_order)
  return &_impl_.non_seasonal_order_;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_ArimaForecastingMetrics::_internal_non_seasonal_order(int index) const {
  return _impl_.non_seasonal_order_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_ArimaForecastingMetrics::non_seasonal_order(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.non_seasonal_order)
  return _internal_non_seasonal_order(index);
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_ArimaForecastingMetrics::_internal_add_non_seasonal_order() {
  return _impl_.non_seasonal_order_.Add();
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_ArimaForecastingMetrics::add_non_seasonal_order() {
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _add = _internal_add_non_seasonal_order();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.non_seasonal_order)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaOrder >&
Model_ArimaForecastingMetrics::non_seasonal_order() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.non_seasonal_order)
  return _impl_.non_seasonal_order_;
}

// repeated .google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 2 [deprecated = true];
inline int Model_ArimaForecastingMetrics::_internal_arima_fitting_metrics_size() const {
  return _impl_.arima_fitting_metrics_.size();
}
inline int Model_ArimaForecastingMetrics::arima_fitting_metrics_size() const {
  return _internal_arima_fitting_metrics_size();
}
inline void Model_ArimaForecastingMetrics::clear_arima_fitting_metrics() {
  _impl_.arima_fitting_metrics_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_ArimaForecastingMetrics::mutable_arima_fitting_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_fitting_metrics)
  return _impl_.arima_fitting_metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics >*
Model_ArimaForecastingMetrics::mutable_arima_fitting_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_fitting_metrics)
  return &_impl_.arima_fitting_metrics_;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& Model_ArimaForecastingMetrics::_internal_arima_fitting_metrics(int index) const {
  return _impl_.arima_fitting_metrics_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& Model_ArimaForecastingMetrics::arima_fitting_metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_fitting_metrics)
  return _internal_arima_fitting_metrics(index);
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_ArimaForecastingMetrics::_internal_add_arima_fitting_metrics() {
  return _impl_.arima_fitting_metrics_.Add();
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_ArimaForecastingMetrics::add_arima_fitting_metrics() {
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* _add = _internal_add_arima_fitting_metrics();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_fitting_metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics >&
Model_ArimaForecastingMetrics::arima_fitting_metrics() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_fitting_metrics)
  return _impl_.arima_fitting_metrics_;
}

// repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 3 [deprecated = true];
inline int Model_ArimaForecastingMetrics::_internal_seasonal_periods_size() const {
  return _impl_.seasonal_periods_.size();
}
inline int Model_ArimaForecastingMetrics::seasonal_periods_size() const {
  return _internal_seasonal_periods_size();
}
inline void Model_ArimaForecastingMetrics::clear_seasonal_periods() {
  _impl_.seasonal_periods_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_ArimaForecastingMetrics::_internal_seasonal_periods(int index) const {
  return static_cast< ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType >(_impl_.seasonal_periods_.Get(index));
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_ArimaForecastingMetrics::seasonal_periods(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.seasonal_periods)
  return _internal_seasonal_periods(index);
}
inline void Model_ArimaForecastingMetrics::set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.seasonal_periods)
}
inline void Model_ArimaForecastingMetrics::_internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Add(value);
}
inline void Model_ArimaForecastingMetrics::add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _internal_add_seasonal_periods(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.seasonal_periods)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
Model_ArimaForecastingMetrics::seasonal_periods() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.seasonal_periods)
  return _impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_ArimaForecastingMetrics::_internal_mutable_seasonal_periods() {
  return &_impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_ArimaForecastingMetrics::mutable_seasonal_periods() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.seasonal_periods)
  return _internal_mutable_seasonal_periods();
}

// repeated bool has_drift = 4 [deprecated = true];
inline int Model_ArimaForecastingMetrics::_internal_has_drift_size() const {
  return _impl_.has_drift_.size();
}
inline int Model_ArimaForecastingMetrics::has_drift_size() const {
  return _internal_has_drift_size();
}
inline void Model_ArimaForecastingMetrics::clear_has_drift() {
  _impl_.has_drift_.Clear();
}
inline bool Model_ArimaForecastingMetrics::_internal_has_drift(int index) const {
  return _impl_.has_drift_.Get(index);
}
inline bool Model_ArimaForecastingMetrics::has_drift(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.has_drift)
  return _internal_has_drift(index);
}
inline void Model_ArimaForecastingMetrics::set_has_drift(int index, bool value) {
  _impl_.has_drift_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.has_drift)
}
inline void Model_ArimaForecastingMetrics::_internal_add_has_drift(bool value) {
  _impl_.has_drift_.Add(value);
}
inline void Model_ArimaForecastingMetrics::add_has_drift(bool value) {
  _internal_add_has_drift(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.has_drift)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
Model_ArimaForecastingMetrics::_internal_has_drift() const {
  return _impl_.has_drift_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
Model_ArimaForecastingMetrics::has_drift() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.has_drift)
  return _internal_has_drift();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
Model_ArimaForecastingMetrics::_internal_mutable_has_drift() {
  return &_impl_.has_drift_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
Model_ArimaForecastingMetrics::mutable_has_drift() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.has_drift)
  return _internal_mutable_has_drift();
}

// repeated string time_series_id = 5 [deprecated = true];
inline int Model_ArimaForecastingMetrics::_internal_time_series_id_size() const {
  return _impl_.time_series_id_.size();
}
inline int Model_ArimaForecastingMetrics::time_series_id_size() const {
  return _internal_time_series_id_size();
}
inline void Model_ArimaForecastingMetrics::clear_time_series_id() {
  _impl_.time_series_id_.Clear();
}
inline std::string* Model_ArimaForecastingMetrics::add_time_series_id() {
  std::string* _s = _internal_add_time_series_id();
  // @@protoc_insertion_point(field_add_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
  return _s;
}
inline const std::string& Model_ArimaForecastingMetrics::_internal_time_series_id(int index) const {
  return _impl_.time_series_id_.Get(index);
}
inline const std::string& Model_ArimaForecastingMetrics::time_series_id(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
  return _internal_time_series_id(index);
}
inline std::string* Model_ArimaForecastingMetrics::mutable_time_series_id(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
  return _impl_.time_series_id_.Mutable(index);
}
inline void Model_ArimaForecastingMetrics::set_time_series_id(int index, const std::string& value) {
  _impl_.time_series_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline void Model_ArimaForecastingMetrics::set_time_series_id(int index, std::string&& value) {
  _impl_.time_series_id_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline void Model_ArimaForecastingMetrics::set_time_series_id(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline void Model_ArimaForecastingMetrics::set_time_series_id(int index, const char* value, size_t size) {
  _impl_.time_series_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline std::string* Model_ArimaForecastingMetrics::_internal_add_time_series_id() {
  return _impl_.time_series_id_.Add();
}
inline void Model_ArimaForecastingMetrics::add_time_series_id(const std::string& value) {
  _impl_.time_series_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline void Model_ArimaForecastingMetrics::add_time_series_id(std::string&& value) {
  _impl_.time_series_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline void Model_ArimaForecastingMetrics::add_time_series_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline void Model_ArimaForecastingMetrics::add_time_series_id(const char* value, size_t size) {
  _impl_.time_series_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Model_ArimaForecastingMetrics::time_series_id() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
  return _impl_.time_series_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Model_ArimaForecastingMetrics::mutable_time_series_id() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.time_series_id)
  return &_impl_.time_series_id_;
}

// repeated .google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.ArimaSingleModelForecastingMetrics arima_single_model_forecasting_metrics = 6;
inline int Model_ArimaForecastingMetrics::_internal_arima_single_model_forecasting_metrics_size() const {
  return _impl_.arima_single_model_forecasting_metrics_.size();
}
inline int Model_ArimaForecastingMetrics::arima_single_model_forecasting_metrics_size() const {
  return _internal_arima_single_model_forecasting_metrics_size();
}
inline void Model_ArimaForecastingMetrics::clear_arima_single_model_forecasting_metrics() {
  _impl_.arima_single_model_forecasting_metrics_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* Model_ArimaForecastingMetrics::mutable_arima_single_model_forecasting_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_single_model_forecasting_metrics)
  return _impl_.arima_single_model_forecasting_metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics >*
Model_ArimaForecastingMetrics::mutable_arima_single_model_forecasting_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_single_model_forecasting_metrics)
  return &_impl_.arima_single_model_forecasting_metrics_;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& Model_ArimaForecastingMetrics::_internal_arima_single_model_forecasting_metrics(int index) const {
  return _impl_.arima_single_model_forecasting_metrics_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics& Model_ArimaForecastingMetrics::arima_single_model_forecasting_metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_single_model_forecasting_metrics)
  return _internal_arima_single_model_forecasting_metrics(index);
}
inline ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* Model_ArimaForecastingMetrics::_internal_add_arima_single_model_forecasting_metrics() {
  return _impl_.arima_single_model_forecasting_metrics_.Add();
}
inline ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* Model_ArimaForecastingMetrics::add_arima_single_model_forecasting_metrics() {
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics* _add = _internal_add_arima_single_model_forecasting_metrics();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_single_model_forecasting_metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics_ArimaSingleModelForecastingMetrics >&
Model_ArimaForecastingMetrics::arima_single_model_forecasting_metrics() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.ArimaForecastingMetrics.arima_single_model_forecasting_metrics)
  return _impl_.arima_single_model_forecasting_metrics_;
}

// -------------------------------------------------------------------

// Model_EvaluationMetrics

// .google.cloud.bigquery.v2.Model.RegressionMetrics regression_metrics = 1;
inline bool Model_EvaluationMetrics::_internal_has_regression_metrics() const {
  return metrics_case() == kRegressionMetrics;
}
inline bool Model_EvaluationMetrics::has_regression_metrics() const {
  return _internal_has_regression_metrics();
}
inline void Model_EvaluationMetrics::set_has_regression_metrics() {
  _impl_._oneof_case_[0] = kRegressionMetrics;
}
inline void Model_EvaluationMetrics::clear_regression_metrics() {
  if (_internal_has_regression_metrics()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.metrics_.regression_metrics_;
    }
    clear_has_metrics();
  }
}
inline ::google::cloud::bigquery::v2::Model_RegressionMetrics* Model_EvaluationMetrics::release_regression_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.regression_metrics)
  if (_internal_has_regression_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_RegressionMetrics* temp = _impl_.metrics_.regression_metrics_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.metrics_.regression_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::bigquery::v2::Model_RegressionMetrics& Model_EvaluationMetrics::_internal_regression_metrics() const {
  return _internal_has_regression_metrics()
      ? *_impl_.metrics_.regression_metrics_
      : reinterpret_cast< ::google::cloud::bigquery::v2::Model_RegressionMetrics&>(::google::cloud::bigquery::v2::_Model_RegressionMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_RegressionMetrics& Model_EvaluationMetrics::regression_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.EvaluationMetrics.regression_metrics)
  return _internal_regression_metrics();
}
inline ::google::cloud::bigquery::v2::Model_RegressionMetrics* Model_EvaluationMetrics::unsafe_arena_release_regression_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.regression_metrics)
  if (_internal_has_regression_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_RegressionMetrics* temp = _impl_.metrics_.regression_metrics_;
    _impl_.metrics_.regression_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_EvaluationMetrics::unsafe_arena_set_allocated_regression_metrics(::google::cloud::bigquery::v2::Model_RegressionMetrics* regression_metrics) {
  clear_metrics();
  if (regression_metrics) {
    set_has_regression_metrics();
    _impl_.metrics_.regression_metrics_ = regression_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.EvaluationMetrics.regression_metrics)
}
inline ::google::cloud::bigquery::v2::Model_RegressionMetrics* Model_EvaluationMetrics::_internal_mutable_regression_metrics() {
  if (!_internal_has_regression_metrics()) {
    clear_metrics();
    set_has_regression_metrics();
    _impl_.metrics_.regression_metrics_ = CreateMaybeMessage< ::google::cloud::bigquery::v2::Model_RegressionMetrics >(GetArenaForAllocation());
  }
  return _impl_.metrics_.regression_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_RegressionMetrics* Model_EvaluationMetrics::mutable_regression_metrics() {
  ::google::cloud::bigquery::v2::Model_RegressionMetrics* _msg = _internal_mutable_regression_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.EvaluationMetrics.regression_metrics)
  return _msg;
}

// .google.cloud.bigquery.v2.Model.BinaryClassificationMetrics binary_classification_metrics = 2;
inline bool Model_EvaluationMetrics::_internal_has_binary_classification_metrics() const {
  return metrics_case() == kBinaryClassificationMetrics;
}
inline bool Model_EvaluationMetrics::has_binary_classification_metrics() const {
  return _internal_has_binary_classification_metrics();
}
inline void Model_EvaluationMetrics::set_has_binary_classification_metrics() {
  _impl_._oneof_case_[0] = kBinaryClassificationMetrics;
}
inline void Model_EvaluationMetrics::clear_binary_classification_metrics() {
  if (_internal_has_binary_classification_metrics()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.metrics_.binary_classification_metrics_;
    }
    clear_has_metrics();
  }
}
inline ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* Model_EvaluationMetrics::release_binary_classification_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.binary_classification_metrics)
  if (_internal_has_binary_classification_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* temp = _impl_.metrics_.binary_classification_metrics_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.metrics_.binary_classification_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics& Model_EvaluationMetrics::_internal_binary_classification_metrics() const {
  return _internal_has_binary_classification_metrics()
      ? *_impl_.metrics_.binary_classification_metrics_
      : reinterpret_cast< ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics&>(::google::cloud::bigquery::v2::_Model_BinaryClassificationMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics& Model_EvaluationMetrics::binary_classification_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.EvaluationMetrics.binary_classification_metrics)
  return _internal_binary_classification_metrics();
}
inline ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* Model_EvaluationMetrics::unsafe_arena_release_binary_classification_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.binary_classification_metrics)
  if (_internal_has_binary_classification_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* temp = _impl_.metrics_.binary_classification_metrics_;
    _impl_.metrics_.binary_classification_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_EvaluationMetrics::unsafe_arena_set_allocated_binary_classification_metrics(::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* binary_classification_metrics) {
  clear_metrics();
  if (binary_classification_metrics) {
    set_has_binary_classification_metrics();
    _impl_.metrics_.binary_classification_metrics_ = binary_classification_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.EvaluationMetrics.binary_classification_metrics)
}
inline ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* Model_EvaluationMetrics::_internal_mutable_binary_classification_metrics() {
  if (!_internal_has_binary_classification_metrics()) {
    clear_metrics();
    set_has_binary_classification_metrics();
    _impl_.metrics_.binary_classification_metrics_ = CreateMaybeMessage< ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics >(GetArenaForAllocation());
  }
  return _impl_.metrics_.binary_classification_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* Model_EvaluationMetrics::mutable_binary_classification_metrics() {
  ::google::cloud::bigquery::v2::Model_BinaryClassificationMetrics* _msg = _internal_mutable_binary_classification_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.EvaluationMetrics.binary_classification_metrics)
  return _msg;
}

// .google.cloud.bigquery.v2.Model.MultiClassClassificationMetrics multi_class_classification_metrics = 3;
inline bool Model_EvaluationMetrics::_internal_has_multi_class_classification_metrics() const {
  return metrics_case() == kMultiClassClassificationMetrics;
}
inline bool Model_EvaluationMetrics::has_multi_class_classification_metrics() const {
  return _internal_has_multi_class_classification_metrics();
}
inline void Model_EvaluationMetrics::set_has_multi_class_classification_metrics() {
  _impl_._oneof_case_[0] = kMultiClassClassificationMetrics;
}
inline void Model_EvaluationMetrics::clear_multi_class_classification_metrics() {
  if (_internal_has_multi_class_classification_metrics()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.metrics_.multi_class_classification_metrics_;
    }
    clear_has_metrics();
  }
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* Model_EvaluationMetrics::release_multi_class_classification_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.multi_class_classification_metrics)
  if (_internal_has_multi_class_classification_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* temp = _impl_.metrics_.multi_class_classification_metrics_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.metrics_.multi_class_classification_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics& Model_EvaluationMetrics::_internal_multi_class_classification_metrics() const {
  return _internal_has_multi_class_classification_metrics()
      ? *_impl_.metrics_.multi_class_classification_metrics_
      : reinterpret_cast< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics&>(::google::cloud::bigquery::v2::_Model_MultiClassClassificationMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics& Model_EvaluationMetrics::multi_class_classification_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.EvaluationMetrics.multi_class_classification_metrics)
  return _internal_multi_class_classification_metrics();
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* Model_EvaluationMetrics::unsafe_arena_release_multi_class_classification_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.multi_class_classification_metrics)
  if (_internal_has_multi_class_classification_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* temp = _impl_.metrics_.multi_class_classification_metrics_;
    _impl_.metrics_.multi_class_classification_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_EvaluationMetrics::unsafe_arena_set_allocated_multi_class_classification_metrics(::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* multi_class_classification_metrics) {
  clear_metrics();
  if (multi_class_classification_metrics) {
    set_has_multi_class_classification_metrics();
    _impl_.metrics_.multi_class_classification_metrics_ = multi_class_classification_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.EvaluationMetrics.multi_class_classification_metrics)
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* Model_EvaluationMetrics::_internal_mutable_multi_class_classification_metrics() {
  if (!_internal_has_multi_class_classification_metrics()) {
    clear_metrics();
    set_has_multi_class_classification_metrics();
    _impl_.metrics_.multi_class_classification_metrics_ = CreateMaybeMessage< ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics >(GetArenaForAllocation());
  }
  return _impl_.metrics_.multi_class_classification_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* Model_EvaluationMetrics::mutable_multi_class_classification_metrics() {
  ::google::cloud::bigquery::v2::Model_MultiClassClassificationMetrics* _msg = _internal_mutable_multi_class_classification_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.EvaluationMetrics.multi_class_classification_metrics)
  return _msg;
}

// .google.cloud.bigquery.v2.Model.ClusteringMetrics clustering_metrics = 4;
inline bool Model_EvaluationMetrics::_internal_has_clustering_metrics() const {
  return metrics_case() == kClusteringMetrics;
}
inline bool Model_EvaluationMetrics::has_clustering_metrics() const {
  return _internal_has_clustering_metrics();
}
inline void Model_EvaluationMetrics::set_has_clustering_metrics() {
  _impl_._oneof_case_[0] = kClusteringMetrics;
}
inline void Model_EvaluationMetrics::clear_clustering_metrics() {
  if (_internal_has_clustering_metrics()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.metrics_.clustering_metrics_;
    }
    clear_has_metrics();
  }
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics* Model_EvaluationMetrics::release_clustering_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.clustering_metrics)
  if (_internal_has_clustering_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_ClusteringMetrics* temp = _impl_.metrics_.clustering_metrics_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.metrics_.clustering_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics& Model_EvaluationMetrics::_internal_clustering_metrics() const {
  return _internal_has_clustering_metrics()
      ? *_impl_.metrics_.clustering_metrics_
      : reinterpret_cast< ::google::cloud::bigquery::v2::Model_ClusteringMetrics&>(::google::cloud::bigquery::v2::_Model_ClusteringMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ClusteringMetrics& Model_EvaluationMetrics::clustering_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.EvaluationMetrics.clustering_metrics)
  return _internal_clustering_metrics();
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics* Model_EvaluationMetrics::unsafe_arena_release_clustering_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.clustering_metrics)
  if (_internal_has_clustering_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_ClusteringMetrics* temp = _impl_.metrics_.clustering_metrics_;
    _impl_.metrics_.clustering_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_EvaluationMetrics::unsafe_arena_set_allocated_clustering_metrics(::google::cloud::bigquery::v2::Model_ClusteringMetrics* clustering_metrics) {
  clear_metrics();
  if (clustering_metrics) {
    set_has_clustering_metrics();
    _impl_.metrics_.clustering_metrics_ = clustering_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.EvaluationMetrics.clustering_metrics)
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics* Model_EvaluationMetrics::_internal_mutable_clustering_metrics() {
  if (!_internal_has_clustering_metrics()) {
    clear_metrics();
    set_has_clustering_metrics();
    _impl_.metrics_.clustering_metrics_ = CreateMaybeMessage< ::google::cloud::bigquery::v2::Model_ClusteringMetrics >(GetArenaForAllocation());
  }
  return _impl_.metrics_.clustering_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_ClusteringMetrics* Model_EvaluationMetrics::mutable_clustering_metrics() {
  ::google::cloud::bigquery::v2::Model_ClusteringMetrics* _msg = _internal_mutable_clustering_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.EvaluationMetrics.clustering_metrics)
  return _msg;
}

// .google.cloud.bigquery.v2.Model.RankingMetrics ranking_metrics = 5;
inline bool Model_EvaluationMetrics::_internal_has_ranking_metrics() const {
  return metrics_case() == kRankingMetrics;
}
inline bool Model_EvaluationMetrics::has_ranking_metrics() const {
  return _internal_has_ranking_metrics();
}
inline void Model_EvaluationMetrics::set_has_ranking_metrics() {
  _impl_._oneof_case_[0] = kRankingMetrics;
}
inline void Model_EvaluationMetrics::clear_ranking_metrics() {
  if (_internal_has_ranking_metrics()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.metrics_.ranking_metrics_;
    }
    clear_has_metrics();
  }
}
inline ::google::cloud::bigquery::v2::Model_RankingMetrics* Model_EvaluationMetrics::release_ranking_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.ranking_metrics)
  if (_internal_has_ranking_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_RankingMetrics* temp = _impl_.metrics_.ranking_metrics_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.metrics_.ranking_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::bigquery::v2::Model_RankingMetrics& Model_EvaluationMetrics::_internal_ranking_metrics() const {
  return _internal_has_ranking_metrics()
      ? *_impl_.metrics_.ranking_metrics_
      : reinterpret_cast< ::google::cloud::bigquery::v2::Model_RankingMetrics&>(::google::cloud::bigquery::v2::_Model_RankingMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_RankingMetrics& Model_EvaluationMetrics::ranking_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.EvaluationMetrics.ranking_metrics)
  return _internal_ranking_metrics();
}
inline ::google::cloud::bigquery::v2::Model_RankingMetrics* Model_EvaluationMetrics::unsafe_arena_release_ranking_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.ranking_metrics)
  if (_internal_has_ranking_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_RankingMetrics* temp = _impl_.metrics_.ranking_metrics_;
    _impl_.metrics_.ranking_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_EvaluationMetrics::unsafe_arena_set_allocated_ranking_metrics(::google::cloud::bigquery::v2::Model_RankingMetrics* ranking_metrics) {
  clear_metrics();
  if (ranking_metrics) {
    set_has_ranking_metrics();
    _impl_.metrics_.ranking_metrics_ = ranking_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.EvaluationMetrics.ranking_metrics)
}
inline ::google::cloud::bigquery::v2::Model_RankingMetrics* Model_EvaluationMetrics::_internal_mutable_ranking_metrics() {
  if (!_internal_has_ranking_metrics()) {
    clear_metrics();
    set_has_ranking_metrics();
    _impl_.metrics_.ranking_metrics_ = CreateMaybeMessage< ::google::cloud::bigquery::v2::Model_RankingMetrics >(GetArenaForAllocation());
  }
  return _impl_.metrics_.ranking_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_RankingMetrics* Model_EvaluationMetrics::mutable_ranking_metrics() {
  ::google::cloud::bigquery::v2::Model_RankingMetrics* _msg = _internal_mutable_ranking_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.EvaluationMetrics.ranking_metrics)
  return _msg;
}

// .google.cloud.bigquery.v2.Model.ArimaForecastingMetrics arima_forecasting_metrics = 6;
inline bool Model_EvaluationMetrics::_internal_has_arima_forecasting_metrics() const {
  return metrics_case() == kArimaForecastingMetrics;
}
inline bool Model_EvaluationMetrics::has_arima_forecasting_metrics() const {
  return _internal_has_arima_forecasting_metrics();
}
inline void Model_EvaluationMetrics::set_has_arima_forecasting_metrics() {
  _impl_._oneof_case_[0] = kArimaForecastingMetrics;
}
inline void Model_EvaluationMetrics::clear_arima_forecasting_metrics() {
  if (_internal_has_arima_forecasting_metrics()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.metrics_.arima_forecasting_metrics_;
    }
    clear_has_metrics();
  }
}
inline ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* Model_EvaluationMetrics::release_arima_forecasting_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.arima_forecasting_metrics)
  if (_internal_has_arima_forecasting_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* temp = _impl_.metrics_.arima_forecasting_metrics_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.metrics_.arima_forecasting_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics& Model_EvaluationMetrics::_internal_arima_forecasting_metrics() const {
  return _internal_has_arima_forecasting_metrics()
      ? *_impl_.metrics_.arima_forecasting_metrics_
      : reinterpret_cast< ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics&>(::google::cloud::bigquery::v2::_Model_ArimaForecastingMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics& Model_EvaluationMetrics::arima_forecasting_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.EvaluationMetrics.arima_forecasting_metrics)
  return _internal_arima_forecasting_metrics();
}
inline ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* Model_EvaluationMetrics::unsafe_arena_release_arima_forecasting_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.bigquery.v2.Model.EvaluationMetrics.arima_forecasting_metrics)
  if (_internal_has_arima_forecasting_metrics()) {
    clear_has_metrics();
    ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* temp = _impl_.metrics_.arima_forecasting_metrics_;
    _impl_.metrics_.arima_forecasting_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Model_EvaluationMetrics::unsafe_arena_set_allocated_arima_forecasting_metrics(::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* arima_forecasting_metrics) {
  clear_metrics();
  if (arima_forecasting_metrics) {
    set_has_arima_forecasting_metrics();
    _impl_.metrics_.arima_forecasting_metrics_ = arima_forecasting_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.EvaluationMetrics.arima_forecasting_metrics)
}
inline ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* Model_EvaluationMetrics::_internal_mutable_arima_forecasting_metrics() {
  if (!_internal_has_arima_forecasting_metrics()) {
    clear_metrics();
    set_has_arima_forecasting_metrics();
    _impl_.metrics_.arima_forecasting_metrics_ = CreateMaybeMessage< ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics >(GetArenaForAllocation());
  }
  return _impl_.metrics_.arima_forecasting_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* Model_EvaluationMetrics::mutable_arima_forecasting_metrics() {
  ::google::cloud::bigquery::v2::Model_ArimaForecastingMetrics* _msg = _internal_mutable_arima_forecasting_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.EvaluationMetrics.arima_forecasting_metrics)
  return _msg;
}

inline bool Model_EvaluationMetrics::has_metrics() const {
  return metrics_case() != METRICS_NOT_SET;
}
inline void Model_EvaluationMetrics::clear_has_metrics() {
  _impl_._oneof_case_[0] = METRICS_NOT_SET;
}
inline Model_EvaluationMetrics::MetricsCase Model_EvaluationMetrics::metrics_case() const {
  return Model_EvaluationMetrics::MetricsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Model_DataSplitResult

// .google.cloud.bigquery.v2.TableReference training_table = 1;
inline bool Model_DataSplitResult::_internal_has_training_table() const {
  return this != internal_default_instance() && _impl_.training_table_ != nullptr;
}
inline bool Model_DataSplitResult::has_training_table() const {
  return _internal_has_training_table();
}
inline const ::google::cloud::bigquery::v2::TableReference& Model_DataSplitResult::_internal_training_table() const {
  const ::google::cloud::bigquery::v2::TableReference* p = _impl_.training_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::TableReference&>(
      ::google::cloud::bigquery::v2::_TableReference_default_instance_);
}
inline const ::google::cloud::bigquery::v2::TableReference& Model_DataSplitResult::training_table() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.DataSplitResult.training_table)
  return _internal_training_table();
}
inline void Model_DataSplitResult::unsafe_arena_set_allocated_training_table(
    ::google::cloud::bigquery::v2::TableReference* training_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.training_table_);
  }
  _impl_.training_table_ = training_table;
  if (training_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.DataSplitResult.training_table)
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::release_training_table() {
  
  ::google::cloud::bigquery::v2::TableReference* temp = _impl_.training_table_;
  _impl_.training_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::unsafe_arena_release_training_table() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.DataSplitResult.training_table)
  
  ::google::cloud::bigquery::v2::TableReference* temp = _impl_.training_table_;
  _impl_.training_table_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::_internal_mutable_training_table() {
  
  if (_impl_.training_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::TableReference>(GetArenaForAllocation());
    _impl_.training_table_ = p;
  }
  return _impl_.training_table_;
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::mutable_training_table() {
  ::google::cloud::bigquery::v2::TableReference* _msg = _internal_mutable_training_table();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.DataSplitResult.training_table)
  return _msg;
}
inline void Model_DataSplitResult::set_allocated_training_table(::google::cloud::bigquery::v2::TableReference* training_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.training_table_);
  }
  if (training_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(training_table));
    if (message_arena != submessage_arena) {
      training_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, training_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.training_table_ = training_table;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.DataSplitResult.training_table)
}

// .google.cloud.bigquery.v2.TableReference evaluation_table = 2;
inline bool Model_DataSplitResult::_internal_has_evaluation_table() const {
  return this != internal_default_instance() && _impl_.evaluation_table_ != nullptr;
}
inline bool Model_DataSplitResult::has_evaluation_table() const {
  return _internal_has_evaluation_table();
}
inline const ::google::cloud::bigquery::v2::TableReference& Model_DataSplitResult::_internal_evaluation_table() const {
  const ::google::cloud::bigquery::v2::TableReference* p = _impl_.evaluation_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::TableReference&>(
      ::google::cloud::bigquery::v2::_TableReference_default_instance_);
}
inline const ::google::cloud::bigquery::v2::TableReference& Model_DataSplitResult::evaluation_table() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.DataSplitResult.evaluation_table)
  return _internal_evaluation_table();
}
inline void Model_DataSplitResult::unsafe_arena_set_allocated_evaluation_table(
    ::google::cloud::bigquery::v2::TableReference* evaluation_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.evaluation_table_);
  }
  _impl_.evaluation_table_ = evaluation_table;
  if (evaluation_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.DataSplitResult.evaluation_table)
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::release_evaluation_table() {
  
  ::google::cloud::bigquery::v2::TableReference* temp = _impl_.evaluation_table_;
  _impl_.evaluation_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::unsafe_arena_release_evaluation_table() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.DataSplitResult.evaluation_table)
  
  ::google::cloud::bigquery::v2::TableReference* temp = _impl_.evaluation_table_;
  _impl_.evaluation_table_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::_internal_mutable_evaluation_table() {
  
  if (_impl_.evaluation_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::TableReference>(GetArenaForAllocation());
    _impl_.evaluation_table_ = p;
  }
  return _impl_.evaluation_table_;
}
inline ::google::cloud::bigquery::v2::TableReference* Model_DataSplitResult::mutable_evaluation_table() {
  ::google::cloud::bigquery::v2::TableReference* _msg = _internal_mutable_evaluation_table();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.DataSplitResult.evaluation_table)
  return _msg;
}
inline void Model_DataSplitResult::set_allocated_evaluation_table(::google::cloud::bigquery::v2::TableReference* evaluation_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.evaluation_table_);
  }
  if (evaluation_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(evaluation_table));
    if (message_arena != submessage_arena) {
      evaluation_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, evaluation_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.evaluation_table_ = evaluation_table;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.DataSplitResult.evaluation_table)
}

// -------------------------------------------------------------------

// Model_ArimaOrder

// int64 p = 1;
inline void Model_ArimaOrder::clear_p() {
  _impl_.p_ = int64_t{0};
}
inline int64_t Model_ArimaOrder::_internal_p() const {
  return _impl_.p_;
}
inline int64_t Model_ArimaOrder::p() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaOrder.p)
  return _internal_p();
}
inline void Model_ArimaOrder::_internal_set_p(int64_t value) {
  
  _impl_.p_ = value;
}
inline void Model_ArimaOrder::set_p(int64_t value) {
  _internal_set_p(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaOrder.p)
}

// int64 d = 2;
inline void Model_ArimaOrder::clear_d() {
  _impl_.d_ = int64_t{0};
}
inline int64_t Model_ArimaOrder::_internal_d() const {
  return _impl_.d_;
}
inline int64_t Model_ArimaOrder::d() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaOrder.d)
  return _internal_d();
}
inline void Model_ArimaOrder::_internal_set_d(int64_t value) {
  
  _impl_.d_ = value;
}
inline void Model_ArimaOrder::set_d(int64_t value) {
  _internal_set_d(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaOrder.d)
}

// int64 q = 3;
inline void Model_ArimaOrder::clear_q() {
  _impl_.q_ = int64_t{0};
}
inline int64_t Model_ArimaOrder::_internal_q() const {
  return _impl_.q_;
}
inline int64_t Model_ArimaOrder::q() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaOrder.q)
  return _internal_q();
}
inline void Model_ArimaOrder::_internal_set_q(int64_t value) {
  
  _impl_.q_ = value;
}
inline void Model_ArimaOrder::set_q(int64_t value) {
  _internal_set_q(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaOrder.q)
}

// -------------------------------------------------------------------

// Model_ArimaFittingMetrics

// double log_likelihood = 1;
inline void Model_ArimaFittingMetrics::clear_log_likelihood() {
  _impl_.log_likelihood_ = 0;
}
inline double Model_ArimaFittingMetrics::_internal_log_likelihood() const {
  return _impl_.log_likelihood_;
}
inline double Model_ArimaFittingMetrics::log_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaFittingMetrics.log_likelihood)
  return _internal_log_likelihood();
}
inline void Model_ArimaFittingMetrics::_internal_set_log_likelihood(double value) {
  
  _impl_.log_likelihood_ = value;
}
inline void Model_ArimaFittingMetrics::set_log_likelihood(double value) {
  _internal_set_log_likelihood(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaFittingMetrics.log_likelihood)
}

// double aic = 2;
inline void Model_ArimaFittingMetrics::clear_aic() {
  _impl_.aic_ = 0;
}
inline double Model_ArimaFittingMetrics::_internal_aic() const {
  return _impl_.aic_;
}
inline double Model_ArimaFittingMetrics::aic() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaFittingMetrics.aic)
  return _internal_aic();
}
inline void Model_ArimaFittingMetrics::_internal_set_aic(double value) {
  
  _impl_.aic_ = value;
}
inline void Model_ArimaFittingMetrics::set_aic(double value) {
  _internal_set_aic(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaFittingMetrics.aic)
}

// double variance = 3;
inline void Model_ArimaFittingMetrics::clear_variance() {
  _impl_.variance_ = 0;
}
inline double Model_ArimaFittingMetrics::_internal_variance() const {
  return _impl_.variance_;
}
inline double Model_ArimaFittingMetrics::variance() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.ArimaFittingMetrics.variance)
  return _internal_variance();
}
inline void Model_ArimaFittingMetrics::_internal_set_variance(double value) {
  
  _impl_.variance_ = value;
}
inline void Model_ArimaFittingMetrics::set_variance(double value) {
  _internal_set_variance(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.ArimaFittingMetrics.variance)
}

// -------------------------------------------------------------------

// Model_GlobalExplanation_Explanation

// string feature_name = 1;
inline void Model_GlobalExplanation_Explanation::clear_feature_name() {
  _impl_.feature_name_.ClearToEmpty();
}
inline const std::string& Model_GlobalExplanation_Explanation::feature_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.feature_name)
  return _internal_feature_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_GlobalExplanation_Explanation::set_feature_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.feature_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.feature_name)
}
inline std::string* Model_GlobalExplanation_Explanation::mutable_feature_name() {
  std::string* _s = _internal_mutable_feature_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.feature_name)
  return _s;
}
inline const std::string& Model_GlobalExplanation_Explanation::_internal_feature_name() const {
  return _impl_.feature_name_.Get();
}
inline void Model_GlobalExplanation_Explanation::_internal_set_feature_name(const std::string& value) {
  
  _impl_.feature_name_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_GlobalExplanation_Explanation::_internal_mutable_feature_name() {
  
  return _impl_.feature_name_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_GlobalExplanation_Explanation::release_feature_name() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.feature_name)
  return _impl_.feature_name_.Release();
}
inline void Model_GlobalExplanation_Explanation::set_allocated_feature_name(std::string* feature_name) {
  if (feature_name != nullptr) {
    
  } else {
    
  }
  _impl_.feature_name_.SetAllocated(feature_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.feature_name_.IsDefault()) {
    _impl_.feature_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.feature_name)
}

// .google.protobuf.DoubleValue attribution = 2;
inline bool Model_GlobalExplanation_Explanation::_internal_has_attribution() const {
  return this != internal_default_instance() && _impl_.attribution_ != nullptr;
}
inline bool Model_GlobalExplanation_Explanation::has_attribution() const {
  return _internal_has_attribution();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_GlobalExplanation_Explanation::_internal_attribution() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.attribution_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_GlobalExplanation_Explanation::attribution() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.attribution)
  return _internal_attribution();
}
inline void Model_GlobalExplanation_Explanation::unsafe_arena_set_allocated_attribution(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* attribution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.attribution_);
  }
  _impl_.attribution_ = attribution;
  if (attribution) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.attribution)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_GlobalExplanation_Explanation::release_attribution() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.attribution_;
  _impl_.attribution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_GlobalExplanation_Explanation::unsafe_arena_release_attribution() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.attribution)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.attribution_;
  _impl_.attribution_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_GlobalExplanation_Explanation::_internal_mutable_attribution() {
  
  if (_impl_.attribution_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.attribution_ = p;
  }
  return _impl_.attribution_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_GlobalExplanation_Explanation::mutable_attribution() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_attribution();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.attribution)
  return _msg;
}
inline void Model_GlobalExplanation_Explanation::set_allocated_attribution(::PROTOBUF_NAMESPACE_ID::DoubleValue* attribution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.attribution_);
  }
  if (attribution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(attribution));
    if (message_arena != submessage_arena) {
      attribution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, attribution, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.attribution_ = attribution;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation.attribution)
}

// -------------------------------------------------------------------

// Model_GlobalExplanation

// repeated .google.cloud.bigquery.v2.Model.GlobalExplanation.Explanation explanations = 1;
inline int Model_GlobalExplanation::_internal_explanations_size() const {
  return _impl_.explanations_.size();
}
inline int Model_GlobalExplanation::explanations_size() const {
  return _internal_explanations_size();
}
inline void Model_GlobalExplanation::clear_explanations() {
  _impl_.explanations_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* Model_GlobalExplanation::mutable_explanations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.GlobalExplanation.explanations)
  return _impl_.explanations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation >*
Model_GlobalExplanation::mutable_explanations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.GlobalExplanation.explanations)
  return &_impl_.explanations_;
}
inline const ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation& Model_GlobalExplanation::_internal_explanations(int index) const {
  return _impl_.explanations_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation& Model_GlobalExplanation::explanations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.GlobalExplanation.explanations)
  return _internal_explanations(index);
}
inline ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* Model_GlobalExplanation::_internal_add_explanations() {
  return _impl_.explanations_.Add();
}
inline ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* Model_GlobalExplanation::add_explanations() {
  ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation* _add = _internal_add_explanations();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.GlobalExplanation.explanations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation_Explanation >&
Model_GlobalExplanation::explanations() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.GlobalExplanation.explanations)
  return _impl_.explanations_;
}

// string class_label = 2;
inline void Model_GlobalExplanation::clear_class_label() {
  _impl_.class_label_.ClearToEmpty();
}
inline const std::string& Model_GlobalExplanation::class_label() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.GlobalExplanation.class_label)
  return _internal_class_label();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_GlobalExplanation::set_class_label(ArgT0&& arg0, ArgT... args) {
 
 _impl_.class_label_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.GlobalExplanation.class_label)
}
inline std::string* Model_GlobalExplanation::mutable_class_label() {
  std::string* _s = _internal_mutable_class_label();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.GlobalExplanation.class_label)
  return _s;
}
inline const std::string& Model_GlobalExplanation::_internal_class_label() const {
  return _impl_.class_label_.Get();
}
inline void Model_GlobalExplanation::_internal_set_class_label(const std::string& value) {
  
  _impl_.class_label_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_GlobalExplanation::_internal_mutable_class_label() {
  
  return _impl_.class_label_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_GlobalExplanation::release_class_label() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.GlobalExplanation.class_label)
  return _impl_.class_label_.Release();
}
inline void Model_GlobalExplanation::set_allocated_class_label(std::string* class_label) {
  if (class_label != nullptr) {
    
  } else {
    
  }
  _impl_.class_label_.SetAllocated(class_label, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.class_label_.IsDefault()) {
    _impl_.class_label_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.GlobalExplanation.class_label)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Model_TrainingRun_TrainingOptions

// int64 max_iterations = 1;
inline void Model_TrainingRun_TrainingOptions::clear_max_iterations() {
  _impl_.max_iterations_ = int64_t{0};
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_max_iterations() const {
  return _impl_.max_iterations_;
}
inline int64_t Model_TrainingRun_TrainingOptions::max_iterations() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.max_iterations)
  return _internal_max_iterations();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_max_iterations(int64_t value) {
  
  _impl_.max_iterations_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_max_iterations(int64_t value) {
  _internal_set_max_iterations(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.max_iterations)
}

// .google.cloud.bigquery.v2.Model.LossType loss_type = 2;
inline void Model_TrainingRun_TrainingOptions::clear_loss_type() {
  _impl_.loss_type_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_LossType Model_TrainingRun_TrainingOptions::_internal_loss_type() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_LossType >(_impl_.loss_type_);
}
inline ::google::cloud::bigquery::v2::Model_LossType Model_TrainingRun_TrainingOptions::loss_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.loss_type)
  return _internal_loss_type();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_loss_type(::google::cloud::bigquery::v2::Model_LossType value) {
  
  _impl_.loss_type_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_loss_type(::google::cloud::bigquery::v2::Model_LossType value) {
  _internal_set_loss_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.loss_type)
}

// double learn_rate = 3;
inline void Model_TrainingRun_TrainingOptions::clear_learn_rate() {
  _impl_.learn_rate_ = 0;
}
inline double Model_TrainingRun_TrainingOptions::_internal_learn_rate() const {
  return _impl_.learn_rate_;
}
inline double Model_TrainingRun_TrainingOptions::learn_rate() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.learn_rate)
  return _internal_learn_rate();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_learn_rate(double value) {
  
  _impl_.learn_rate_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_learn_rate(double value) {
  _internal_set_learn_rate(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.learn_rate)
}

// .google.protobuf.DoubleValue l1_regularization = 4;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_l1_regularization() const {
  return this != internal_default_instance() && _impl_.l1_regularization_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_l1_regularization() const {
  return _internal_has_l1_regularization();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::_internal_l1_regularization() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.l1_regularization_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::l1_regularization() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l1_regularization)
  return _internal_l1_regularization();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_l1_regularization(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* l1_regularization) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.l1_regularization_);
  }
  _impl_.l1_regularization_ = l1_regularization;
  if (l1_regularization) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l1_regularization)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::release_l1_regularization() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.l1_regularization_;
  _impl_.l1_regularization_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_l1_regularization() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l1_regularization)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.l1_regularization_;
  _impl_.l1_regularization_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::_internal_mutable_l1_regularization() {
  
  if (_impl_.l1_regularization_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.l1_regularization_ = p;
  }
  return _impl_.l1_regularization_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::mutable_l1_regularization() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_l1_regularization();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l1_regularization)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_l1_regularization(::PROTOBUF_NAMESPACE_ID::DoubleValue* l1_regularization) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.l1_regularization_);
  }
  if (l1_regularization) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(l1_regularization));
    if (message_arena != submessage_arena) {
      l1_regularization = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, l1_regularization, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.l1_regularization_ = l1_regularization;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l1_regularization)
}

// .google.protobuf.DoubleValue l2_regularization = 5;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_l2_regularization() const {
  return this != internal_default_instance() && _impl_.l2_regularization_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_l2_regularization() const {
  return _internal_has_l2_regularization();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::_internal_l2_regularization() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.l2_regularization_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::l2_regularization() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l2_regularization)
  return _internal_l2_regularization();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_l2_regularization(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* l2_regularization) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.l2_regularization_);
  }
  _impl_.l2_regularization_ = l2_regularization;
  if (l2_regularization) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l2_regularization)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::release_l2_regularization() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.l2_regularization_;
  _impl_.l2_regularization_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_l2_regularization() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l2_regularization)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.l2_regularization_;
  _impl_.l2_regularization_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::_internal_mutable_l2_regularization() {
  
  if (_impl_.l2_regularization_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.l2_regularization_ = p;
  }
  return _impl_.l2_regularization_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::mutable_l2_regularization() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_l2_regularization();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l2_regularization)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_l2_regularization(::PROTOBUF_NAMESPACE_ID::DoubleValue* l2_regularization) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.l2_regularization_);
  }
  if (l2_regularization) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(l2_regularization));
    if (message_arena != submessage_arena) {
      l2_regularization = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, l2_regularization, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.l2_regularization_ = l2_regularization;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.l2_regularization)
}

// .google.protobuf.DoubleValue min_relative_progress = 6;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_min_relative_progress() const {
  return this != internal_default_instance() && _impl_.min_relative_progress_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_min_relative_progress() const {
  return _internal_has_min_relative_progress();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::_internal_min_relative_progress() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.min_relative_progress_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::min_relative_progress() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_relative_progress)
  return _internal_min_relative_progress();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_min_relative_progress(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* min_relative_progress) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.min_relative_progress_);
  }
  _impl_.min_relative_progress_ = min_relative_progress;
  if (min_relative_progress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_relative_progress)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::release_min_relative_progress() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.min_relative_progress_;
  _impl_.min_relative_progress_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_min_relative_progress() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_relative_progress)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.min_relative_progress_;
  _impl_.min_relative_progress_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::_internal_mutable_min_relative_progress() {
  
  if (_impl_.min_relative_progress_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.min_relative_progress_ = p;
  }
  return _impl_.min_relative_progress_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::mutable_min_relative_progress() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_min_relative_progress();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_relative_progress)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_min_relative_progress(::PROTOBUF_NAMESPACE_ID::DoubleValue* min_relative_progress) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.min_relative_progress_);
  }
  if (min_relative_progress) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(min_relative_progress));
    if (message_arena != submessage_arena) {
      min_relative_progress = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, min_relative_progress, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.min_relative_progress_ = min_relative_progress;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_relative_progress)
}

// .google.protobuf.BoolValue warm_start = 7;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_warm_start() const {
  return this != internal_default_instance() && _impl_.warm_start_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_warm_start() const {
  return _internal_has_warm_start();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::_internal_warm_start() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.warm_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::warm_start() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.warm_start)
  return _internal_warm_start();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_warm_start(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* warm_start) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.warm_start_);
  }
  _impl_.warm_start_ = warm_start;
  if (warm_start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.warm_start)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::release_warm_start() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.warm_start_;
  _impl_.warm_start_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_warm_start() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.warm_start)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.warm_start_;
  _impl_.warm_start_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::_internal_mutable_warm_start() {
  
  if (_impl_.warm_start_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.warm_start_ = p;
  }
  return _impl_.warm_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::mutable_warm_start() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_warm_start();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.warm_start)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_warm_start(::PROTOBUF_NAMESPACE_ID::BoolValue* warm_start) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.warm_start_);
  }
  if (warm_start) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(warm_start));
    if (message_arena != submessage_arena) {
      warm_start = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, warm_start, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.warm_start_ = warm_start;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.warm_start)
}

// .google.protobuf.BoolValue early_stop = 8;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_early_stop() const {
  return this != internal_default_instance() && _impl_.early_stop_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_early_stop() const {
  return _internal_has_early_stop();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::_internal_early_stop() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.early_stop_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::early_stop() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.early_stop)
  return _internal_early_stop();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_early_stop(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* early_stop) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.early_stop_);
  }
  _impl_.early_stop_ = early_stop;
  if (early_stop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.early_stop)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::release_early_stop() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.early_stop_;
  _impl_.early_stop_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_early_stop() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.early_stop)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.early_stop_;
  _impl_.early_stop_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::_internal_mutable_early_stop() {
  
  if (_impl_.early_stop_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.early_stop_ = p;
  }
  return _impl_.early_stop_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::mutable_early_stop() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_early_stop();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.early_stop)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_early_stop(::PROTOBUF_NAMESPACE_ID::BoolValue* early_stop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.early_stop_);
  }
  if (early_stop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(early_stop));
    if (message_arena != submessage_arena) {
      early_stop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, early_stop, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.early_stop_ = early_stop;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.early_stop)
}

// repeated string input_label_columns = 9;
inline int Model_TrainingRun_TrainingOptions::_internal_input_label_columns_size() const {
  return _impl_.input_label_columns_.size();
}
inline int Model_TrainingRun_TrainingOptions::input_label_columns_size() const {
  return _internal_input_label_columns_size();
}
inline void Model_TrainingRun_TrainingOptions::clear_input_label_columns() {
  _impl_.input_label_columns_.Clear();
}
inline std::string* Model_TrainingRun_TrainingOptions::add_input_label_columns() {
  std::string* _s = _internal_add_input_label_columns();
  // @@protoc_insertion_point(field_add_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_input_label_columns(int index) const {
  return _impl_.input_label_columns_.Get(index);
}
inline const std::string& Model_TrainingRun_TrainingOptions::input_label_columns(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
  return _internal_input_label_columns(index);
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_input_label_columns(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
  return _impl_.input_label_columns_.Mutable(index);
}
inline void Model_TrainingRun_TrainingOptions::set_input_label_columns(int index, const std::string& value) {
  _impl_.input_label_columns_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline void Model_TrainingRun_TrainingOptions::set_input_label_columns(int index, std::string&& value) {
  _impl_.input_label_columns_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline void Model_TrainingRun_TrainingOptions::set_input_label_columns(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.input_label_columns_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline void Model_TrainingRun_TrainingOptions::set_input_label_columns(int index, const char* value, size_t size) {
  _impl_.input_label_columns_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_add_input_label_columns() {
  return _impl_.input_label_columns_.Add();
}
inline void Model_TrainingRun_TrainingOptions::add_input_label_columns(const std::string& value) {
  _impl_.input_label_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline void Model_TrainingRun_TrainingOptions::add_input_label_columns(std::string&& value) {
  _impl_.input_label_columns_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline void Model_TrainingRun_TrainingOptions::add_input_label_columns(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.input_label_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline void Model_TrainingRun_TrainingOptions::add_input_label_columns(const char* value, size_t size) {
  _impl_.input_label_columns_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Model_TrainingRun_TrainingOptions::input_label_columns() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
  return _impl_.input_label_columns_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Model_TrainingRun_TrainingOptions::mutable_input_label_columns() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.input_label_columns)
  return &_impl_.input_label_columns_;
}

// .google.cloud.bigquery.v2.Model.DataSplitMethod data_split_method = 10;
inline void Model_TrainingRun_TrainingOptions::clear_data_split_method() {
  _impl_.data_split_method_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_DataSplitMethod Model_TrainingRun_TrainingOptions::_internal_data_split_method() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_DataSplitMethod >(_impl_.data_split_method_);
}
inline ::google::cloud::bigquery::v2::Model_DataSplitMethod Model_TrainingRun_TrainingOptions::data_split_method() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_method)
  return _internal_data_split_method();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_data_split_method(::google::cloud::bigquery::v2::Model_DataSplitMethod value) {
  
  _impl_.data_split_method_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_data_split_method(::google::cloud::bigquery::v2::Model_DataSplitMethod value) {
  _internal_set_data_split_method(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_method)
}

// double data_split_eval_fraction = 11;
inline void Model_TrainingRun_TrainingOptions::clear_data_split_eval_fraction() {
  _impl_.data_split_eval_fraction_ = 0;
}
inline double Model_TrainingRun_TrainingOptions::_internal_data_split_eval_fraction() const {
  return _impl_.data_split_eval_fraction_;
}
inline double Model_TrainingRun_TrainingOptions::data_split_eval_fraction() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_eval_fraction)
  return _internal_data_split_eval_fraction();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_data_split_eval_fraction(double value) {
  
  _impl_.data_split_eval_fraction_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_data_split_eval_fraction(double value) {
  _internal_set_data_split_eval_fraction(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_eval_fraction)
}

// string data_split_column = 12;
inline void Model_TrainingRun_TrainingOptions::clear_data_split_column() {
  _impl_.data_split_column_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::data_split_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_column)
  return _internal_data_split_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_data_split_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.data_split_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_column)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_data_split_column() {
  std::string* _s = _internal_mutable_data_split_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_column)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_data_split_column() const {
  return _impl_.data_split_column_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_data_split_column(const std::string& value) {
  
  _impl_.data_split_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_data_split_column() {
  
  return _impl_.data_split_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_data_split_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_column)
  return _impl_.data_split_column_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_data_split_column(std::string* data_split_column) {
  if (data_split_column != nullptr) {
    
  } else {
    
  }
  _impl_.data_split_column_.SetAllocated(data_split_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.data_split_column_.IsDefault()) {
    _impl_.data_split_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_split_column)
}

// .google.cloud.bigquery.v2.Model.LearnRateStrategy learn_rate_strategy = 13;
inline void Model_TrainingRun_TrainingOptions::clear_learn_rate_strategy() {
  _impl_.learn_rate_strategy_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_LearnRateStrategy Model_TrainingRun_TrainingOptions::_internal_learn_rate_strategy() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_LearnRateStrategy >(_impl_.learn_rate_strategy_);
}
inline ::google::cloud::bigquery::v2::Model_LearnRateStrategy Model_TrainingRun_TrainingOptions::learn_rate_strategy() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.learn_rate_strategy)
  return _internal_learn_rate_strategy();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_learn_rate_strategy(::google::cloud::bigquery::v2::Model_LearnRateStrategy value) {
  
  _impl_.learn_rate_strategy_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_learn_rate_strategy(::google::cloud::bigquery::v2::Model_LearnRateStrategy value) {
  _internal_set_learn_rate_strategy(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.learn_rate_strategy)
}

// double initial_learn_rate = 16;
inline void Model_TrainingRun_TrainingOptions::clear_initial_learn_rate() {
  _impl_.initial_learn_rate_ = 0;
}
inline double Model_TrainingRun_TrainingOptions::_internal_initial_learn_rate() const {
  return _impl_.initial_learn_rate_;
}
inline double Model_TrainingRun_TrainingOptions::initial_learn_rate() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.initial_learn_rate)
  return _internal_initial_learn_rate();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_initial_learn_rate(double value) {
  
  _impl_.initial_learn_rate_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_initial_learn_rate(double value) {
  _internal_set_initial_learn_rate(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.initial_learn_rate)
}

// map<string, double> label_class_weights = 17;
inline int Model_TrainingRun_TrainingOptions::_internal_label_class_weights_size() const {
  return _impl_.label_class_weights_.size();
}
inline int Model_TrainingRun_TrainingOptions::label_class_weights_size() const {
  return _internal_label_class_weights_size();
}
inline void Model_TrainingRun_TrainingOptions::clear_label_class_weights() {
  _impl_.label_class_weights_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
Model_TrainingRun_TrainingOptions::_internal_label_class_weights() const {
  return _impl_.label_class_weights_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
Model_TrainingRun_TrainingOptions::label_class_weights() const {
  // @@protoc_insertion_point(field_map:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.label_class_weights)
  return _internal_label_class_weights();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
Model_TrainingRun_TrainingOptions::_internal_mutable_label_class_weights() {
  return _impl_.label_class_weights_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
Model_TrainingRun_TrainingOptions::mutable_label_class_weights() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.label_class_weights)
  return _internal_mutable_label_class_weights();
}

// string user_column = 18;
inline void Model_TrainingRun_TrainingOptions::clear_user_column() {
  _impl_.user_column_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::user_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.user_column)
  return _internal_user_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_user_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.user_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.user_column)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_user_column() {
  std::string* _s = _internal_mutable_user_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.user_column)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_user_column() const {
  return _impl_.user_column_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_user_column(const std::string& value) {
  
  _impl_.user_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_user_column() {
  
  return _impl_.user_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_user_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.user_column)
  return _impl_.user_column_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_user_column(std::string* user_column) {
  if (user_column != nullptr) {
    
  } else {
    
  }
  _impl_.user_column_.SetAllocated(user_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.user_column_.IsDefault()) {
    _impl_.user_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.user_column)
}

// string item_column = 19;
inline void Model_TrainingRun_TrainingOptions::clear_item_column() {
  _impl_.item_column_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::item_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.item_column)
  return _internal_item_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_item_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.item_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.item_column)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_item_column() {
  std::string* _s = _internal_mutable_item_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.item_column)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_item_column() const {
  return _impl_.item_column_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_item_column(const std::string& value) {
  
  _impl_.item_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_item_column() {
  
  return _impl_.item_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_item_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.item_column)
  return _impl_.item_column_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_item_column(std::string* item_column) {
  if (item_column != nullptr) {
    
  } else {
    
  }
  _impl_.item_column_.SetAllocated(item_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.item_column_.IsDefault()) {
    _impl_.item_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.item_column)
}

// .google.cloud.bigquery.v2.Model.DistanceType distance_type = 20;
inline void Model_TrainingRun_TrainingOptions::clear_distance_type() {
  _impl_.distance_type_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_DistanceType Model_TrainingRun_TrainingOptions::_internal_distance_type() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_DistanceType >(_impl_.distance_type_);
}
inline ::google::cloud::bigquery::v2::Model_DistanceType Model_TrainingRun_TrainingOptions::distance_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.distance_type)
  return _internal_distance_type();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_distance_type(::google::cloud::bigquery::v2::Model_DistanceType value) {
  
  _impl_.distance_type_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_distance_type(::google::cloud::bigquery::v2::Model_DistanceType value) {
  _internal_set_distance_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.distance_type)
}

// int64 num_clusters = 21;
inline void Model_TrainingRun_TrainingOptions::clear_num_clusters() {
  _impl_.num_clusters_ = int64_t{0};
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_num_clusters() const {
  return _impl_.num_clusters_;
}
inline int64_t Model_TrainingRun_TrainingOptions::num_clusters() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.num_clusters)
  return _internal_num_clusters();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_num_clusters(int64_t value) {
  
  _impl_.num_clusters_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_num_clusters(int64_t value) {
  _internal_set_num_clusters(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.num_clusters)
}

// string model_uri = 22;
inline void Model_TrainingRun_TrainingOptions::clear_model_uri() {
  _impl_.model_uri_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::model_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.model_uri)
  return _internal_model_uri();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_model_uri(ArgT0&& arg0, ArgT... args) {
 
 _impl_.model_uri_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.model_uri)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_model_uri() {
  std::string* _s = _internal_mutable_model_uri();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.model_uri)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_model_uri() const {
  return _impl_.model_uri_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_model_uri(const std::string& value) {
  
  _impl_.model_uri_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_model_uri() {
  
  return _impl_.model_uri_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_model_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.model_uri)
  return _impl_.model_uri_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_model_uri(std::string* model_uri) {
  if (model_uri != nullptr) {
    
  } else {
    
  }
  _impl_.model_uri_.SetAllocated(model_uri, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.model_uri_.IsDefault()) {
    _impl_.model_uri_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.model_uri)
}

// .google.cloud.bigquery.v2.Model.OptimizationStrategy optimization_strategy = 23;
inline void Model_TrainingRun_TrainingOptions::clear_optimization_strategy() {
  _impl_.optimization_strategy_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_OptimizationStrategy Model_TrainingRun_TrainingOptions::_internal_optimization_strategy() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_OptimizationStrategy >(_impl_.optimization_strategy_);
}
inline ::google::cloud::bigquery::v2::Model_OptimizationStrategy Model_TrainingRun_TrainingOptions::optimization_strategy() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.optimization_strategy)
  return _internal_optimization_strategy();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_optimization_strategy(::google::cloud::bigquery::v2::Model_OptimizationStrategy value) {
  
  _impl_.optimization_strategy_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_optimization_strategy(::google::cloud::bigquery::v2::Model_OptimizationStrategy value) {
  _internal_set_optimization_strategy(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.optimization_strategy)
}

// repeated int64 hidden_units = 24;
inline int Model_TrainingRun_TrainingOptions::_internal_hidden_units_size() const {
  return _impl_.hidden_units_.size();
}
inline int Model_TrainingRun_TrainingOptions::hidden_units_size() const {
  return _internal_hidden_units_size();
}
inline void Model_TrainingRun_TrainingOptions::clear_hidden_units() {
  _impl_.hidden_units_.Clear();
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_hidden_units(int index) const {
  return _impl_.hidden_units_.Get(index);
}
inline int64_t Model_TrainingRun_TrainingOptions::hidden_units(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.hidden_units)
  return _internal_hidden_units(index);
}
inline void Model_TrainingRun_TrainingOptions::set_hidden_units(int index, int64_t value) {
  _impl_.hidden_units_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.hidden_units)
}
inline void Model_TrainingRun_TrainingOptions::_internal_add_hidden_units(int64_t value) {
  _impl_.hidden_units_.Add(value);
}
inline void Model_TrainingRun_TrainingOptions::add_hidden_units(int64_t value) {
  _internal_add_hidden_units(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.hidden_units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
Model_TrainingRun_TrainingOptions::_internal_hidden_units() const {
  return _impl_.hidden_units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
Model_TrainingRun_TrainingOptions::hidden_units() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.hidden_units)
  return _internal_hidden_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
Model_TrainingRun_TrainingOptions::_internal_mutable_hidden_units() {
  return &_impl_.hidden_units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
Model_TrainingRun_TrainingOptions::mutable_hidden_units() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.hidden_units)
  return _internal_mutable_hidden_units();
}

// int64 batch_size = 25;
inline void Model_TrainingRun_TrainingOptions::clear_batch_size() {
  _impl_.batch_size_ = int64_t{0};
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_batch_size() const {
  return _impl_.batch_size_;
}
inline int64_t Model_TrainingRun_TrainingOptions::batch_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.batch_size)
  return _internal_batch_size();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_batch_size(int64_t value) {
  
  _impl_.batch_size_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_batch_size(int64_t value) {
  _internal_set_batch_size(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.batch_size)
}

// .google.protobuf.DoubleValue dropout = 26;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_dropout() const {
  return this != internal_default_instance() && _impl_.dropout_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_dropout() const {
  return _internal_has_dropout();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::_internal_dropout() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.dropout_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::dropout() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.dropout)
  return _internal_dropout();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_dropout(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* dropout) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dropout_);
  }
  _impl_.dropout_ = dropout;
  if (dropout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.dropout)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::release_dropout() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.dropout_;
  _impl_.dropout_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_dropout() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.dropout)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.dropout_;
  _impl_.dropout_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::_internal_mutable_dropout() {
  
  if (_impl_.dropout_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.dropout_ = p;
  }
  return _impl_.dropout_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::mutable_dropout() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_dropout();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.dropout)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_dropout(::PROTOBUF_NAMESPACE_ID::DoubleValue* dropout) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dropout_);
  }
  if (dropout) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropout));
    if (message_arena != submessage_arena) {
      dropout = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropout, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.dropout_ = dropout;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.dropout)
}

// int64 max_tree_depth = 27;
inline void Model_TrainingRun_TrainingOptions::clear_max_tree_depth() {
  _impl_.max_tree_depth_ = int64_t{0};
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_max_tree_depth() const {
  return _impl_.max_tree_depth_;
}
inline int64_t Model_TrainingRun_TrainingOptions::max_tree_depth() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.max_tree_depth)
  return _internal_max_tree_depth();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_max_tree_depth(int64_t value) {
  
  _impl_.max_tree_depth_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_max_tree_depth(int64_t value) {
  _internal_set_max_tree_depth(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.max_tree_depth)
}

// double subsample = 28;
inline void Model_TrainingRun_TrainingOptions::clear_subsample() {
  _impl_.subsample_ = 0;
}
inline double Model_TrainingRun_TrainingOptions::_internal_subsample() const {
  return _impl_.subsample_;
}
inline double Model_TrainingRun_TrainingOptions::subsample() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.subsample)
  return _internal_subsample();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_subsample(double value) {
  
  _impl_.subsample_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_subsample(double value) {
  _internal_set_subsample(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.subsample)
}

// .google.protobuf.DoubleValue min_split_loss = 29;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_min_split_loss() const {
  return this != internal_default_instance() && _impl_.min_split_loss_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_min_split_loss() const {
  return _internal_has_min_split_loss();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::_internal_min_split_loss() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.min_split_loss_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::min_split_loss() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_split_loss)
  return _internal_min_split_loss();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_min_split_loss(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* min_split_loss) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.min_split_loss_);
  }
  _impl_.min_split_loss_ = min_split_loss;
  if (min_split_loss) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_split_loss)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::release_min_split_loss() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.min_split_loss_;
  _impl_.min_split_loss_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_min_split_loss() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_split_loss)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.min_split_loss_;
  _impl_.min_split_loss_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::_internal_mutable_min_split_loss() {
  
  if (_impl_.min_split_loss_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.min_split_loss_ = p;
  }
  return _impl_.min_split_loss_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::mutable_min_split_loss() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_min_split_loss();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_split_loss)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_min_split_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* min_split_loss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.min_split_loss_);
  }
  if (min_split_loss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(min_split_loss));
    if (message_arena != submessage_arena) {
      min_split_loss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, min_split_loss, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.min_split_loss_ = min_split_loss;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.min_split_loss)
}

// int64 num_factors = 30;
inline void Model_TrainingRun_TrainingOptions::clear_num_factors() {
  _impl_.num_factors_ = int64_t{0};
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_num_factors() const {
  return _impl_.num_factors_;
}
inline int64_t Model_TrainingRun_TrainingOptions::num_factors() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.num_factors)
  return _internal_num_factors();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_num_factors(int64_t value) {
  
  _impl_.num_factors_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_num_factors(int64_t value) {
  _internal_set_num_factors(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.num_factors)
}

// .google.cloud.bigquery.v2.Model.FeedbackType feedback_type = 31;
inline void Model_TrainingRun_TrainingOptions::clear_feedback_type() {
  _impl_.feedback_type_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_FeedbackType Model_TrainingRun_TrainingOptions::_internal_feedback_type() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_FeedbackType >(_impl_.feedback_type_);
}
inline ::google::cloud::bigquery::v2::Model_FeedbackType Model_TrainingRun_TrainingOptions::feedback_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.feedback_type)
  return _internal_feedback_type();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_feedback_type(::google::cloud::bigquery::v2::Model_FeedbackType value) {
  
  _impl_.feedback_type_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_feedback_type(::google::cloud::bigquery::v2::Model_FeedbackType value) {
  _internal_set_feedback_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.feedback_type)
}

// .google.protobuf.DoubleValue wals_alpha = 32;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_wals_alpha() const {
  return this != internal_default_instance() && _impl_.wals_alpha_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_wals_alpha() const {
  return _internal_has_wals_alpha();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::_internal_wals_alpha() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.wals_alpha_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_TrainingOptions::wals_alpha() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.wals_alpha)
  return _internal_wals_alpha();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_wals_alpha(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* wals_alpha) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.wals_alpha_);
  }
  _impl_.wals_alpha_ = wals_alpha;
  if (wals_alpha) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.wals_alpha)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::release_wals_alpha() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.wals_alpha_;
  _impl_.wals_alpha_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_wals_alpha() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.wals_alpha)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.wals_alpha_;
  _impl_.wals_alpha_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::_internal_mutable_wals_alpha() {
  
  if (_impl_.wals_alpha_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.wals_alpha_ = p;
  }
  return _impl_.wals_alpha_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_TrainingOptions::mutable_wals_alpha() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_wals_alpha();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.wals_alpha)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_wals_alpha(::PROTOBUF_NAMESPACE_ID::DoubleValue* wals_alpha) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.wals_alpha_);
  }
  if (wals_alpha) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wals_alpha));
    if (message_arena != submessage_arena) {
      wals_alpha = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wals_alpha, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.wals_alpha_ = wals_alpha;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.wals_alpha)
}

// .google.cloud.bigquery.v2.Model.KmeansEnums.KmeansInitializationMethod kmeans_initialization_method = 33;
inline void Model_TrainingRun_TrainingOptions::clear_kmeans_initialization_method() {
  _impl_.kmeans_initialization_method_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod Model_TrainingRun_TrainingOptions::_internal_kmeans_initialization_method() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod >(_impl_.kmeans_initialization_method_);
}
inline ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod Model_TrainingRun_TrainingOptions::kmeans_initialization_method() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.kmeans_initialization_method)
  return _internal_kmeans_initialization_method();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_kmeans_initialization_method(::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod value) {
  
  _impl_.kmeans_initialization_method_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_kmeans_initialization_method(::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod value) {
  _internal_set_kmeans_initialization_method(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.kmeans_initialization_method)
}

// string kmeans_initialization_column = 34;
inline void Model_TrainingRun_TrainingOptions::clear_kmeans_initialization_column() {
  _impl_.kmeans_initialization_column_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::kmeans_initialization_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.kmeans_initialization_column)
  return _internal_kmeans_initialization_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_kmeans_initialization_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.kmeans_initialization_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.kmeans_initialization_column)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_kmeans_initialization_column() {
  std::string* _s = _internal_mutable_kmeans_initialization_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.kmeans_initialization_column)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_kmeans_initialization_column() const {
  return _impl_.kmeans_initialization_column_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_kmeans_initialization_column(const std::string& value) {
  
  _impl_.kmeans_initialization_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_kmeans_initialization_column() {
  
  return _impl_.kmeans_initialization_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_kmeans_initialization_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.kmeans_initialization_column)
  return _impl_.kmeans_initialization_column_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_kmeans_initialization_column(std::string* kmeans_initialization_column) {
  if (kmeans_initialization_column != nullptr) {
    
  } else {
    
  }
  _impl_.kmeans_initialization_column_.SetAllocated(kmeans_initialization_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.kmeans_initialization_column_.IsDefault()) {
    _impl_.kmeans_initialization_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.kmeans_initialization_column)
}

// string time_series_timestamp_column = 35;
inline void Model_TrainingRun_TrainingOptions::clear_time_series_timestamp_column() {
  _impl_.time_series_timestamp_column_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::time_series_timestamp_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_timestamp_column)
  return _internal_time_series_timestamp_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_time_series_timestamp_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.time_series_timestamp_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_timestamp_column)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_time_series_timestamp_column() {
  std::string* _s = _internal_mutable_time_series_timestamp_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_timestamp_column)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_time_series_timestamp_column() const {
  return _impl_.time_series_timestamp_column_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_time_series_timestamp_column(const std::string& value) {
  
  _impl_.time_series_timestamp_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_time_series_timestamp_column() {
  
  return _impl_.time_series_timestamp_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_time_series_timestamp_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_timestamp_column)
  return _impl_.time_series_timestamp_column_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_time_series_timestamp_column(std::string* time_series_timestamp_column) {
  if (time_series_timestamp_column != nullptr) {
    
  } else {
    
  }
  _impl_.time_series_timestamp_column_.SetAllocated(time_series_timestamp_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.time_series_timestamp_column_.IsDefault()) {
    _impl_.time_series_timestamp_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_timestamp_column)
}

// string time_series_data_column = 36;
inline void Model_TrainingRun_TrainingOptions::clear_time_series_data_column() {
  _impl_.time_series_data_column_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::time_series_data_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_data_column)
  return _internal_time_series_data_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_time_series_data_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.time_series_data_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_data_column)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_time_series_data_column() {
  std::string* _s = _internal_mutable_time_series_data_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_data_column)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_time_series_data_column() const {
  return _impl_.time_series_data_column_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_time_series_data_column(const std::string& value) {
  
  _impl_.time_series_data_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_time_series_data_column() {
  
  return _impl_.time_series_data_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_time_series_data_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_data_column)
  return _impl_.time_series_data_column_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_time_series_data_column(std::string* time_series_data_column) {
  if (time_series_data_column != nullptr) {
    
  } else {
    
  }
  _impl_.time_series_data_column_.SetAllocated(time_series_data_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.time_series_data_column_.IsDefault()) {
    _impl_.time_series_data_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_data_column)
}

// bool auto_arima = 37;
inline void Model_TrainingRun_TrainingOptions::clear_auto_arima() {
  _impl_.auto_arima_ = false;
}
inline bool Model_TrainingRun_TrainingOptions::_internal_auto_arima() const {
  return _impl_.auto_arima_;
}
inline bool Model_TrainingRun_TrainingOptions::auto_arima() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.auto_arima)
  return _internal_auto_arima();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_auto_arima(bool value) {
  
  _impl_.auto_arima_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_auto_arima(bool value) {
  _internal_set_auto_arima(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.auto_arima)
}

// .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 38;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_non_seasonal_order() const {
  return this != internal_default_instance() && _impl_.non_seasonal_order_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_non_seasonal_order() const {
  return _internal_has_non_seasonal_order();
}
inline void Model_TrainingRun_TrainingOptions::clear_non_seasonal_order() {
  if (GetArenaForAllocation() == nullptr && _impl_.non_seasonal_order_ != nullptr) {
    delete _impl_.non_seasonal_order_;
  }
  _impl_.non_seasonal_order_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_TrainingRun_TrainingOptions::_internal_non_seasonal_order() const {
  const ::google::cloud::bigquery::v2::Model_ArimaOrder* p = _impl_.non_seasonal_order_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_ArimaOrder&>(
      ::google::cloud::bigquery::v2::_Model_ArimaOrder_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_TrainingRun_TrainingOptions::non_seasonal_order() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.non_seasonal_order)
  return _internal_non_seasonal_order();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_non_seasonal_order(
    ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.non_seasonal_order_);
  }
  _impl_.non_seasonal_order_ = non_seasonal_order;
  if (non_seasonal_order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.non_seasonal_order)
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_TrainingOptions::release_non_seasonal_order() {
  
  ::google::cloud::bigquery::v2::Model_ArimaOrder* temp = _impl_.non_seasonal_order_;
  _impl_.non_seasonal_order_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_TrainingOptions::unsafe_arena_release_non_seasonal_order() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.non_seasonal_order)
  
  ::google::cloud::bigquery::v2::Model_ArimaOrder* temp = _impl_.non_seasonal_order_;
  _impl_.non_seasonal_order_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_TrainingOptions::_internal_mutable_non_seasonal_order() {
  
  if (_impl_.non_seasonal_order_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaOrder>(GetArenaForAllocation());
    _impl_.non_seasonal_order_ = p;
  }
  return _impl_.non_seasonal_order_;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_TrainingOptions::mutable_non_seasonal_order() {
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _msg = _internal_mutable_non_seasonal_order();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.non_seasonal_order)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_non_seasonal_order(::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.non_seasonal_order_;
  }
  if (non_seasonal_order) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(non_seasonal_order);
    if (message_arena != submessage_arena) {
      non_seasonal_order = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, non_seasonal_order, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.non_seasonal_order_ = non_seasonal_order;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.non_seasonal_order)
}

// .google.cloud.bigquery.v2.Model.DataFrequency data_frequency = 39;
inline void Model_TrainingRun_TrainingOptions::clear_data_frequency() {
  _impl_.data_frequency_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_DataFrequency Model_TrainingRun_TrainingOptions::_internal_data_frequency() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_DataFrequency >(_impl_.data_frequency_);
}
inline ::google::cloud::bigquery::v2::Model_DataFrequency Model_TrainingRun_TrainingOptions::data_frequency() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_frequency)
  return _internal_data_frequency();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_data_frequency(::google::cloud::bigquery::v2::Model_DataFrequency value) {
  
  _impl_.data_frequency_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_data_frequency(::google::cloud::bigquery::v2::Model_DataFrequency value) {
  _internal_set_data_frequency(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.data_frequency)
}

// bool include_drift = 41;
inline void Model_TrainingRun_TrainingOptions::clear_include_drift() {
  _impl_.include_drift_ = false;
}
inline bool Model_TrainingRun_TrainingOptions::_internal_include_drift() const {
  return _impl_.include_drift_;
}
inline bool Model_TrainingRun_TrainingOptions::include_drift() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.include_drift)
  return _internal_include_drift();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_include_drift(bool value) {
  
  _impl_.include_drift_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_include_drift(bool value) {
  _internal_set_include_drift(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.include_drift)
}

// .google.cloud.bigquery.v2.Model.HolidayRegion holiday_region = 42;
inline void Model_TrainingRun_TrainingOptions::clear_holiday_region() {
  _impl_.holiday_region_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_HolidayRegion Model_TrainingRun_TrainingOptions::_internal_holiday_region() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_HolidayRegion >(_impl_.holiday_region_);
}
inline ::google::cloud::bigquery::v2::Model_HolidayRegion Model_TrainingRun_TrainingOptions::holiday_region() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.holiday_region)
  return _internal_holiday_region();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_holiday_region(::google::cloud::bigquery::v2::Model_HolidayRegion value) {
  
  _impl_.holiday_region_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_holiday_region(::google::cloud::bigquery::v2::Model_HolidayRegion value) {
  _internal_set_holiday_region(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.holiday_region)
}

// string time_series_id_column = 43;
inline void Model_TrainingRun_TrainingOptions::clear_time_series_id_column() {
  _impl_.time_series_id_column_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_TrainingOptions::time_series_id_column() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_column)
  return _internal_time_series_id_column();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_TrainingOptions::set_time_series_id_column(ArgT0&& arg0, ArgT... args) {
 
 _impl_.time_series_id_column_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_column)
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_time_series_id_column() {
  std::string* _s = _internal_mutable_time_series_id_column();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_column)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_time_series_id_column() const {
  return _impl_.time_series_id_column_.Get();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_time_series_id_column(const std::string& value) {
  
  _impl_.time_series_id_column_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_mutable_time_series_id_column() {
  
  return _impl_.time_series_id_column_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_TrainingOptions::release_time_series_id_column() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_column)
  return _impl_.time_series_id_column_.Release();
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_time_series_id_column(std::string* time_series_id_column) {
  if (time_series_id_column != nullptr) {
    
  } else {
    
  }
  _impl_.time_series_id_column_.SetAllocated(time_series_id_column, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.time_series_id_column_.IsDefault()) {
    _impl_.time_series_id_column_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_column)
}

// repeated string time_series_id_columns = 51;
inline int Model_TrainingRun_TrainingOptions::_internal_time_series_id_columns_size() const {
  return _impl_.time_series_id_columns_.size();
}
inline int Model_TrainingRun_TrainingOptions::time_series_id_columns_size() const {
  return _internal_time_series_id_columns_size();
}
inline void Model_TrainingRun_TrainingOptions::clear_time_series_id_columns() {
  _impl_.time_series_id_columns_.Clear();
}
inline std::string* Model_TrainingRun_TrainingOptions::add_time_series_id_columns() {
  std::string* _s = _internal_add_time_series_id_columns();
  // @@protoc_insertion_point(field_add_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
  return _s;
}
inline const std::string& Model_TrainingRun_TrainingOptions::_internal_time_series_id_columns(int index) const {
  return _impl_.time_series_id_columns_.Get(index);
}
inline const std::string& Model_TrainingRun_TrainingOptions::time_series_id_columns(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
  return _internal_time_series_id_columns(index);
}
inline std::string* Model_TrainingRun_TrainingOptions::mutable_time_series_id_columns(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
  return _impl_.time_series_id_columns_.Mutable(index);
}
inline void Model_TrainingRun_TrainingOptions::set_time_series_id_columns(int index, const std::string& value) {
  _impl_.time_series_id_columns_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline void Model_TrainingRun_TrainingOptions::set_time_series_id_columns(int index, std::string&& value) {
  _impl_.time_series_id_columns_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline void Model_TrainingRun_TrainingOptions::set_time_series_id_columns(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_id_columns_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline void Model_TrainingRun_TrainingOptions::set_time_series_id_columns(int index, const char* value, size_t size) {
  _impl_.time_series_id_columns_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline std::string* Model_TrainingRun_TrainingOptions::_internal_add_time_series_id_columns() {
  return _impl_.time_series_id_columns_.Add();
}
inline void Model_TrainingRun_TrainingOptions::add_time_series_id_columns(const std::string& value) {
  _impl_.time_series_id_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline void Model_TrainingRun_TrainingOptions::add_time_series_id_columns(std::string&& value) {
  _impl_.time_series_id_columns_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline void Model_TrainingRun_TrainingOptions::add_time_series_id_columns(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_id_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline void Model_TrainingRun_TrainingOptions::add_time_series_id_columns(const char* value, size_t size) {
  _impl_.time_series_id_columns_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Model_TrainingRun_TrainingOptions::time_series_id_columns() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
  return _impl_.time_series_id_columns_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Model_TrainingRun_TrainingOptions::mutable_time_series_id_columns() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.time_series_id_columns)
  return &_impl_.time_series_id_columns_;
}

// int64 horizon = 44;
inline void Model_TrainingRun_TrainingOptions::clear_horizon() {
  _impl_.horizon_ = int64_t{0};
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_horizon() const {
  return _impl_.horizon_;
}
inline int64_t Model_TrainingRun_TrainingOptions::horizon() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.horizon)
  return _internal_horizon();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_horizon(int64_t value) {
  
  _impl_.horizon_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_horizon(int64_t value) {
  _internal_set_horizon(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.horizon)
}

// bool preserve_input_structs = 45;
inline void Model_TrainingRun_TrainingOptions::clear_preserve_input_structs() {
  _impl_.preserve_input_structs_ = false;
}
inline bool Model_TrainingRun_TrainingOptions::_internal_preserve_input_structs() const {
  return _impl_.preserve_input_structs_;
}
inline bool Model_TrainingRun_TrainingOptions::preserve_input_structs() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.preserve_input_structs)
  return _internal_preserve_input_structs();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_preserve_input_structs(bool value) {
  
  _impl_.preserve_input_structs_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_preserve_input_structs(bool value) {
  _internal_set_preserve_input_structs(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.preserve_input_structs)
}

// int64 auto_arima_max_order = 46;
inline void Model_TrainingRun_TrainingOptions::clear_auto_arima_max_order() {
  _impl_.auto_arima_max_order_ = int64_t{0};
}
inline int64_t Model_TrainingRun_TrainingOptions::_internal_auto_arima_max_order() const {
  return _impl_.auto_arima_max_order_;
}
inline int64_t Model_TrainingRun_TrainingOptions::auto_arima_max_order() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.auto_arima_max_order)
  return _internal_auto_arima_max_order();
}
inline void Model_TrainingRun_TrainingOptions::_internal_set_auto_arima_max_order(int64_t value) {
  
  _impl_.auto_arima_max_order_ = value;
}
inline void Model_TrainingRun_TrainingOptions::set_auto_arima_max_order(int64_t value) {
  _internal_set_auto_arima_max_order(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.auto_arima_max_order)
}

// .google.protobuf.BoolValue decompose_time_series = 50;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_decompose_time_series() const {
  return this != internal_default_instance() && _impl_.decompose_time_series_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_decompose_time_series() const {
  return _internal_has_decompose_time_series();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::_internal_decompose_time_series() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.decompose_time_series_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::decompose_time_series() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.decompose_time_series)
  return _internal_decompose_time_series();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_decompose_time_series(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* decompose_time_series) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.decompose_time_series_);
  }
  _impl_.decompose_time_series_ = decompose_time_series;
  if (decompose_time_series) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.decompose_time_series)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::release_decompose_time_series() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.decompose_time_series_;
  _impl_.decompose_time_series_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_decompose_time_series() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.decompose_time_series)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.decompose_time_series_;
  _impl_.decompose_time_series_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::_internal_mutable_decompose_time_series() {
  
  if (_impl_.decompose_time_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.decompose_time_series_ = p;
  }
  return _impl_.decompose_time_series_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::mutable_decompose_time_series() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_decompose_time_series();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.decompose_time_series)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_decompose_time_series(::PROTOBUF_NAMESPACE_ID::BoolValue* decompose_time_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.decompose_time_series_);
  }
  if (decompose_time_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(decompose_time_series));
    if (message_arena != submessage_arena) {
      decompose_time_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, decompose_time_series, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.decompose_time_series_ = decompose_time_series;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.decompose_time_series)
}

// .google.protobuf.BoolValue clean_spikes_and_dips = 52;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_clean_spikes_and_dips() const {
  return this != internal_default_instance() && _impl_.clean_spikes_and_dips_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_clean_spikes_and_dips() const {
  return _internal_has_clean_spikes_and_dips();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::_internal_clean_spikes_and_dips() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.clean_spikes_and_dips_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::clean_spikes_and_dips() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.clean_spikes_and_dips)
  return _internal_clean_spikes_and_dips();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_clean_spikes_and_dips(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* clean_spikes_and_dips) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.clean_spikes_and_dips_);
  }
  _impl_.clean_spikes_and_dips_ = clean_spikes_and_dips;
  if (clean_spikes_and_dips) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.clean_spikes_and_dips)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::release_clean_spikes_and_dips() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.clean_spikes_and_dips_;
  _impl_.clean_spikes_and_dips_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_clean_spikes_and_dips() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.clean_spikes_and_dips)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.clean_spikes_and_dips_;
  _impl_.clean_spikes_and_dips_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::_internal_mutable_clean_spikes_and_dips() {
  
  if (_impl_.clean_spikes_and_dips_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.clean_spikes_and_dips_ = p;
  }
  return _impl_.clean_spikes_and_dips_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::mutable_clean_spikes_and_dips() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_clean_spikes_and_dips();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.clean_spikes_and_dips)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_clean_spikes_and_dips(::PROTOBUF_NAMESPACE_ID::BoolValue* clean_spikes_and_dips) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.clean_spikes_and_dips_);
  }
  if (clean_spikes_and_dips) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clean_spikes_and_dips));
    if (message_arena != submessage_arena) {
      clean_spikes_and_dips = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clean_spikes_and_dips, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.clean_spikes_and_dips_ = clean_spikes_and_dips;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.clean_spikes_and_dips)
}

// .google.protobuf.BoolValue adjust_step_changes = 53;
inline bool Model_TrainingRun_TrainingOptions::_internal_has_adjust_step_changes() const {
  return this != internal_default_instance() && _impl_.adjust_step_changes_ != nullptr;
}
inline bool Model_TrainingRun_TrainingOptions::has_adjust_step_changes() const {
  return _internal_has_adjust_step_changes();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::_internal_adjust_step_changes() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.adjust_step_changes_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_TrainingOptions::adjust_step_changes() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.adjust_step_changes)
  return _internal_adjust_step_changes();
}
inline void Model_TrainingRun_TrainingOptions::unsafe_arena_set_allocated_adjust_step_changes(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* adjust_step_changes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.adjust_step_changes_);
  }
  _impl_.adjust_step_changes_ = adjust_step_changes;
  if (adjust_step_changes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.adjust_step_changes)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::release_adjust_step_changes() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.adjust_step_changes_;
  _impl_.adjust_step_changes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::unsafe_arena_release_adjust_step_changes() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.adjust_step_changes)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.adjust_step_changes_;
  _impl_.adjust_step_changes_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::_internal_mutable_adjust_step_changes() {
  
  if (_impl_.adjust_step_changes_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.adjust_step_changes_ = p;
  }
  return _impl_.adjust_step_changes_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_TrainingOptions::mutable_adjust_step_changes() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_adjust_step_changes();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.adjust_step_changes)
  return _msg;
}
inline void Model_TrainingRun_TrainingOptions::set_allocated_adjust_step_changes(::PROTOBUF_NAMESPACE_ID::BoolValue* adjust_step_changes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.adjust_step_changes_);
  }
  if (adjust_step_changes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(adjust_step_changes));
    if (message_arena != submessage_arena) {
      adjust_step_changes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, adjust_step_changes, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.adjust_step_changes_ = adjust_step_changes;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions.adjust_step_changes)
}

// -------------------------------------------------------------------

// Model_TrainingRun_IterationResult_ClusterInfo

// int64 centroid_id = 1;
inline void Model_TrainingRun_IterationResult_ClusterInfo::clear_centroid_id() {
  _impl_.centroid_id_ = int64_t{0};
}
inline int64_t Model_TrainingRun_IterationResult_ClusterInfo::_internal_centroid_id() const {
  return _impl_.centroid_id_;
}
inline int64_t Model_TrainingRun_IterationResult_ClusterInfo::centroid_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.centroid_id)
  return _internal_centroid_id();
}
inline void Model_TrainingRun_IterationResult_ClusterInfo::_internal_set_centroid_id(int64_t value) {
  
  _impl_.centroid_id_ = value;
}
inline void Model_TrainingRun_IterationResult_ClusterInfo::set_centroid_id(int64_t value) {
  _internal_set_centroid_id(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.centroid_id)
}

// .google.protobuf.DoubleValue cluster_radius = 2;
inline bool Model_TrainingRun_IterationResult_ClusterInfo::_internal_has_cluster_radius() const {
  return this != internal_default_instance() && _impl_.cluster_radius_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ClusterInfo::has_cluster_radius() const {
  return _internal_has_cluster_radius();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_IterationResult_ClusterInfo::_internal_cluster_radius() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.cluster_radius_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_IterationResult_ClusterInfo::cluster_radius() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_radius)
  return _internal_cluster_radius();
}
inline void Model_TrainingRun_IterationResult_ClusterInfo::unsafe_arena_set_allocated_cluster_radius(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* cluster_radius) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cluster_radius_);
  }
  _impl_.cluster_radius_ = cluster_radius;
  if (cluster_radius) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_radius)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult_ClusterInfo::release_cluster_radius() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.cluster_radius_;
  _impl_.cluster_radius_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult_ClusterInfo::unsafe_arena_release_cluster_radius() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_radius)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.cluster_radius_;
  _impl_.cluster_radius_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult_ClusterInfo::_internal_mutable_cluster_radius() {
  
  if (_impl_.cluster_radius_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.cluster_radius_ = p;
  }
  return _impl_.cluster_radius_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult_ClusterInfo::mutable_cluster_radius() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_cluster_radius();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_radius)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ClusterInfo::set_allocated_cluster_radius(::PROTOBUF_NAMESPACE_ID::DoubleValue* cluster_radius) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cluster_radius_);
  }
  if (cluster_radius) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cluster_radius));
    if (message_arena != submessage_arena) {
      cluster_radius = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cluster_radius, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.cluster_radius_ = cluster_radius;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_radius)
}

// .google.protobuf.Int64Value cluster_size = 3;
inline bool Model_TrainingRun_IterationResult_ClusterInfo::_internal_has_cluster_size() const {
  return this != internal_default_instance() && _impl_.cluster_size_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ClusterInfo::has_cluster_size() const {
  return _internal_has_cluster_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_TrainingRun_IterationResult_ClusterInfo::_internal_cluster_size() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.cluster_size_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_TrainingRun_IterationResult_ClusterInfo::cluster_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_size)
  return _internal_cluster_size();
}
inline void Model_TrainingRun_IterationResult_ClusterInfo::unsafe_arena_set_allocated_cluster_size(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* cluster_size) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cluster_size_);
  }
  _impl_.cluster_size_ = cluster_size;
  if (cluster_size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_size)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult_ClusterInfo::release_cluster_size() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.cluster_size_;
  _impl_.cluster_size_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult_ClusterInfo::unsafe_arena_release_cluster_size() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_size)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.cluster_size_;
  _impl_.cluster_size_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult_ClusterInfo::_internal_mutable_cluster_size() {
  
  if (_impl_.cluster_size_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.cluster_size_ = p;
  }
  return _impl_.cluster_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult_ClusterInfo::mutable_cluster_size() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_cluster_size();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_size)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ClusterInfo::set_allocated_cluster_size(::PROTOBUF_NAMESPACE_ID::Int64Value* cluster_size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cluster_size_);
  }
  if (cluster_size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cluster_size));
    if (message_arena != submessage_arena) {
      cluster_size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cluster_size, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.cluster_size_ = cluster_size;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo.cluster_size)
}

// -------------------------------------------------------------------

// Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients

// repeated double auto_regressive_coefficients = 1;
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_auto_regressive_coefficients_size() const {
  return _impl_.auto_regressive_coefficients_.size();
}
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::auto_regressive_coefficients_size() const {
  return _internal_auto_regressive_coefficients_size();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::clear_auto_regressive_coefficients() {
  _impl_.auto_regressive_coefficients_.Clear();
}
inline double Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_auto_regressive_coefficients(int index) const {
  return _impl_.auto_regressive_coefficients_.Get(index);
}
inline double Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::auto_regressive_coefficients(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.auto_regressive_coefficients)
  return _internal_auto_regressive_coefficients(index);
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::set_auto_regressive_coefficients(int index, double value) {
  _impl_.auto_regressive_coefficients_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.auto_regressive_coefficients)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_add_auto_regressive_coefficients(double value) {
  _impl_.auto_regressive_coefficients_.Add(value);
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::add_auto_regressive_coefficients(double value) {
  _internal_add_auto_regressive_coefficients(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.auto_regressive_coefficients)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_auto_regressive_coefficients() const {
  return _impl_.auto_regressive_coefficients_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::auto_regressive_coefficients() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.auto_regressive_coefficients)
  return _internal_auto_regressive_coefficients();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_mutable_auto_regressive_coefficients() {
  return &_impl_.auto_regressive_coefficients_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::mutable_auto_regressive_coefficients() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.auto_regressive_coefficients)
  return _internal_mutable_auto_regressive_coefficients();
}

// repeated double moving_average_coefficients = 2;
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_moving_average_coefficients_size() const {
  return _impl_.moving_average_coefficients_.size();
}
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::moving_average_coefficients_size() const {
  return _internal_moving_average_coefficients_size();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::clear_moving_average_coefficients() {
  _impl_.moving_average_coefficients_.Clear();
}
inline double Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_moving_average_coefficients(int index) const {
  return _impl_.moving_average_coefficients_.Get(index);
}
inline double Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::moving_average_coefficients(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.moving_average_coefficients)
  return _internal_moving_average_coefficients(index);
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::set_moving_average_coefficients(int index, double value) {
  _impl_.moving_average_coefficients_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.moving_average_coefficients)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_add_moving_average_coefficients(double value) {
  _impl_.moving_average_coefficients_.Add(value);
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::add_moving_average_coefficients(double value) {
  _internal_add_moving_average_coefficients(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.moving_average_coefficients)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_moving_average_coefficients() const {
  return _impl_.moving_average_coefficients_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::moving_average_coefficients() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.moving_average_coefficients)
  return _internal_moving_average_coefficients();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_mutable_moving_average_coefficients() {
  return &_impl_.moving_average_coefficients_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::mutable_moving_average_coefficients() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.moving_average_coefficients)
  return _internal_mutable_moving_average_coefficients();
}

// double intercept_coefficient = 3;
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::clear_intercept_coefficient() {
  _impl_.intercept_coefficient_ = 0;
}
inline double Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_intercept_coefficient() const {
  return _impl_.intercept_coefficient_;
}
inline double Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::intercept_coefficient() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.intercept_coefficient)
  return _internal_intercept_coefficient();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::_internal_set_intercept_coefficient(double value) {
  
  _impl_.intercept_coefficient_ = value;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients::set_intercept_coefficient(double value) {
  _internal_set_intercept_coefficient(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients.intercept_coefficient)
}

// -------------------------------------------------------------------

// Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo

// .google.cloud.bigquery.v2.Model.ArimaOrder non_seasonal_order = 1;
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_non_seasonal_order() const {
  return this != internal_default_instance() && _impl_.non_seasonal_order_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_non_seasonal_order() const {
  return _internal_has_non_seasonal_order();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::clear_non_seasonal_order() {
  if (GetArenaForAllocation() == nullptr && _impl_.non_seasonal_order_ != nullptr) {
    delete _impl_.non_seasonal_order_;
  }
  _impl_.non_seasonal_order_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_non_seasonal_order() const {
  const ::google::cloud::bigquery::v2::Model_ArimaOrder* p = _impl_.non_seasonal_order_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_ArimaOrder&>(
      ::google::cloud::bigquery::v2::_Model_ArimaOrder_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaOrder& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::non_seasonal_order() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.non_seasonal_order)
  return _internal_non_seasonal_order();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_set_allocated_non_seasonal_order(
    ::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.non_seasonal_order_);
  }
  _impl_.non_seasonal_order_ = non_seasonal_order;
  if (non_seasonal_order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.non_seasonal_order)
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::release_non_seasonal_order() {
  
  ::google::cloud::bigquery::v2::Model_ArimaOrder* temp = _impl_.non_seasonal_order_;
  _impl_.non_seasonal_order_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_release_non_seasonal_order() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.non_seasonal_order)
  
  ::google::cloud::bigquery::v2::Model_ArimaOrder* temp = _impl_.non_seasonal_order_;
  _impl_.non_seasonal_order_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_non_seasonal_order() {
  
  if (_impl_.non_seasonal_order_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaOrder>(GetArenaForAllocation());
    _impl_.non_seasonal_order_ = p;
  }
  return _impl_.non_seasonal_order_;
}
inline ::google::cloud::bigquery::v2::Model_ArimaOrder* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_non_seasonal_order() {
  ::google::cloud::bigquery::v2::Model_ArimaOrder* _msg = _internal_mutable_non_seasonal_order();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.non_seasonal_order)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_allocated_non_seasonal_order(::google::cloud::bigquery::v2::Model_ArimaOrder* non_seasonal_order) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.non_seasonal_order_;
  }
  if (non_seasonal_order) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(non_seasonal_order);
    if (message_arena != submessage_arena) {
      non_seasonal_order = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, non_seasonal_order, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.non_seasonal_order_ = non_seasonal_order;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.non_seasonal_order)
}

// .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaCoefficients arima_coefficients = 2;
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_arima_coefficients() const {
  return this != internal_default_instance() && _impl_.arima_coefficients_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_arima_coefficients() const {
  return _internal_has_arima_coefficients();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::clear_arima_coefficients() {
  if (GetArenaForAllocation() == nullptr && _impl_.arima_coefficients_ != nullptr) {
    delete _impl_.arima_coefficients_;
  }
  _impl_.arima_coefficients_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_arima_coefficients() const {
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* p = _impl_.arima_coefficients_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients&>(
      ::google::cloud::bigquery::v2::_Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::arima_coefficients() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_coefficients)
  return _internal_arima_coefficients();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_set_allocated_arima_coefficients(
    ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* arima_coefficients) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.arima_coefficients_);
  }
  _impl_.arima_coefficients_ = arima_coefficients;
  if (arima_coefficients) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_coefficients)
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::release_arima_coefficients() {
  
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* temp = _impl_.arima_coefficients_;
  _impl_.arima_coefficients_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_release_arima_coefficients() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_coefficients)
  
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* temp = _impl_.arima_coefficients_;
  _impl_.arima_coefficients_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_arima_coefficients() {
  
  if (_impl_.arima_coefficients_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients>(GetArenaForAllocation());
    _impl_.arima_coefficients_ = p;
  }
  return _impl_.arima_coefficients_;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_arima_coefficients() {
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* _msg = _internal_mutable_arima_coefficients();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_coefficients)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_allocated_arima_coefficients(::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaCoefficients* arima_coefficients) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.arima_coefficients_;
  }
  if (arima_coefficients) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(arima_coefficients);
    if (message_arena != submessage_arena) {
      arima_coefficients = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arima_coefficients, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.arima_coefficients_ = arima_coefficients;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_coefficients)
}

// .google.cloud.bigquery.v2.Model.ArimaFittingMetrics arima_fitting_metrics = 3;
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_arima_fitting_metrics() const {
  return this != internal_default_instance() && _impl_.arima_fitting_metrics_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_arima_fitting_metrics() const {
  return _internal_has_arima_fitting_metrics();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::clear_arima_fitting_metrics() {
  if (GetArenaForAllocation() == nullptr && _impl_.arima_fitting_metrics_ != nullptr) {
    delete _impl_.arima_fitting_metrics_;
  }
  _impl_.arima_fitting_metrics_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_arima_fitting_metrics() const {
  const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* p = _impl_.arima_fitting_metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics&>(
      ::google::cloud::bigquery::v2::_Model_ArimaFittingMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::arima_fitting_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_fitting_metrics)
  return _internal_arima_fitting_metrics();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_set_allocated_arima_fitting_metrics(
    ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.arima_fitting_metrics_);
  }
  _impl_.arima_fitting_metrics_ = arima_fitting_metrics;
  if (arima_fitting_metrics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_fitting_metrics)
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::release_arima_fitting_metrics() {
  
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* temp = _impl_.arima_fitting_metrics_;
  _impl_.arima_fitting_metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_release_arima_fitting_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_fitting_metrics)
  
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* temp = _impl_.arima_fitting_metrics_;
  _impl_.arima_fitting_metrics_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_arima_fitting_metrics() {
  
  if (_impl_.arima_fitting_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_ArimaFittingMetrics>(GetArenaForAllocation());
    _impl_.arima_fitting_metrics_ = p;
  }
  return _impl_.arima_fitting_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_arima_fitting_metrics() {
  ::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* _msg = _internal_mutable_arima_fitting_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_fitting_metrics)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_allocated_arima_fitting_metrics(::google::cloud::bigquery::v2::Model_ArimaFittingMetrics* arima_fitting_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.arima_fitting_metrics_;
  }
  if (arima_fitting_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(arima_fitting_metrics);
    if (message_arena != submessage_arena) {
      arima_fitting_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arima_fitting_metrics, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.arima_fitting_metrics_ = arima_fitting_metrics;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.arima_fitting_metrics)
}

// bool has_drift = 4;
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::clear_has_drift() {
  _impl_.has_drift_ = false;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_drift() const {
  return _impl_.has_drift_;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_drift() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_drift)
  return _internal_has_drift();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_set_has_drift(bool value) {
  
  _impl_.has_drift_ = value;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_has_drift(bool value) {
  _internal_set_has_drift(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_drift)
}

// string time_series_id = 5;
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::clear_time_series_id() {
  _impl_.time_series_id_.ClearToEmpty();
}
inline const std::string& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::time_series_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_id)
  return _internal_time_series_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_time_series_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.time_series_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_id)
}
inline std::string* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_time_series_id() {
  std::string* _s = _internal_mutable_time_series_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_id)
  return _s;
}
inline const std::string& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_time_series_id() const {
  return _impl_.time_series_id_.Get();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_set_time_series_id(const std::string& value) {
  
  _impl_.time_series_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_time_series_id() {
  
  return _impl_.time_series_id_.Mutable(GetArenaForAllocation());
}
inline std::string* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::release_time_series_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_id)
  return _impl_.time_series_id_.Release();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_allocated_time_series_id(std::string* time_series_id) {
  if (time_series_id != nullptr) {
    
  } else {
    
  }
  _impl_.time_series_id_.SetAllocated(time_series_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.time_series_id_.IsDefault()) {
    _impl_.time_series_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_id)
}

// repeated string time_series_ids = 10;
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_time_series_ids_size() const {
  return _impl_.time_series_ids_.size();
}
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::time_series_ids_size() const {
  return _internal_time_series_ids_size();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::clear_time_series_ids() {
  _impl_.time_series_ids_.Clear();
}
inline std::string* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::add_time_series_ids() {
  std::string* _s = _internal_add_time_series_ids();
  // @@protoc_insertion_point(field_add_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
  return _s;
}
inline const std::string& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_time_series_ids(int index) const {
  return _impl_.time_series_ids_.Get(index);
}
inline const std::string& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::time_series_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
  return _internal_time_series_ids(index);
}
inline std::string* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_time_series_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
  return _impl_.time_series_ids_.Mutable(index);
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_time_series_ids(int index, const std::string& value) {
  _impl_.time_series_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_time_series_ids(int index, std::string&& value) {
  _impl_.time_series_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_time_series_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_time_series_ids(int index, const char* value, size_t size) {
  _impl_.time_series_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline std::string* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_add_time_series_ids() {
  return _impl_.time_series_ids_.Add();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::add_time_series_ids(const std::string& value) {
  _impl_.time_series_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::add_time_series_ids(std::string&& value) {
  _impl_.time_series_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::add_time_series_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.time_series_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::add_time_series_ids(const char* value, size_t size) {
  _impl_.time_series_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::time_series_ids() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
  return _impl_.time_series_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_time_series_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.time_series_ids)
  return &_impl_.time_series_ids_;
}

// repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 6;
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_seasonal_periods_size() const {
  return _impl_.seasonal_periods_.size();
}
inline int Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::seasonal_periods_size() const {
  return _internal_seasonal_periods_size();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::clear_seasonal_periods() {
  _impl_.seasonal_periods_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_seasonal_periods(int index) const {
  return static_cast< ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType >(_impl_.seasonal_periods_.Get(index));
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::seasonal_periods(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.seasonal_periods)
  return _internal_seasonal_periods(index);
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.seasonal_periods)
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Add(value);
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _internal_add_seasonal_periods(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.seasonal_periods)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::seasonal_periods() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.seasonal_periods)
  return _impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_seasonal_periods() {
  return &_impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_seasonal_periods() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.seasonal_periods)
  return _internal_mutable_seasonal_periods();
}

// .google.protobuf.BoolValue has_holiday_effect = 7;
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_has_holiday_effect() const {
  return this != internal_default_instance() && _impl_.has_holiday_effect_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_has_holiday_effect() const {
  return _internal_has_has_holiday_effect();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_holiday_effect() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.has_holiday_effect_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_holiday_effect() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_holiday_effect)
  return _internal_has_holiday_effect();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_set_allocated_has_holiday_effect(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_holiday_effect_);
  }
  _impl_.has_holiday_effect_ = has_holiday_effect;
  if (has_holiday_effect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_holiday_effect)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::release_has_holiday_effect() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_holiday_effect_;
  _impl_.has_holiday_effect_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_release_has_holiday_effect() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_holiday_effect)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_holiday_effect_;
  _impl_.has_holiday_effect_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_has_holiday_effect() {
  
  if (_impl_.has_holiday_effect_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.has_holiday_effect_ = p;
  }
  return _impl_.has_holiday_effect_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_has_holiday_effect() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_has_holiday_effect();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_holiday_effect)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_allocated_has_holiday_effect(::PROTOBUF_NAMESPACE_ID::BoolValue* has_holiday_effect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_holiday_effect_);
  }
  if (has_holiday_effect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(has_holiday_effect));
    if (message_arena != submessage_arena) {
      has_holiday_effect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, has_holiday_effect, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.has_holiday_effect_ = has_holiday_effect;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_holiday_effect)
}

// .google.protobuf.BoolValue has_spikes_and_dips = 8;
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_has_spikes_and_dips() const {
  return this != internal_default_instance() && _impl_.has_spikes_and_dips_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_has_spikes_and_dips() const {
  return _internal_has_has_spikes_and_dips();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_spikes_and_dips() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.has_spikes_and_dips_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_spikes_and_dips() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_spikes_and_dips)
  return _internal_has_spikes_and_dips();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_set_allocated_has_spikes_and_dips(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_spikes_and_dips_);
  }
  _impl_.has_spikes_and_dips_ = has_spikes_and_dips;
  if (has_spikes_and_dips) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_spikes_and_dips)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::release_has_spikes_and_dips() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_spikes_and_dips_;
  _impl_.has_spikes_and_dips_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_release_has_spikes_and_dips() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_spikes_and_dips)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_spikes_and_dips_;
  _impl_.has_spikes_and_dips_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_has_spikes_and_dips() {
  
  if (_impl_.has_spikes_and_dips_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.has_spikes_and_dips_ = p;
  }
  return _impl_.has_spikes_and_dips_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_has_spikes_and_dips() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_has_spikes_and_dips();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_spikes_and_dips)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_allocated_has_spikes_and_dips(::PROTOBUF_NAMESPACE_ID::BoolValue* has_spikes_and_dips) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_spikes_and_dips_);
  }
  if (has_spikes_and_dips) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(has_spikes_and_dips));
    if (message_arena != submessage_arena) {
      has_spikes_and_dips = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, has_spikes_and_dips, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.has_spikes_and_dips_ = has_spikes_and_dips;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_spikes_and_dips)
}

// .google.protobuf.BoolValue has_step_changes = 9;
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_has_step_changes() const {
  return this != internal_default_instance() && _impl_.has_step_changes_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_has_step_changes() const {
  return _internal_has_has_step_changes();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_has_step_changes() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.has_step_changes_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::has_step_changes() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_step_changes)
  return _internal_has_step_changes();
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_set_allocated_has_step_changes(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_step_changes_);
  }
  _impl_.has_step_changes_ = has_step_changes;
  if (has_step_changes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_step_changes)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::release_has_step_changes() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_step_changes_;
  _impl_.has_step_changes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::unsafe_arena_release_has_step_changes() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_step_changes)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.has_step_changes_;
  _impl_.has_step_changes_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::_internal_mutable_has_step_changes() {
  
  if (_impl_.has_step_changes_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.has_step_changes_ = p;
  }
  return _impl_.has_step_changes_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::mutable_has_step_changes() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_has_step_changes();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_step_changes)
  return _msg;
}
inline void Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo::set_allocated_has_step_changes(::PROTOBUF_NAMESPACE_ID::BoolValue* has_step_changes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.has_step_changes_);
  }
  if (has_step_changes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(has_step_changes));
    if (message_arena != submessage_arena) {
      has_step_changes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, has_step_changes, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.has_step_changes_ = has_step_changes;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo.has_step_changes)
}

// -------------------------------------------------------------------

// Model_TrainingRun_IterationResult_ArimaResult

// repeated .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.ArimaModelInfo arima_model_info = 1;
inline int Model_TrainingRun_IterationResult_ArimaResult::_internal_arima_model_info_size() const {
  return _impl_.arima_model_info_.size();
}
inline int Model_TrainingRun_IterationResult_ArimaResult::arima_model_info_size() const {
  return _internal_arima_model_info_size();
}
inline void Model_TrainingRun_IterationResult_ArimaResult::clear_arima_model_info() {
  _impl_.arima_model_info_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* Model_TrainingRun_IterationResult_ArimaResult::mutable_arima_model_info(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.arima_model_info)
  return _impl_.arima_model_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo >*
Model_TrainingRun_IterationResult_ArimaResult::mutable_arima_model_info() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.arima_model_info)
  return &_impl_.arima_model_info_;
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& Model_TrainingRun_IterationResult_ArimaResult::_internal_arima_model_info(int index) const {
  return _impl_.arima_model_info_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo& Model_TrainingRun_IterationResult_ArimaResult::arima_model_info(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.arima_model_info)
  return _internal_arima_model_info(index);
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* Model_TrainingRun_IterationResult_ArimaResult::_internal_add_arima_model_info() {
  return _impl_.arima_model_info_.Add();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* Model_TrainingRun_IterationResult_ArimaResult::add_arima_model_info() {
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo* _add = _internal_add_arima_model_info();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.arima_model_info)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult_ArimaModelInfo >&
Model_TrainingRun_IterationResult_ArimaResult::arima_model_info() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.arima_model_info)
  return _impl_.arima_model_info_;
}

// repeated .google.cloud.bigquery.v2.Model.SeasonalPeriod.SeasonalPeriodType seasonal_periods = 2;
inline int Model_TrainingRun_IterationResult_ArimaResult::_internal_seasonal_periods_size() const {
  return _impl_.seasonal_periods_.size();
}
inline int Model_TrainingRun_IterationResult_ArimaResult::seasonal_periods_size() const {
  return _internal_seasonal_periods_size();
}
inline void Model_TrainingRun_IterationResult_ArimaResult::clear_seasonal_periods() {
  _impl_.seasonal_periods_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_TrainingRun_IterationResult_ArimaResult::_internal_seasonal_periods(int index) const {
  return static_cast< ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType >(_impl_.seasonal_periods_.Get(index));
}
inline ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType Model_TrainingRun_IterationResult_ArimaResult::seasonal_periods(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.seasonal_periods)
  return _internal_seasonal_periods(index);
}
inline void Model_TrainingRun_IterationResult_ArimaResult::set_seasonal_periods(int index, ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.seasonal_periods)
}
inline void Model_TrainingRun_IterationResult_ArimaResult::_internal_add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _impl_.seasonal_periods_.Add(value);
}
inline void Model_TrainingRun_IterationResult_ArimaResult::add_seasonal_periods(::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType value) {
  _internal_add_seasonal_periods(value);
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.seasonal_periods)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
Model_TrainingRun_IterationResult_ArimaResult::seasonal_periods() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.seasonal_periods)
  return _impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_TrainingRun_IterationResult_ArimaResult::_internal_mutable_seasonal_periods() {
  return &_impl_.seasonal_periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Model_TrainingRun_IterationResult_ArimaResult::mutable_seasonal_periods() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult.seasonal_periods)
  return _internal_mutable_seasonal_periods();
}

// -------------------------------------------------------------------

// Model_TrainingRun_IterationResult

// .google.protobuf.Int32Value index = 1;
inline bool Model_TrainingRun_IterationResult::_internal_has_index() const {
  return this != internal_default_instance() && _impl_.index_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult::has_index() const {
  return _internal_has_index();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int32Value& Model_TrainingRun_IterationResult::_internal_index() const {
  const ::PROTOBUF_NAMESPACE_ID::Int32Value* p = _impl_.index_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int32Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int32Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int32Value& Model_TrainingRun_IterationResult::index() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.index)
  return _internal_index();
}
inline void Model_TrainingRun_IterationResult::unsafe_arena_set_allocated_index(
    ::PROTOBUF_NAMESPACE_ID::Int32Value* index) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.index_);
  }
  _impl_.index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.index)
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* Model_TrainingRun_IterationResult::release_index() {
  
  ::PROTOBUF_NAMESPACE_ID::Int32Value* temp = _impl_.index_;
  _impl_.index_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* Model_TrainingRun_IterationResult::unsafe_arena_release_index() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.index)
  
  ::PROTOBUF_NAMESPACE_ID::Int32Value* temp = _impl_.index_;
  _impl_.index_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* Model_TrainingRun_IterationResult::_internal_mutable_index() {
  
  if (_impl_.index_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int32Value>(GetArenaForAllocation());
    _impl_.index_ = p;
  }
  return _impl_.index_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* Model_TrainingRun_IterationResult::mutable_index() {
  ::PROTOBUF_NAMESPACE_ID::Int32Value* _msg = _internal_mutable_index();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.index)
  return _msg;
}
inline void Model_TrainingRun_IterationResult::set_allocated_index(::PROTOBUF_NAMESPACE_ID::Int32Value* index) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.index_);
  }
  if (index) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(index));
    if (message_arena != submessage_arena) {
      index = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.index_ = index;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.index)
}

// .google.protobuf.Int64Value duration_ms = 4;
inline bool Model_TrainingRun_IterationResult::_internal_has_duration_ms() const {
  return this != internal_default_instance() && _impl_.duration_ms_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult::has_duration_ms() const {
  return _internal_has_duration_ms();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_TrainingRun_IterationResult::_internal_duration_ms() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.duration_ms_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& Model_TrainingRun_IterationResult::duration_ms() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.duration_ms)
  return _internal_duration_ms();
}
inline void Model_TrainingRun_IterationResult::unsafe_arena_set_allocated_duration_ms(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* duration_ms) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.duration_ms_);
  }
  _impl_.duration_ms_ = duration_ms;
  if (duration_ms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.duration_ms)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult::release_duration_ms() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.duration_ms_;
  _impl_.duration_ms_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult::unsafe_arena_release_duration_ms() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.duration_ms)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.duration_ms_;
  _impl_.duration_ms_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult::_internal_mutable_duration_ms() {
  
  if (_impl_.duration_ms_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.duration_ms_ = p;
  }
  return _impl_.duration_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* Model_TrainingRun_IterationResult::mutable_duration_ms() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_duration_ms();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.duration_ms)
  return _msg;
}
inline void Model_TrainingRun_IterationResult::set_allocated_duration_ms(::PROTOBUF_NAMESPACE_ID::Int64Value* duration_ms) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.duration_ms_);
  }
  if (duration_ms) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_ms));
    if (message_arena != submessage_arena) {
      duration_ms = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, duration_ms, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.duration_ms_ = duration_ms;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.duration_ms)
}

// .google.protobuf.DoubleValue training_loss = 5;
inline bool Model_TrainingRun_IterationResult::_internal_has_training_loss() const {
  return this != internal_default_instance() && _impl_.training_loss_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult::has_training_loss() const {
  return _internal_has_training_loss();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_IterationResult::_internal_training_loss() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.training_loss_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_IterationResult::training_loss() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.training_loss)
  return _internal_training_loss();
}
inline void Model_TrainingRun_IterationResult::unsafe_arena_set_allocated_training_loss(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* training_loss) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.training_loss_);
  }
  _impl_.training_loss_ = training_loss;
  if (training_loss) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.training_loss)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::release_training_loss() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.training_loss_;
  _impl_.training_loss_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::unsafe_arena_release_training_loss() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.training_loss)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.training_loss_;
  _impl_.training_loss_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::_internal_mutable_training_loss() {
  
  if (_impl_.training_loss_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.training_loss_ = p;
  }
  return _impl_.training_loss_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::mutable_training_loss() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_training_loss();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.training_loss)
  return _msg;
}
inline void Model_TrainingRun_IterationResult::set_allocated_training_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* training_loss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.training_loss_);
  }
  if (training_loss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(training_loss));
    if (message_arena != submessage_arena) {
      training_loss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, training_loss, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.training_loss_ = training_loss;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.training_loss)
}

// .google.protobuf.DoubleValue eval_loss = 6;
inline bool Model_TrainingRun_IterationResult::_internal_has_eval_loss() const {
  return this != internal_default_instance() && _impl_.eval_loss_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult::has_eval_loss() const {
  return _internal_has_eval_loss();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_IterationResult::_internal_eval_loss() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.eval_loss_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& Model_TrainingRun_IterationResult::eval_loss() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.eval_loss)
  return _internal_eval_loss();
}
inline void Model_TrainingRun_IterationResult::unsafe_arena_set_allocated_eval_loss(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* eval_loss) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.eval_loss_);
  }
  _impl_.eval_loss_ = eval_loss;
  if (eval_loss) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.eval_loss)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::release_eval_loss() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.eval_loss_;
  _impl_.eval_loss_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::unsafe_arena_release_eval_loss() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.eval_loss)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.eval_loss_;
  _impl_.eval_loss_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::_internal_mutable_eval_loss() {
  
  if (_impl_.eval_loss_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.eval_loss_ = p;
  }
  return _impl_.eval_loss_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* Model_TrainingRun_IterationResult::mutable_eval_loss() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_eval_loss();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.eval_loss)
  return _msg;
}
inline void Model_TrainingRun_IterationResult::set_allocated_eval_loss(::PROTOBUF_NAMESPACE_ID::DoubleValue* eval_loss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.eval_loss_);
  }
  if (eval_loss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eval_loss));
    if (message_arena != submessage_arena) {
      eval_loss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, eval_loss, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.eval_loss_ = eval_loss;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.eval_loss)
}

// double learn_rate = 7;
inline void Model_TrainingRun_IterationResult::clear_learn_rate() {
  _impl_.learn_rate_ = 0;
}
inline double Model_TrainingRun_IterationResult::_internal_learn_rate() const {
  return _impl_.learn_rate_;
}
inline double Model_TrainingRun_IterationResult::learn_rate() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.learn_rate)
  return _internal_learn_rate();
}
inline void Model_TrainingRun_IterationResult::_internal_set_learn_rate(double value) {
  
  _impl_.learn_rate_ = value;
}
inline void Model_TrainingRun_IterationResult::set_learn_rate(double value) {
  _internal_set_learn_rate(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.learn_rate)
}

// repeated .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ClusterInfo cluster_infos = 8;
inline int Model_TrainingRun_IterationResult::_internal_cluster_infos_size() const {
  return _impl_.cluster_infos_.size();
}
inline int Model_TrainingRun_IterationResult::cluster_infos_size() const {
  return _internal_cluster_infos_size();
}
inline void Model_TrainingRun_IterationResult::clear_cluster_infos() {
  _impl_.cluster_infos_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* Model_TrainingRun_IterationResult::mutable_cluster_infos(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.cluster_infos)
  return _impl_.cluster_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo >*
Model_TrainingRun_IterationResult::mutable_cluster_infos() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.cluster_infos)
  return &_impl_.cluster_infos_;
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo& Model_TrainingRun_IterationResult::_internal_cluster_infos(int index) const {
  return _impl_.cluster_infos_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo& Model_TrainingRun_IterationResult::cluster_infos(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.cluster_infos)
  return _internal_cluster_infos(index);
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* Model_TrainingRun_IterationResult::_internal_add_cluster_infos() {
  return _impl_.cluster_infos_.Add();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* Model_TrainingRun_IterationResult::add_cluster_infos() {
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo* _add = _internal_add_cluster_infos();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.cluster_infos)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ClusterInfo >&
Model_TrainingRun_IterationResult::cluster_infos() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.cluster_infos)
  return _impl_.cluster_infos_;
}

// .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.ArimaResult arima_result = 9;
inline bool Model_TrainingRun_IterationResult::_internal_has_arima_result() const {
  return this != internal_default_instance() && _impl_.arima_result_ != nullptr;
}
inline bool Model_TrainingRun_IterationResult::has_arima_result() const {
  return _internal_has_arima_result();
}
inline void Model_TrainingRun_IterationResult::clear_arima_result() {
  if (GetArenaForAllocation() == nullptr && _impl_.arima_result_ != nullptr) {
    delete _impl_.arima_result_;
  }
  _impl_.arima_result_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult& Model_TrainingRun_IterationResult::_internal_arima_result() const {
  const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* p = _impl_.arima_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult&>(
      ::google::cloud::bigquery::v2::_Model_TrainingRun_IterationResult_ArimaResult_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult& Model_TrainingRun_IterationResult::arima_result() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.arima_result)
  return _internal_arima_result();
}
inline void Model_TrainingRun_IterationResult::unsafe_arena_set_allocated_arima_result(
    ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* arima_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.arima_result_);
  }
  _impl_.arima_result_ = arima_result;
  if (arima_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.arima_result)
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* Model_TrainingRun_IterationResult::release_arima_result() {
  
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* temp = _impl_.arima_result_;
  _impl_.arima_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* Model_TrainingRun_IterationResult::unsafe_arena_release_arima_result() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.arima_result)
  
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* temp = _impl_.arima_result_;
  _impl_.arima_result_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* Model_TrainingRun_IterationResult::_internal_mutable_arima_result() {
  
  if (_impl_.arima_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult>(GetArenaForAllocation());
    _impl_.arima_result_ = p;
  }
  return _impl_.arima_result_;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* Model_TrainingRun_IterationResult::mutable_arima_result() {
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* _msg = _internal_mutable_arima_result();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.arima_result)
  return _msg;
}
inline void Model_TrainingRun_IterationResult::set_allocated_arima_result(::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult_ArimaResult* arima_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.arima_result_;
  }
  if (arima_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(arima_result);
    if (message_arena != submessage_arena) {
      arima_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arima_result, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.arima_result_ = arima_result;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.IterationResult.arima_result)
}

// -------------------------------------------------------------------

// Model_TrainingRun

// .google.cloud.bigquery.v2.Model.TrainingRun.TrainingOptions training_options = 1;
inline bool Model_TrainingRun::_internal_has_training_options() const {
  return this != internal_default_instance() && _impl_.training_options_ != nullptr;
}
inline bool Model_TrainingRun::has_training_options() const {
  return _internal_has_training_options();
}
inline void Model_TrainingRun::clear_training_options() {
  if (GetArenaForAllocation() == nullptr && _impl_.training_options_ != nullptr) {
    delete _impl_.training_options_;
  }
  _impl_.training_options_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions& Model_TrainingRun::_internal_training_options() const {
  const ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* p = _impl_.training_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions&>(
      ::google::cloud::bigquery::v2::_Model_TrainingRun_TrainingOptions_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions& Model_TrainingRun::training_options() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.training_options)
  return _internal_training_options();
}
inline void Model_TrainingRun::unsafe_arena_set_allocated_training_options(
    ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* training_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.training_options_);
  }
  _impl_.training_options_ = training_options;
  if (training_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.training_options)
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* Model_TrainingRun::release_training_options() {
  
  ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* temp = _impl_.training_options_;
  _impl_.training_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* Model_TrainingRun::unsafe_arena_release_training_options() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.training_options)
  
  ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* temp = _impl_.training_options_;
  _impl_.training_options_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* Model_TrainingRun::_internal_mutable_training_options() {
  
  if (_impl_.training_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions>(GetArenaForAllocation());
    _impl_.training_options_ = p;
  }
  return _impl_.training_options_;
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* Model_TrainingRun::mutable_training_options() {
  ::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* _msg = _internal_mutable_training_options();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.training_options)
  return _msg;
}
inline void Model_TrainingRun::set_allocated_training_options(::google::cloud::bigquery::v2::Model_TrainingRun_TrainingOptions* training_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.training_options_;
  }
  if (training_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(training_options);
    if (message_arena != submessage_arena) {
      training_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, training_options, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.training_options_ = training_options;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.training_options)
}

// .google.protobuf.Timestamp start_time = 8;
inline bool Model_TrainingRun::_internal_has_start_time() const {
  return this != internal_default_instance() && _impl_.start_time_ != nullptr;
}
inline bool Model_TrainingRun::has_start_time() const {
  return _internal_has_start_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& Model_TrainingRun::_internal_start_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.start_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& Model_TrainingRun::start_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.start_time)
  return _internal_start_time();
}
inline void Model_TrainingRun::unsafe_arena_set_allocated_start_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* start_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.start_time_);
  }
  _impl_.start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.start_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Model_TrainingRun::release_start_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Model_TrainingRun::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.start_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Model_TrainingRun::_internal_mutable_start_time() {
  
  if (_impl_.start_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.start_time_ = p;
  }
  return _impl_.start_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Model_TrainingRun::mutable_start_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.start_time)
  return _msg;
}
inline void Model_TrainingRun::set_allocated_start_time(::PROTOBUF_NAMESPACE_ID::Timestamp* start_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.start_time_);
  }
  if (start_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_time));
    if (message_arena != submessage_arena) {
      start_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.start_time)
}

// repeated .google.cloud.bigquery.v2.Model.TrainingRun.IterationResult results = 6;
inline int Model_TrainingRun::_internal_results_size() const {
  return _impl_.results_.size();
}
inline int Model_TrainingRun::results_size() const {
  return _internal_results_size();
}
inline void Model_TrainingRun::clear_results() {
  _impl_.results_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* Model_TrainingRun::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.results)
  return _impl_.results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult >*
Model_TrainingRun::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.results)
  return &_impl_.results_;
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult& Model_TrainingRun::_internal_results(int index) const {
  return _impl_.results_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult& Model_TrainingRun::results(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.results)
  return _internal_results(index);
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* Model_TrainingRun::_internal_add_results() {
  return _impl_.results_.Add();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* Model_TrainingRun::add_results() {
  ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult* _add = _internal_add_results();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.results)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun_IterationResult >&
Model_TrainingRun::results() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.results)
  return _impl_.results_;
}

// .google.cloud.bigquery.v2.Model.EvaluationMetrics evaluation_metrics = 7;
inline bool Model_TrainingRun::_internal_has_evaluation_metrics() const {
  return this != internal_default_instance() && _impl_.evaluation_metrics_ != nullptr;
}
inline bool Model_TrainingRun::has_evaluation_metrics() const {
  return _internal_has_evaluation_metrics();
}
inline void Model_TrainingRun::clear_evaluation_metrics() {
  if (GetArenaForAllocation() == nullptr && _impl_.evaluation_metrics_ != nullptr) {
    delete _impl_.evaluation_metrics_;
  }
  _impl_.evaluation_metrics_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_EvaluationMetrics& Model_TrainingRun::_internal_evaluation_metrics() const {
  const ::google::cloud::bigquery::v2::Model_EvaluationMetrics* p = _impl_.evaluation_metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_EvaluationMetrics&>(
      ::google::cloud::bigquery::v2::_Model_EvaluationMetrics_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_EvaluationMetrics& Model_TrainingRun::evaluation_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.evaluation_metrics)
  return _internal_evaluation_metrics();
}
inline void Model_TrainingRun::unsafe_arena_set_allocated_evaluation_metrics(
    ::google::cloud::bigquery::v2::Model_EvaluationMetrics* evaluation_metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.evaluation_metrics_);
  }
  _impl_.evaluation_metrics_ = evaluation_metrics;
  if (evaluation_metrics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.evaluation_metrics)
}
inline ::google::cloud::bigquery::v2::Model_EvaluationMetrics* Model_TrainingRun::release_evaluation_metrics() {
  
  ::google::cloud::bigquery::v2::Model_EvaluationMetrics* temp = _impl_.evaluation_metrics_;
  _impl_.evaluation_metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_EvaluationMetrics* Model_TrainingRun::unsafe_arena_release_evaluation_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.evaluation_metrics)
  
  ::google::cloud::bigquery::v2::Model_EvaluationMetrics* temp = _impl_.evaluation_metrics_;
  _impl_.evaluation_metrics_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_EvaluationMetrics* Model_TrainingRun::_internal_mutable_evaluation_metrics() {
  
  if (_impl_.evaluation_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_EvaluationMetrics>(GetArenaForAllocation());
    _impl_.evaluation_metrics_ = p;
  }
  return _impl_.evaluation_metrics_;
}
inline ::google::cloud::bigquery::v2::Model_EvaluationMetrics* Model_TrainingRun::mutable_evaluation_metrics() {
  ::google::cloud::bigquery::v2::Model_EvaluationMetrics* _msg = _internal_mutable_evaluation_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.evaluation_metrics)
  return _msg;
}
inline void Model_TrainingRun::set_allocated_evaluation_metrics(::google::cloud::bigquery::v2::Model_EvaluationMetrics* evaluation_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.evaluation_metrics_;
  }
  if (evaluation_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(evaluation_metrics);
    if (message_arena != submessage_arena) {
      evaluation_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, evaluation_metrics, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.evaluation_metrics_ = evaluation_metrics;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.evaluation_metrics)
}

// .google.cloud.bigquery.v2.Model.DataSplitResult data_split_result = 9;
inline bool Model_TrainingRun::_internal_has_data_split_result() const {
  return this != internal_default_instance() && _impl_.data_split_result_ != nullptr;
}
inline bool Model_TrainingRun::has_data_split_result() const {
  return _internal_has_data_split_result();
}
inline void Model_TrainingRun::clear_data_split_result() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_split_result_ != nullptr) {
    delete _impl_.data_split_result_;
  }
  _impl_.data_split_result_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model_DataSplitResult& Model_TrainingRun::_internal_data_split_result() const {
  const ::google::cloud::bigquery::v2::Model_DataSplitResult* p = _impl_.data_split_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model_DataSplitResult&>(
      ::google::cloud::bigquery::v2::_Model_DataSplitResult_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model_DataSplitResult& Model_TrainingRun::data_split_result() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.data_split_result)
  return _internal_data_split_result();
}
inline void Model_TrainingRun::unsafe_arena_set_allocated_data_split_result(
    ::google::cloud::bigquery::v2::Model_DataSplitResult* data_split_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_split_result_);
  }
  _impl_.data_split_result_ = data_split_result;
  if (data_split_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.data_split_result)
}
inline ::google::cloud::bigquery::v2::Model_DataSplitResult* Model_TrainingRun::release_data_split_result() {
  
  ::google::cloud::bigquery::v2::Model_DataSplitResult* temp = _impl_.data_split_result_;
  _impl_.data_split_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_DataSplitResult* Model_TrainingRun::unsafe_arena_release_data_split_result() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.TrainingRun.data_split_result)
  
  ::google::cloud::bigquery::v2::Model_DataSplitResult* temp = _impl_.data_split_result_;
  _impl_.data_split_result_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model_DataSplitResult* Model_TrainingRun::_internal_mutable_data_split_result() {
  
  if (_impl_.data_split_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model_DataSplitResult>(GetArenaForAllocation());
    _impl_.data_split_result_ = p;
  }
  return _impl_.data_split_result_;
}
inline ::google::cloud::bigquery::v2::Model_DataSplitResult* Model_TrainingRun::mutable_data_split_result() {
  ::google::cloud::bigquery::v2::Model_DataSplitResult* _msg = _internal_mutable_data_split_result();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.data_split_result)
  return _msg;
}
inline void Model_TrainingRun::set_allocated_data_split_result(::google::cloud::bigquery::v2::Model_DataSplitResult* data_split_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.data_split_result_;
  }
  if (data_split_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(data_split_result);
    if (message_arena != submessage_arena) {
      data_split_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_split_result, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.data_split_result_ = data_split_result;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.TrainingRun.data_split_result)
}

// repeated .google.cloud.bigquery.v2.Model.GlobalExplanation global_explanations = 10;
inline int Model_TrainingRun::_internal_global_explanations_size() const {
  return _impl_.global_explanations_.size();
}
inline int Model_TrainingRun::global_explanations_size() const {
  return _internal_global_explanations_size();
}
inline void Model_TrainingRun::clear_global_explanations() {
  _impl_.global_explanations_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_GlobalExplanation* Model_TrainingRun::mutable_global_explanations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.TrainingRun.global_explanations)
  return _impl_.global_explanations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation >*
Model_TrainingRun::mutable_global_explanations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.TrainingRun.global_explanations)
  return &_impl_.global_explanations_;
}
inline const ::google::cloud::bigquery::v2::Model_GlobalExplanation& Model_TrainingRun::_internal_global_explanations(int index) const {
  return _impl_.global_explanations_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_GlobalExplanation& Model_TrainingRun::global_explanations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.TrainingRun.global_explanations)
  return _internal_global_explanations(index);
}
inline ::google::cloud::bigquery::v2::Model_GlobalExplanation* Model_TrainingRun::_internal_add_global_explanations() {
  return _impl_.global_explanations_.Add();
}
inline ::google::cloud::bigquery::v2::Model_GlobalExplanation* Model_TrainingRun::add_global_explanations() {
  ::google::cloud::bigquery::v2::Model_GlobalExplanation* _add = _internal_add_global_explanations();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.TrainingRun.global_explanations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_GlobalExplanation >&
Model_TrainingRun::global_explanations() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.TrainingRun.global_explanations)
  return _impl_.global_explanations_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Model

// string etag = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Model::clear_etag() {
  _impl_.etag_.ClearToEmpty();
}
inline const std::string& Model::etag() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.etag)
  return _internal_etag();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model::set_etag(ArgT0&& arg0, ArgT... args) {
 
 _impl_.etag_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.etag)
}
inline std::string* Model::mutable_etag() {
  std::string* _s = _internal_mutable_etag();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.etag)
  return _s;
}
inline const std::string& Model::_internal_etag() const {
  return _impl_.etag_.Get();
}
inline void Model::_internal_set_etag(const std::string& value) {
  
  _impl_.etag_.Set(value, GetArenaForAllocation());
}
inline std::string* Model::_internal_mutable_etag() {
  
  return _impl_.etag_.Mutable(GetArenaForAllocation());
}
inline std::string* Model::release_etag() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.etag)
  return _impl_.etag_.Release();
}
inline void Model::set_allocated_etag(std::string* etag) {
  if (etag != nullptr) {
    
  } else {
    
  }
  _impl_.etag_.SetAllocated(etag, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.etag_.IsDefault()) {
    _impl_.etag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.etag)
}

// .google.cloud.bigquery.v2.ModelReference model_reference = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool Model::_internal_has_model_reference() const {
  return this != internal_default_instance() && _impl_.model_reference_ != nullptr;
}
inline bool Model::has_model_reference() const {
  return _internal_has_model_reference();
}
inline const ::google::cloud::bigquery::v2::ModelReference& Model::_internal_model_reference() const {
  const ::google::cloud::bigquery::v2::ModelReference* p = _impl_.model_reference_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::ModelReference&>(
      ::google::cloud::bigquery::v2::_ModelReference_default_instance_);
}
inline const ::google::cloud::bigquery::v2::ModelReference& Model::model_reference() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.model_reference)
  return _internal_model_reference();
}
inline void Model::unsafe_arena_set_allocated_model_reference(
    ::google::cloud::bigquery::v2::ModelReference* model_reference) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.model_reference_);
  }
  _impl_.model_reference_ = model_reference;
  if (model_reference) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.model_reference)
}
inline ::google::cloud::bigquery::v2::ModelReference* Model::release_model_reference() {
  
  ::google::cloud::bigquery::v2::ModelReference* temp = _impl_.model_reference_;
  _impl_.model_reference_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::ModelReference* Model::unsafe_arena_release_model_reference() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.model_reference)
  
  ::google::cloud::bigquery::v2::ModelReference* temp = _impl_.model_reference_;
  _impl_.model_reference_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::ModelReference* Model::_internal_mutable_model_reference() {
  
  if (_impl_.model_reference_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::ModelReference>(GetArenaForAllocation());
    _impl_.model_reference_ = p;
  }
  return _impl_.model_reference_;
}
inline ::google::cloud::bigquery::v2::ModelReference* Model::mutable_model_reference() {
  ::google::cloud::bigquery::v2::ModelReference* _msg = _internal_mutable_model_reference();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.model_reference)
  return _msg;
}
inline void Model::set_allocated_model_reference(::google::cloud::bigquery::v2::ModelReference* model_reference) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.model_reference_);
  }
  if (model_reference) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_reference));
    if (message_arena != submessage_arena) {
      model_reference = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_reference, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.model_reference_ = model_reference;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.model_reference)
}

// int64 creation_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Model::clear_creation_time() {
  _impl_.creation_time_ = int64_t{0};
}
inline int64_t Model::_internal_creation_time() const {
  return _impl_.creation_time_;
}
inline int64_t Model::creation_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.creation_time)
  return _internal_creation_time();
}
inline void Model::_internal_set_creation_time(int64_t value) {
  
  _impl_.creation_time_ = value;
}
inline void Model::set_creation_time(int64_t value) {
  _internal_set_creation_time(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.creation_time)
}

// int64 last_modified_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Model::clear_last_modified_time() {
  _impl_.last_modified_time_ = int64_t{0};
}
inline int64_t Model::_internal_last_modified_time() const {
  return _impl_.last_modified_time_;
}
inline int64_t Model::last_modified_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.last_modified_time)
  return _internal_last_modified_time();
}
inline void Model::_internal_set_last_modified_time(int64_t value) {
  
  _impl_.last_modified_time_ = value;
}
inline void Model::set_last_modified_time(int64_t value) {
  _internal_set_last_modified_time(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.last_modified_time)
}

// string description = 12 [(.google.api.field_behavior) = OPTIONAL];
inline void Model::clear_description() {
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Model::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model::set_description(ArgT0&& arg0, ArgT... args) {
 
 _impl_.description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.description)
}
inline std::string* Model::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.description)
  return _s;
}
inline const std::string& Model::_internal_description() const {
  return _impl_.description_.Get();
}
inline void Model::_internal_set_description(const std::string& value) {
  
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* Model::_internal_mutable_description() {
  
  return _impl_.description_.Mutable(GetArenaForAllocation());
}
inline std::string* Model::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.description)
  return _impl_.description_.Release();
}
inline void Model::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  _impl_.description_.SetAllocated(description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.description)
}

// string friendly_name = 14 [(.google.api.field_behavior) = OPTIONAL];
inline void Model::clear_friendly_name() {
  _impl_.friendly_name_.ClearToEmpty();
}
inline const std::string& Model::friendly_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.friendly_name)
  return _internal_friendly_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model::set_friendly_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.friendly_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.friendly_name)
}
inline std::string* Model::mutable_friendly_name() {
  std::string* _s = _internal_mutable_friendly_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.friendly_name)
  return _s;
}
inline const std::string& Model::_internal_friendly_name() const {
  return _impl_.friendly_name_.Get();
}
inline void Model::_internal_set_friendly_name(const std::string& value) {
  
  _impl_.friendly_name_.Set(value, GetArenaForAllocation());
}
inline std::string* Model::_internal_mutable_friendly_name() {
  
  return _impl_.friendly_name_.Mutable(GetArenaForAllocation());
}
inline std::string* Model::release_friendly_name() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.friendly_name)
  return _impl_.friendly_name_.Release();
}
inline void Model::set_allocated_friendly_name(std::string* friendly_name) {
  if (friendly_name != nullptr) {
    
  } else {
    
  }
  _impl_.friendly_name_.SetAllocated(friendly_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.friendly_name_.IsDefault()) {
    _impl_.friendly_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.friendly_name)
}

// map<string, string> labels = 15;
inline int Model::_internal_labels_size() const {
  return _impl_.labels_.size();
}
inline int Model::labels_size() const {
  return _internal_labels_size();
}
inline void Model::clear_labels() {
  _impl_.labels_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
Model::_internal_labels() const {
  return _impl_.labels_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
Model::labels() const {
  // @@protoc_insertion_point(field_map:google.cloud.bigquery.v2.Model.labels)
  return _internal_labels();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
Model::_internal_mutable_labels() {
  return _impl_.labels_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
Model::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.bigquery.v2.Model.labels)
  return _internal_mutable_labels();
}

// int64 expiration_time = 16 [(.google.api.field_behavior) = OPTIONAL];
inline void Model::clear_expiration_time() {
  _impl_.expiration_time_ = int64_t{0};
}
inline int64_t Model::_internal_expiration_time() const {
  return _impl_.expiration_time_;
}
inline int64_t Model::expiration_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.expiration_time)
  return _internal_expiration_time();
}
inline void Model::_internal_set_expiration_time(int64_t value) {
  
  _impl_.expiration_time_ = value;
}
inline void Model::set_expiration_time(int64_t value) {
  _internal_set_expiration_time(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.expiration_time)
}

// string location = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Model::clear_location() {
  _impl_.location_.ClearToEmpty();
}
inline const std::string& Model::location() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.location)
  return _internal_location();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Model::set_location(ArgT0&& arg0, ArgT... args) {
 
 _impl_.location_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.location)
}
inline std::string* Model::mutable_location() {
  std::string* _s = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.location)
  return _s;
}
inline const std::string& Model::_internal_location() const {
  return _impl_.location_.Get();
}
inline void Model::_internal_set_location(const std::string& value) {
  
  _impl_.location_.Set(value, GetArenaForAllocation());
}
inline std::string* Model::_internal_mutable_location() {
  
  return _impl_.location_.Mutable(GetArenaForAllocation());
}
inline std::string* Model::release_location() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.location)
  return _impl_.location_.Release();
}
inline void Model::set_allocated_location(std::string* location) {
  if (location != nullptr) {
    
  } else {
    
  }
  _impl_.location_.SetAllocated(location, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.location_.IsDefault()) {
    _impl_.location_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.location)
}

// .google.cloud.bigquery.v2.EncryptionConfiguration encryption_configuration = 17;
inline bool Model::_internal_has_encryption_configuration() const {
  return this != internal_default_instance() && _impl_.encryption_configuration_ != nullptr;
}
inline bool Model::has_encryption_configuration() const {
  return _internal_has_encryption_configuration();
}
inline const ::google::cloud::bigquery::v2::EncryptionConfiguration& Model::_internal_encryption_configuration() const {
  const ::google::cloud::bigquery::v2::EncryptionConfiguration* p = _impl_.encryption_configuration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::EncryptionConfiguration&>(
      ::google::cloud::bigquery::v2::_EncryptionConfiguration_default_instance_);
}
inline const ::google::cloud::bigquery::v2::EncryptionConfiguration& Model::encryption_configuration() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.encryption_configuration)
  return _internal_encryption_configuration();
}
inline void Model::unsafe_arena_set_allocated_encryption_configuration(
    ::google::cloud::bigquery::v2::EncryptionConfiguration* encryption_configuration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.encryption_configuration_);
  }
  _impl_.encryption_configuration_ = encryption_configuration;
  if (encryption_configuration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.Model.encryption_configuration)
}
inline ::google::cloud::bigquery::v2::EncryptionConfiguration* Model::release_encryption_configuration() {
  
  ::google::cloud::bigquery::v2::EncryptionConfiguration* temp = _impl_.encryption_configuration_;
  _impl_.encryption_configuration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::EncryptionConfiguration* Model::unsafe_arena_release_encryption_configuration() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.Model.encryption_configuration)
  
  ::google::cloud::bigquery::v2::EncryptionConfiguration* temp = _impl_.encryption_configuration_;
  _impl_.encryption_configuration_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::EncryptionConfiguration* Model::_internal_mutable_encryption_configuration() {
  
  if (_impl_.encryption_configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::EncryptionConfiguration>(GetArenaForAllocation());
    _impl_.encryption_configuration_ = p;
  }
  return _impl_.encryption_configuration_;
}
inline ::google::cloud::bigquery::v2::EncryptionConfiguration* Model::mutable_encryption_configuration() {
  ::google::cloud::bigquery::v2::EncryptionConfiguration* _msg = _internal_mutable_encryption_configuration();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.encryption_configuration)
  return _msg;
}
inline void Model::set_allocated_encryption_configuration(::google::cloud::bigquery::v2::EncryptionConfiguration* encryption_configuration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.encryption_configuration_);
  }
  if (encryption_configuration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(encryption_configuration));
    if (message_arena != submessage_arena) {
      encryption_configuration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, encryption_configuration, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.encryption_configuration_ = encryption_configuration;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.Model.encryption_configuration)
}

// .google.cloud.bigquery.v2.Model.ModelType model_type = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Model::clear_model_type() {
  _impl_.model_type_ = 0;
}
inline ::google::cloud::bigquery::v2::Model_ModelType Model::_internal_model_type() const {
  return static_cast< ::google::cloud::bigquery::v2::Model_ModelType >(_impl_.model_type_);
}
inline ::google::cloud::bigquery::v2::Model_ModelType Model::model_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.model_type)
  return _internal_model_type();
}
inline void Model::_internal_set_model_type(::google::cloud::bigquery::v2::Model_ModelType value) {
  
  _impl_.model_type_ = value;
}
inline void Model::set_model_type(::google::cloud::bigquery::v2::Model_ModelType value) {
  _internal_set_model_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.model_type)
}

// repeated .google.cloud.bigquery.v2.Model.TrainingRun training_runs = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline int Model::_internal_training_runs_size() const {
  return _impl_.training_runs_.size();
}
inline int Model::training_runs_size() const {
  return _internal_training_runs_size();
}
inline void Model::clear_training_runs() {
  _impl_.training_runs_.Clear();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun* Model::mutable_training_runs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.training_runs)
  return _impl_.training_runs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun >*
Model::mutable_training_runs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.training_runs)
  return &_impl_.training_runs_;
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun& Model::_internal_training_runs(int index) const {
  return _impl_.training_runs_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model_TrainingRun& Model::training_runs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.training_runs)
  return _internal_training_runs(index);
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun* Model::_internal_add_training_runs() {
  return _impl_.training_runs_.Add();
}
inline ::google::cloud::bigquery::v2::Model_TrainingRun* Model::add_training_runs() {
  ::google::cloud::bigquery::v2::Model_TrainingRun* _add = _internal_add_training_runs();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.training_runs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model_TrainingRun >&
Model::training_runs() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.training_runs)
  return _impl_.training_runs_;
}

// repeated .google.cloud.bigquery.v2.StandardSqlField feature_columns = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline int Model::_internal_feature_columns_size() const {
  return _impl_.feature_columns_.size();
}
inline int Model::feature_columns_size() const {
  return _internal_feature_columns_size();
}
inline ::google::cloud::bigquery::v2::StandardSqlField* Model::mutable_feature_columns(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.feature_columns)
  return _impl_.feature_columns_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >*
Model::mutable_feature_columns() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.feature_columns)
  return &_impl_.feature_columns_;
}
inline const ::google::cloud::bigquery::v2::StandardSqlField& Model::_internal_feature_columns(int index) const {
  return _impl_.feature_columns_.Get(index);
}
inline const ::google::cloud::bigquery::v2::StandardSqlField& Model::feature_columns(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.feature_columns)
  return _internal_feature_columns(index);
}
inline ::google::cloud::bigquery::v2::StandardSqlField* Model::_internal_add_feature_columns() {
  return _impl_.feature_columns_.Add();
}
inline ::google::cloud::bigquery::v2::StandardSqlField* Model::add_feature_columns() {
  ::google::cloud::bigquery::v2::StandardSqlField* _add = _internal_add_feature_columns();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.feature_columns)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >&
Model::feature_columns() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.feature_columns)
  return _impl_.feature_columns_;
}

// repeated .google.cloud.bigquery.v2.StandardSqlField label_columns = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline int Model::_internal_label_columns_size() const {
  return _impl_.label_columns_.size();
}
inline int Model::label_columns_size() const {
  return _internal_label_columns_size();
}
inline ::google::cloud::bigquery::v2::StandardSqlField* Model::mutable_label_columns(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.Model.label_columns)
  return _impl_.label_columns_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >*
Model::mutable_label_columns() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.Model.label_columns)
  return &_impl_.label_columns_;
}
inline const ::google::cloud::bigquery::v2::StandardSqlField& Model::_internal_label_columns(int index) const {
  return _impl_.label_columns_.Get(index);
}
inline const ::google::cloud::bigquery::v2::StandardSqlField& Model::label_columns(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.label_columns)
  return _internal_label_columns(index);
}
inline ::google::cloud::bigquery::v2::StandardSqlField* Model::_internal_add_label_columns() {
  return _impl_.label_columns_.Add();
}
inline ::google::cloud::bigquery::v2::StandardSqlField* Model::add_label_columns() {
  ::google::cloud::bigquery::v2::StandardSqlField* _add = _internal_add_label_columns();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.Model.label_columns)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::StandardSqlField >&
Model::label_columns() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.Model.label_columns)
  return _impl_.label_columns_;
}

// int64 best_trial_id = 19 [deprecated = true];
inline void Model::clear_best_trial_id() {
  _impl_.best_trial_id_ = int64_t{0};
}
inline int64_t Model::_internal_best_trial_id() const {
  return _impl_.best_trial_id_;
}
inline int64_t Model::best_trial_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.Model.best_trial_id)
  return _internal_best_trial_id();
}
inline void Model::_internal_set_best_trial_id(int64_t value) {
  
  _impl_.best_trial_id_ = value;
}
inline void Model::set_best_trial_id(int64_t value) {
  _internal_set_best_trial_id(value);
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.Model.best_trial_id)
}

// -------------------------------------------------------------------

// GetModelRequest

// string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void GetModelRequest::clear_project_id() {
  _impl_.project_id_.ClearToEmpty();
}
inline const std::string& GetModelRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.GetModelRequest.project_id)
  return _internal_project_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetModelRequest::set_project_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.project_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.GetModelRequest.project_id)
}
inline std::string* GetModelRequest::mutable_project_id() {
  std::string* _s = _internal_mutable_project_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.GetModelRequest.project_id)
  return _s;
}
inline const std::string& GetModelRequest::_internal_project_id() const {
  return _impl_.project_id_.Get();
}
inline void GetModelRequest::_internal_set_project_id(const std::string& value) {
  
  _impl_.project_id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetModelRequest::_internal_mutable_project_id() {
  
  return _impl_.project_id_.Mutable(GetArenaForAllocation());
}
inline std::string* GetModelRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.GetModelRequest.project_id)
  return _impl_.project_id_.Release();
}
inline void GetModelRequest::set_allocated_project_id(std::string* project_id) {
  if (project_id != nullptr) {
    
  } else {
    
  }
  _impl_.project_id_.SetAllocated(project_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.project_id_.IsDefault()) {
    _impl_.project_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.GetModelRequest.project_id)
}

// string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void GetModelRequest::clear_dataset_id() {
  _impl_.dataset_id_.ClearToEmpty();
}
inline const std::string& GetModelRequest::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.GetModelRequest.dataset_id)
  return _internal_dataset_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetModelRequest::set_dataset_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.dataset_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.GetModelRequest.dataset_id)
}
inline std::string* GetModelRequest::mutable_dataset_id() {
  std::string* _s = _internal_mutable_dataset_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.GetModelRequest.dataset_id)
  return _s;
}
inline const std::string& GetModelRequest::_internal_dataset_id() const {
  return _impl_.dataset_id_.Get();
}
inline void GetModelRequest::_internal_set_dataset_id(const std::string& value) {
  
  _impl_.dataset_id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetModelRequest::_internal_mutable_dataset_id() {
  
  return _impl_.dataset_id_.Mutable(GetArenaForAllocation());
}
inline std::string* GetModelRequest::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.GetModelRequest.dataset_id)
  return _impl_.dataset_id_.Release();
}
inline void GetModelRequest::set_allocated_dataset_id(std::string* dataset_id) {
  if (dataset_id != nullptr) {
    
  } else {
    
  }
  _impl_.dataset_id_.SetAllocated(dataset_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dataset_id_.IsDefault()) {
    _impl_.dataset_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.GetModelRequest.dataset_id)
}

// string model_id = 3 [(.google.api.field_behavior) = REQUIRED];
inline void GetModelRequest::clear_model_id() {
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& GetModelRequest::model_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.GetModelRequest.model_id)
  return _internal_model_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetModelRequest::set_model_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.model_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.GetModelRequest.model_id)
}
inline std::string* GetModelRequest::mutable_model_id() {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.GetModelRequest.model_id)
  return _s;
}
inline const std::string& GetModelRequest::_internal_model_id() const {
  return _impl_.model_id_.Get();
}
inline void GetModelRequest::_internal_set_model_id(const std::string& value) {
  
  _impl_.model_id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetModelRequest::_internal_mutable_model_id() {
  
  return _impl_.model_id_.Mutable(GetArenaForAllocation());
}
inline std::string* GetModelRequest::release_model_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.GetModelRequest.model_id)
  return _impl_.model_id_.Release();
}
inline void GetModelRequest::set_allocated_model_id(std::string* model_id) {
  if (model_id != nullptr) {
    
  } else {
    
  }
  _impl_.model_id_.SetAllocated(model_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.GetModelRequest.model_id)
}

// -------------------------------------------------------------------

// PatchModelRequest

// string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void PatchModelRequest::clear_project_id() {
  _impl_.project_id_.ClearToEmpty();
}
inline const std::string& PatchModelRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.PatchModelRequest.project_id)
  return _internal_project_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PatchModelRequest::set_project_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.project_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.PatchModelRequest.project_id)
}
inline std::string* PatchModelRequest::mutable_project_id() {
  std::string* _s = _internal_mutable_project_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.PatchModelRequest.project_id)
  return _s;
}
inline const std::string& PatchModelRequest::_internal_project_id() const {
  return _impl_.project_id_.Get();
}
inline void PatchModelRequest::_internal_set_project_id(const std::string& value) {
  
  _impl_.project_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PatchModelRequest::_internal_mutable_project_id() {
  
  return _impl_.project_id_.Mutable(GetArenaForAllocation());
}
inline std::string* PatchModelRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.PatchModelRequest.project_id)
  return _impl_.project_id_.Release();
}
inline void PatchModelRequest::set_allocated_project_id(std::string* project_id) {
  if (project_id != nullptr) {
    
  } else {
    
  }
  _impl_.project_id_.SetAllocated(project_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.project_id_.IsDefault()) {
    _impl_.project_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.PatchModelRequest.project_id)
}

// string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void PatchModelRequest::clear_dataset_id() {
  _impl_.dataset_id_.ClearToEmpty();
}
inline const std::string& PatchModelRequest::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.PatchModelRequest.dataset_id)
  return _internal_dataset_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PatchModelRequest::set_dataset_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.dataset_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.PatchModelRequest.dataset_id)
}
inline std::string* PatchModelRequest::mutable_dataset_id() {
  std::string* _s = _internal_mutable_dataset_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.PatchModelRequest.dataset_id)
  return _s;
}
inline const std::string& PatchModelRequest::_internal_dataset_id() const {
  return _impl_.dataset_id_.Get();
}
inline void PatchModelRequest::_internal_set_dataset_id(const std::string& value) {
  
  _impl_.dataset_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PatchModelRequest::_internal_mutable_dataset_id() {
  
  return _impl_.dataset_id_.Mutable(GetArenaForAllocation());
}
inline std::string* PatchModelRequest::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.PatchModelRequest.dataset_id)
  return _impl_.dataset_id_.Release();
}
inline void PatchModelRequest::set_allocated_dataset_id(std::string* dataset_id) {
  if (dataset_id != nullptr) {
    
  } else {
    
  }
  _impl_.dataset_id_.SetAllocated(dataset_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dataset_id_.IsDefault()) {
    _impl_.dataset_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.PatchModelRequest.dataset_id)
}

// string model_id = 3 [(.google.api.field_behavior) = REQUIRED];
inline void PatchModelRequest::clear_model_id() {
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& PatchModelRequest::model_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.PatchModelRequest.model_id)
  return _internal_model_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PatchModelRequest::set_model_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.model_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.PatchModelRequest.model_id)
}
inline std::string* PatchModelRequest::mutable_model_id() {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.PatchModelRequest.model_id)
  return _s;
}
inline const std::string& PatchModelRequest::_internal_model_id() const {
  return _impl_.model_id_.Get();
}
inline void PatchModelRequest::_internal_set_model_id(const std::string& value) {
  
  _impl_.model_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PatchModelRequest::_internal_mutable_model_id() {
  
  return _impl_.model_id_.Mutable(GetArenaForAllocation());
}
inline std::string* PatchModelRequest::release_model_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.PatchModelRequest.model_id)
  return _impl_.model_id_.Release();
}
inline void PatchModelRequest::set_allocated_model_id(std::string* model_id) {
  if (model_id != nullptr) {
    
  } else {
    
  }
  _impl_.model_id_.SetAllocated(model_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.PatchModelRequest.model_id)
}

// .google.cloud.bigquery.v2.Model model = 4 [(.google.api.field_behavior) = REQUIRED];
inline bool PatchModelRequest::_internal_has_model() const {
  return this != internal_default_instance() && _impl_.model_ != nullptr;
}
inline bool PatchModelRequest::has_model() const {
  return _internal_has_model();
}
inline void PatchModelRequest::clear_model() {
  if (GetArenaForAllocation() == nullptr && _impl_.model_ != nullptr) {
    delete _impl_.model_;
  }
  _impl_.model_ = nullptr;
}
inline const ::google::cloud::bigquery::v2::Model& PatchModelRequest::_internal_model() const {
  const ::google::cloud::bigquery::v2::Model* p = _impl_.model_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::bigquery::v2::Model&>(
      ::google::cloud::bigquery::v2::_Model_default_instance_);
}
inline const ::google::cloud::bigquery::v2::Model& PatchModelRequest::model() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.PatchModelRequest.model)
  return _internal_model();
}
inline void PatchModelRequest::unsafe_arena_set_allocated_model(
    ::google::cloud::bigquery::v2::Model* model) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.model_);
  }
  _impl_.model_ = model;
  if (model) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.PatchModelRequest.model)
}
inline ::google::cloud::bigquery::v2::Model* PatchModelRequest::release_model() {
  
  ::google::cloud::bigquery::v2::Model* temp = _impl_.model_;
  _impl_.model_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::bigquery::v2::Model* PatchModelRequest::unsafe_arena_release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.PatchModelRequest.model)
  
  ::google::cloud::bigquery::v2::Model* temp = _impl_.model_;
  _impl_.model_ = nullptr;
  return temp;
}
inline ::google::cloud::bigquery::v2::Model* PatchModelRequest::_internal_mutable_model() {
  
  if (_impl_.model_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::bigquery::v2::Model>(GetArenaForAllocation());
    _impl_.model_ = p;
  }
  return _impl_.model_;
}
inline ::google::cloud::bigquery::v2::Model* PatchModelRequest::mutable_model() {
  ::google::cloud::bigquery::v2::Model* _msg = _internal_mutable_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.PatchModelRequest.model)
  return _msg;
}
inline void PatchModelRequest::set_allocated_model(::google::cloud::bigquery::v2::Model* model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.model_;
  }
  if (model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(model);
    if (message_arena != submessage_arena) {
      model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.model_ = model;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.PatchModelRequest.model)
}

// -------------------------------------------------------------------

// DeleteModelRequest

// string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void DeleteModelRequest::clear_project_id() {
  _impl_.project_id_.ClearToEmpty();
}
inline const std::string& DeleteModelRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.DeleteModelRequest.project_id)
  return _internal_project_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeleteModelRequest::set_project_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.project_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.DeleteModelRequest.project_id)
}
inline std::string* DeleteModelRequest::mutable_project_id() {
  std::string* _s = _internal_mutable_project_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.DeleteModelRequest.project_id)
  return _s;
}
inline const std::string& DeleteModelRequest::_internal_project_id() const {
  return _impl_.project_id_.Get();
}
inline void DeleteModelRequest::_internal_set_project_id(const std::string& value) {
  
  _impl_.project_id_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteModelRequest::_internal_mutable_project_id() {
  
  return _impl_.project_id_.Mutable(GetArenaForAllocation());
}
inline std::string* DeleteModelRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.DeleteModelRequest.project_id)
  return _impl_.project_id_.Release();
}
inline void DeleteModelRequest::set_allocated_project_id(std::string* project_id) {
  if (project_id != nullptr) {
    
  } else {
    
  }
  _impl_.project_id_.SetAllocated(project_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.project_id_.IsDefault()) {
    _impl_.project_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.DeleteModelRequest.project_id)
}

// string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void DeleteModelRequest::clear_dataset_id() {
  _impl_.dataset_id_.ClearToEmpty();
}
inline const std::string& DeleteModelRequest::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.DeleteModelRequest.dataset_id)
  return _internal_dataset_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeleteModelRequest::set_dataset_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.dataset_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.DeleteModelRequest.dataset_id)
}
inline std::string* DeleteModelRequest::mutable_dataset_id() {
  std::string* _s = _internal_mutable_dataset_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.DeleteModelRequest.dataset_id)
  return _s;
}
inline const std::string& DeleteModelRequest::_internal_dataset_id() const {
  return _impl_.dataset_id_.Get();
}
inline void DeleteModelRequest::_internal_set_dataset_id(const std::string& value) {
  
  _impl_.dataset_id_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteModelRequest::_internal_mutable_dataset_id() {
  
  return _impl_.dataset_id_.Mutable(GetArenaForAllocation());
}
inline std::string* DeleteModelRequest::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.DeleteModelRequest.dataset_id)
  return _impl_.dataset_id_.Release();
}
inline void DeleteModelRequest::set_allocated_dataset_id(std::string* dataset_id) {
  if (dataset_id != nullptr) {
    
  } else {
    
  }
  _impl_.dataset_id_.SetAllocated(dataset_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dataset_id_.IsDefault()) {
    _impl_.dataset_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.DeleteModelRequest.dataset_id)
}

// string model_id = 3 [(.google.api.field_behavior) = REQUIRED];
inline void DeleteModelRequest::clear_model_id() {
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& DeleteModelRequest::model_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.DeleteModelRequest.model_id)
  return _internal_model_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeleteModelRequest::set_model_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.model_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.DeleteModelRequest.model_id)
}
inline std::string* DeleteModelRequest::mutable_model_id() {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.DeleteModelRequest.model_id)
  return _s;
}
inline const std::string& DeleteModelRequest::_internal_model_id() const {
  return _impl_.model_id_.Get();
}
inline void DeleteModelRequest::_internal_set_model_id(const std::string& value) {
  
  _impl_.model_id_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteModelRequest::_internal_mutable_model_id() {
  
  return _impl_.model_id_.Mutable(GetArenaForAllocation());
}
inline std::string* DeleteModelRequest::release_model_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.DeleteModelRequest.model_id)
  return _impl_.model_id_.Release();
}
inline void DeleteModelRequest::set_allocated_model_id(std::string* model_id) {
  if (model_id != nullptr) {
    
  } else {
    
  }
  _impl_.model_id_.SetAllocated(model_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.DeleteModelRequest.model_id)
}

// -------------------------------------------------------------------

// ListModelsRequest

// string project_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void ListModelsRequest::clear_project_id() {
  _impl_.project_id_.ClearToEmpty();
}
inline const std::string& ListModelsRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.ListModelsRequest.project_id)
  return _internal_project_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListModelsRequest::set_project_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.project_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.ListModelsRequest.project_id)
}
inline std::string* ListModelsRequest::mutable_project_id() {
  std::string* _s = _internal_mutable_project_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.ListModelsRequest.project_id)
  return _s;
}
inline const std::string& ListModelsRequest::_internal_project_id() const {
  return _impl_.project_id_.Get();
}
inline void ListModelsRequest::_internal_set_project_id(const std::string& value) {
  
  _impl_.project_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ListModelsRequest::_internal_mutable_project_id() {
  
  return _impl_.project_id_.Mutable(GetArenaForAllocation());
}
inline std::string* ListModelsRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.ListModelsRequest.project_id)
  return _impl_.project_id_.Release();
}
inline void ListModelsRequest::set_allocated_project_id(std::string* project_id) {
  if (project_id != nullptr) {
    
  } else {
    
  }
  _impl_.project_id_.SetAllocated(project_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.project_id_.IsDefault()) {
    _impl_.project_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.ListModelsRequest.project_id)
}

// string dataset_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void ListModelsRequest::clear_dataset_id() {
  _impl_.dataset_id_.ClearToEmpty();
}
inline const std::string& ListModelsRequest::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.ListModelsRequest.dataset_id)
  return _internal_dataset_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListModelsRequest::set_dataset_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.dataset_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.ListModelsRequest.dataset_id)
}
inline std::string* ListModelsRequest::mutable_dataset_id() {
  std::string* _s = _internal_mutable_dataset_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.ListModelsRequest.dataset_id)
  return _s;
}
inline const std::string& ListModelsRequest::_internal_dataset_id() const {
  return _impl_.dataset_id_.Get();
}
inline void ListModelsRequest::_internal_set_dataset_id(const std::string& value) {
  
  _impl_.dataset_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ListModelsRequest::_internal_mutable_dataset_id() {
  
  return _impl_.dataset_id_.Mutable(GetArenaForAllocation());
}
inline std::string* ListModelsRequest::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.ListModelsRequest.dataset_id)
  return _impl_.dataset_id_.Release();
}
inline void ListModelsRequest::set_allocated_dataset_id(std::string* dataset_id) {
  if (dataset_id != nullptr) {
    
  } else {
    
  }
  _impl_.dataset_id_.SetAllocated(dataset_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dataset_id_.IsDefault()) {
    _impl_.dataset_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.ListModelsRequest.dataset_id)
}

// .google.protobuf.UInt32Value max_results = 3;
inline bool ListModelsRequest::_internal_has_max_results() const {
  return this != internal_default_instance() && _impl_.max_results_ != nullptr;
}
inline bool ListModelsRequest::has_max_results() const {
  return _internal_has_max_results();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt32Value& ListModelsRequest::_internal_max_results() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value* p = _impl_.max_results_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt32Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt32Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt32Value& ListModelsRequest::max_results() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.ListModelsRequest.max_results)
  return _internal_max_results();
}
inline void ListModelsRequest::unsafe_arena_set_allocated_max_results(
    ::PROTOBUF_NAMESPACE_ID::UInt32Value* max_results) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.max_results_);
  }
  _impl_.max_results_ = max_results;
  if (max_results) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.bigquery.v2.ListModelsRequest.max_results)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* ListModelsRequest::release_max_results() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* temp = _impl_.max_results_;
  _impl_.max_results_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* ListModelsRequest::unsafe_arena_release_max_results() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.ListModelsRequest.max_results)
  
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* temp = _impl_.max_results_;
  _impl_.max_results_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* ListModelsRequest::_internal_mutable_max_results() {
  
  if (_impl_.max_results_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt32Value>(GetArenaForAllocation());
    _impl_.max_results_ = p;
  }
  return _impl_.max_results_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* ListModelsRequest::mutable_max_results() {
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* _msg = _internal_mutable_max_results();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.ListModelsRequest.max_results)
  return _msg;
}
inline void ListModelsRequest::set_allocated_max_results(::PROTOBUF_NAMESPACE_ID::UInt32Value* max_results) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.max_results_);
  }
  if (max_results) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_results));
    if (message_arena != submessage_arena) {
      max_results = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, max_results, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.max_results_ = max_results;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.ListModelsRequest.max_results)
}

// string page_token = 4;
inline void ListModelsRequest::clear_page_token() {
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& ListModelsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.ListModelsRequest.page_token)
  return _internal_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListModelsRequest::set_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.ListModelsRequest.page_token)
}
inline std::string* ListModelsRequest::mutable_page_token() {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.ListModelsRequest.page_token)
  return _s;
}
inline const std::string& ListModelsRequest::_internal_page_token() const {
  return _impl_.page_token_.Get();
}
inline void ListModelsRequest::_internal_set_page_token(const std::string& value) {
  
  _impl_.page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListModelsRequest::_internal_mutable_page_token() {
  
  return _impl_.page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListModelsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.ListModelsRequest.page_token)
  return _impl_.page_token_.Release();
}
inline void ListModelsRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  _impl_.page_token_.SetAllocated(page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.page_token_.IsDefault()) {
    _impl_.page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.ListModelsRequest.page_token)
}

// -------------------------------------------------------------------

// ListModelsResponse

// repeated .google.cloud.bigquery.v2.Model models = 1;
inline int ListModelsResponse::_internal_models_size() const {
  return _impl_.models_.size();
}
inline int ListModelsResponse::models_size() const {
  return _internal_models_size();
}
inline void ListModelsResponse::clear_models() {
  _impl_.models_.Clear();
}
inline ::google::cloud::bigquery::v2::Model* ListModelsResponse::mutable_models(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.ListModelsResponse.models)
  return _impl_.models_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model >*
ListModelsResponse::mutable_models() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.bigquery.v2.ListModelsResponse.models)
  return &_impl_.models_;
}
inline const ::google::cloud::bigquery::v2::Model& ListModelsResponse::_internal_models(int index) const {
  return _impl_.models_.Get(index);
}
inline const ::google::cloud::bigquery::v2::Model& ListModelsResponse::models(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.ListModelsResponse.models)
  return _internal_models(index);
}
inline ::google::cloud::bigquery::v2::Model* ListModelsResponse::_internal_add_models() {
  return _impl_.models_.Add();
}
inline ::google::cloud::bigquery::v2::Model* ListModelsResponse::add_models() {
  ::google::cloud::bigquery::v2::Model* _add = _internal_add_models();
  // @@protoc_insertion_point(field_add:google.cloud.bigquery.v2.ListModelsResponse.models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::bigquery::v2::Model >&
ListModelsResponse::models() const {
  // @@protoc_insertion_point(field_list:google.cloud.bigquery.v2.ListModelsResponse.models)
  return _impl_.models_;
}

// string next_page_token = 2;
inline void ListModelsResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& ListModelsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.bigquery.v2.ListModelsResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListModelsResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.bigquery.v2.ListModelsResponse.next_page_token)
}
inline std::string* ListModelsResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.bigquery.v2.ListModelsResponse.next_page_token)
  return _s;
}
inline const std::string& ListModelsResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void ListModelsResponse::_internal_set_next_page_token(const std::string& value) {
  
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListModelsResponse::_internal_mutable_next_page_token() {
  
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListModelsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.bigquery.v2.ListModelsResponse.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void ListModelsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.v2.ListModelsResponse.next_page_token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace bigquery
}  // namespace cloud
}  // namespace google

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType>() {
  return ::google::cloud::bigquery::v2::Model_SeasonalPeriod_SeasonalPeriodType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod>() {
  return ::google::cloud::bigquery::v2::Model_KmeansEnums_KmeansInitializationMethod_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_ModelType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_ModelType>() {
  return ::google::cloud::bigquery::v2::Model_ModelType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_LossType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_LossType>() {
  return ::google::cloud::bigquery::v2::Model_LossType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_DistanceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_DistanceType>() {
  return ::google::cloud::bigquery::v2::Model_DistanceType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_DataSplitMethod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_DataSplitMethod>() {
  return ::google::cloud::bigquery::v2::Model_DataSplitMethod_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_DataFrequency> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_DataFrequency>() {
  return ::google::cloud::bigquery::v2::Model_DataFrequency_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_HolidayRegion> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_HolidayRegion>() {
  return ::google::cloud::bigquery::v2::Model_HolidayRegion_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_LearnRateStrategy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_LearnRateStrategy>() {
  return ::google::cloud::bigquery::v2::Model_LearnRateStrategy_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_OptimizationStrategy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_OptimizationStrategy>() {
  return ::google::cloud::bigquery::v2::Model_OptimizationStrategy_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::bigquery::v2::Model_FeedbackType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::bigquery::v2::Model_FeedbackType>() {
  return ::google::cloud::bigquery::v2::Model_FeedbackType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fbigquery_2fv2_2fmodel_2eproto
