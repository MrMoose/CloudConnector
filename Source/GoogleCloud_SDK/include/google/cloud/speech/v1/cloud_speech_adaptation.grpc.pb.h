// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/speech/v1/cloud_speech_adaptation.proto
// Original file comments:
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fspeech_2fv1_2fcloud_5fspeech_5fadaptation_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fspeech_2fv1_2fcloud_5fspeech_5fadaptation_2eproto__INCLUDED

#include "google/cloud/speech/v1/cloud_speech_adaptation.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace cloud {
namespace speech {
namespace v1 {

// Service that implements Google Cloud Speech Adaptation API.
class Adaptation final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.speech.v1.Adaptation";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create a set of phrase hints. Each item in the set can be a single word or
    // a multi-word phrase. The items in the PhraseSet are favored by the
    // recognition model when you send a call that includes the PhraseSet.
    virtual ::grpc::Status CreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::google::cloud::speech::v1::PhraseSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>> AsyncCreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>>(AsyncCreatePhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>> PrepareAsyncCreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>>(PrepareAsyncCreatePhraseSetRaw(context, request, cq));
    }
    // Get a phrase set.
    virtual ::grpc::Status GetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::google::cloud::speech::v1::PhraseSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>> AsyncGetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>>(AsyncGetPhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>> PrepareAsyncGetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>>(PrepareAsyncGetPhraseSetRaw(context, request, cq));
    }
    // List phrase sets.
    virtual ::grpc::Status ListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::google::cloud::speech::v1::ListPhraseSetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListPhraseSetResponse>> AsyncListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListPhraseSetResponse>>(AsyncListPhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListPhraseSetResponse>> PrepareAsyncListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListPhraseSetResponse>>(PrepareAsyncListPhraseSetRaw(context, request, cq));
    }
    // Update a phrase set.
    virtual ::grpc::Status UpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::google::cloud::speech::v1::PhraseSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>> AsyncUpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>>(AsyncUpdatePhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>> PrepareAsyncUpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>>(PrepareAsyncUpdatePhraseSetRaw(context, request, cq));
    }
    // Delete a phrase set.
    virtual ::grpc::Status DeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeletePhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeletePhraseSetRaw(context, request, cq));
    }
    // Create a custom class.
    virtual ::grpc::Status CreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::google::cloud::speech::v1::CustomClass* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>> AsyncCreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>>(AsyncCreateCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>> PrepareAsyncCreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>>(PrepareAsyncCreateCustomClassRaw(context, request, cq));
    }
    // Get a custom class.
    virtual ::grpc::Status GetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::google::cloud::speech::v1::CustomClass* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>> AsyncGetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>>(AsyncGetCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>> PrepareAsyncGetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>>(PrepareAsyncGetCustomClassRaw(context, request, cq));
    }
    // List custom classes.
    virtual ::grpc::Status ListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::google::cloud::speech::v1::ListCustomClassesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListCustomClassesResponse>> AsyncListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListCustomClassesResponse>>(AsyncListCustomClassesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListCustomClassesResponse>> PrepareAsyncListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListCustomClassesResponse>>(PrepareAsyncListCustomClassesRaw(context, request, cq));
    }
    // Update a custom class.
    virtual ::grpc::Status UpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::google::cloud::speech::v1::CustomClass* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>> AsyncUpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>>(AsyncUpdateCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>> PrepareAsyncUpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>>(PrepareAsyncUpdateCustomClassRaw(context, request, cq));
    }
    // Delete a custom class.
    virtual ::grpc::Status DeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteCustomClassRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Create a set of phrase hints. Each item in the set can be a single word or
      // a multi-word phrase. The items in the PhraseSet are favored by the
      // recognition model when you send a call that includes the PhraseSet.
      virtual void CreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a phrase set.
      virtual void GetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List phrase sets.
      virtual void ListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest* request, ::google::cloud::speech::v1::ListPhraseSetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest* request, ::google::cloud::speech::v1::ListPhraseSetResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update a phrase set.
      virtual void UpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete a phrase set.
      virtual void DeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Create a custom class.
      virtual void CreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a custom class.
      virtual void GetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List custom classes.
      virtual void ListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest* request, ::google::cloud::speech::v1::ListCustomClassesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest* request, ::google::cloud::speech::v1::ListCustomClassesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update a custom class.
      virtual void UpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete a custom class.
      virtual void DeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>* AsyncCreatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>* PrepareAsyncCreatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>* AsyncGetPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>* PrepareAsyncGetPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListPhraseSetResponse>* AsyncListPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListPhraseSetResponse>* PrepareAsyncListPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>* AsyncUpdatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::PhraseSet>* PrepareAsyncUpdatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeletePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeletePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>* AsyncCreateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>* PrepareAsyncCreateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>* AsyncGetCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>* PrepareAsyncGetCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListCustomClassesResponse>* AsyncListCustomClassesRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::ListCustomClassesResponse>* PrepareAsyncListCustomClassesRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>* AsyncUpdateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::speech::v1::CustomClass>* PrepareAsyncUpdateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::google::cloud::speech::v1::PhraseSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>> AsyncCreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>>(AsyncCreatePhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>> PrepareAsyncCreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>>(PrepareAsyncCreatePhraseSetRaw(context, request, cq));
    }
    ::grpc::Status GetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::google::cloud::speech::v1::PhraseSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>> AsyncGetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>>(AsyncGetPhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>> PrepareAsyncGetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>>(PrepareAsyncGetPhraseSetRaw(context, request, cq));
    }
    ::grpc::Status ListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::google::cloud::speech::v1::ListPhraseSetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListPhraseSetResponse>> AsyncListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListPhraseSetResponse>>(AsyncListPhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListPhraseSetResponse>> PrepareAsyncListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListPhraseSetResponse>>(PrepareAsyncListPhraseSetRaw(context, request, cq));
    }
    ::grpc::Status UpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::google::cloud::speech::v1::PhraseSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>> AsyncUpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>>(AsyncUpdatePhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>> PrepareAsyncUpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>>(PrepareAsyncUpdatePhraseSetRaw(context, request, cq));
    }
    ::grpc::Status DeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeletePhraseSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeletePhraseSetRaw(context, request, cq));
    }
    ::grpc::Status CreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::google::cloud::speech::v1::CustomClass* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>> AsyncCreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>>(AsyncCreateCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>> PrepareAsyncCreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>>(PrepareAsyncCreateCustomClassRaw(context, request, cq));
    }
    ::grpc::Status GetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::google::cloud::speech::v1::CustomClass* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>> AsyncGetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>>(AsyncGetCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>> PrepareAsyncGetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>>(PrepareAsyncGetCustomClassRaw(context, request, cq));
    }
    ::grpc::Status ListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::google::cloud::speech::v1::ListCustomClassesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListCustomClassesResponse>> AsyncListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListCustomClassesResponse>>(AsyncListCustomClassesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListCustomClassesResponse>> PrepareAsyncListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListCustomClassesResponse>>(PrepareAsyncListCustomClassesRaw(context, request, cq));
    }
    ::grpc::Status UpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::google::cloud::speech::v1::CustomClass* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>> AsyncUpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>>(AsyncUpdateCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>> PrepareAsyncUpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>>(PrepareAsyncUpdateCustomClassRaw(context, request, cq));
    }
    ::grpc::Status DeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteCustomClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteCustomClassRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, std::function<void(::grpc::Status)>) override;
      void CreatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, std::function<void(::grpc::Status)>) override;
      void GetPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest* request, ::google::cloud::speech::v1::ListPhraseSetResponse* response, std::function<void(::grpc::Status)>) override;
      void ListPhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest* request, ::google::cloud::speech::v1::ListPhraseSetResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, std::function<void(::grpc::Status)>) override;
      void UpdatePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeletePhraseSet(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, std::function<void(::grpc::Status)>) override;
      void CreateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, std::function<void(::grpc::Status)>) override;
      void GetCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest* request, ::google::cloud::speech::v1::ListCustomClassesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCustomClasses(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest* request, ::google::cloud::speech::v1::ListCustomClassesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, std::function<void(::grpc::Status)>) override;
      void UpdateCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteCustomClass(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>* AsyncCreatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>* PrepareAsyncCreatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>* AsyncGetPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>* PrepareAsyncGetPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListPhraseSetResponse>* AsyncListPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListPhraseSetResponse>* PrepareAsyncListPhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>* AsyncUpdatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::PhraseSet>* PrepareAsyncUpdatePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeletePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeletePhraseSetRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>* AsyncCreateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>* PrepareAsyncCreateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>* AsyncGetCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>* PrepareAsyncGetCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListCustomClassesResponse>* AsyncListCustomClassesRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::ListCustomClassesResponse>* PrepareAsyncListCustomClassesRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>* AsyncUpdateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::speech::v1::CustomClass>* PrepareAsyncUpdateCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteCustomClassRaw(::grpc::ClientContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreatePhraseSet_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPhraseSet_;
    const ::grpc::internal::RpcMethod rpcmethod_ListPhraseSet_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdatePhraseSet_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePhraseSet_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCustomClass_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCustomClass_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCustomClasses_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCustomClass_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteCustomClass_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create a set of phrase hints. Each item in the set can be a single word or
    // a multi-word phrase. The items in the PhraseSet are favored by the
    // recognition model when you send a call that includes the PhraseSet.
    virtual ::grpc::Status CreatePhraseSet(::grpc::ServerContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response);
    // Get a phrase set.
    virtual ::grpc::Status GetPhraseSet(::grpc::ServerContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response);
    // List phrase sets.
    virtual ::grpc::Status ListPhraseSet(::grpc::ServerContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest* request, ::google::cloud::speech::v1::ListPhraseSetResponse* response);
    // Update a phrase set.
    virtual ::grpc::Status UpdatePhraseSet(::grpc::ServerContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response);
    // Delete a phrase set.
    virtual ::grpc::Status DeletePhraseSet(::grpc::ServerContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest* request, ::google::protobuf::Empty* response);
    // Create a custom class.
    virtual ::grpc::Status CreateCustomClass(::grpc::ServerContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response);
    // Get a custom class.
    virtual ::grpc::Status GetCustomClass(::grpc::ServerContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response);
    // List custom classes.
    virtual ::grpc::Status ListCustomClasses(::grpc::ServerContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest* request, ::google::cloud::speech::v1::ListCustomClassesResponse* response);
    // Update a custom class.
    virtual ::grpc::Status UpdateCustomClass(::grpc::ServerContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response);
    // Delete a custom class.
    virtual ::grpc::Status DeleteCustomClass(::grpc::ServerContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreatePhraseSet() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePhraseSet(::grpc::ServerContext* context, ::google::cloud::speech::v1::CreatePhraseSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::PhraseSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPhraseSet() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPhraseSet(::grpc::ServerContext* context, ::google::cloud::speech::v1::GetPhraseSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::PhraseSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListPhraseSet() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::ListPhraseSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListPhraseSet(::grpc::ServerContext* context, ::google::cloud::speech::v1::ListPhraseSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::ListPhraseSetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdatePhraseSet() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdatePhraseSet(::grpc::ServerContext* context, ::google::cloud::speech::v1::UpdatePhraseSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::PhraseSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeletePhraseSet() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeletePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeletePhraseSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePhraseSet(::grpc::ServerContext* context, ::google::cloud::speech::v1::DeletePhraseSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateCustomClass() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCustomClass(::grpc::ServerContext* context, ::google::cloud::speech::v1::CreateCustomClassRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::CustomClass>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCustomClass() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomClass(::grpc::ServerContext* context, ::google::cloud::speech::v1::GetCustomClassRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::CustomClass>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCustomClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCustomClasses() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListCustomClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomClasses(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListCustomClassesRequest* /*request*/, ::google::cloud::speech::v1::ListCustomClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCustomClasses(::grpc::ServerContext* context, ::google::cloud::speech::v1::ListCustomClassesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::ListCustomClassesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateCustomClass() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UpdateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCustomClass(::grpc::ServerContext* context, ::google::cloud::speech::v1::UpdateCustomClassRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::speech::v1::CustomClass>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteCustomClass() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_DeleteCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeleteCustomClassRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCustomClass(::grpc::ServerContext* context, ::google::cloud::speech::v1::DeleteCustomClassRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreatePhraseSet<WithAsyncMethod_GetPhraseSet<WithAsyncMethod_ListPhraseSet<WithAsyncMethod_UpdatePhraseSet<WithAsyncMethod_DeletePhraseSet<WithAsyncMethod_CreateCustomClass<WithAsyncMethod_GetCustomClass<WithAsyncMethod_ListCustomClasses<WithAsyncMethod_UpdateCustomClass<WithAsyncMethod_DeleteCustomClass<Service > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreatePhraseSet() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::CreatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::CreatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response) { return this->CreatePhraseSet(context, request, response); }));}
    void SetMessageAllocatorFor_CreatePhraseSet(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::CreatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::CreatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreatePhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::CreatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPhraseSet() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::GetPhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::GetPhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response) { return this->GetPhraseSet(context, request, response); }));}
    void SetMessageAllocatorFor_GetPhraseSet(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::GetPhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::GetPhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::GetPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListPhraseSet() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::ListPhraseSetRequest, ::google::cloud::speech::v1::ListPhraseSetResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::ListPhraseSetRequest* request, ::google::cloud::speech::v1::ListPhraseSetResponse* response) { return this->ListPhraseSet(context, request, response); }));}
    void SetMessageAllocatorFor_ListPhraseSet(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::ListPhraseSetRequest, ::google::cloud::speech::v1::ListPhraseSetResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::ListPhraseSetRequest, ::google::cloud::speech::v1::ListPhraseSetResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::ListPhraseSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListPhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::ListPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::ListPhraseSetResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdatePhraseSet() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::UpdatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* request, ::google::cloud::speech::v1::PhraseSet* response) { return this->UpdatePhraseSet(context, request, response); }));}
    void SetMessageAllocatorFor_UpdatePhraseSet(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::UpdatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::UpdatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdatePhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeletePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeletePhraseSet() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::DeletePhraseSetRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::DeletePhraseSetRequest* request, ::google::protobuf::Empty* response) { return this->DeletePhraseSet(context, request, response); }));}
    void SetMessageAllocatorFor_DeletePhraseSet(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::DeletePhraseSetRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::DeletePhraseSetRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeletePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeletePhraseSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::DeletePhraseSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateCustomClass() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::CreateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::CreateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response) { return this->CreateCustomClass(context, request, response); }));}
    void SetMessageAllocatorFor_CreateCustomClass(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::CreateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::CreateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::CreateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCustomClass() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::GetCustomClassRequest, ::google::cloud::speech::v1::CustomClass>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::GetCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response) { return this->GetCustomClass(context, request, response); }));}
    void SetMessageAllocatorFor_GetCustomClass(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::GetCustomClassRequest, ::google::cloud::speech::v1::CustomClass>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::GetCustomClassRequest, ::google::cloud::speech::v1::CustomClass>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::GetCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListCustomClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCustomClasses() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::ListCustomClassesRequest, ::google::cloud::speech::v1::ListCustomClassesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::ListCustomClassesRequest* request, ::google::cloud::speech::v1::ListCustomClassesResponse* response) { return this->ListCustomClasses(context, request, response); }));}
    void SetMessageAllocatorFor_ListCustomClasses(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::ListCustomClassesRequest, ::google::cloud::speech::v1::ListCustomClassesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::ListCustomClassesRequest, ::google::cloud::speech::v1::ListCustomClassesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListCustomClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomClasses(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListCustomClassesRequest* /*request*/, ::google::cloud::speech::v1::ListCustomClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCustomClasses(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::ListCustomClassesRequest* /*request*/, ::google::cloud::speech::v1::ListCustomClassesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateCustomClass() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::UpdateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::UpdateCustomClassRequest* request, ::google::cloud::speech::v1::CustomClass* response) { return this->UpdateCustomClass(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateCustomClass(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::UpdateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::UpdateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::UpdateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteCustomClass() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::DeleteCustomClassRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::cloud::speech::v1::DeleteCustomClassRequest* request, ::google::protobuf::Empty* response) { return this->DeleteCustomClass(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteCustomClass(
        ::grpc::MessageAllocator< ::google::cloud::speech::v1::DeleteCustomClassRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::speech::v1::DeleteCustomClassRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeleteCustomClassRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::speech::v1::DeleteCustomClassRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreatePhraseSet<WithCallbackMethod_GetPhraseSet<WithCallbackMethod_ListPhraseSet<WithCallbackMethod_UpdatePhraseSet<WithCallbackMethod_DeletePhraseSet<WithCallbackMethod_CreateCustomClass<WithCallbackMethod_GetCustomClass<WithCallbackMethod_ListCustomClasses<WithCallbackMethod_UpdateCustomClass<WithCallbackMethod_DeleteCustomClass<Service > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreatePhraseSet() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPhraseSet() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListPhraseSet() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::ListPhraseSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdatePhraseSet() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeletePhraseSet() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeletePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeletePhraseSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateCustomClass() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCustomClass() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCustomClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCustomClasses() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListCustomClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomClasses(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListCustomClassesRequest* /*request*/, ::google::cloud::speech::v1::ListCustomClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateCustomClass() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UpdateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteCustomClass() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_DeleteCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeleteCustomClassRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreatePhraseSet() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePhraseSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPhraseSet() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPhraseSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListPhraseSet() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::ListPhraseSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListPhraseSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdatePhraseSet() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdatePhraseSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeletePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeletePhraseSet() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeletePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeletePhraseSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePhraseSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateCustomClass() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_CreateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCustomClass(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCustomClass() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomClass(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCustomClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCustomClasses() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListCustomClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomClasses(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListCustomClassesRequest* /*request*/, ::google::cloud::speech::v1::ListCustomClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCustomClasses(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateCustomClass() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_UpdateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCustomClass(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteCustomClass() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_DeleteCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeleteCustomClassRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCustomClass(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreatePhraseSet() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreatePhraseSet(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreatePhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPhraseSet() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPhraseSet(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListPhraseSet() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListPhraseSet(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::ListPhraseSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListPhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdatePhraseSet() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdatePhraseSet(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdatePhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeletePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeletePhraseSet() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeletePhraseSet(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeletePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeletePhraseSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePhraseSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateCustomClass() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateCustomClass(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCustomClass() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCustomClass(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCustomClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCustomClasses() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCustomClasses(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListCustomClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomClasses(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListCustomClassesRequest* /*request*/, ::google::cloud::speech::v1::ListCustomClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCustomClasses(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateCustomClass() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateCustomClass(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteCustomClass() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteCustomClass(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeleteCustomClassRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCustomClass(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreatePhraseSet() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::CreatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::CreatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>* streamer) {
                       return this->StreamedCreatePhraseSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreatePhraseSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::CreatePhraseSetRequest,::google::cloud::speech::v1::PhraseSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPhraseSet() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::GetPhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::GetPhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>* streamer) {
                       return this->StreamedGetPhraseSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPhraseSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::GetPhraseSetRequest,::google::cloud::speech::v1::PhraseSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListPhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListPhraseSet() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::ListPhraseSetRequest, ::google::cloud::speech::v1::ListPhraseSetResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::ListPhraseSetRequest, ::google::cloud::speech::v1::ListPhraseSetResponse>* streamer) {
                       return this->StreamedListPhraseSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListPhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListPhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListPhraseSetRequest* /*request*/, ::google::cloud::speech::v1::ListPhraseSetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListPhraseSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::ListPhraseSetRequest,::google::cloud::speech::v1::ListPhraseSetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdatePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdatePhraseSet() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::UpdatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::UpdatePhraseSetRequest, ::google::cloud::speech::v1::PhraseSet>* streamer) {
                       return this->StreamedUpdatePhraseSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdatePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdatePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdatePhraseSetRequest* /*request*/, ::google::cloud::speech::v1::PhraseSet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdatePhraseSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::UpdatePhraseSetRequest,::google::cloud::speech::v1::PhraseSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePhraseSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeletePhraseSet() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::DeletePhraseSetRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::DeletePhraseSetRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeletePhraseSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeletePhraseSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePhraseSet(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeletePhraseSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePhraseSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::DeletePhraseSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateCustomClass() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::CreateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::CreateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>* streamer) {
                       return this->StreamedCreateCustomClass(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::CreateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCustomClass(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::CreateCustomClassRequest,::google::cloud::speech::v1::CustomClass>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCustomClass() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::GetCustomClassRequest, ::google::cloud::speech::v1::CustomClass>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::GetCustomClassRequest, ::google::cloud::speech::v1::CustomClass>* streamer) {
                       return this->StreamedGetCustomClass(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::GetCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCustomClass(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::GetCustomClassRequest,::google::cloud::speech::v1::CustomClass>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCustomClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCustomClasses() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::ListCustomClassesRequest, ::google::cloud::speech::v1::ListCustomClassesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::ListCustomClassesRequest, ::google::cloud::speech::v1::ListCustomClassesResponse>* streamer) {
                       return this->StreamedListCustomClasses(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCustomClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCustomClasses(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::ListCustomClassesRequest* /*request*/, ::google::cloud::speech::v1::ListCustomClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCustomClasses(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::ListCustomClassesRequest,::google::cloud::speech::v1::ListCustomClassesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateCustomClass() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::UpdateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::UpdateCustomClassRequest, ::google::cloud::speech::v1::CustomClass>* streamer) {
                       return this->StreamedUpdateCustomClass(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::UpdateCustomClassRequest* /*request*/, ::google::cloud::speech::v1::CustomClass* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCustomClass(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::UpdateCustomClassRequest,::google::cloud::speech::v1::CustomClass>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCustomClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteCustomClass() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::speech::v1::DeleteCustomClassRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::speech::v1::DeleteCustomClassRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteCustomClass(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteCustomClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCustomClass(::grpc::ServerContext* /*context*/, const ::google::cloud::speech::v1::DeleteCustomClassRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCustomClass(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::speech::v1::DeleteCustomClassRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreatePhraseSet<WithStreamedUnaryMethod_GetPhraseSet<WithStreamedUnaryMethod_ListPhraseSet<WithStreamedUnaryMethod_UpdatePhraseSet<WithStreamedUnaryMethod_DeletePhraseSet<WithStreamedUnaryMethod_CreateCustomClass<WithStreamedUnaryMethod_GetCustomClass<WithStreamedUnaryMethod_ListCustomClasses<WithStreamedUnaryMethod_UpdateCustomClass<WithStreamedUnaryMethod_DeleteCustomClass<Service > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreatePhraseSet<WithStreamedUnaryMethod_GetPhraseSet<WithStreamedUnaryMethod_ListPhraseSet<WithStreamedUnaryMethod_UpdatePhraseSet<WithStreamedUnaryMethod_DeletePhraseSet<WithStreamedUnaryMethod_CreateCustomClass<WithStreamedUnaryMethod_GetCustomClass<WithStreamedUnaryMethod_ListCustomClasses<WithStreamedUnaryMethod_UpdateCustomClass<WithStreamedUnaryMethod_DeleteCustomClass<Service > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace speech
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fspeech_2fv1_2fcloud_5fspeech_5fadaptation_2eproto__INCLUDED
