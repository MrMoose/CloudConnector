// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2beta1/document.proto
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto__INCLUDED

#include "google/cloud/dialogflow/v2beta1/document.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

// Service for managing knowledge [Documents][google.cloud.dialogflow.v2beta1.Document].
class Documents final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.dialogflow.v2beta1.Documents";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Returns the list of all documents of the knowledge base.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>> AsyncListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>>(AsyncListDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>> PrepareAsyncListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>>(PrepareAsyncListDocumentsRaw(context, request, cq));
    }
    // Retrieves the specified document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::google::cloud::dialogflow::v2beta1::Document* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Document>> AsyncGetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Document>>(AsyncGetDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Document>> PrepareAsyncGetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Document>>(PrepareAsyncGetDocumentRaw(context, request, cq));
    }
    // Creates a new document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncCreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncCreateDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncCreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncCreateDocumentRaw(context, request, cq));
    }
    // Create documents by importing data from external sources.
    // Dialogflow supports up to 350 documents in each request. If you try to
    // import more, Dialogflow will return an error.
    virtual ::grpc::Status ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncImportDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncImportDocumentsRaw(context, request, cq));
    }
    // Deletes the specified document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncDeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncDeleteDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncDeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncDeleteDocumentRaw(context, request, cq));
    }
    // Updates the specified document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncUpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncUpdateDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncUpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncUpdateDocumentRaw(context, request, cq));
    }
    // Reloads the specified document from its specified source, content_uri or
    // content. The previously loaded content of the document will be deleted.
    // Note: Even when the content of the document has not changed, there still
    // may be side effects because of internal implementation changes.
    // Note: If the document source is Google Cloud Storage URI, its metadata will
    // be replaced with the custom metadata from Google Cloud Storage if the
    // `import_gcs_custom_metadata` field is set to true in the request.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncReloadDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncReloadDocumentRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Returns the list of all documents of the knowledge base.
      //
      // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
      // only use `projects.knowledgeBases.documents`.
      virtual void ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves the specified document.
      //
      // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
      // only use `projects.knowledgeBases.documents`.
      virtual void GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a new document.
      //
      // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
      // only use `projects.knowledgeBases.documents`.
      virtual void CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Create documents by importing data from external sources.
      // Dialogflow supports up to 350 documents in each request. If you try to
      // import more, Dialogflow will return an error.
      virtual void ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Deletes the specified document.
      //
      // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
      // only use `projects.knowledgeBases.documents`.
      virtual void DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates the specified document.
      //
      // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
      // only use `projects.knowledgeBases.documents`.
      virtual void UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Reloads the specified document from its specified source, content_uri or
      // content. The previously loaded content of the document will be deleted.
      // Note: Even when the content of the document has not changed, there still
      // may be side effects because of internal implementation changes.
      // Note: If the document source is Google Cloud Storage URI, its metadata will
      // be replaced with the custom metadata from Google Cloud Storage if the
      // `import_gcs_custom_metadata` field is set to true in the request.
      //
      // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
      // only use `projects.knowledgeBases.documents`.
      virtual void ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* AsyncListDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* PrepareAsyncListDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Document>* AsyncGetDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::Document>* PrepareAsyncGetDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncCreateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncCreateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncImportDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncImportDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncUpdateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncUpdateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncReloadDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncReloadDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>> AsyncListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>>(AsyncListDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>> PrepareAsyncListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>>(PrepareAsyncListDocumentsRaw(context, request, cq));
    }
    ::grpc::Status GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::google::cloud::dialogflow::v2beta1::Document* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>> AsyncGetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>>(AsyncGetDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>> PrepareAsyncGetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>>(PrepareAsyncGetDocumentRaw(context, request, cq));
    }
    ::grpc::Status CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncCreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncCreateDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncCreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncCreateDocumentRaw(context, request, cq));
    }
    ::grpc::Status ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncImportDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncImportDocumentsRaw(context, request, cq));
    }
    ::grpc::Status DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncDeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncDeleteDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncDeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncDeleteDocumentRaw(context, request, cq));
    }
    ::grpc::Status UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncUpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncUpdateDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncUpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncUpdateDocumentRaw(context, request, cq));
    }
    ::grpc::Status ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncReloadDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncReloadDocumentRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ImportDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ReloadDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* AsyncListDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* PrepareAsyncListDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>* AsyncGetDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>* PrepareAsyncGetDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncCreateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncCreateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncImportDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncImportDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncUpdateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncUpdateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncReloadDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncReloadDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListDocuments_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_ImportDocuments_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_ReloadDocument_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Returns the list of all documents of the knowledge base.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status ListDocuments(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response);
    // Retrieves the specified document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status GetDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response);
    // Creates a new document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status CreateDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response);
    // Create documents by importing data from external sources.
    // Dialogflow supports up to 350 documents in each request. If you try to
    // import more, Dialogflow will return an error.
    virtual ::grpc::Status ImportDocuments(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response);
    // Deletes the specified document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status DeleteDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response);
    // Updates the specified document.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status UpdateDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response);
    // Reloads the specified document from its specified source, content_uri or
    // content. The previously loaded content of the document will be deleted.
    // Note: Even when the content of the document has not changed, there still
    // may be side effects because of internal implementation changes.
    // Note: If the document source is Google Cloud Storage URI, its metadata will
    // be replaced with the custom metadata from Google Cloud Storage if the
    // `import_gcs_custom_metadata` field is set to true in the request.
    //
    // Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
    // only use `projects.knowledgeBases.documents`.
    virtual ::grpc::Status ReloadDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListDocuments() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDocuments(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDocument() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDocument(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::Document>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDocument() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDocument(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ImportDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ImportDocuments() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ImportDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportDocuments(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDocument(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateDocument() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UpdateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDocument(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReloadDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReloadDocument() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ReloadDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReloadDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReloadDocument(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListDocuments<WithAsyncMethod_GetDocument<WithAsyncMethod_CreateDocument<WithAsyncMethod_ImportDocuments<WithAsyncMethod_DeleteDocument<WithAsyncMethod_UpdateDocument<WithAsyncMethod_ReloadDocument<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListDocuments() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response) { return this->ListDocuments(context, request, response); }));}
    void SetMessageAllocatorFor_ListDocuments(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListDocuments(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::GetDocumentRequest, ::google::cloud::dialogflow::v2beta1::Document>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response) { return this->GetDocument(context, request, response); }));}
    void SetMessageAllocatorFor_GetDocument(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2beta1::GetDocumentRequest, ::google::cloud::dialogflow::v2beta1::Document>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::GetDocumentRequest, ::google::cloud::dialogflow::v2beta1::Document>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest, ::google::longrunning::Operation>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response) { return this->CreateDocument(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDocument(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest, ::google::longrunning::Operation>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ImportDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ImportDocuments() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest, ::google::longrunning::Operation>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* request, ::google::longrunning::Operation* response) { return this->ImportDocuments(context, request, response); }));}
    void SetMessageAllocatorFor_ImportDocuments(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest, ::google::longrunning::Operation>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ImportDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ImportDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ImportDocuments(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest, ::google::longrunning::Operation>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response) { return this->DeleteDocument(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDocument(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest, ::google::longrunning::Operation>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest, ::google::longrunning::Operation>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* request, ::google::longrunning::Operation* response) { return this->UpdateDocument(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateDocument(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest, ::google::longrunning::Operation>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReloadDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReloadDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest, ::google::longrunning::Operation>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* request, ::google::longrunning::Operation* response) { return this->ReloadDocument(context, request, response); }));}
    void SetMessageAllocatorFor_ReloadDocument(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest, ::google::longrunning::Operation>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest, ::google::longrunning::Operation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReloadDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReloadDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReloadDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReloadDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_ListDocuments<ExperimentalWithCallbackMethod_GetDocument<ExperimentalWithCallbackMethod_CreateDocument<ExperimentalWithCallbackMethod_ImportDocuments<ExperimentalWithCallbackMethod_DeleteDocument<ExperimentalWithCallbackMethod_UpdateDocument<ExperimentalWithCallbackMethod_ReloadDocument<Service > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_ListDocuments<ExperimentalWithCallbackMethod_GetDocument<ExperimentalWithCallbackMethod_CreateDocument<ExperimentalWithCallbackMethod_ImportDocuments<ExperimentalWithCallbackMethod_DeleteDocument<ExperimentalWithCallbackMethod_UpdateDocument<ExperimentalWithCallbackMethod_ReloadDocument<Service > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListDocuments() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDocument() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDocument() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ImportDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ImportDocuments() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ImportDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateDocument() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UpdateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReloadDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReloadDocument() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ReloadDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReloadDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListDocuments() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDocuments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDocument() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDocument() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ImportDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ImportDocuments() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ImportDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportDocuments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateDocument() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_UpdateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReloadDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReloadDocument() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ReloadDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReloadDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReloadDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListDocuments() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListDocuments(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListDocuments(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDocument(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDocument(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ImportDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ImportDocuments() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ImportDocuments(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ImportDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ImportDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ImportDocuments(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDocument(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateDocument(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReloadDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReloadDocument() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReloadDocument(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ReloadDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReloadDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReloadDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReloadDocument(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListDocuments() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* streamer) {
                       return this->StreamedListDocuments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDocuments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest,::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDocument() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2beta1::GetDocumentRequest, ::google::cloud::dialogflow::v2beta1::Document>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2beta1::GetDocumentRequest, ::google::cloud::dialogflow::v2beta1::Document>* streamer) {
                       return this->StreamedGetDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* /*request*/, ::google::cloud::dialogflow::v2beta1::Document* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::GetDocumentRequest,::google::cloud::dialogflow::v2beta1::Document>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDocument() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedCreateDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ImportDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ImportDocuments() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedImportDocuments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ImportDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ImportDocuments(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedImportDocuments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::ImportDocumentsRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedDeleteDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateDocument() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedUpdateDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::UpdateDocumentRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReloadDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReloadDocument() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest, ::google::longrunning::Operation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest, ::google::longrunning::Operation>* streamer) {
                       return this->StreamedReloadDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReloadDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReloadDocument(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest* /*request*/, ::google::longrunning::Operation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReloadDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::ReloadDocumentRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListDocuments<WithStreamedUnaryMethod_GetDocument<WithStreamedUnaryMethod_CreateDocument<WithStreamedUnaryMethod_ImportDocuments<WithStreamedUnaryMethod_DeleteDocument<WithStreamedUnaryMethod_UpdateDocument<WithStreamedUnaryMethod_ReloadDocument<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListDocuments<WithStreamedUnaryMethod_GetDocument<WithStreamedUnaryMethod_CreateDocument<WithStreamedUnaryMethod_ImportDocuments<WithStreamedUnaryMethod_DeleteDocument<WithStreamedUnaryMethod_UpdateDocument<WithStreamedUnaryMethod_ReloadDocument<Service > > > > > > > StreamedService;
};

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto__INCLUDED
