// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2/session_entity_type.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include "google/cloud/dialogflow/v2/entity_type.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {
class CreateSessionEntityTypeRequest;
class CreateSessionEntityTypeRequestDefaultTypeInternal;
extern CreateSessionEntityTypeRequestDefaultTypeInternal _CreateSessionEntityTypeRequest_default_instance_;
class DeleteSessionEntityTypeRequest;
class DeleteSessionEntityTypeRequestDefaultTypeInternal;
extern DeleteSessionEntityTypeRequestDefaultTypeInternal _DeleteSessionEntityTypeRequest_default_instance_;
class GetSessionEntityTypeRequest;
class GetSessionEntityTypeRequestDefaultTypeInternal;
extern GetSessionEntityTypeRequestDefaultTypeInternal _GetSessionEntityTypeRequest_default_instance_;
class ListSessionEntityTypesRequest;
class ListSessionEntityTypesRequestDefaultTypeInternal;
extern ListSessionEntityTypesRequestDefaultTypeInternal _ListSessionEntityTypesRequest_default_instance_;
class ListSessionEntityTypesResponse;
class ListSessionEntityTypesResponseDefaultTypeInternal;
extern ListSessionEntityTypesResponseDefaultTypeInternal _ListSessionEntityTypesResponse_default_instance_;
class SessionEntityType;
class SessionEntityTypeDefaultTypeInternal;
extern SessionEntityTypeDefaultTypeInternal _SessionEntityType_default_instance_;
class UpdateSessionEntityTypeRequest;
class UpdateSessionEntityTypeRequestDefaultTypeInternal;
extern UpdateSessionEntityTypeRequestDefaultTypeInternal _UpdateSessionEntityTypeRequest_default_instance_;
}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>(Arena*);
template<> ::google::cloud::dialogflow::v2::SessionEntityType* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::SessionEntityType>(Arena*);
template<> ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {

enum SessionEntityType_EntityOverrideMode : int {
  SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_UNSPECIFIED = 0,
  SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_OVERRIDE = 1,
  SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_SUPPLEMENT = 2,
  SessionEntityType_EntityOverrideMode_SessionEntityType_EntityOverrideMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SessionEntityType_EntityOverrideMode_SessionEntityType_EntityOverrideMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SessionEntityType_EntityOverrideMode_IsValid(int value);
constexpr SessionEntityType_EntityOverrideMode SessionEntityType_EntityOverrideMode_EntityOverrideMode_MIN = SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_UNSPECIFIED;
constexpr SessionEntityType_EntityOverrideMode SessionEntityType_EntityOverrideMode_EntityOverrideMode_MAX = SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_SUPPLEMENT;
constexpr int SessionEntityType_EntityOverrideMode_EntityOverrideMode_ARRAYSIZE = SessionEntityType_EntityOverrideMode_EntityOverrideMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SessionEntityType_EntityOverrideMode_descriptor();
template<typename T>
inline const std::string& SessionEntityType_EntityOverrideMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SessionEntityType_EntityOverrideMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SessionEntityType_EntityOverrideMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SessionEntityType_EntityOverrideMode_descriptor(), enum_t_value);
}
inline bool SessionEntityType_EntityOverrideMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SessionEntityType_EntityOverrideMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SessionEntityType_EntityOverrideMode>(
    SessionEntityType_EntityOverrideMode_descriptor(), name, value);
}
// ===================================================================

class SessionEntityType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.SessionEntityType) */ {
 public:
  inline SessionEntityType() : SessionEntityType(nullptr) {}
  virtual ~SessionEntityType();

  SessionEntityType(const SessionEntityType& from);
  SessionEntityType(SessionEntityType&& from) noexcept
    : SessionEntityType() {
    *this = ::std::move(from);
  }

  inline SessionEntityType& operator=(const SessionEntityType& from) {
    CopyFrom(from);
    return *this;
  }
  inline SessionEntityType& operator=(SessionEntityType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SessionEntityType& default_instance();

  static inline const SessionEntityType* internal_default_instance() {
    return reinterpret_cast<const SessionEntityType*>(
               &_SessionEntityType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SessionEntityType& a, SessionEntityType& b) {
    a.Swap(&b);
  }
  inline void Swap(SessionEntityType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SessionEntityType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SessionEntityType* New() const final {
    return CreateMaybeMessage<SessionEntityType>(nullptr);
  }

  SessionEntityType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SessionEntityType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SessionEntityType& from);
  void MergeFrom(const SessionEntityType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SessionEntityType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.SessionEntityType";
  }
  protected:
  explicit SessionEntityType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto);
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef SessionEntityType_EntityOverrideMode EntityOverrideMode;
  static constexpr EntityOverrideMode ENTITY_OVERRIDE_MODE_UNSPECIFIED =
    SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_UNSPECIFIED;
  static constexpr EntityOverrideMode ENTITY_OVERRIDE_MODE_OVERRIDE =
    SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_OVERRIDE;
  static constexpr EntityOverrideMode ENTITY_OVERRIDE_MODE_SUPPLEMENT =
    SessionEntityType_EntityOverrideMode_ENTITY_OVERRIDE_MODE_SUPPLEMENT;
  static inline bool EntityOverrideMode_IsValid(int value) {
    return SessionEntityType_EntityOverrideMode_IsValid(value);
  }
  static constexpr EntityOverrideMode EntityOverrideMode_MIN =
    SessionEntityType_EntityOverrideMode_EntityOverrideMode_MIN;
  static constexpr EntityOverrideMode EntityOverrideMode_MAX =
    SessionEntityType_EntityOverrideMode_EntityOverrideMode_MAX;
  static constexpr int EntityOverrideMode_ARRAYSIZE =
    SessionEntityType_EntityOverrideMode_EntityOverrideMode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EntityOverrideMode_descriptor() {
    return SessionEntityType_EntityOverrideMode_descriptor();
  }
  template<typename T>
  static inline const std::string& EntityOverrideMode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EntityOverrideMode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EntityOverrideMode_Name.");
    return SessionEntityType_EntityOverrideMode_Name(enum_t_value);
  }
  static inline bool EntityOverrideMode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EntityOverrideMode* value) {
    return SessionEntityType_EntityOverrideMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntitiesFieldNumber = 3,
    kNameFieldNumber = 1,
    kEntityOverrideModeFieldNumber = 2,
  };
  // repeated .google.cloud.dialogflow.v2.EntityType.Entity entities = 3 [(.google.api.field_behavior) = REQUIRED];
  int entities_size() const;
  private:
  int _internal_entities_size() const;
  public:
  void clear_entities();
  ::google::cloud::dialogflow::v2::EntityType_Entity* mutable_entities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::EntityType_Entity >*
      mutable_entities();
  private:
  const ::google::cloud::dialogflow::v2::EntityType_Entity& _internal_entities(int index) const;
  ::google::cloud::dialogflow::v2::EntityType_Entity* _internal_add_entities();
  public:
  const ::google::cloud::dialogflow::v2::EntityType_Entity& entities(int index) const;
  ::google::cloud::dialogflow::v2::EntityType_Entity* add_entities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::EntityType_Entity >&
      entities() const;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.cloud.dialogflow.v2.SessionEntityType.EntityOverrideMode entity_override_mode = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_entity_override_mode();
  ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode entity_override_mode() const;
  void set_entity_override_mode(::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode value);
  private:
  ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode _internal_entity_override_mode() const;
  void _internal_set_entity_override_mode(::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.SessionEntityType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::EntityType_Entity > entities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  int entity_override_mode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
};
// -------------------------------------------------------------------

class ListSessionEntityTypesRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest) */ {
 public:
  inline ListSessionEntityTypesRequest() : ListSessionEntityTypesRequest(nullptr) {}
  virtual ~ListSessionEntityTypesRequest();

  ListSessionEntityTypesRequest(const ListSessionEntityTypesRequest& from);
  ListSessionEntityTypesRequest(ListSessionEntityTypesRequest&& from) noexcept
    : ListSessionEntityTypesRequest() {
    *this = ::std::move(from);
  }

  inline ListSessionEntityTypesRequest& operator=(const ListSessionEntityTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSessionEntityTypesRequest& operator=(ListSessionEntityTypesRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListSessionEntityTypesRequest& default_instance();

  static inline const ListSessionEntityTypesRequest* internal_default_instance() {
    return reinterpret_cast<const ListSessionEntityTypesRequest*>(
               &_ListSessionEntityTypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ListSessionEntityTypesRequest& a, ListSessionEntityTypesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListSessionEntityTypesRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSessionEntityTypesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListSessionEntityTypesRequest* New() const final {
    return CreateMaybeMessage<ListSessionEntityTypesRequest>(nullptr);
  }

  ListSessionEntityTypesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListSessionEntityTypesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListSessionEntityTypesRequest& from);
  void MergeFrom(const ListSessionEntityTypesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSessionEntityTypesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListSessionEntityTypesRequest";
  }
  protected:
  explicit ListSessionEntityTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto);
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kPageTokenFieldNumber = 3,
    kPageSizeFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  void set_parent(const std::string& value);
  void set_parent(std::string&& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  std::string* mutable_parent();
  std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_token();
  const std::string& page_token() const;
  void set_page_token(const std::string& value);
  void set_page_token(std::string&& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  std::string* mutable_page_token();
  std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_size();
  ::PROTOBUF_NAMESPACE_ID::int32 page_size() const;
  void set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page_size() const;
  void _internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
};
// -------------------------------------------------------------------

class ListSessionEntityTypesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse) */ {
 public:
  inline ListSessionEntityTypesResponse() : ListSessionEntityTypesResponse(nullptr) {}
  virtual ~ListSessionEntityTypesResponse();

  ListSessionEntityTypesResponse(const ListSessionEntityTypesResponse& from);
  ListSessionEntityTypesResponse(ListSessionEntityTypesResponse&& from) noexcept
    : ListSessionEntityTypesResponse() {
    *this = ::std::move(from);
  }

  inline ListSessionEntityTypesResponse& operator=(const ListSessionEntityTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSessionEntityTypesResponse& operator=(ListSessionEntityTypesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListSessionEntityTypesResponse& default_instance();

  static inline const ListSessionEntityTypesResponse* internal_default_instance() {
    return reinterpret_cast<const ListSessionEntityTypesResponse*>(
               &_ListSessionEntityTypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListSessionEntityTypesResponse& a, ListSessionEntityTypesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListSessionEntityTypesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSessionEntityTypesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListSessionEntityTypesResponse* New() const final {
    return CreateMaybeMessage<ListSessionEntityTypesResponse>(nullptr);
  }

  ListSessionEntityTypesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListSessionEntityTypesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListSessionEntityTypesResponse& from);
  void MergeFrom(const ListSessionEntityTypesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSessionEntityTypesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListSessionEntityTypesResponse";
  }
  protected:
  explicit ListSessionEntityTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto);
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionEntityTypesFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .google.cloud.dialogflow.v2.SessionEntityType session_entity_types = 1;
  int session_entity_types_size() const;
  private:
  int _internal_session_entity_types_size() const;
  public:
  void clear_session_entity_types();
  ::google::cloud::dialogflow::v2::SessionEntityType* mutable_session_entity_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >*
      mutable_session_entity_types();
  private:
  const ::google::cloud::dialogflow::v2::SessionEntityType& _internal_session_entity_types(int index) const;
  ::google::cloud::dialogflow::v2::SessionEntityType* _internal_add_session_entity_types();
  public:
  const ::google::cloud::dialogflow::v2::SessionEntityType& session_entity_types(int index) const;
  ::google::cloud::dialogflow::v2::SessionEntityType* add_session_entity_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >&
      session_entity_types() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  void set_next_page_token(const std::string& value);
  void set_next_page_token(std::string&& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  std::string* mutable_next_page_token();
  std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType > session_entity_types_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
};
// -------------------------------------------------------------------

class GetSessionEntityTypeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest) */ {
 public:
  inline GetSessionEntityTypeRequest() : GetSessionEntityTypeRequest(nullptr) {}
  virtual ~GetSessionEntityTypeRequest();

  GetSessionEntityTypeRequest(const GetSessionEntityTypeRequest& from);
  GetSessionEntityTypeRequest(GetSessionEntityTypeRequest&& from) noexcept
    : GetSessionEntityTypeRequest() {
    *this = ::std::move(from);
  }

  inline GetSessionEntityTypeRequest& operator=(const GetSessionEntityTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSessionEntityTypeRequest& operator=(GetSessionEntityTypeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSessionEntityTypeRequest& default_instance();

  static inline const GetSessionEntityTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetSessionEntityTypeRequest*>(
               &_GetSessionEntityTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetSessionEntityTypeRequest& a, GetSessionEntityTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSessionEntityTypeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSessionEntityTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSessionEntityTypeRequest* New() const final {
    return CreateMaybeMessage<GetSessionEntityTypeRequest>(nullptr);
  }

  GetSessionEntityTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSessionEntityTypeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSessionEntityTypeRequest& from);
  void MergeFrom(const GetSessionEntityTypeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSessionEntityTypeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.GetSessionEntityTypeRequest";
  }
  protected:
  explicit GetSessionEntityTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto);
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
};
// -------------------------------------------------------------------

class CreateSessionEntityTypeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest) */ {
 public:
  inline CreateSessionEntityTypeRequest() : CreateSessionEntityTypeRequest(nullptr) {}
  virtual ~CreateSessionEntityTypeRequest();

  CreateSessionEntityTypeRequest(const CreateSessionEntityTypeRequest& from);
  CreateSessionEntityTypeRequest(CreateSessionEntityTypeRequest&& from) noexcept
    : CreateSessionEntityTypeRequest() {
    *this = ::std::move(from);
  }

  inline CreateSessionEntityTypeRequest& operator=(const CreateSessionEntityTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSessionEntityTypeRequest& operator=(CreateSessionEntityTypeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateSessionEntityTypeRequest& default_instance();

  static inline const CreateSessionEntityTypeRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSessionEntityTypeRequest*>(
               &_CreateSessionEntityTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CreateSessionEntityTypeRequest& a, CreateSessionEntityTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateSessionEntityTypeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSessionEntityTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateSessionEntityTypeRequest* New() const final {
    return CreateMaybeMessage<CreateSessionEntityTypeRequest>(nullptr);
  }

  CreateSessionEntityTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateSessionEntityTypeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateSessionEntityTypeRequest& from);
  void MergeFrom(const CreateSessionEntityTypeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSessionEntityTypeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest";
  }
  protected:
  explicit CreateSessionEntityTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto);
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kSessionEntityTypeFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  void set_parent(const std::string& value);
  void set_parent(std::string&& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  std::string* mutable_parent();
  std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // .google.cloud.dialogflow.v2.SessionEntityType session_entity_type = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_session_entity_type() const;
  private:
  bool _internal_has_session_entity_type() const;
  public:
  void clear_session_entity_type();
  const ::google::cloud::dialogflow::v2::SessionEntityType& session_entity_type() const;
  ::google::cloud::dialogflow::v2::SessionEntityType* release_session_entity_type();
  ::google::cloud::dialogflow::v2::SessionEntityType* mutable_session_entity_type();
  void set_allocated_session_entity_type(::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type);
  private:
  const ::google::cloud::dialogflow::v2::SessionEntityType& _internal_session_entity_type() const;
  ::google::cloud::dialogflow::v2::SessionEntityType* _internal_mutable_session_entity_type();
  public:
  void unsafe_arena_set_allocated_session_entity_type(
      ::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type);
  ::google::cloud::dialogflow::v2::SessionEntityType* unsafe_arena_release_session_entity_type();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
  ::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
};
// -------------------------------------------------------------------

class UpdateSessionEntityTypeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest) */ {
 public:
  inline UpdateSessionEntityTypeRequest() : UpdateSessionEntityTypeRequest(nullptr) {}
  virtual ~UpdateSessionEntityTypeRequest();

  UpdateSessionEntityTypeRequest(const UpdateSessionEntityTypeRequest& from);
  UpdateSessionEntityTypeRequest(UpdateSessionEntityTypeRequest&& from) noexcept
    : UpdateSessionEntityTypeRequest() {
    *this = ::std::move(from);
  }

  inline UpdateSessionEntityTypeRequest& operator=(const UpdateSessionEntityTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSessionEntityTypeRequest& operator=(UpdateSessionEntityTypeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateSessionEntityTypeRequest& default_instance();

  static inline const UpdateSessionEntityTypeRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSessionEntityTypeRequest*>(
               &_UpdateSessionEntityTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(UpdateSessionEntityTypeRequest& a, UpdateSessionEntityTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateSessionEntityTypeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSessionEntityTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateSessionEntityTypeRequest* New() const final {
    return CreateMaybeMessage<UpdateSessionEntityTypeRequest>(nullptr);
  }

  UpdateSessionEntityTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSessionEntityTypeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateSessionEntityTypeRequest& from);
  void MergeFrom(const UpdateSessionEntityTypeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSessionEntityTypeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest";
  }
  protected:
  explicit UpdateSessionEntityTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto);
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionEntityTypeFieldNumber = 1,
    kUpdateMaskFieldNumber = 2,
  };
  // .google.cloud.dialogflow.v2.SessionEntityType session_entity_type = 1 [(.google.api.field_behavior) = REQUIRED];
  bool has_session_entity_type() const;
  private:
  bool _internal_has_session_entity_type() const;
  public:
  void clear_session_entity_type();
  const ::google::cloud::dialogflow::v2::SessionEntityType& session_entity_type() const;
  ::google::cloud::dialogflow::v2::SessionEntityType* release_session_entity_type();
  ::google::cloud::dialogflow::v2::SessionEntityType* mutable_session_entity_type();
  void set_allocated_session_entity_type(::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type);
  private:
  const ::google::cloud::dialogflow::v2::SessionEntityType& _internal_session_entity_type() const;
  ::google::cloud::dialogflow::v2::SessionEntityType* _internal_mutable_session_entity_type();
  public:
  void unsafe_arena_set_allocated_session_entity_type(
      ::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type);
  ::google::cloud::dialogflow::v2::SessionEntityType* unsafe_arena_release_session_entity_type();

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  bool has_update_mask() const;
  private:
  bool _internal_has_update_mask() const;
  public:
  void clear_update_mask();
  const PROTOBUF_NAMESPACE_ID::FieldMask& update_mask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* release_update_mask();
  PROTOBUF_NAMESPACE_ID::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  private:
  const PROTOBUF_NAMESPACE_ID::FieldMask& _internal_update_mask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_update_mask();
  public:
  void unsafe_arena_set_allocated_update_mask(
      PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type_;
  PROTOBUF_NAMESPACE_ID::FieldMask* update_mask_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
};
// -------------------------------------------------------------------

class DeleteSessionEntityTypeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest) */ {
 public:
  inline DeleteSessionEntityTypeRequest() : DeleteSessionEntityTypeRequest(nullptr) {}
  virtual ~DeleteSessionEntityTypeRequest();

  DeleteSessionEntityTypeRequest(const DeleteSessionEntityTypeRequest& from);
  DeleteSessionEntityTypeRequest(DeleteSessionEntityTypeRequest&& from) noexcept
    : DeleteSessionEntityTypeRequest() {
    *this = ::std::move(from);
  }

  inline DeleteSessionEntityTypeRequest& operator=(const DeleteSessionEntityTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSessionEntityTypeRequest& operator=(DeleteSessionEntityTypeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteSessionEntityTypeRequest& default_instance();

  static inline const DeleteSessionEntityTypeRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSessionEntityTypeRequest*>(
               &_DeleteSessionEntityTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteSessionEntityTypeRequest& a, DeleteSessionEntityTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteSessionEntityTypeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSessionEntityTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteSessionEntityTypeRequest* New() const final {
    return CreateMaybeMessage<DeleteSessionEntityTypeRequest>(nullptr);
  }

  DeleteSessionEntityTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSessionEntityTypeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteSessionEntityTypeRequest& from);
  void MergeFrom(const DeleteSessionEntityTypeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSessionEntityTypeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest";
  }
  protected:
  explicit DeleteSessionEntityTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto);
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SessionEntityType

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void SessionEntityType::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& SessionEntityType::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SessionEntityType.name)
  return _internal_name();
}
inline void SessionEntityType::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SessionEntityType.name)
}
inline std::string* SessionEntityType::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.SessionEntityType.name)
  return _internal_mutable_name();
}
inline const std::string& SessionEntityType::_internal_name() const {
  return name_.Get();
}
inline void SessionEntityType::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SessionEntityType::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.SessionEntityType.name)
}
inline void SessionEntityType::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.SessionEntityType.name)
}
inline void SessionEntityType::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.SessionEntityType.name)
}
inline std::string* SessionEntityType::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SessionEntityType::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.SessionEntityType.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SessionEntityType::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.SessionEntityType.name)
}

// .google.cloud.dialogflow.v2.SessionEntityType.EntityOverrideMode entity_override_mode = 2 [(.google.api.field_behavior) = REQUIRED];
inline void SessionEntityType::clear_entity_override_mode() {
  entity_override_mode_ = 0;
}
inline ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode SessionEntityType::_internal_entity_override_mode() const {
  return static_cast< ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode >(entity_override_mode_);
}
inline ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode SessionEntityType::entity_override_mode() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SessionEntityType.entity_override_mode)
  return _internal_entity_override_mode();
}
inline void SessionEntityType::_internal_set_entity_override_mode(::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode value) {
  
  entity_override_mode_ = value;
}
inline void SessionEntityType::set_entity_override_mode(::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode value) {
  _internal_set_entity_override_mode(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SessionEntityType.entity_override_mode)
}

// repeated .google.cloud.dialogflow.v2.EntityType.Entity entities = 3 [(.google.api.field_behavior) = REQUIRED];
inline int SessionEntityType::_internal_entities_size() const {
  return entities_.size();
}
inline int SessionEntityType::entities_size() const {
  return _internal_entities_size();
}
inline ::google::cloud::dialogflow::v2::EntityType_Entity* SessionEntityType::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.SessionEntityType.entities)
  return entities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::EntityType_Entity >*
SessionEntityType::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.SessionEntityType.entities)
  return &entities_;
}
inline const ::google::cloud::dialogflow::v2::EntityType_Entity& SessionEntityType::_internal_entities(int index) const {
  return entities_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::EntityType_Entity& SessionEntityType::entities(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SessionEntityType.entities)
  return _internal_entities(index);
}
inline ::google::cloud::dialogflow::v2::EntityType_Entity* SessionEntityType::_internal_add_entities() {
  return entities_.Add();
}
inline ::google::cloud::dialogflow::v2::EntityType_Entity* SessionEntityType::add_entities() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.SessionEntityType.entities)
  return _internal_add_entities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::EntityType_Entity >&
SessionEntityType::entities() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.SessionEntityType.entities)
  return entities_;
}

// -------------------------------------------------------------------

// ListSessionEntityTypesRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void ListSessionEntityTypesRequest::clear_parent() {
  parent_.ClearToEmpty();
}
inline const std::string& ListSessionEntityTypesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
  return _internal_parent();
}
inline void ListSessionEntityTypesRequest::set_parent(const std::string& value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
}
inline std::string* ListSessionEntityTypesRequest::mutable_parent() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
  return _internal_mutable_parent();
}
inline const std::string& ListSessionEntityTypesRequest::_internal_parent() const {
  return parent_.Get();
}
inline void ListSessionEntityTypesRequest::_internal_set_parent(const std::string& value) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListSessionEntityTypesRequest::set_parent(std::string&& value) {
  
  parent_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
}
inline void ListSessionEntityTypesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
}
inline void ListSessionEntityTypesRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
}
inline std::string* ListSessionEntityTypesRequest::_internal_mutable_parent() {
  
  return parent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListSessionEntityTypesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
  return parent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListSessionEntityTypesRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), parent,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.parent)
}

// int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void ListSessionEntityTypesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListSessionEntityTypesRequest::_internal_page_size() const {
  return page_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListSessionEntityTypesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_size)
  return _internal_page_size();
}
inline void ListSessionEntityTypesRequest::_internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_size_ = value;
}
inline void ListSessionEntityTypesRequest::set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_size)
}

// string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
inline void ListSessionEntityTypesRequest::clear_page_token() {
  page_token_.ClearToEmpty();
}
inline const std::string& ListSessionEntityTypesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
  return _internal_page_token();
}
inline void ListSessionEntityTypesRequest::set_page_token(const std::string& value) {
  _internal_set_page_token(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
}
inline std::string* ListSessionEntityTypesRequest::mutable_page_token() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
  return _internal_mutable_page_token();
}
inline const std::string& ListSessionEntityTypesRequest::_internal_page_token() const {
  return page_token_.Get();
}
inline void ListSessionEntityTypesRequest::_internal_set_page_token(const std::string& value) {
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListSessionEntityTypesRequest::set_page_token(std::string&& value) {
  
  page_token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
}
inline void ListSessionEntityTypesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
}
inline void ListSessionEntityTypesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
}
inline std::string* ListSessionEntityTypesRequest::_internal_mutable_page_token() {
  
  return page_token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListSessionEntityTypesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
  return page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListSessionEntityTypesRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListSessionEntityTypesRequest.page_token)
}

// -------------------------------------------------------------------

// ListSessionEntityTypesResponse

// repeated .google.cloud.dialogflow.v2.SessionEntityType session_entity_types = 1;
inline int ListSessionEntityTypesResponse::_internal_session_entity_types_size() const {
  return session_entity_types_.size();
}
inline int ListSessionEntityTypesResponse::session_entity_types_size() const {
  return _internal_session_entity_types_size();
}
inline void ListSessionEntityTypesResponse::clear_session_entity_types() {
  session_entity_types_.Clear();
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* ListSessionEntityTypesResponse::mutable_session_entity_types(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.session_entity_types)
  return session_entity_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >*
ListSessionEntityTypesResponse::mutable_session_entity_types() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.session_entity_types)
  return &session_entity_types_;
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& ListSessionEntityTypesResponse::_internal_session_entity_types(int index) const {
  return session_entity_types_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& ListSessionEntityTypesResponse::session_entity_types(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.session_entity_types)
  return _internal_session_entity_types(index);
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* ListSessionEntityTypesResponse::_internal_add_session_entity_types() {
  return session_entity_types_.Add();
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* ListSessionEntityTypesResponse::add_session_entity_types() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.session_entity_types)
  return _internal_add_session_entity_types();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >&
ListSessionEntityTypesResponse::session_entity_types() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.session_entity_types)
  return session_entity_types_;
}

// string next_page_token = 2;
inline void ListSessionEntityTypesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty();
}
inline const std::string& ListSessionEntityTypesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
  return _internal_next_page_token();
}
inline void ListSessionEntityTypesResponse::set_next_page_token(const std::string& value) {
  _internal_set_next_page_token(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
}
inline std::string* ListSessionEntityTypesResponse::mutable_next_page_token() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
  return _internal_mutable_next_page_token();
}
inline const std::string& ListSessionEntityTypesResponse::_internal_next_page_token() const {
  return next_page_token_.Get();
}
inline void ListSessionEntityTypesResponse::_internal_set_next_page_token(const std::string& value) {
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListSessionEntityTypesResponse::set_next_page_token(std::string&& value) {
  
  next_page_token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
}
inline void ListSessionEntityTypesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
}
inline void ListSessionEntityTypesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
}
inline std::string* ListSessionEntityTypesResponse::_internal_mutable_next_page_token() {
  
  return next_page_token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListSessionEntityTypesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
  return next_page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListSessionEntityTypesResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListSessionEntityTypesResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetSessionEntityTypeRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void GetSessionEntityTypeRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetSessionEntityTypeRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
  return _internal_name();
}
inline void GetSessionEntityTypeRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
}
inline std::string* GetSessionEntityTypeRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
  return _internal_mutable_name();
}
inline const std::string& GetSessionEntityTypeRequest::_internal_name() const {
  return name_.Get();
}
inline void GetSessionEntityTypeRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetSessionEntityTypeRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
}
inline void GetSessionEntityTypeRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
}
inline void GetSessionEntityTypeRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
}
inline std::string* GetSessionEntityTypeRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetSessionEntityTypeRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetSessionEntityTypeRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.GetSessionEntityTypeRequest.name)
}

// -------------------------------------------------------------------

// CreateSessionEntityTypeRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void CreateSessionEntityTypeRequest::clear_parent() {
  parent_.ClearToEmpty();
}
inline const std::string& CreateSessionEntityTypeRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
  return _internal_parent();
}
inline void CreateSessionEntityTypeRequest::set_parent(const std::string& value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
}
inline std::string* CreateSessionEntityTypeRequest::mutable_parent() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
  return _internal_mutable_parent();
}
inline const std::string& CreateSessionEntityTypeRequest::_internal_parent() const {
  return parent_.Get();
}
inline void CreateSessionEntityTypeRequest::_internal_set_parent(const std::string& value) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CreateSessionEntityTypeRequest::set_parent(std::string&& value) {
  
  parent_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
}
inline void CreateSessionEntityTypeRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
}
inline void CreateSessionEntityTypeRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
}
inline std::string* CreateSessionEntityTypeRequest::_internal_mutable_parent() {
  
  return parent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CreateSessionEntityTypeRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
  return parent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateSessionEntityTypeRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), parent,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.parent)
}

// .google.cloud.dialogflow.v2.SessionEntityType session_entity_type = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool CreateSessionEntityTypeRequest::_internal_has_session_entity_type() const {
  return this != internal_default_instance() && session_entity_type_ != nullptr;
}
inline bool CreateSessionEntityTypeRequest::has_session_entity_type() const {
  return _internal_has_session_entity_type();
}
inline void CreateSessionEntityTypeRequest::clear_session_entity_type() {
  if (GetArena() == nullptr && session_entity_type_ != nullptr) {
    delete session_entity_type_;
  }
  session_entity_type_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& CreateSessionEntityTypeRequest::_internal_session_entity_type() const {
  const ::google::cloud::dialogflow::v2::SessionEntityType* p = session_entity_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::SessionEntityType&>(
      ::google::cloud::dialogflow::v2::_SessionEntityType_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& CreateSessionEntityTypeRequest::session_entity_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.session_entity_type)
  return _internal_session_entity_type();
}
inline void CreateSessionEntityTypeRequest::unsafe_arena_set_allocated_session_entity_type(
    ::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(session_entity_type_);
  }
  session_entity_type_ = session_entity_type;
  if (session_entity_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.session_entity_type)
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* CreateSessionEntityTypeRequest::release_session_entity_type() {
  
  ::google::cloud::dialogflow::v2::SessionEntityType* temp = session_entity_type_;
  session_entity_type_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* CreateSessionEntityTypeRequest::unsafe_arena_release_session_entity_type() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.session_entity_type)
  
  ::google::cloud::dialogflow::v2::SessionEntityType* temp = session_entity_type_;
  session_entity_type_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* CreateSessionEntityTypeRequest::_internal_mutable_session_entity_type() {
  
  if (session_entity_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::SessionEntityType>(GetArena());
    session_entity_type_ = p;
  }
  return session_entity_type_;
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* CreateSessionEntityTypeRequest::mutable_session_entity_type() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.session_entity_type)
  return _internal_mutable_session_entity_type();
}
inline void CreateSessionEntityTypeRequest::set_allocated_session_entity_type(::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete session_entity_type_;
  }
  if (session_entity_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(session_entity_type);
    if (message_arena != submessage_arena) {
      session_entity_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, session_entity_type, submessage_arena);
    }
    
  } else {
    
  }
  session_entity_type_ = session_entity_type;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateSessionEntityTypeRequest.session_entity_type)
}

// -------------------------------------------------------------------

// UpdateSessionEntityTypeRequest

// .google.cloud.dialogflow.v2.SessionEntityType session_entity_type = 1 [(.google.api.field_behavior) = REQUIRED];
inline bool UpdateSessionEntityTypeRequest::_internal_has_session_entity_type() const {
  return this != internal_default_instance() && session_entity_type_ != nullptr;
}
inline bool UpdateSessionEntityTypeRequest::has_session_entity_type() const {
  return _internal_has_session_entity_type();
}
inline void UpdateSessionEntityTypeRequest::clear_session_entity_type() {
  if (GetArena() == nullptr && session_entity_type_ != nullptr) {
    delete session_entity_type_;
  }
  session_entity_type_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& UpdateSessionEntityTypeRequest::_internal_session_entity_type() const {
  const ::google::cloud::dialogflow::v2::SessionEntityType* p = session_entity_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::SessionEntityType&>(
      ::google::cloud::dialogflow::v2::_SessionEntityType_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& UpdateSessionEntityTypeRequest::session_entity_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.session_entity_type)
  return _internal_session_entity_type();
}
inline void UpdateSessionEntityTypeRequest::unsafe_arena_set_allocated_session_entity_type(
    ::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(session_entity_type_);
  }
  session_entity_type_ = session_entity_type;
  if (session_entity_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.session_entity_type)
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* UpdateSessionEntityTypeRequest::release_session_entity_type() {
  
  ::google::cloud::dialogflow::v2::SessionEntityType* temp = session_entity_type_;
  session_entity_type_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* UpdateSessionEntityTypeRequest::unsafe_arena_release_session_entity_type() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.session_entity_type)
  
  ::google::cloud::dialogflow::v2::SessionEntityType* temp = session_entity_type_;
  session_entity_type_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* UpdateSessionEntityTypeRequest::_internal_mutable_session_entity_type() {
  
  if (session_entity_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::SessionEntityType>(GetArena());
    session_entity_type_ = p;
  }
  return session_entity_type_;
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* UpdateSessionEntityTypeRequest::mutable_session_entity_type() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.session_entity_type)
  return _internal_mutable_session_entity_type();
}
inline void UpdateSessionEntityTypeRequest::set_allocated_session_entity_type(::google::cloud::dialogflow::v2::SessionEntityType* session_entity_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete session_entity_type_;
  }
  if (session_entity_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(session_entity_type);
    if (message_arena != submessage_arena) {
      session_entity_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, session_entity_type, submessage_arena);
    }
    
  } else {
    
  }
  session_entity_type_ = session_entity_type;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.session_entity_type)
}

// .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
inline bool UpdateSessionEntityTypeRequest::_internal_has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != nullptr;
}
inline bool UpdateSessionEntityTypeRequest::has_update_mask() const {
  return _internal_has_update_mask();
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateSessionEntityTypeRequest::_internal_update_mask() const {
  const PROTOBUF_NAMESPACE_ID::FieldMask* p = update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FieldMask&>(
      PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateSessionEntityTypeRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.update_mask)
  return _internal_update_mask();
}
inline void UpdateSessionEntityTypeRequest::unsafe_arena_set_allocated_update_mask(
    PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask_);
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.update_mask)
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateSessionEntityTypeRequest::release_update_mask() {
  
  PROTOBUF_NAMESPACE_ID::FieldMask* temp = update_mask_;
  update_mask_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateSessionEntityTypeRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.update_mask)
  
  PROTOBUF_NAMESPACE_ID::FieldMask* temp = update_mask_;
  update_mask_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateSessionEntityTypeRequest::_internal_mutable_update_mask() {
  
  if (update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FieldMask>(GetArena());
    update_mask_ = p;
  }
  return update_mask_;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateSessionEntityTypeRequest::mutable_update_mask() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.update_mask)
  return _internal_mutable_update_mask();
}
inline void UpdateSessionEntityTypeRequest::set_allocated_update_mask(PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask)->GetArena();
    if (message_arena != submessage_arena) {
      update_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UpdateSessionEntityTypeRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteSessionEntityTypeRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void DeleteSessionEntityTypeRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& DeleteSessionEntityTypeRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
  return _internal_name();
}
inline void DeleteSessionEntityTypeRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
}
inline std::string* DeleteSessionEntityTypeRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
  return _internal_mutable_name();
}
inline const std::string& DeleteSessionEntityTypeRequest::_internal_name() const {
  return name_.Get();
}
inline void DeleteSessionEntityTypeRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DeleteSessionEntityTypeRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
}
inline void DeleteSessionEntityTypeRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
}
inline void DeleteSessionEntityTypeRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
}
inline std::string* DeleteSessionEntityTypeRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DeleteSessionEntityTypeRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteSessionEntityTypeRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeleteSessionEntityTypeRequest.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode>() {
  return ::google::cloud::dialogflow::v2::SessionEntityType_EntityOverrideMode_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto
