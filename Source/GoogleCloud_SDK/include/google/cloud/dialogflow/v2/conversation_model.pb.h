// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2/conversation_model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {
class ArticleSuggestionModelMetadata;
struct ArticleSuggestionModelMetadataDefaultTypeInternal;
extern ArticleSuggestionModelMetadataDefaultTypeInternal _ArticleSuggestionModelMetadata_default_instance_;
class ConversationModel;
struct ConversationModelDefaultTypeInternal;
extern ConversationModelDefaultTypeInternal _ConversationModel_default_instance_;
class ConversationModelEvaluation;
struct ConversationModelEvaluationDefaultTypeInternal;
extern ConversationModelEvaluationDefaultTypeInternal _ConversationModelEvaluation_default_instance_;
class CreateConversationModelEvaluationOperationMetadata;
struct CreateConversationModelEvaluationOperationMetadataDefaultTypeInternal;
extern CreateConversationModelEvaluationOperationMetadataDefaultTypeInternal _CreateConversationModelEvaluationOperationMetadata_default_instance_;
class CreateConversationModelEvaluationRequest;
struct CreateConversationModelEvaluationRequestDefaultTypeInternal;
extern CreateConversationModelEvaluationRequestDefaultTypeInternal _CreateConversationModelEvaluationRequest_default_instance_;
class CreateConversationModelOperationMetadata;
struct CreateConversationModelOperationMetadataDefaultTypeInternal;
extern CreateConversationModelOperationMetadataDefaultTypeInternal _CreateConversationModelOperationMetadata_default_instance_;
class CreateConversationModelRequest;
struct CreateConversationModelRequestDefaultTypeInternal;
extern CreateConversationModelRequestDefaultTypeInternal _CreateConversationModelRequest_default_instance_;
class DeleteConversationModelOperationMetadata;
struct DeleteConversationModelOperationMetadataDefaultTypeInternal;
extern DeleteConversationModelOperationMetadataDefaultTypeInternal _DeleteConversationModelOperationMetadata_default_instance_;
class DeleteConversationModelRequest;
struct DeleteConversationModelRequestDefaultTypeInternal;
extern DeleteConversationModelRequestDefaultTypeInternal _DeleteConversationModelRequest_default_instance_;
class DeployConversationModelOperationMetadata;
struct DeployConversationModelOperationMetadataDefaultTypeInternal;
extern DeployConversationModelOperationMetadataDefaultTypeInternal _DeployConversationModelOperationMetadata_default_instance_;
class DeployConversationModelRequest;
struct DeployConversationModelRequestDefaultTypeInternal;
extern DeployConversationModelRequestDefaultTypeInternal _DeployConversationModelRequest_default_instance_;
class EvaluationConfig;
struct EvaluationConfigDefaultTypeInternal;
extern EvaluationConfigDefaultTypeInternal _EvaluationConfig_default_instance_;
class EvaluationConfig_SmartComposeConfig;
struct EvaluationConfig_SmartComposeConfigDefaultTypeInternal;
extern EvaluationConfig_SmartComposeConfigDefaultTypeInternal _EvaluationConfig_SmartComposeConfig_default_instance_;
class EvaluationConfig_SmartReplyConfig;
struct EvaluationConfig_SmartReplyConfigDefaultTypeInternal;
extern EvaluationConfig_SmartReplyConfigDefaultTypeInternal _EvaluationConfig_SmartReplyConfig_default_instance_;
class GetConversationModelEvaluationRequest;
struct GetConversationModelEvaluationRequestDefaultTypeInternal;
extern GetConversationModelEvaluationRequestDefaultTypeInternal _GetConversationModelEvaluationRequest_default_instance_;
class GetConversationModelRequest;
struct GetConversationModelRequestDefaultTypeInternal;
extern GetConversationModelRequestDefaultTypeInternal _GetConversationModelRequest_default_instance_;
class InputDataset;
struct InputDatasetDefaultTypeInternal;
extern InputDatasetDefaultTypeInternal _InputDataset_default_instance_;
class ListConversationModelEvaluationsRequest;
struct ListConversationModelEvaluationsRequestDefaultTypeInternal;
extern ListConversationModelEvaluationsRequestDefaultTypeInternal _ListConversationModelEvaluationsRequest_default_instance_;
class ListConversationModelEvaluationsResponse;
struct ListConversationModelEvaluationsResponseDefaultTypeInternal;
extern ListConversationModelEvaluationsResponseDefaultTypeInternal _ListConversationModelEvaluationsResponse_default_instance_;
class ListConversationModelsRequest;
struct ListConversationModelsRequestDefaultTypeInternal;
extern ListConversationModelsRequestDefaultTypeInternal _ListConversationModelsRequest_default_instance_;
class ListConversationModelsResponse;
struct ListConversationModelsResponseDefaultTypeInternal;
extern ListConversationModelsResponseDefaultTypeInternal _ListConversationModelsResponse_default_instance_;
class SmartReplyMetrics;
struct SmartReplyMetricsDefaultTypeInternal;
extern SmartReplyMetricsDefaultTypeInternal _SmartReplyMetrics_default_instance_;
class SmartReplyMetrics_TopNMetrics;
struct SmartReplyMetrics_TopNMetricsDefaultTypeInternal;
extern SmartReplyMetrics_TopNMetricsDefaultTypeInternal _SmartReplyMetrics_TopNMetrics_default_instance_;
class SmartReplyModelMetadata;
struct SmartReplyModelMetadataDefaultTypeInternal;
extern SmartReplyModelMetadataDefaultTypeInternal _SmartReplyModelMetadata_default_instance_;
class UndeployConversationModelOperationMetadata;
struct UndeployConversationModelOperationMetadataDefaultTypeInternal;
extern UndeployConversationModelOperationMetadataDefaultTypeInternal _UndeployConversationModelOperationMetadata_default_instance_;
class UndeployConversationModelRequest;
struct UndeployConversationModelRequestDefaultTypeInternal;
extern UndeployConversationModelRequestDefaultTypeInternal _UndeployConversationModelRequest_default_instance_;
}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::ConversationModel* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ConversationModel>(Arena*);
template<> ::google::cloud::dialogflow::v2::ConversationModelEvaluation* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ConversationModelEvaluation>(Arena*);
template<> ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::CreateConversationModelEvaluationRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::CreateConversationModelRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::CreateConversationModelRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeleteConversationModelOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeleteConversationModelOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeleteConversationModelRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeleteConversationModelRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeployConversationModelOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeployConversationModelOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeployConversationModelRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeployConversationModelRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::EvaluationConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::EvaluationConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::GetConversationModelEvaluationRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::GetConversationModelEvaluationRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::GetConversationModelRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::GetConversationModelRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::InputDataset* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::InputDataset>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListConversationModelEvaluationsRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListConversationModelEvaluationsRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListConversationModelEvaluationsResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListConversationModelEvaluationsResponse>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListConversationModelsRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListConversationModelsRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListConversationModelsResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListConversationModelsResponse>(Arena*);
template<> ::google::cloud::dialogflow::v2::SmartReplyMetrics* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::SmartReplyMetrics>(Arena*);
template<> ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics>(Arena*);
template<> ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::SmartReplyModelMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::UndeployConversationModelOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::UndeployConversationModelOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::UndeployConversationModelRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::UndeployConversationModelRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {

enum ConversationModel_State : int {
  ConversationModel_State_STATE_UNSPECIFIED = 0,
  ConversationModel_State_CREATING = 1,
  ConversationModel_State_UNDEPLOYED = 2,
  ConversationModel_State_DEPLOYING = 3,
  ConversationModel_State_DEPLOYED = 4,
  ConversationModel_State_UNDEPLOYING = 5,
  ConversationModel_State_DELETING = 6,
  ConversationModel_State_FAILED = 7,
  ConversationModel_State_PENDING = 8,
  ConversationModel_State_ConversationModel_State_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  ConversationModel_State_ConversationModel_State_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool ConversationModel_State_IsValid(int value);
constexpr ConversationModel_State ConversationModel_State_State_MIN = ConversationModel_State_STATE_UNSPECIFIED;
constexpr ConversationModel_State ConversationModel_State_State_MAX = ConversationModel_State_PENDING;
constexpr int ConversationModel_State_State_ARRAYSIZE = ConversationModel_State_State_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConversationModel_State_descriptor();
template<typename T>
inline const std::string& ConversationModel_State_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ConversationModel_State>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ConversationModel_State_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ConversationModel_State_descriptor(), enum_t_value);
}
inline bool ConversationModel_State_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ConversationModel_State* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ConversationModel_State>(
    ConversationModel_State_descriptor(), name, value);
}
enum ConversationModel_ModelType : int {
  ConversationModel_ModelType_MODEL_TYPE_UNSPECIFIED = 0,
  ConversationModel_ModelType_SMART_REPLY_DUAL_ENCODER_MODEL = 2,
  ConversationModel_ModelType_SMART_REPLY_BERT_MODEL = 6,
  ConversationModel_ModelType_ConversationModel_ModelType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  ConversationModel_ModelType_ConversationModel_ModelType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool ConversationModel_ModelType_IsValid(int value);
constexpr ConversationModel_ModelType ConversationModel_ModelType_ModelType_MIN = ConversationModel_ModelType_MODEL_TYPE_UNSPECIFIED;
constexpr ConversationModel_ModelType ConversationModel_ModelType_ModelType_MAX = ConversationModel_ModelType_SMART_REPLY_BERT_MODEL;
constexpr int ConversationModel_ModelType_ModelType_ARRAYSIZE = ConversationModel_ModelType_ModelType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConversationModel_ModelType_descriptor();
template<typename T>
inline const std::string& ConversationModel_ModelType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ConversationModel_ModelType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ConversationModel_ModelType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ConversationModel_ModelType_descriptor(), enum_t_value);
}
inline bool ConversationModel_ModelType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ConversationModel_ModelType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ConversationModel_ModelType>(
    ConversationModel_ModelType_descriptor(), name, value);
}
enum CreateConversationModelOperationMetadata_State : int {
  CreateConversationModelOperationMetadata_State_STATE_UNSPECIFIED = 0,
  CreateConversationModelOperationMetadata_State_PENDING = 1,
  CreateConversationModelOperationMetadata_State_SUCCEEDED = 2,
  CreateConversationModelOperationMetadata_State_FAILED = 3,
  CreateConversationModelOperationMetadata_State_CANCELLED = 4,
  CreateConversationModelOperationMetadata_State_CANCELLING = 5,
  CreateConversationModelOperationMetadata_State_TRAINING = 6,
  CreateConversationModelOperationMetadata_State_CreateConversationModelOperationMetadata_State_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  CreateConversationModelOperationMetadata_State_CreateConversationModelOperationMetadata_State_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool CreateConversationModelOperationMetadata_State_IsValid(int value);
constexpr CreateConversationModelOperationMetadata_State CreateConversationModelOperationMetadata_State_State_MIN = CreateConversationModelOperationMetadata_State_STATE_UNSPECIFIED;
constexpr CreateConversationModelOperationMetadata_State CreateConversationModelOperationMetadata_State_State_MAX = CreateConversationModelOperationMetadata_State_TRAINING;
constexpr int CreateConversationModelOperationMetadata_State_State_ARRAYSIZE = CreateConversationModelOperationMetadata_State_State_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CreateConversationModelOperationMetadata_State_descriptor();
template<typename T>
inline const std::string& CreateConversationModelOperationMetadata_State_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CreateConversationModelOperationMetadata_State>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CreateConversationModelOperationMetadata_State_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CreateConversationModelOperationMetadata_State_descriptor(), enum_t_value);
}
inline bool CreateConversationModelOperationMetadata_State_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CreateConversationModelOperationMetadata_State* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CreateConversationModelOperationMetadata_State>(
    CreateConversationModelOperationMetadata_State_descriptor(), name, value);
}
enum CreateConversationModelEvaluationOperationMetadata_State : int {
  CreateConversationModelEvaluationOperationMetadata_State_STATE_UNSPECIFIED = 0,
  CreateConversationModelEvaluationOperationMetadata_State_INITIALIZING = 1,
  CreateConversationModelEvaluationOperationMetadata_State_RUNNING = 2,
  CreateConversationModelEvaluationOperationMetadata_State_CANCELLED = 3,
  CreateConversationModelEvaluationOperationMetadata_State_SUCCEEDED = 4,
  CreateConversationModelEvaluationOperationMetadata_State_FAILED = 5,
  CreateConversationModelEvaluationOperationMetadata_State_CreateConversationModelEvaluationOperationMetadata_State_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  CreateConversationModelEvaluationOperationMetadata_State_CreateConversationModelEvaluationOperationMetadata_State_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool CreateConversationModelEvaluationOperationMetadata_State_IsValid(int value);
constexpr CreateConversationModelEvaluationOperationMetadata_State CreateConversationModelEvaluationOperationMetadata_State_State_MIN = CreateConversationModelEvaluationOperationMetadata_State_STATE_UNSPECIFIED;
constexpr CreateConversationModelEvaluationOperationMetadata_State CreateConversationModelEvaluationOperationMetadata_State_State_MAX = CreateConversationModelEvaluationOperationMetadata_State_FAILED;
constexpr int CreateConversationModelEvaluationOperationMetadata_State_State_ARRAYSIZE = CreateConversationModelEvaluationOperationMetadata_State_State_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CreateConversationModelEvaluationOperationMetadata_State_descriptor();
template<typename T>
inline const std::string& CreateConversationModelEvaluationOperationMetadata_State_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CreateConversationModelEvaluationOperationMetadata_State>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CreateConversationModelEvaluationOperationMetadata_State_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CreateConversationModelEvaluationOperationMetadata_State_descriptor(), enum_t_value);
}
inline bool CreateConversationModelEvaluationOperationMetadata_State_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CreateConversationModelEvaluationOperationMetadata_State* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CreateConversationModelEvaluationOperationMetadata_State>(
    CreateConversationModelEvaluationOperationMetadata_State_descriptor(), name, value);
}
// ===================================================================

class ConversationModel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ConversationModel) */ {
 public:
  inline ConversationModel() : ConversationModel(nullptr) {}
  ~ConversationModel() override;
  explicit PROTOBUF_CONSTEXPR ConversationModel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConversationModel(const ConversationModel& from);
  ConversationModel(ConversationModel&& from) noexcept
    : ConversationModel() {
    *this = ::std::move(from);
  }

  inline ConversationModel& operator=(const ConversationModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConversationModel& operator=(ConversationModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConversationModel& default_instance() {
    return *internal_default_instance();
  }
  enum ModelMetadataCase {
    kArticleSuggestionModelMetadata = 8,
    kSmartReplyModelMetadata = 9,
    MODEL_METADATA_NOT_SET = 0,
  };

  static inline const ConversationModel* internal_default_instance() {
    return reinterpret_cast<const ConversationModel*>(
               &_ConversationModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConversationModel& a, ConversationModel& b) {
    a.Swap(&b);
  }
  inline void Swap(ConversationModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConversationModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConversationModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConversationModel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ConversationModel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ConversationModel& from) {
    ConversationModel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConversationModel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ConversationModel";
  }
  protected:
  explicit ConversationModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConversationModel_State State;
  static constexpr State STATE_UNSPECIFIED =
    ConversationModel_State_STATE_UNSPECIFIED;
  static constexpr State CREATING =
    ConversationModel_State_CREATING;
  static constexpr State UNDEPLOYED =
    ConversationModel_State_UNDEPLOYED;
  static constexpr State DEPLOYING =
    ConversationModel_State_DEPLOYING;
  static constexpr State DEPLOYED =
    ConversationModel_State_DEPLOYED;
  static constexpr State UNDEPLOYING =
    ConversationModel_State_UNDEPLOYING;
  static constexpr State DELETING =
    ConversationModel_State_DELETING;
  static constexpr State FAILED =
    ConversationModel_State_FAILED;
  static constexpr State PENDING =
    ConversationModel_State_PENDING;
  static inline bool State_IsValid(int value) {
    return ConversationModel_State_IsValid(value);
  }
  static constexpr State State_MIN =
    ConversationModel_State_State_MIN;
  static constexpr State State_MAX =
    ConversationModel_State_State_MAX;
  static constexpr int State_ARRAYSIZE =
    ConversationModel_State_State_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  State_descriptor() {
    return ConversationModel_State_descriptor();
  }
  template<typename T>
  static inline const std::string& State_Name(T enum_t_value) {
    static_assert(::std::is_same<T, State>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function State_Name.");
    return ConversationModel_State_Name(enum_t_value);
  }
  static inline bool State_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      State* value) {
    return ConversationModel_State_Parse(name, value);
  }

  typedef ConversationModel_ModelType ModelType;
  static constexpr ModelType MODEL_TYPE_UNSPECIFIED =
    ConversationModel_ModelType_MODEL_TYPE_UNSPECIFIED;
  static constexpr ModelType SMART_REPLY_DUAL_ENCODER_MODEL =
    ConversationModel_ModelType_SMART_REPLY_DUAL_ENCODER_MODEL;
  static constexpr ModelType SMART_REPLY_BERT_MODEL =
    ConversationModel_ModelType_SMART_REPLY_BERT_MODEL;
  static inline bool ModelType_IsValid(int value) {
    return ConversationModel_ModelType_IsValid(value);
  }
  static constexpr ModelType ModelType_MIN =
    ConversationModel_ModelType_ModelType_MIN;
  static constexpr ModelType ModelType_MAX =
    ConversationModel_ModelType_ModelType_MAX;
  static constexpr int ModelType_ARRAYSIZE =
    ConversationModel_ModelType_ModelType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ModelType_descriptor() {
    return ConversationModel_ModelType_descriptor();
  }
  template<typename T>
  static inline const std::string& ModelType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ModelType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ModelType_Name.");
    return ConversationModel_ModelType_Name(enum_t_value);
  }
  static inline bool ModelType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ModelType* value) {
    return ConversationModel_ModelType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDatasetsFieldNumber = 4,
    kNameFieldNumber = 1,
    kDisplayNameFieldNumber = 2,
    kLanguageCodeFieldNumber = 19,
    kCreateTimeFieldNumber = 3,
    kStateFieldNumber = 7,
    kArticleSuggestionModelMetadataFieldNumber = 8,
    kSmartReplyModelMetadataFieldNumber = 9,
  };
  // repeated .google.cloud.dialogflow.v2.InputDataset datasets = 4 [(.google.api.field_behavior) = REQUIRED];
  int datasets_size() const;
  private:
  int _internal_datasets_size() const;
  public:
  void clear_datasets();
  ::google::cloud::dialogflow::v2::InputDataset* mutable_datasets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >*
      mutable_datasets();
  private:
  const ::google::cloud::dialogflow::v2::InputDataset& _internal_datasets(int index) const;
  ::google::cloud::dialogflow::v2::InputDataset* _internal_add_datasets();
  public:
  const ::google::cloud::dialogflow::v2::InputDataset& datasets(int index) const;
  ::google::cloud::dialogflow::v2::InputDataset* add_datasets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >&
      datasets() const;

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_display_name();
  const std::string& display_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_display_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* display_name);
  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(const std::string& value);
  std::string* _internal_mutable_display_name();
  public:

  // string language_code = 19;
  void clear_language_code();
  const std::string& language_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_language_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_language_code();
  PROTOBUF_NODISCARD std::string* release_language_code();
  void set_allocated_language_code(std::string* language_code);
  private:
  const std::string& _internal_language_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_language_code(const std::string& value);
  std::string* _internal_mutable_language_code();
  public:

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.cloud.dialogflow.v2.ConversationModel.State state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_state();
  ::google::cloud::dialogflow::v2::ConversationModel_State state() const;
  void set_state(::google::cloud::dialogflow::v2::ConversationModel_State value);
  private:
  ::google::cloud::dialogflow::v2::ConversationModel_State _internal_state() const;
  void _internal_set_state(::google::cloud::dialogflow::v2::ConversationModel_State value);
  public:

  // .google.cloud.dialogflow.v2.ArticleSuggestionModelMetadata article_suggestion_model_metadata = 8;
  bool has_article_suggestion_model_metadata() const;
  private:
  bool _internal_has_article_suggestion_model_metadata() const;
  public:
  void clear_article_suggestion_model_metadata();
  const ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata& article_suggestion_model_metadata() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* release_article_suggestion_model_metadata();
  ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* mutable_article_suggestion_model_metadata();
  void set_allocated_article_suggestion_model_metadata(::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* article_suggestion_model_metadata);
  private:
  const ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata& _internal_article_suggestion_model_metadata() const;
  ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* _internal_mutable_article_suggestion_model_metadata();
  public:
  void unsafe_arena_set_allocated_article_suggestion_model_metadata(
      ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* article_suggestion_model_metadata);
  ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* unsafe_arena_release_article_suggestion_model_metadata();

  // .google.cloud.dialogflow.v2.SmartReplyModelMetadata smart_reply_model_metadata = 9;
  bool has_smart_reply_model_metadata() const;
  private:
  bool _internal_has_smart_reply_model_metadata() const;
  public:
  void clear_smart_reply_model_metadata();
  const ::google::cloud::dialogflow::v2::SmartReplyModelMetadata& smart_reply_model_metadata() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* release_smart_reply_model_metadata();
  ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* mutable_smart_reply_model_metadata();
  void set_allocated_smart_reply_model_metadata(::google::cloud::dialogflow::v2::SmartReplyModelMetadata* smart_reply_model_metadata);
  private:
  const ::google::cloud::dialogflow::v2::SmartReplyModelMetadata& _internal_smart_reply_model_metadata() const;
  ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* _internal_mutable_smart_reply_model_metadata();
  public:
  void unsafe_arena_set_allocated_smart_reply_model_metadata(
      ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* smart_reply_model_metadata);
  ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* unsafe_arena_release_smart_reply_model_metadata();

  void clear_model_metadata();
  ModelMetadataCase model_metadata_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ConversationModel)
 private:
  class _Internal;
  void set_has_article_suggestion_model_metadata();
  void set_has_smart_reply_model_metadata();

  inline bool has_model_metadata() const;
  inline void clear_has_model_metadata();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset > datasets_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr display_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr language_code_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    int state_;
    union ModelMetadataUnion {
      constexpr ModelMetadataUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* article_suggestion_model_metadata_;
      ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* smart_reply_model_metadata_;
    } model_metadata_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class ConversationModelEvaluation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ConversationModelEvaluation) */ {
 public:
  inline ConversationModelEvaluation() : ConversationModelEvaluation(nullptr) {}
  ~ConversationModelEvaluation() override;
  explicit PROTOBUF_CONSTEXPR ConversationModelEvaluation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConversationModelEvaluation(const ConversationModelEvaluation& from);
  ConversationModelEvaluation(ConversationModelEvaluation&& from) noexcept
    : ConversationModelEvaluation() {
    *this = ::std::move(from);
  }

  inline ConversationModelEvaluation& operator=(const ConversationModelEvaluation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConversationModelEvaluation& operator=(ConversationModelEvaluation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConversationModelEvaluation& default_instance() {
    return *internal_default_instance();
  }
  enum MetricsCase {
    kSmartReplyMetrics = 5,
    METRICS_NOT_SET = 0,
  };

  static inline const ConversationModelEvaluation* internal_default_instance() {
    return reinterpret_cast<const ConversationModelEvaluation*>(
               &_ConversationModelEvaluation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ConversationModelEvaluation& a, ConversationModelEvaluation& b) {
    a.Swap(&b);
  }
  inline void Swap(ConversationModelEvaluation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConversationModelEvaluation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConversationModelEvaluation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConversationModelEvaluation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ConversationModelEvaluation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ConversationModelEvaluation& from) {
    ConversationModelEvaluation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConversationModelEvaluation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ConversationModelEvaluation";
  }
  protected:
  explicit ConversationModelEvaluation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDisplayNameFieldNumber = 2,
    kCreateTimeFieldNumber = 3,
    kEvaluationConfigFieldNumber = 6,
    kSmartReplyMetricsFieldNumber = 5,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_display_name();
  const std::string& display_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_display_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* display_name);
  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(const std::string& value);
  std::string* _internal_mutable_display_name();
  public:

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.cloud.dialogflow.v2.EvaluationConfig evaluation_config = 6 [(.google.api.field_behavior) = OPTIONAL];
  bool has_evaluation_config() const;
  private:
  bool _internal_has_evaluation_config() const;
  public:
  void clear_evaluation_config();
  const ::google::cloud::dialogflow::v2::EvaluationConfig& evaluation_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::EvaluationConfig* release_evaluation_config();
  ::google::cloud::dialogflow::v2::EvaluationConfig* mutable_evaluation_config();
  void set_allocated_evaluation_config(::google::cloud::dialogflow::v2::EvaluationConfig* evaluation_config);
  private:
  const ::google::cloud::dialogflow::v2::EvaluationConfig& _internal_evaluation_config() const;
  ::google::cloud::dialogflow::v2::EvaluationConfig* _internal_mutable_evaluation_config();
  public:
  void unsafe_arena_set_allocated_evaluation_config(
      ::google::cloud::dialogflow::v2::EvaluationConfig* evaluation_config);
  ::google::cloud::dialogflow::v2::EvaluationConfig* unsafe_arena_release_evaluation_config();

  // .google.cloud.dialogflow.v2.SmartReplyMetrics smart_reply_metrics = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_smart_reply_metrics() const;
  private:
  bool _internal_has_smart_reply_metrics() const;
  public:
  void clear_smart_reply_metrics();
  const ::google::cloud::dialogflow::v2::SmartReplyMetrics& smart_reply_metrics() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::SmartReplyMetrics* release_smart_reply_metrics();
  ::google::cloud::dialogflow::v2::SmartReplyMetrics* mutable_smart_reply_metrics();
  void set_allocated_smart_reply_metrics(::google::cloud::dialogflow::v2::SmartReplyMetrics* smart_reply_metrics);
  private:
  const ::google::cloud::dialogflow::v2::SmartReplyMetrics& _internal_smart_reply_metrics() const;
  ::google::cloud::dialogflow::v2::SmartReplyMetrics* _internal_mutable_smart_reply_metrics();
  public:
  void unsafe_arena_set_allocated_smart_reply_metrics(
      ::google::cloud::dialogflow::v2::SmartReplyMetrics* smart_reply_metrics);
  ::google::cloud::dialogflow::v2::SmartReplyMetrics* unsafe_arena_release_smart_reply_metrics();

  void clear_metrics();
  MetricsCase metrics_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ConversationModelEvaluation)
 private:
  class _Internal;
  void set_has_smart_reply_metrics();

  inline bool has_metrics() const;
  inline void clear_has_metrics();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr display_name_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    ::google::cloud::dialogflow::v2::EvaluationConfig* evaluation_config_;
    union MetricsUnion {
      constexpr MetricsUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::google::cloud::dialogflow::v2::SmartReplyMetrics* smart_reply_metrics_;
    } metrics_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class EvaluationConfig_SmartReplyConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig) */ {
 public:
  inline EvaluationConfig_SmartReplyConfig() : EvaluationConfig_SmartReplyConfig(nullptr) {}
  ~EvaluationConfig_SmartReplyConfig() override;
  explicit PROTOBUF_CONSTEXPR EvaluationConfig_SmartReplyConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EvaluationConfig_SmartReplyConfig(const EvaluationConfig_SmartReplyConfig& from);
  EvaluationConfig_SmartReplyConfig(EvaluationConfig_SmartReplyConfig&& from) noexcept
    : EvaluationConfig_SmartReplyConfig() {
    *this = ::std::move(from);
  }

  inline EvaluationConfig_SmartReplyConfig& operator=(const EvaluationConfig_SmartReplyConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvaluationConfig_SmartReplyConfig& operator=(EvaluationConfig_SmartReplyConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvaluationConfig_SmartReplyConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvaluationConfig_SmartReplyConfig* internal_default_instance() {
    return reinterpret_cast<const EvaluationConfig_SmartReplyConfig*>(
               &_EvaluationConfig_SmartReplyConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EvaluationConfig_SmartReplyConfig& a, EvaluationConfig_SmartReplyConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(EvaluationConfig_SmartReplyConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvaluationConfig_SmartReplyConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvaluationConfig_SmartReplyConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EvaluationConfig_SmartReplyConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EvaluationConfig_SmartReplyConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EvaluationConfig_SmartReplyConfig& from) {
    EvaluationConfig_SmartReplyConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvaluationConfig_SmartReplyConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig";
  }
  protected:
  explicit EvaluationConfig_SmartReplyConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllowlistDocumentFieldNumber = 1,
    kMaxResultCountFieldNumber = 2,
  };
  // string allowlist_document = 1 [(.google.api.resource_reference) = {
  void clear_allowlist_document();
  const std::string& allowlist_document() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_allowlist_document(ArgT0&& arg0, ArgT... args);
  std::string* mutable_allowlist_document();
  PROTOBUF_NODISCARD std::string* release_allowlist_document();
  void set_allocated_allowlist_document(std::string* allowlist_document);
  private:
  const std::string& _internal_allowlist_document() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_allowlist_document(const std::string& value);
  std::string* _internal_mutable_allowlist_document();
  public:

  // int32 max_result_count = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_max_result_count();
  int32_t max_result_count() const;
  void set_max_result_count(int32_t value);
  private:
  int32_t _internal_max_result_count() const;
  void _internal_set_max_result_count(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr allowlist_document_;
    int32_t max_result_count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class EvaluationConfig_SmartComposeConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig) */ {
 public:
  inline EvaluationConfig_SmartComposeConfig() : EvaluationConfig_SmartComposeConfig(nullptr) {}
  ~EvaluationConfig_SmartComposeConfig() override;
  explicit PROTOBUF_CONSTEXPR EvaluationConfig_SmartComposeConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EvaluationConfig_SmartComposeConfig(const EvaluationConfig_SmartComposeConfig& from);
  EvaluationConfig_SmartComposeConfig(EvaluationConfig_SmartComposeConfig&& from) noexcept
    : EvaluationConfig_SmartComposeConfig() {
    *this = ::std::move(from);
  }

  inline EvaluationConfig_SmartComposeConfig& operator=(const EvaluationConfig_SmartComposeConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvaluationConfig_SmartComposeConfig& operator=(EvaluationConfig_SmartComposeConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvaluationConfig_SmartComposeConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvaluationConfig_SmartComposeConfig* internal_default_instance() {
    return reinterpret_cast<const EvaluationConfig_SmartComposeConfig*>(
               &_EvaluationConfig_SmartComposeConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EvaluationConfig_SmartComposeConfig& a, EvaluationConfig_SmartComposeConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(EvaluationConfig_SmartComposeConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvaluationConfig_SmartComposeConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvaluationConfig_SmartComposeConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EvaluationConfig_SmartComposeConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EvaluationConfig_SmartComposeConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EvaluationConfig_SmartComposeConfig& from) {
    EvaluationConfig_SmartComposeConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvaluationConfig_SmartComposeConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig";
  }
  protected:
  explicit EvaluationConfig_SmartComposeConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllowlistDocumentFieldNumber = 1,
    kMaxResultCountFieldNumber = 2,
  };
  // string allowlist_document = 1 [(.google.api.resource_reference) = {
  void clear_allowlist_document();
  const std::string& allowlist_document() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_allowlist_document(ArgT0&& arg0, ArgT... args);
  std::string* mutable_allowlist_document();
  PROTOBUF_NODISCARD std::string* release_allowlist_document();
  void set_allocated_allowlist_document(std::string* allowlist_document);
  private:
  const std::string& _internal_allowlist_document() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_allowlist_document(const std::string& value);
  std::string* _internal_mutable_allowlist_document();
  public:

  // int32 max_result_count = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_max_result_count();
  int32_t max_result_count() const;
  void set_max_result_count(int32_t value);
  private:
  int32_t _internal_max_result_count() const;
  void _internal_set_max_result_count(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr allowlist_document_;
    int32_t max_result_count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class EvaluationConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.EvaluationConfig) */ {
 public:
  inline EvaluationConfig() : EvaluationConfig(nullptr) {}
  ~EvaluationConfig() override;
  explicit PROTOBUF_CONSTEXPR EvaluationConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EvaluationConfig(const EvaluationConfig& from);
  EvaluationConfig(EvaluationConfig&& from) noexcept
    : EvaluationConfig() {
    *this = ::std::move(from);
  }

  inline EvaluationConfig& operator=(const EvaluationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvaluationConfig& operator=(EvaluationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvaluationConfig& default_instance() {
    return *internal_default_instance();
  }
  enum ModelSpecificConfigCase {
    kSmartReplyConfig = 2,
    kSmartComposeConfig = 4,
    MODEL_SPECIFIC_CONFIG_NOT_SET = 0,
  };

  static inline const EvaluationConfig* internal_default_instance() {
    return reinterpret_cast<const EvaluationConfig*>(
               &_EvaluationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(EvaluationConfig& a, EvaluationConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(EvaluationConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvaluationConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvaluationConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EvaluationConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EvaluationConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EvaluationConfig& from) {
    EvaluationConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvaluationConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.EvaluationConfig";
  }
  protected:
  explicit EvaluationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EvaluationConfig_SmartReplyConfig SmartReplyConfig;
  typedef EvaluationConfig_SmartComposeConfig SmartComposeConfig;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasetsFieldNumber = 3,
    kSmartReplyConfigFieldNumber = 2,
    kSmartComposeConfigFieldNumber = 4,
  };
  // repeated .google.cloud.dialogflow.v2.InputDataset datasets = 3 [(.google.api.field_behavior) = REQUIRED];
  int datasets_size() const;
  private:
  int _internal_datasets_size() const;
  public:
  void clear_datasets();
  ::google::cloud::dialogflow::v2::InputDataset* mutable_datasets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >*
      mutable_datasets();
  private:
  const ::google::cloud::dialogflow::v2::InputDataset& _internal_datasets(int index) const;
  ::google::cloud::dialogflow::v2::InputDataset* _internal_add_datasets();
  public:
  const ::google::cloud::dialogflow::v2::InputDataset& datasets(int index) const;
  ::google::cloud::dialogflow::v2::InputDataset* add_datasets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >&
      datasets() const;

  // .google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig smart_reply_config = 2;
  bool has_smart_reply_config() const;
  private:
  bool _internal_has_smart_reply_config() const;
  public:
  void clear_smart_reply_config();
  const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig& smart_reply_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* release_smart_reply_config();
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* mutable_smart_reply_config();
  void set_allocated_smart_reply_config(::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* smart_reply_config);
  private:
  const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig& _internal_smart_reply_config() const;
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* _internal_mutable_smart_reply_config();
  public:
  void unsafe_arena_set_allocated_smart_reply_config(
      ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* smart_reply_config);
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* unsafe_arena_release_smart_reply_config();

  // .google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig smart_compose_config = 4;
  bool has_smart_compose_config() const;
  private:
  bool _internal_has_smart_compose_config() const;
  public:
  void clear_smart_compose_config();
  const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig& smart_compose_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* release_smart_compose_config();
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* mutable_smart_compose_config();
  void set_allocated_smart_compose_config(::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* smart_compose_config);
  private:
  const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig& _internal_smart_compose_config() const;
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* _internal_mutable_smart_compose_config();
  public:
  void unsafe_arena_set_allocated_smart_compose_config(
      ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* smart_compose_config);
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* unsafe_arena_release_smart_compose_config();

  void clear_model_specific_config();
  ModelSpecificConfigCase model_specific_config_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.EvaluationConfig)
 private:
  class _Internal;
  void set_has_smart_reply_config();
  void set_has_smart_compose_config();

  inline bool has_model_specific_config() const;
  inline void clear_has_model_specific_config();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset > datasets_;
    union ModelSpecificConfigUnion {
      constexpr ModelSpecificConfigUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* smart_reply_config_;
      ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* smart_compose_config_;
    } model_specific_config_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class InputDataset final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.InputDataset) */ {
 public:
  inline InputDataset() : InputDataset(nullptr) {}
  ~InputDataset() override;
  explicit PROTOBUF_CONSTEXPR InputDataset(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InputDataset(const InputDataset& from);
  InputDataset(InputDataset&& from) noexcept
    : InputDataset() {
    *this = ::std::move(from);
  }

  inline InputDataset& operator=(const InputDataset& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputDataset& operator=(InputDataset&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InputDataset& default_instance() {
    return *internal_default_instance();
  }
  static inline const InputDataset* internal_default_instance() {
    return reinterpret_cast<const InputDataset*>(
               &_InputDataset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InputDataset& a, InputDataset& b) {
    a.Swap(&b);
  }
  inline void Swap(InputDataset* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputDataset* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InputDataset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InputDataset>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InputDataset& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InputDataset& from) {
    InputDataset::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputDataset* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.InputDataset";
  }
  protected:
  explicit InputDataset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDatasetFieldNumber = 1,
  };
  // string dataset = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_dataset();
  const std::string& dataset() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dataset(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dataset();
  PROTOBUF_NODISCARD std::string* release_dataset();
  void set_allocated_dataset(std::string* dataset);
  private:
  const std::string& _internal_dataset() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dataset(const std::string& value);
  std::string* _internal_mutable_dataset();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.InputDataset)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dataset_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class ArticleSuggestionModelMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ArticleSuggestionModelMetadata) */ {
 public:
  inline ArticleSuggestionModelMetadata() : ArticleSuggestionModelMetadata(nullptr) {}
  ~ArticleSuggestionModelMetadata() override;
  explicit PROTOBUF_CONSTEXPR ArticleSuggestionModelMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ArticleSuggestionModelMetadata(const ArticleSuggestionModelMetadata& from);
  ArticleSuggestionModelMetadata(ArticleSuggestionModelMetadata&& from) noexcept
    : ArticleSuggestionModelMetadata() {
    *this = ::std::move(from);
  }

  inline ArticleSuggestionModelMetadata& operator=(const ArticleSuggestionModelMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArticleSuggestionModelMetadata& operator=(ArticleSuggestionModelMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArticleSuggestionModelMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArticleSuggestionModelMetadata* internal_default_instance() {
    return reinterpret_cast<const ArticleSuggestionModelMetadata*>(
               &_ArticleSuggestionModelMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ArticleSuggestionModelMetadata& a, ArticleSuggestionModelMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(ArticleSuggestionModelMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArticleSuggestionModelMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArticleSuggestionModelMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArticleSuggestionModelMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ArticleSuggestionModelMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ArticleSuggestionModelMetadata& from) {
    ArticleSuggestionModelMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArticleSuggestionModelMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ArticleSuggestionModelMetadata";
  }
  protected:
  explicit ArticleSuggestionModelMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainingModelTypeFieldNumber = 3,
  };
  // .google.cloud.dialogflow.v2.ConversationModel.ModelType training_model_type = 3 [(.google.api.field_behavior) = OPTIONAL];
  void clear_training_model_type();
  ::google::cloud::dialogflow::v2::ConversationModel_ModelType training_model_type() const;
  void set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value);
  private:
  ::google::cloud::dialogflow::v2::ConversationModel_ModelType _internal_training_model_type() const;
  void _internal_set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ArticleSuggestionModelMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int training_model_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class SmartReplyModelMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.SmartReplyModelMetadata) */ {
 public:
  inline SmartReplyModelMetadata() : SmartReplyModelMetadata(nullptr) {}
  ~SmartReplyModelMetadata() override;
  explicit PROTOBUF_CONSTEXPR SmartReplyModelMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SmartReplyModelMetadata(const SmartReplyModelMetadata& from);
  SmartReplyModelMetadata(SmartReplyModelMetadata&& from) noexcept
    : SmartReplyModelMetadata() {
    *this = ::std::move(from);
  }

  inline SmartReplyModelMetadata& operator=(const SmartReplyModelMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline SmartReplyModelMetadata& operator=(SmartReplyModelMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SmartReplyModelMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const SmartReplyModelMetadata* internal_default_instance() {
    return reinterpret_cast<const SmartReplyModelMetadata*>(
               &_SmartReplyModelMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SmartReplyModelMetadata& a, SmartReplyModelMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(SmartReplyModelMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SmartReplyModelMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SmartReplyModelMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SmartReplyModelMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SmartReplyModelMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SmartReplyModelMetadata& from) {
    SmartReplyModelMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SmartReplyModelMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.SmartReplyModelMetadata";
  }
  protected:
  explicit SmartReplyModelMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainingModelTypeFieldNumber = 6,
  };
  // .google.cloud.dialogflow.v2.ConversationModel.ModelType training_model_type = 6 [(.google.api.field_behavior) = OPTIONAL];
  void clear_training_model_type();
  ::google::cloud::dialogflow::v2::ConversationModel_ModelType training_model_type() const;
  void set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value);
  private:
  ::google::cloud::dialogflow::v2::ConversationModel_ModelType _internal_training_model_type() const;
  void _internal_set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.SmartReplyModelMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int training_model_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class SmartReplyMetrics_TopNMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics) */ {
 public:
  inline SmartReplyMetrics_TopNMetrics() : SmartReplyMetrics_TopNMetrics(nullptr) {}
  ~SmartReplyMetrics_TopNMetrics() override;
  explicit PROTOBUF_CONSTEXPR SmartReplyMetrics_TopNMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SmartReplyMetrics_TopNMetrics(const SmartReplyMetrics_TopNMetrics& from);
  SmartReplyMetrics_TopNMetrics(SmartReplyMetrics_TopNMetrics&& from) noexcept
    : SmartReplyMetrics_TopNMetrics() {
    *this = ::std::move(from);
  }

  inline SmartReplyMetrics_TopNMetrics& operator=(const SmartReplyMetrics_TopNMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline SmartReplyMetrics_TopNMetrics& operator=(SmartReplyMetrics_TopNMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SmartReplyMetrics_TopNMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const SmartReplyMetrics_TopNMetrics* internal_default_instance() {
    return reinterpret_cast<const SmartReplyMetrics_TopNMetrics*>(
               &_SmartReplyMetrics_TopNMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SmartReplyMetrics_TopNMetrics& a, SmartReplyMetrics_TopNMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(SmartReplyMetrics_TopNMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SmartReplyMetrics_TopNMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SmartReplyMetrics_TopNMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SmartReplyMetrics_TopNMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SmartReplyMetrics_TopNMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SmartReplyMetrics_TopNMetrics& from) {
    SmartReplyMetrics_TopNMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SmartReplyMetrics_TopNMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics";
  }
  protected:
  explicit SmartReplyMetrics_TopNMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNFieldNumber = 1,
    kRecallFieldNumber = 2,
  };
  // int32 n = 1;
  void clear_n();
  int32_t n() const;
  void set_n(int32_t value);
  private:
  int32_t _internal_n() const;
  void _internal_set_n(int32_t value);
  public:

  // float recall = 2;
  void clear_recall();
  float recall() const;
  void set_recall(float value);
  private:
  float _internal_recall() const;
  void _internal_set_recall(float value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t n_;
    float recall_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class SmartReplyMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.SmartReplyMetrics) */ {
 public:
  inline SmartReplyMetrics() : SmartReplyMetrics(nullptr) {}
  ~SmartReplyMetrics() override;
  explicit PROTOBUF_CONSTEXPR SmartReplyMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SmartReplyMetrics(const SmartReplyMetrics& from);
  SmartReplyMetrics(SmartReplyMetrics&& from) noexcept
    : SmartReplyMetrics() {
    *this = ::std::move(from);
  }

  inline SmartReplyMetrics& operator=(const SmartReplyMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline SmartReplyMetrics& operator=(SmartReplyMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SmartReplyMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const SmartReplyMetrics* internal_default_instance() {
    return reinterpret_cast<const SmartReplyMetrics*>(
               &_SmartReplyMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SmartReplyMetrics& a, SmartReplyMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(SmartReplyMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SmartReplyMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SmartReplyMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SmartReplyMetrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SmartReplyMetrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SmartReplyMetrics& from) {
    SmartReplyMetrics::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SmartReplyMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.SmartReplyMetrics";
  }
  protected:
  explicit SmartReplyMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SmartReplyMetrics_TopNMetrics TopNMetrics;

  // accessors -------------------------------------------------------

  enum : int {
    kTopNMetricsFieldNumber = 2,
    kConversationCountFieldNumber = 3,
    kAllowlistCoverageFieldNumber = 1,
  };
  // repeated .google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics top_n_metrics = 2;
  int top_n_metrics_size() const;
  private:
  int _internal_top_n_metrics_size() const;
  public:
  void clear_top_n_metrics();
  ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* mutable_top_n_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics >*
      mutable_top_n_metrics();
  private:
  const ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics& _internal_top_n_metrics(int index) const;
  ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* _internal_add_top_n_metrics();
  public:
  const ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics& top_n_metrics(int index) const;
  ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* add_top_n_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics >&
      top_n_metrics() const;

  // int64 conversation_count = 3;
  void clear_conversation_count();
  int64_t conversation_count() const;
  void set_conversation_count(int64_t value);
  private:
  int64_t _internal_conversation_count() const;
  void _internal_set_conversation_count(int64_t value);
  public:

  // float allowlist_coverage = 1;
  void clear_allowlist_coverage();
  float allowlist_coverage() const;
  void set_allowlist_coverage(float value);
  private:
  float _internal_allowlist_coverage() const;
  void _internal_set_allowlist_coverage(float value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.SmartReplyMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics > top_n_metrics_;
    int64_t conversation_count_;
    float allowlist_coverage_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class CreateConversationModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.CreateConversationModelRequest) */ {
 public:
  inline CreateConversationModelRequest() : CreateConversationModelRequest(nullptr) {}
  ~CreateConversationModelRequest() override;
  explicit PROTOBUF_CONSTEXPR CreateConversationModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateConversationModelRequest(const CreateConversationModelRequest& from);
  CreateConversationModelRequest(CreateConversationModelRequest&& from) noexcept
    : CreateConversationModelRequest() {
    *this = ::std::move(from);
  }

  inline CreateConversationModelRequest& operator=(const CreateConversationModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConversationModelRequest& operator=(CreateConversationModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConversationModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateConversationModelRequest* internal_default_instance() {
    return reinterpret_cast<const CreateConversationModelRequest*>(
               &_CreateConversationModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CreateConversationModelRequest& a, CreateConversationModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateConversationModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConversationModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConversationModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateConversationModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreateConversationModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreateConversationModelRequest& from) {
    CreateConversationModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateConversationModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.CreateConversationModelRequest";
  }
  protected:
  explicit CreateConversationModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kConversationModelFieldNumber = 2,
  };
  // string parent = 1;
  void clear_parent();
  const std::string& parent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_parent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_parent();
  PROTOBUF_NODISCARD std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // .google.cloud.dialogflow.v2.ConversationModel conversation_model = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_conversation_model() const;
  private:
  bool _internal_has_conversation_model() const;
  public:
  void clear_conversation_model();
  const ::google::cloud::dialogflow::v2::ConversationModel& conversation_model() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::ConversationModel* release_conversation_model();
  ::google::cloud::dialogflow::v2::ConversationModel* mutable_conversation_model();
  void set_allocated_conversation_model(::google::cloud::dialogflow::v2::ConversationModel* conversation_model);
  private:
  const ::google::cloud::dialogflow::v2::ConversationModel& _internal_conversation_model() const;
  ::google::cloud::dialogflow::v2::ConversationModel* _internal_mutable_conversation_model();
  public:
  void unsafe_arena_set_allocated_conversation_model(
      ::google::cloud::dialogflow::v2::ConversationModel* conversation_model);
  ::google::cloud::dialogflow::v2::ConversationModel* unsafe_arena_release_conversation_model();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.CreateConversationModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
    ::google::cloud::dialogflow::v2::ConversationModel* conversation_model_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class GetConversationModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.GetConversationModelRequest) */ {
 public:
  inline GetConversationModelRequest() : GetConversationModelRequest(nullptr) {}
  ~GetConversationModelRequest() override;
  explicit PROTOBUF_CONSTEXPR GetConversationModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetConversationModelRequest(const GetConversationModelRequest& from);
  GetConversationModelRequest(GetConversationModelRequest&& from) noexcept
    : GetConversationModelRequest() {
    *this = ::std::move(from);
  }

  inline GetConversationModelRequest& operator=(const GetConversationModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConversationModelRequest& operator=(GetConversationModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConversationModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConversationModelRequest* internal_default_instance() {
    return reinterpret_cast<const GetConversationModelRequest*>(
               &_GetConversationModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetConversationModelRequest& a, GetConversationModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConversationModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConversationModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConversationModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConversationModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetConversationModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetConversationModelRequest& from) {
    GetConversationModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConversationModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.GetConversationModelRequest";
  }
  protected:
  explicit GetConversationModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.GetConversationModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class ListConversationModelsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListConversationModelsRequest) */ {
 public:
  inline ListConversationModelsRequest() : ListConversationModelsRequest(nullptr) {}
  ~ListConversationModelsRequest() override;
  explicit PROTOBUF_CONSTEXPR ListConversationModelsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListConversationModelsRequest(const ListConversationModelsRequest& from);
  ListConversationModelsRequest(ListConversationModelsRequest&& from) noexcept
    : ListConversationModelsRequest() {
    *this = ::std::move(from);
  }

  inline ListConversationModelsRequest& operator=(const ListConversationModelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListConversationModelsRequest& operator=(ListConversationModelsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListConversationModelsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListConversationModelsRequest* internal_default_instance() {
    return reinterpret_cast<const ListConversationModelsRequest*>(
               &_ListConversationModelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ListConversationModelsRequest& a, ListConversationModelsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListConversationModelsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListConversationModelsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListConversationModelsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListConversationModelsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListConversationModelsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListConversationModelsRequest& from) {
    ListConversationModelsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConversationModelsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListConversationModelsRequest";
  }
  protected:
  explicit ListConversationModelsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kPageTokenFieldNumber = 3,
    kPageSizeFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_parent();
  const std::string& parent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_parent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_parent();
  PROTOBUF_NODISCARD std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_token();
  const std::string& page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_size();
  int32_t page_size() const;
  void set_page_size(int32_t value);
  private:
  int32_t _internal_page_size() const;
  void _internal_set_page_size(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListConversationModelsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
    int32_t page_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class ListConversationModelsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListConversationModelsResponse) */ {
 public:
  inline ListConversationModelsResponse() : ListConversationModelsResponse(nullptr) {}
  ~ListConversationModelsResponse() override;
  explicit PROTOBUF_CONSTEXPR ListConversationModelsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListConversationModelsResponse(const ListConversationModelsResponse& from);
  ListConversationModelsResponse(ListConversationModelsResponse&& from) noexcept
    : ListConversationModelsResponse() {
    *this = ::std::move(from);
  }

  inline ListConversationModelsResponse& operator=(const ListConversationModelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListConversationModelsResponse& operator=(ListConversationModelsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListConversationModelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListConversationModelsResponse* internal_default_instance() {
    return reinterpret_cast<const ListConversationModelsResponse*>(
               &_ListConversationModelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ListConversationModelsResponse& a, ListConversationModelsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListConversationModelsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListConversationModelsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListConversationModelsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListConversationModelsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListConversationModelsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListConversationModelsResponse& from) {
    ListConversationModelsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConversationModelsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListConversationModelsResponse";
  }
  protected:
  explicit ListConversationModelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationModelsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .google.cloud.dialogflow.v2.ConversationModel conversation_models = 1;
  int conversation_models_size() const;
  private:
  int _internal_conversation_models_size() const;
  public:
  void clear_conversation_models();
  ::google::cloud::dialogflow::v2::ConversationModel* mutable_conversation_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModel >*
      mutable_conversation_models();
  private:
  const ::google::cloud::dialogflow::v2::ConversationModel& _internal_conversation_models(int index) const;
  ::google::cloud::dialogflow::v2::ConversationModel* _internal_add_conversation_models();
  public:
  const ::google::cloud::dialogflow::v2::ConversationModel& conversation_models(int index) const;
  ::google::cloud::dialogflow::v2::ConversationModel* add_conversation_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModel >&
      conversation_models() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListConversationModelsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModel > conversation_models_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class DeleteConversationModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeleteConversationModelRequest) */ {
 public:
  inline DeleteConversationModelRequest() : DeleteConversationModelRequest(nullptr) {}
  ~DeleteConversationModelRequest() override;
  explicit PROTOBUF_CONSTEXPR DeleteConversationModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteConversationModelRequest(const DeleteConversationModelRequest& from);
  DeleteConversationModelRequest(DeleteConversationModelRequest&& from) noexcept
    : DeleteConversationModelRequest() {
    *this = ::std::move(from);
  }

  inline DeleteConversationModelRequest& operator=(const DeleteConversationModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteConversationModelRequest& operator=(DeleteConversationModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteConversationModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteConversationModelRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteConversationModelRequest*>(
               &_DeleteConversationModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DeleteConversationModelRequest& a, DeleteConversationModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteConversationModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteConversationModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteConversationModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteConversationModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DeleteConversationModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DeleteConversationModelRequest& from) {
    DeleteConversationModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteConversationModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeleteConversationModelRequest";
  }
  protected:
  explicit DeleteConversationModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeleteConversationModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class DeployConversationModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeployConversationModelRequest) */ {
 public:
  inline DeployConversationModelRequest() : DeployConversationModelRequest(nullptr) {}
  ~DeployConversationModelRequest() override;
  explicit PROTOBUF_CONSTEXPR DeployConversationModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeployConversationModelRequest(const DeployConversationModelRequest& from);
  DeployConversationModelRequest(DeployConversationModelRequest&& from) noexcept
    : DeployConversationModelRequest() {
    *this = ::std::move(from);
  }

  inline DeployConversationModelRequest& operator=(const DeployConversationModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeployConversationModelRequest& operator=(DeployConversationModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeployConversationModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeployConversationModelRequest* internal_default_instance() {
    return reinterpret_cast<const DeployConversationModelRequest*>(
               &_DeployConversationModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(DeployConversationModelRequest& a, DeployConversationModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeployConversationModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeployConversationModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeployConversationModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeployConversationModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DeployConversationModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DeployConversationModelRequest& from) {
    DeployConversationModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeployConversationModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeployConversationModelRequest";
  }
  protected:
  explicit DeployConversationModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeployConversationModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class UndeployConversationModelRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.UndeployConversationModelRequest) */ {
 public:
  inline UndeployConversationModelRequest() : UndeployConversationModelRequest(nullptr) {}
  ~UndeployConversationModelRequest() override;
  explicit PROTOBUF_CONSTEXPR UndeployConversationModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UndeployConversationModelRequest(const UndeployConversationModelRequest& from);
  UndeployConversationModelRequest(UndeployConversationModelRequest&& from) noexcept
    : UndeployConversationModelRequest() {
    *this = ::std::move(from);
  }

  inline UndeployConversationModelRequest& operator=(const UndeployConversationModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UndeployConversationModelRequest& operator=(UndeployConversationModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UndeployConversationModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UndeployConversationModelRequest* internal_default_instance() {
    return reinterpret_cast<const UndeployConversationModelRequest*>(
               &_UndeployConversationModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UndeployConversationModelRequest& a, UndeployConversationModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UndeployConversationModelRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UndeployConversationModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UndeployConversationModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UndeployConversationModelRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UndeployConversationModelRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UndeployConversationModelRequest& from) {
    UndeployConversationModelRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UndeployConversationModelRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.UndeployConversationModelRequest";
  }
  protected:
  explicit UndeployConversationModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.UndeployConversationModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class GetConversationModelEvaluationRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest) */ {
 public:
  inline GetConversationModelEvaluationRequest() : GetConversationModelEvaluationRequest(nullptr) {}
  ~GetConversationModelEvaluationRequest() override;
  explicit PROTOBUF_CONSTEXPR GetConversationModelEvaluationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetConversationModelEvaluationRequest(const GetConversationModelEvaluationRequest& from);
  GetConversationModelEvaluationRequest(GetConversationModelEvaluationRequest&& from) noexcept
    : GetConversationModelEvaluationRequest() {
    *this = ::std::move(from);
  }

  inline GetConversationModelEvaluationRequest& operator=(const GetConversationModelEvaluationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConversationModelEvaluationRequest& operator=(GetConversationModelEvaluationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConversationModelEvaluationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConversationModelEvaluationRequest* internal_default_instance() {
    return reinterpret_cast<const GetConversationModelEvaluationRequest*>(
               &_GetConversationModelEvaluationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GetConversationModelEvaluationRequest& a, GetConversationModelEvaluationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConversationModelEvaluationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConversationModelEvaluationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConversationModelEvaluationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConversationModelEvaluationRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetConversationModelEvaluationRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetConversationModelEvaluationRequest& from) {
    GetConversationModelEvaluationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConversationModelEvaluationRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest";
  }
  protected:
  explicit GetConversationModelEvaluationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class ListConversationModelEvaluationsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest) */ {
 public:
  inline ListConversationModelEvaluationsRequest() : ListConversationModelEvaluationsRequest(nullptr) {}
  ~ListConversationModelEvaluationsRequest() override;
  explicit PROTOBUF_CONSTEXPR ListConversationModelEvaluationsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListConversationModelEvaluationsRequest(const ListConversationModelEvaluationsRequest& from);
  ListConversationModelEvaluationsRequest(ListConversationModelEvaluationsRequest&& from) noexcept
    : ListConversationModelEvaluationsRequest() {
    *this = ::std::move(from);
  }

  inline ListConversationModelEvaluationsRequest& operator=(const ListConversationModelEvaluationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListConversationModelEvaluationsRequest& operator=(ListConversationModelEvaluationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListConversationModelEvaluationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListConversationModelEvaluationsRequest* internal_default_instance() {
    return reinterpret_cast<const ListConversationModelEvaluationsRequest*>(
               &_ListConversationModelEvaluationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ListConversationModelEvaluationsRequest& a, ListConversationModelEvaluationsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListConversationModelEvaluationsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListConversationModelEvaluationsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListConversationModelEvaluationsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListConversationModelEvaluationsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListConversationModelEvaluationsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListConversationModelEvaluationsRequest& from) {
    ListConversationModelEvaluationsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConversationModelEvaluationsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest";
  }
  protected:
  explicit ListConversationModelEvaluationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kPageTokenFieldNumber = 3,
    kPageSizeFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_parent();
  const std::string& parent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_parent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_parent();
  PROTOBUF_NODISCARD std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_token();
  const std::string& page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_size();
  int32_t page_size() const;
  void set_page_size(int32_t value);
  private:
  int32_t _internal_page_size() const;
  void _internal_set_page_size(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
    int32_t page_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class ListConversationModelEvaluationsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse) */ {
 public:
  inline ListConversationModelEvaluationsResponse() : ListConversationModelEvaluationsResponse(nullptr) {}
  ~ListConversationModelEvaluationsResponse() override;
  explicit PROTOBUF_CONSTEXPR ListConversationModelEvaluationsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListConversationModelEvaluationsResponse(const ListConversationModelEvaluationsResponse& from);
  ListConversationModelEvaluationsResponse(ListConversationModelEvaluationsResponse&& from) noexcept
    : ListConversationModelEvaluationsResponse() {
    *this = ::std::move(from);
  }

  inline ListConversationModelEvaluationsResponse& operator=(const ListConversationModelEvaluationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListConversationModelEvaluationsResponse& operator=(ListConversationModelEvaluationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListConversationModelEvaluationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListConversationModelEvaluationsResponse* internal_default_instance() {
    return reinterpret_cast<const ListConversationModelEvaluationsResponse*>(
               &_ListConversationModelEvaluationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ListConversationModelEvaluationsResponse& a, ListConversationModelEvaluationsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListConversationModelEvaluationsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListConversationModelEvaluationsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListConversationModelEvaluationsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListConversationModelEvaluationsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListConversationModelEvaluationsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListConversationModelEvaluationsResponse& from) {
    ListConversationModelEvaluationsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConversationModelEvaluationsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse";
  }
  protected:
  explicit ListConversationModelEvaluationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationModelEvaluationsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .google.cloud.dialogflow.v2.ConversationModelEvaluation conversation_model_evaluations = 1;
  int conversation_model_evaluations_size() const;
  private:
  int _internal_conversation_model_evaluations_size() const;
  public:
  void clear_conversation_model_evaluations();
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* mutable_conversation_model_evaluations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModelEvaluation >*
      mutable_conversation_model_evaluations();
  private:
  const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& _internal_conversation_model_evaluations(int index) const;
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* _internal_add_conversation_model_evaluations();
  public:
  const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& conversation_model_evaluations(int index) const;
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* add_conversation_model_evaluations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModelEvaluation >&
      conversation_model_evaluations() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModelEvaluation > conversation_model_evaluations_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class CreateConversationModelEvaluationRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest) */ {
 public:
  inline CreateConversationModelEvaluationRequest() : CreateConversationModelEvaluationRequest(nullptr) {}
  ~CreateConversationModelEvaluationRequest() override;
  explicit PROTOBUF_CONSTEXPR CreateConversationModelEvaluationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateConversationModelEvaluationRequest(const CreateConversationModelEvaluationRequest& from);
  CreateConversationModelEvaluationRequest(CreateConversationModelEvaluationRequest&& from) noexcept
    : CreateConversationModelEvaluationRequest() {
    *this = ::std::move(from);
  }

  inline CreateConversationModelEvaluationRequest& operator=(const CreateConversationModelEvaluationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConversationModelEvaluationRequest& operator=(CreateConversationModelEvaluationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConversationModelEvaluationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateConversationModelEvaluationRequest* internal_default_instance() {
    return reinterpret_cast<const CreateConversationModelEvaluationRequest*>(
               &_CreateConversationModelEvaluationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CreateConversationModelEvaluationRequest& a, CreateConversationModelEvaluationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateConversationModelEvaluationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConversationModelEvaluationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConversationModelEvaluationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateConversationModelEvaluationRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreateConversationModelEvaluationRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreateConversationModelEvaluationRequest& from) {
    CreateConversationModelEvaluationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateConversationModelEvaluationRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest";
  }
  protected:
  explicit CreateConversationModelEvaluationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kConversationModelEvaluationFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_parent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_parent();
  PROTOBUF_NODISCARD std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // .google.cloud.dialogflow.v2.ConversationModelEvaluation conversation_model_evaluation = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_conversation_model_evaluation() const;
  private:
  bool _internal_has_conversation_model_evaluation() const;
  public:
  void clear_conversation_model_evaluation();
  const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& conversation_model_evaluation() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::ConversationModelEvaluation* release_conversation_model_evaluation();
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* mutable_conversation_model_evaluation();
  void set_allocated_conversation_model_evaluation(::google::cloud::dialogflow::v2::ConversationModelEvaluation* conversation_model_evaluation);
  private:
  const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& _internal_conversation_model_evaluation() const;
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* _internal_mutable_conversation_model_evaluation();
  public:
  void unsafe_arena_set_allocated_conversation_model_evaluation(
      ::google::cloud::dialogflow::v2::ConversationModelEvaluation* conversation_model_evaluation);
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* unsafe_arena_release_conversation_model_evaluation();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
    ::google::cloud::dialogflow::v2::ConversationModelEvaluation* conversation_model_evaluation_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class CreateConversationModelOperationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata) */ {
 public:
  inline CreateConversationModelOperationMetadata() : CreateConversationModelOperationMetadata(nullptr) {}
  ~CreateConversationModelOperationMetadata() override;
  explicit PROTOBUF_CONSTEXPR CreateConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateConversationModelOperationMetadata(const CreateConversationModelOperationMetadata& from);
  CreateConversationModelOperationMetadata(CreateConversationModelOperationMetadata&& from) noexcept
    : CreateConversationModelOperationMetadata() {
    *this = ::std::move(from);
  }

  inline CreateConversationModelOperationMetadata& operator=(const CreateConversationModelOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConversationModelOperationMetadata& operator=(CreateConversationModelOperationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConversationModelOperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateConversationModelOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const CreateConversationModelOperationMetadata*>(
               &_CreateConversationModelOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CreateConversationModelOperationMetadata& a, CreateConversationModelOperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateConversationModelOperationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConversationModelOperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConversationModelOperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateConversationModelOperationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreateConversationModelOperationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreateConversationModelOperationMetadata& from) {
    CreateConversationModelOperationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateConversationModelOperationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata";
  }
  protected:
  explicit CreateConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CreateConversationModelOperationMetadata_State State;
  static constexpr State STATE_UNSPECIFIED =
    CreateConversationModelOperationMetadata_State_STATE_UNSPECIFIED;
  static constexpr State PENDING =
    CreateConversationModelOperationMetadata_State_PENDING;
  static constexpr State SUCCEEDED =
    CreateConversationModelOperationMetadata_State_SUCCEEDED;
  static constexpr State FAILED =
    CreateConversationModelOperationMetadata_State_FAILED;
  static constexpr State CANCELLED =
    CreateConversationModelOperationMetadata_State_CANCELLED;
  static constexpr State CANCELLING =
    CreateConversationModelOperationMetadata_State_CANCELLING;
  static constexpr State TRAINING =
    CreateConversationModelOperationMetadata_State_TRAINING;
  static inline bool State_IsValid(int value) {
    return CreateConversationModelOperationMetadata_State_IsValid(value);
  }
  static constexpr State State_MIN =
    CreateConversationModelOperationMetadata_State_State_MIN;
  static constexpr State State_MAX =
    CreateConversationModelOperationMetadata_State_State_MAX;
  static constexpr int State_ARRAYSIZE =
    CreateConversationModelOperationMetadata_State_State_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  State_descriptor() {
    return CreateConversationModelOperationMetadata_State_descriptor();
  }
  template<typename T>
  static inline const std::string& State_Name(T enum_t_value) {
    static_assert(::std::is_same<T, State>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function State_Name.");
    return CreateConversationModelOperationMetadata_State_Name(enum_t_value);
  }
  static inline bool State_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      State* value) {
    return CreateConversationModelOperationMetadata_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kConversationModelFieldNumber = 1,
    kCreateTimeFieldNumber = 3,
    kStateFieldNumber = 2,
  };
  // string conversation_model = 1;
  void clear_conversation_model();
  const std::string& conversation_model() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_model(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_model();
  PROTOBUF_NODISCARD std::string* release_conversation_model();
  void set_allocated_conversation_model(std::string* conversation_model);
  private:
  const std::string& _internal_conversation_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_model(const std::string& value);
  std::string* _internal_mutable_conversation_model();
  public:

  // .google.protobuf.Timestamp create_time = 3;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.State state = 2;
  void clear_state();
  ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State state() const;
  void set_state(::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State value);
  private:
  ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State _internal_state() const;
  void _internal_set_state(::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_model_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    int state_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class DeployConversationModelOperationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata) */ {
 public:
  inline DeployConversationModelOperationMetadata() : DeployConversationModelOperationMetadata(nullptr) {}
  ~DeployConversationModelOperationMetadata() override;
  explicit PROTOBUF_CONSTEXPR DeployConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeployConversationModelOperationMetadata(const DeployConversationModelOperationMetadata& from);
  DeployConversationModelOperationMetadata(DeployConversationModelOperationMetadata&& from) noexcept
    : DeployConversationModelOperationMetadata() {
    *this = ::std::move(from);
  }

  inline DeployConversationModelOperationMetadata& operator=(const DeployConversationModelOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeployConversationModelOperationMetadata& operator=(DeployConversationModelOperationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeployConversationModelOperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeployConversationModelOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const DeployConversationModelOperationMetadata*>(
               &_DeployConversationModelOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(DeployConversationModelOperationMetadata& a, DeployConversationModelOperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(DeployConversationModelOperationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeployConversationModelOperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeployConversationModelOperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeployConversationModelOperationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DeployConversationModelOperationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DeployConversationModelOperationMetadata& from) {
    DeployConversationModelOperationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeployConversationModelOperationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata";
  }
  protected:
  explicit DeployConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationModelFieldNumber = 1,
    kCreateTimeFieldNumber = 3,
  };
  // string conversation_model = 1;
  void clear_conversation_model();
  const std::string& conversation_model() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_model(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_model();
  PROTOBUF_NODISCARD std::string* release_conversation_model();
  void set_allocated_conversation_model(std::string* conversation_model);
  private:
  const std::string& _internal_conversation_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_model(const std::string& value);
  std::string* _internal_mutable_conversation_model();
  public:

  // .google.protobuf.Timestamp create_time = 3;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_model_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class UndeployConversationModelOperationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata) */ {
 public:
  inline UndeployConversationModelOperationMetadata() : UndeployConversationModelOperationMetadata(nullptr) {}
  ~UndeployConversationModelOperationMetadata() override;
  explicit PROTOBUF_CONSTEXPR UndeployConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UndeployConversationModelOperationMetadata(const UndeployConversationModelOperationMetadata& from);
  UndeployConversationModelOperationMetadata(UndeployConversationModelOperationMetadata&& from) noexcept
    : UndeployConversationModelOperationMetadata() {
    *this = ::std::move(from);
  }

  inline UndeployConversationModelOperationMetadata& operator=(const UndeployConversationModelOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline UndeployConversationModelOperationMetadata& operator=(UndeployConversationModelOperationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UndeployConversationModelOperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const UndeployConversationModelOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const UndeployConversationModelOperationMetadata*>(
               &_UndeployConversationModelOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(UndeployConversationModelOperationMetadata& a, UndeployConversationModelOperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(UndeployConversationModelOperationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UndeployConversationModelOperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UndeployConversationModelOperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UndeployConversationModelOperationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UndeployConversationModelOperationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UndeployConversationModelOperationMetadata& from) {
    UndeployConversationModelOperationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UndeployConversationModelOperationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata";
  }
  protected:
  explicit UndeployConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationModelFieldNumber = 1,
    kCreateTimeFieldNumber = 3,
  };
  // string conversation_model = 1;
  void clear_conversation_model();
  const std::string& conversation_model() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_model(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_model();
  PROTOBUF_NODISCARD std::string* release_conversation_model();
  void set_allocated_conversation_model(std::string* conversation_model);
  private:
  const std::string& _internal_conversation_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_model(const std::string& value);
  std::string* _internal_mutable_conversation_model();
  public:

  // .google.protobuf.Timestamp create_time = 3;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_model_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class DeleteConversationModelOperationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata) */ {
 public:
  inline DeleteConversationModelOperationMetadata() : DeleteConversationModelOperationMetadata(nullptr) {}
  ~DeleteConversationModelOperationMetadata() override;
  explicit PROTOBUF_CONSTEXPR DeleteConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteConversationModelOperationMetadata(const DeleteConversationModelOperationMetadata& from);
  DeleteConversationModelOperationMetadata(DeleteConversationModelOperationMetadata&& from) noexcept
    : DeleteConversationModelOperationMetadata() {
    *this = ::std::move(from);
  }

  inline DeleteConversationModelOperationMetadata& operator=(const DeleteConversationModelOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteConversationModelOperationMetadata& operator=(DeleteConversationModelOperationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteConversationModelOperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteConversationModelOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const DeleteConversationModelOperationMetadata*>(
               &_DeleteConversationModelOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(DeleteConversationModelOperationMetadata& a, DeleteConversationModelOperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteConversationModelOperationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteConversationModelOperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteConversationModelOperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteConversationModelOperationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DeleteConversationModelOperationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DeleteConversationModelOperationMetadata& from) {
    DeleteConversationModelOperationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteConversationModelOperationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata";
  }
  protected:
  explicit DeleteConversationModelOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationModelFieldNumber = 1,
    kCreateTimeFieldNumber = 3,
  };
  // string conversation_model = 1;
  void clear_conversation_model();
  const std::string& conversation_model() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_model(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_model();
  PROTOBUF_NODISCARD std::string* release_conversation_model();
  void set_allocated_conversation_model(std::string* conversation_model);
  private:
  const std::string& _internal_conversation_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_model(const std::string& value);
  std::string* _internal_mutable_conversation_model();
  public:

  // .google.protobuf.Timestamp create_time = 3;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_model_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class CreateConversationModelEvaluationOperationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata) */ {
 public:
  inline CreateConversationModelEvaluationOperationMetadata() : CreateConversationModelEvaluationOperationMetadata(nullptr) {}
  ~CreateConversationModelEvaluationOperationMetadata() override;
  explicit PROTOBUF_CONSTEXPR CreateConversationModelEvaluationOperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateConversationModelEvaluationOperationMetadata(const CreateConversationModelEvaluationOperationMetadata& from);
  CreateConversationModelEvaluationOperationMetadata(CreateConversationModelEvaluationOperationMetadata&& from) noexcept
    : CreateConversationModelEvaluationOperationMetadata() {
    *this = ::std::move(from);
  }

  inline CreateConversationModelEvaluationOperationMetadata& operator=(const CreateConversationModelEvaluationOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConversationModelEvaluationOperationMetadata& operator=(CreateConversationModelEvaluationOperationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConversationModelEvaluationOperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateConversationModelEvaluationOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const CreateConversationModelEvaluationOperationMetadata*>(
               &_CreateConversationModelEvaluationOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CreateConversationModelEvaluationOperationMetadata& a, CreateConversationModelEvaluationOperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateConversationModelEvaluationOperationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConversationModelEvaluationOperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConversationModelEvaluationOperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateConversationModelEvaluationOperationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreateConversationModelEvaluationOperationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreateConversationModelEvaluationOperationMetadata& from) {
    CreateConversationModelEvaluationOperationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateConversationModelEvaluationOperationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata";
  }
  protected:
  explicit CreateConversationModelEvaluationOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CreateConversationModelEvaluationOperationMetadata_State State;
  static constexpr State STATE_UNSPECIFIED =
    CreateConversationModelEvaluationOperationMetadata_State_STATE_UNSPECIFIED;
  static constexpr State INITIALIZING =
    CreateConversationModelEvaluationOperationMetadata_State_INITIALIZING;
  static constexpr State RUNNING =
    CreateConversationModelEvaluationOperationMetadata_State_RUNNING;
  static constexpr State CANCELLED =
    CreateConversationModelEvaluationOperationMetadata_State_CANCELLED;
  static constexpr State SUCCEEDED =
    CreateConversationModelEvaluationOperationMetadata_State_SUCCEEDED;
  static constexpr State FAILED =
    CreateConversationModelEvaluationOperationMetadata_State_FAILED;
  static inline bool State_IsValid(int value) {
    return CreateConversationModelEvaluationOperationMetadata_State_IsValid(value);
  }
  static constexpr State State_MIN =
    CreateConversationModelEvaluationOperationMetadata_State_State_MIN;
  static constexpr State State_MAX =
    CreateConversationModelEvaluationOperationMetadata_State_State_MAX;
  static constexpr int State_ARRAYSIZE =
    CreateConversationModelEvaluationOperationMetadata_State_State_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  State_descriptor() {
    return CreateConversationModelEvaluationOperationMetadata_State_descriptor();
  }
  template<typename T>
  static inline const std::string& State_Name(T enum_t_value) {
    static_assert(::std::is_same<T, State>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function State_Name.");
    return CreateConversationModelEvaluationOperationMetadata_State_Name(enum_t_value);
  }
  static inline bool State_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      State* value) {
    return CreateConversationModelEvaluationOperationMetadata_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kConversationModelEvaluationFieldNumber = 1,
    kConversationModelFieldNumber = 4,
    kCreateTimeFieldNumber = 3,
    kStateFieldNumber = 2,
  };
  // string conversation_model_evaluation = 1;
  void clear_conversation_model_evaluation();
  const std::string& conversation_model_evaluation() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_model_evaluation(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_model_evaluation();
  PROTOBUF_NODISCARD std::string* release_conversation_model_evaluation();
  void set_allocated_conversation_model_evaluation(std::string* conversation_model_evaluation);
  private:
  const std::string& _internal_conversation_model_evaluation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_model_evaluation(const std::string& value);
  std::string* _internal_mutable_conversation_model_evaluation();
  public:

  // string conversation_model = 4;
  void clear_conversation_model();
  const std::string& conversation_model() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_model(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_model();
  PROTOBUF_NODISCARD std::string* release_conversation_model();
  void set_allocated_conversation_model(std::string* conversation_model);
  private:
  const std::string& _internal_conversation_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_model(const std::string& value);
  std::string* _internal_mutable_conversation_model();
  public:

  // .google.protobuf.Timestamp create_time = 3;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.State state = 2;
  void clear_state();
  ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State state() const;
  void set_state(::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State value);
  private:
  ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State _internal_state() const;
  void _internal_set_state(::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_model_evaluation_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_model_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    int state_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConversationModel

// string name = 1;
inline void ConversationModel::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ConversationModel::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationModel::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationModel.name)
}
inline std::string* ConversationModel::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModel.name)
  return _s;
}
inline const std::string& ConversationModel::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ConversationModel::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationModel::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationModel::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModel.name)
  return _impl_.name_.Release();
}
inline void ConversationModel::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModel.name)
}

// string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
inline void ConversationModel::clear_display_name() {
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& ConversationModel::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.display_name)
  return _internal_display_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationModel::set_display_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.display_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationModel.display_name)
}
inline std::string* ConversationModel::mutable_display_name() {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModel.display_name)
  return _s;
}
inline const std::string& ConversationModel::_internal_display_name() const {
  return _impl_.display_name_.Get();
}
inline void ConversationModel::_internal_set_display_name(const std::string& value) {
  
  _impl_.display_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationModel::_internal_mutable_display_name() {
  
  return _impl_.display_name_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationModel::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModel.display_name)
  return _impl_.display_name_.Release();
}
inline void ConversationModel::set_allocated_display_name(std::string* display_name) {
  if (display_name != nullptr) {
    
  } else {
    
  }
  _impl_.display_name_.SetAllocated(display_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.display_name_.IsDefault()) {
    _impl_.display_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModel.display_name)
}

// .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool ConversationModel::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool ConversationModel::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationModel::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationModel::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.create_time)
  return _internal_create_time();
}
inline void ConversationModel::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationModel.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModel::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModel::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModel.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModel::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModel::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModel.create_time)
  return _msg;
}
inline void ConversationModel::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModel.create_time)
}

// repeated .google.cloud.dialogflow.v2.InputDataset datasets = 4 [(.google.api.field_behavior) = REQUIRED];
inline int ConversationModel::_internal_datasets_size() const {
  return _impl_.datasets_.size();
}
inline int ConversationModel::datasets_size() const {
  return _internal_datasets_size();
}
inline void ConversationModel::clear_datasets() {
  _impl_.datasets_.Clear();
}
inline ::google::cloud::dialogflow::v2::InputDataset* ConversationModel::mutable_datasets(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModel.datasets)
  return _impl_.datasets_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >*
ConversationModel::mutable_datasets() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.ConversationModel.datasets)
  return &_impl_.datasets_;
}
inline const ::google::cloud::dialogflow::v2::InputDataset& ConversationModel::_internal_datasets(int index) const {
  return _impl_.datasets_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::InputDataset& ConversationModel::datasets(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.datasets)
  return _internal_datasets(index);
}
inline ::google::cloud::dialogflow::v2::InputDataset* ConversationModel::_internal_add_datasets() {
  return _impl_.datasets_.Add();
}
inline ::google::cloud::dialogflow::v2::InputDataset* ConversationModel::add_datasets() {
  ::google::cloud::dialogflow::v2::InputDataset* _add = _internal_add_datasets();
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.ConversationModel.datasets)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >&
ConversationModel::datasets() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.ConversationModel.datasets)
  return _impl_.datasets_;
}

// .google.cloud.dialogflow.v2.ConversationModel.State state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void ConversationModel::clear_state() {
  _impl_.state_ = 0;
}
inline ::google::cloud::dialogflow::v2::ConversationModel_State ConversationModel::_internal_state() const {
  return static_cast< ::google::cloud::dialogflow::v2::ConversationModel_State >(_impl_.state_);
}
inline ::google::cloud::dialogflow::v2::ConversationModel_State ConversationModel::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.state)
  return _internal_state();
}
inline void ConversationModel::_internal_set_state(::google::cloud::dialogflow::v2::ConversationModel_State value) {
  
  _impl_.state_ = value;
}
inline void ConversationModel::set_state(::google::cloud::dialogflow::v2::ConversationModel_State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationModel.state)
}

// string language_code = 19;
inline void ConversationModel::clear_language_code() {
  _impl_.language_code_.ClearToEmpty();
}
inline const std::string& ConversationModel::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.language_code)
  return _internal_language_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationModel::set_language_code(ArgT0&& arg0, ArgT... args) {
 
 _impl_.language_code_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationModel.language_code)
}
inline std::string* ConversationModel::mutable_language_code() {
  std::string* _s = _internal_mutable_language_code();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModel.language_code)
  return _s;
}
inline const std::string& ConversationModel::_internal_language_code() const {
  return _impl_.language_code_.Get();
}
inline void ConversationModel::_internal_set_language_code(const std::string& value) {
  
  _impl_.language_code_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationModel::_internal_mutable_language_code() {
  
  return _impl_.language_code_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationModel::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModel.language_code)
  return _impl_.language_code_.Release();
}
inline void ConversationModel::set_allocated_language_code(std::string* language_code) {
  if (language_code != nullptr) {
    
  } else {
    
  }
  _impl_.language_code_.SetAllocated(language_code, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.language_code_.IsDefault()) {
    _impl_.language_code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModel.language_code)
}

// .google.cloud.dialogflow.v2.ArticleSuggestionModelMetadata article_suggestion_model_metadata = 8;
inline bool ConversationModel::_internal_has_article_suggestion_model_metadata() const {
  return model_metadata_case() == kArticleSuggestionModelMetadata;
}
inline bool ConversationModel::has_article_suggestion_model_metadata() const {
  return _internal_has_article_suggestion_model_metadata();
}
inline void ConversationModel::set_has_article_suggestion_model_metadata() {
  _impl_._oneof_case_[0] = kArticleSuggestionModelMetadata;
}
inline void ConversationModel::clear_article_suggestion_model_metadata() {
  if (_internal_has_article_suggestion_model_metadata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.model_metadata_.article_suggestion_model_metadata_;
    }
    clear_has_model_metadata();
  }
}
inline ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* ConversationModel::release_article_suggestion_model_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModel.article_suggestion_model_metadata)
  if (_internal_has_article_suggestion_model_metadata()) {
    clear_has_model_metadata();
    ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* temp = _impl_.model_metadata_.article_suggestion_model_metadata_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.model_metadata_.article_suggestion_model_metadata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata& ConversationModel::_internal_article_suggestion_model_metadata() const {
  return _internal_has_article_suggestion_model_metadata()
      ? *_impl_.model_metadata_.article_suggestion_model_metadata_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata&>(::google::cloud::dialogflow::v2::_ArticleSuggestionModelMetadata_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata& ConversationModel::article_suggestion_model_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.article_suggestion_model_metadata)
  return _internal_article_suggestion_model_metadata();
}
inline ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* ConversationModel::unsafe_arena_release_article_suggestion_model_metadata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.ConversationModel.article_suggestion_model_metadata)
  if (_internal_has_article_suggestion_model_metadata()) {
    clear_has_model_metadata();
    ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* temp = _impl_.model_metadata_.article_suggestion_model_metadata_;
    _impl_.model_metadata_.article_suggestion_model_metadata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConversationModel::unsafe_arena_set_allocated_article_suggestion_model_metadata(::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* article_suggestion_model_metadata) {
  clear_model_metadata();
  if (article_suggestion_model_metadata) {
    set_has_article_suggestion_model_metadata();
    _impl_.model_metadata_.article_suggestion_model_metadata_ = article_suggestion_model_metadata;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationModel.article_suggestion_model_metadata)
}
inline ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* ConversationModel::_internal_mutable_article_suggestion_model_metadata() {
  if (!_internal_has_article_suggestion_model_metadata()) {
    clear_model_metadata();
    set_has_article_suggestion_model_metadata();
    _impl_.model_metadata_.article_suggestion_model_metadata_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata >(GetArenaForAllocation());
  }
  return _impl_.model_metadata_.article_suggestion_model_metadata_;
}
inline ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* ConversationModel::mutable_article_suggestion_model_metadata() {
  ::google::cloud::dialogflow::v2::ArticleSuggestionModelMetadata* _msg = _internal_mutable_article_suggestion_model_metadata();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModel.article_suggestion_model_metadata)
  return _msg;
}

// .google.cloud.dialogflow.v2.SmartReplyModelMetadata smart_reply_model_metadata = 9;
inline bool ConversationModel::_internal_has_smart_reply_model_metadata() const {
  return model_metadata_case() == kSmartReplyModelMetadata;
}
inline bool ConversationModel::has_smart_reply_model_metadata() const {
  return _internal_has_smart_reply_model_metadata();
}
inline void ConversationModel::set_has_smart_reply_model_metadata() {
  _impl_._oneof_case_[0] = kSmartReplyModelMetadata;
}
inline void ConversationModel::clear_smart_reply_model_metadata() {
  if (_internal_has_smart_reply_model_metadata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.model_metadata_.smart_reply_model_metadata_;
    }
    clear_has_model_metadata();
  }
}
inline ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* ConversationModel::release_smart_reply_model_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModel.smart_reply_model_metadata)
  if (_internal_has_smart_reply_model_metadata()) {
    clear_has_model_metadata();
    ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* temp = _impl_.model_metadata_.smart_reply_model_metadata_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.model_metadata_.smart_reply_model_metadata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::SmartReplyModelMetadata& ConversationModel::_internal_smart_reply_model_metadata() const {
  return _internal_has_smart_reply_model_metadata()
      ? *_impl_.model_metadata_.smart_reply_model_metadata_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::SmartReplyModelMetadata&>(::google::cloud::dialogflow::v2::_SmartReplyModelMetadata_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::SmartReplyModelMetadata& ConversationModel::smart_reply_model_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModel.smart_reply_model_metadata)
  return _internal_smart_reply_model_metadata();
}
inline ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* ConversationModel::unsafe_arena_release_smart_reply_model_metadata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.ConversationModel.smart_reply_model_metadata)
  if (_internal_has_smart_reply_model_metadata()) {
    clear_has_model_metadata();
    ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* temp = _impl_.model_metadata_.smart_reply_model_metadata_;
    _impl_.model_metadata_.smart_reply_model_metadata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConversationModel::unsafe_arena_set_allocated_smart_reply_model_metadata(::google::cloud::dialogflow::v2::SmartReplyModelMetadata* smart_reply_model_metadata) {
  clear_model_metadata();
  if (smart_reply_model_metadata) {
    set_has_smart_reply_model_metadata();
    _impl_.model_metadata_.smart_reply_model_metadata_ = smart_reply_model_metadata;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationModel.smart_reply_model_metadata)
}
inline ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* ConversationModel::_internal_mutable_smart_reply_model_metadata() {
  if (!_internal_has_smart_reply_model_metadata()) {
    clear_model_metadata();
    set_has_smart_reply_model_metadata();
    _impl_.model_metadata_.smart_reply_model_metadata_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::SmartReplyModelMetadata >(GetArenaForAllocation());
  }
  return _impl_.model_metadata_.smart_reply_model_metadata_;
}
inline ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* ConversationModel::mutable_smart_reply_model_metadata() {
  ::google::cloud::dialogflow::v2::SmartReplyModelMetadata* _msg = _internal_mutable_smart_reply_model_metadata();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModel.smart_reply_model_metadata)
  return _msg;
}

inline bool ConversationModel::has_model_metadata() const {
  return model_metadata_case() != MODEL_METADATA_NOT_SET;
}
inline void ConversationModel::clear_has_model_metadata() {
  _impl_._oneof_case_[0] = MODEL_METADATA_NOT_SET;
}
inline ConversationModel::ModelMetadataCase ConversationModel::model_metadata_case() const {
  return ConversationModel::ModelMetadataCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ConversationModelEvaluation

// string name = 1;
inline void ConversationModelEvaluation::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ConversationModelEvaluation::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModelEvaluation.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationModelEvaluation::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationModelEvaluation.name)
}
inline std::string* ConversationModelEvaluation::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModelEvaluation.name)
  return _s;
}
inline const std::string& ConversationModelEvaluation::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ConversationModelEvaluation::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationModelEvaluation::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationModelEvaluation::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModelEvaluation.name)
  return _impl_.name_.Release();
}
inline void ConversationModelEvaluation::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModelEvaluation.name)
}

// string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void ConversationModelEvaluation::clear_display_name() {
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& ConversationModelEvaluation::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModelEvaluation.display_name)
  return _internal_display_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationModelEvaluation::set_display_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.display_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationModelEvaluation.display_name)
}
inline std::string* ConversationModelEvaluation::mutable_display_name() {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModelEvaluation.display_name)
  return _s;
}
inline const std::string& ConversationModelEvaluation::_internal_display_name() const {
  return _impl_.display_name_.Get();
}
inline void ConversationModelEvaluation::_internal_set_display_name(const std::string& value) {
  
  _impl_.display_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationModelEvaluation::_internal_mutable_display_name() {
  
  return _impl_.display_name_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationModelEvaluation::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModelEvaluation.display_name)
  return _impl_.display_name_.Release();
}
inline void ConversationModelEvaluation::set_allocated_display_name(std::string* display_name) {
  if (display_name != nullptr) {
    
  } else {
    
  }
  _impl_.display_name_.SetAllocated(display_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.display_name_.IsDefault()) {
    _impl_.display_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModelEvaluation.display_name)
}

// .google.cloud.dialogflow.v2.EvaluationConfig evaluation_config = 6 [(.google.api.field_behavior) = OPTIONAL];
inline bool ConversationModelEvaluation::_internal_has_evaluation_config() const {
  return this != internal_default_instance() && _impl_.evaluation_config_ != nullptr;
}
inline bool ConversationModelEvaluation::has_evaluation_config() const {
  return _internal_has_evaluation_config();
}
inline void ConversationModelEvaluation::clear_evaluation_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.evaluation_config_ != nullptr) {
    delete _impl_.evaluation_config_;
  }
  _impl_.evaluation_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::EvaluationConfig& ConversationModelEvaluation::_internal_evaluation_config() const {
  const ::google::cloud::dialogflow::v2::EvaluationConfig* p = _impl_.evaluation_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::EvaluationConfig&>(
      ::google::cloud::dialogflow::v2::_EvaluationConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::EvaluationConfig& ConversationModelEvaluation::evaluation_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModelEvaluation.evaluation_config)
  return _internal_evaluation_config();
}
inline void ConversationModelEvaluation::unsafe_arena_set_allocated_evaluation_config(
    ::google::cloud::dialogflow::v2::EvaluationConfig* evaluation_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.evaluation_config_);
  }
  _impl_.evaluation_config_ = evaluation_config;
  if (evaluation_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationModelEvaluation.evaluation_config)
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig* ConversationModelEvaluation::release_evaluation_config() {
  
  ::google::cloud::dialogflow::v2::EvaluationConfig* temp = _impl_.evaluation_config_;
  _impl_.evaluation_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig* ConversationModelEvaluation::unsafe_arena_release_evaluation_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModelEvaluation.evaluation_config)
  
  ::google::cloud::dialogflow::v2::EvaluationConfig* temp = _impl_.evaluation_config_;
  _impl_.evaluation_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig* ConversationModelEvaluation::_internal_mutable_evaluation_config() {
  
  if (_impl_.evaluation_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::EvaluationConfig>(GetArenaForAllocation());
    _impl_.evaluation_config_ = p;
  }
  return _impl_.evaluation_config_;
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig* ConversationModelEvaluation::mutable_evaluation_config() {
  ::google::cloud::dialogflow::v2::EvaluationConfig* _msg = _internal_mutable_evaluation_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModelEvaluation.evaluation_config)
  return _msg;
}
inline void ConversationModelEvaluation::set_allocated_evaluation_config(::google::cloud::dialogflow::v2::EvaluationConfig* evaluation_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.evaluation_config_;
  }
  if (evaluation_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(evaluation_config);
    if (message_arena != submessage_arena) {
      evaluation_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, evaluation_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.evaluation_config_ = evaluation_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModelEvaluation.evaluation_config)
}

// .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool ConversationModelEvaluation::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool ConversationModelEvaluation::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationModelEvaluation::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationModelEvaluation::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModelEvaluation.create_time)
  return _internal_create_time();
}
inline void ConversationModelEvaluation::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationModelEvaluation.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModelEvaluation::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModelEvaluation::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModelEvaluation.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModelEvaluation::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationModelEvaluation::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModelEvaluation.create_time)
  return _msg;
}
inline void ConversationModelEvaluation::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationModelEvaluation.create_time)
}

// .google.cloud.dialogflow.v2.SmartReplyMetrics smart_reply_metrics = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool ConversationModelEvaluation::_internal_has_smart_reply_metrics() const {
  return metrics_case() == kSmartReplyMetrics;
}
inline bool ConversationModelEvaluation::has_smart_reply_metrics() const {
  return _internal_has_smart_reply_metrics();
}
inline void ConversationModelEvaluation::set_has_smart_reply_metrics() {
  _impl_._oneof_case_[0] = kSmartReplyMetrics;
}
inline void ConversationModelEvaluation::clear_smart_reply_metrics() {
  if (_internal_has_smart_reply_metrics()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.metrics_.smart_reply_metrics_;
    }
    clear_has_metrics();
  }
}
inline ::google::cloud::dialogflow::v2::SmartReplyMetrics* ConversationModelEvaluation::release_smart_reply_metrics() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationModelEvaluation.smart_reply_metrics)
  if (_internal_has_smart_reply_metrics()) {
    clear_has_metrics();
    ::google::cloud::dialogflow::v2::SmartReplyMetrics* temp = _impl_.metrics_.smart_reply_metrics_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.metrics_.smart_reply_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::SmartReplyMetrics& ConversationModelEvaluation::_internal_smart_reply_metrics() const {
  return _internal_has_smart_reply_metrics()
      ? *_impl_.metrics_.smart_reply_metrics_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::SmartReplyMetrics&>(::google::cloud::dialogflow::v2::_SmartReplyMetrics_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::SmartReplyMetrics& ConversationModelEvaluation::smart_reply_metrics() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationModelEvaluation.smart_reply_metrics)
  return _internal_smart_reply_metrics();
}
inline ::google::cloud::dialogflow::v2::SmartReplyMetrics* ConversationModelEvaluation::unsafe_arena_release_smart_reply_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.ConversationModelEvaluation.smart_reply_metrics)
  if (_internal_has_smart_reply_metrics()) {
    clear_has_metrics();
    ::google::cloud::dialogflow::v2::SmartReplyMetrics* temp = _impl_.metrics_.smart_reply_metrics_;
    _impl_.metrics_.smart_reply_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConversationModelEvaluation::unsafe_arena_set_allocated_smart_reply_metrics(::google::cloud::dialogflow::v2::SmartReplyMetrics* smart_reply_metrics) {
  clear_metrics();
  if (smart_reply_metrics) {
    set_has_smart_reply_metrics();
    _impl_.metrics_.smart_reply_metrics_ = smart_reply_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationModelEvaluation.smart_reply_metrics)
}
inline ::google::cloud::dialogflow::v2::SmartReplyMetrics* ConversationModelEvaluation::_internal_mutable_smart_reply_metrics() {
  if (!_internal_has_smart_reply_metrics()) {
    clear_metrics();
    set_has_smart_reply_metrics();
    _impl_.metrics_.smart_reply_metrics_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::SmartReplyMetrics >(GetArenaForAllocation());
  }
  return _impl_.metrics_.smart_reply_metrics_;
}
inline ::google::cloud::dialogflow::v2::SmartReplyMetrics* ConversationModelEvaluation::mutable_smart_reply_metrics() {
  ::google::cloud::dialogflow::v2::SmartReplyMetrics* _msg = _internal_mutable_smart_reply_metrics();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationModelEvaluation.smart_reply_metrics)
  return _msg;
}

inline bool ConversationModelEvaluation::has_metrics() const {
  return metrics_case() != METRICS_NOT_SET;
}
inline void ConversationModelEvaluation::clear_has_metrics() {
  _impl_._oneof_case_[0] = METRICS_NOT_SET;
}
inline ConversationModelEvaluation::MetricsCase ConversationModelEvaluation::metrics_case() const {
  return ConversationModelEvaluation::MetricsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// EvaluationConfig_SmartReplyConfig

// string allowlist_document = 1 [(.google.api.resource_reference) = {
inline void EvaluationConfig_SmartReplyConfig::clear_allowlist_document() {
  _impl_.allowlist_document_.ClearToEmpty();
}
inline const std::string& EvaluationConfig_SmartReplyConfig::allowlist_document() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig.allowlist_document)
  return _internal_allowlist_document();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void EvaluationConfig_SmartReplyConfig::set_allowlist_document(ArgT0&& arg0, ArgT... args) {
 
 _impl_.allowlist_document_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig.allowlist_document)
}
inline std::string* EvaluationConfig_SmartReplyConfig::mutable_allowlist_document() {
  std::string* _s = _internal_mutable_allowlist_document();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig.allowlist_document)
  return _s;
}
inline const std::string& EvaluationConfig_SmartReplyConfig::_internal_allowlist_document() const {
  return _impl_.allowlist_document_.Get();
}
inline void EvaluationConfig_SmartReplyConfig::_internal_set_allowlist_document(const std::string& value) {
  
  _impl_.allowlist_document_.Set(value, GetArenaForAllocation());
}
inline std::string* EvaluationConfig_SmartReplyConfig::_internal_mutable_allowlist_document() {
  
  return _impl_.allowlist_document_.Mutable(GetArenaForAllocation());
}
inline std::string* EvaluationConfig_SmartReplyConfig::release_allowlist_document() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig.allowlist_document)
  return _impl_.allowlist_document_.Release();
}
inline void EvaluationConfig_SmartReplyConfig::set_allocated_allowlist_document(std::string* allowlist_document) {
  if (allowlist_document != nullptr) {
    
  } else {
    
  }
  _impl_.allowlist_document_.SetAllocated(allowlist_document, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.allowlist_document_.IsDefault()) {
    _impl_.allowlist_document_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig.allowlist_document)
}

// int32 max_result_count = 2 [(.google.api.field_behavior) = REQUIRED];
inline void EvaluationConfig_SmartReplyConfig::clear_max_result_count() {
  _impl_.max_result_count_ = 0;
}
inline int32_t EvaluationConfig_SmartReplyConfig::_internal_max_result_count() const {
  return _impl_.max_result_count_;
}
inline int32_t EvaluationConfig_SmartReplyConfig::max_result_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig.max_result_count)
  return _internal_max_result_count();
}
inline void EvaluationConfig_SmartReplyConfig::_internal_set_max_result_count(int32_t value) {
  
  _impl_.max_result_count_ = value;
}
inline void EvaluationConfig_SmartReplyConfig::set_max_result_count(int32_t value) {
  _internal_set_max_result_count(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig.max_result_count)
}

// -------------------------------------------------------------------

// EvaluationConfig_SmartComposeConfig

// string allowlist_document = 1 [(.google.api.resource_reference) = {
inline void EvaluationConfig_SmartComposeConfig::clear_allowlist_document() {
  _impl_.allowlist_document_.ClearToEmpty();
}
inline const std::string& EvaluationConfig_SmartComposeConfig::allowlist_document() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig.allowlist_document)
  return _internal_allowlist_document();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void EvaluationConfig_SmartComposeConfig::set_allowlist_document(ArgT0&& arg0, ArgT... args) {
 
 _impl_.allowlist_document_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig.allowlist_document)
}
inline std::string* EvaluationConfig_SmartComposeConfig::mutable_allowlist_document() {
  std::string* _s = _internal_mutable_allowlist_document();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig.allowlist_document)
  return _s;
}
inline const std::string& EvaluationConfig_SmartComposeConfig::_internal_allowlist_document() const {
  return _impl_.allowlist_document_.Get();
}
inline void EvaluationConfig_SmartComposeConfig::_internal_set_allowlist_document(const std::string& value) {
  
  _impl_.allowlist_document_.Set(value, GetArenaForAllocation());
}
inline std::string* EvaluationConfig_SmartComposeConfig::_internal_mutable_allowlist_document() {
  
  return _impl_.allowlist_document_.Mutable(GetArenaForAllocation());
}
inline std::string* EvaluationConfig_SmartComposeConfig::release_allowlist_document() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig.allowlist_document)
  return _impl_.allowlist_document_.Release();
}
inline void EvaluationConfig_SmartComposeConfig::set_allocated_allowlist_document(std::string* allowlist_document) {
  if (allowlist_document != nullptr) {
    
  } else {
    
  }
  _impl_.allowlist_document_.SetAllocated(allowlist_document, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.allowlist_document_.IsDefault()) {
    _impl_.allowlist_document_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig.allowlist_document)
}

// int32 max_result_count = 2 [(.google.api.field_behavior) = REQUIRED];
inline void EvaluationConfig_SmartComposeConfig::clear_max_result_count() {
  _impl_.max_result_count_ = 0;
}
inline int32_t EvaluationConfig_SmartComposeConfig::_internal_max_result_count() const {
  return _impl_.max_result_count_;
}
inline int32_t EvaluationConfig_SmartComposeConfig::max_result_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig.max_result_count)
  return _internal_max_result_count();
}
inline void EvaluationConfig_SmartComposeConfig::_internal_set_max_result_count(int32_t value) {
  
  _impl_.max_result_count_ = value;
}
inline void EvaluationConfig_SmartComposeConfig::set_max_result_count(int32_t value) {
  _internal_set_max_result_count(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig.max_result_count)
}

// -------------------------------------------------------------------

// EvaluationConfig

// repeated .google.cloud.dialogflow.v2.InputDataset datasets = 3 [(.google.api.field_behavior) = REQUIRED];
inline int EvaluationConfig::_internal_datasets_size() const {
  return _impl_.datasets_.size();
}
inline int EvaluationConfig::datasets_size() const {
  return _internal_datasets_size();
}
inline void EvaluationConfig::clear_datasets() {
  _impl_.datasets_.Clear();
}
inline ::google::cloud::dialogflow::v2::InputDataset* EvaluationConfig::mutable_datasets(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.EvaluationConfig.datasets)
  return _impl_.datasets_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >*
EvaluationConfig::mutable_datasets() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.EvaluationConfig.datasets)
  return &_impl_.datasets_;
}
inline const ::google::cloud::dialogflow::v2::InputDataset& EvaluationConfig::_internal_datasets(int index) const {
  return _impl_.datasets_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::InputDataset& EvaluationConfig::datasets(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.EvaluationConfig.datasets)
  return _internal_datasets(index);
}
inline ::google::cloud::dialogflow::v2::InputDataset* EvaluationConfig::_internal_add_datasets() {
  return _impl_.datasets_.Add();
}
inline ::google::cloud::dialogflow::v2::InputDataset* EvaluationConfig::add_datasets() {
  ::google::cloud::dialogflow::v2::InputDataset* _add = _internal_add_datasets();
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.EvaluationConfig.datasets)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::InputDataset >&
EvaluationConfig::datasets() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.EvaluationConfig.datasets)
  return _impl_.datasets_;
}

// .google.cloud.dialogflow.v2.EvaluationConfig.SmartReplyConfig smart_reply_config = 2;
inline bool EvaluationConfig::_internal_has_smart_reply_config() const {
  return model_specific_config_case() == kSmartReplyConfig;
}
inline bool EvaluationConfig::has_smart_reply_config() const {
  return _internal_has_smart_reply_config();
}
inline void EvaluationConfig::set_has_smart_reply_config() {
  _impl_._oneof_case_[0] = kSmartReplyConfig;
}
inline void EvaluationConfig::clear_smart_reply_config() {
  if (_internal_has_smart_reply_config()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.model_specific_config_.smart_reply_config_;
    }
    clear_has_model_specific_config();
  }
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* EvaluationConfig::release_smart_reply_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.EvaluationConfig.smart_reply_config)
  if (_internal_has_smart_reply_config()) {
    clear_has_model_specific_config();
    ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* temp = _impl_.model_specific_config_.smart_reply_config_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.model_specific_config_.smart_reply_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig& EvaluationConfig::_internal_smart_reply_config() const {
  return _internal_has_smart_reply_config()
      ? *_impl_.model_specific_config_.smart_reply_config_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig&>(::google::cloud::dialogflow::v2::_EvaluationConfig_SmartReplyConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig& EvaluationConfig::smart_reply_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.EvaluationConfig.smart_reply_config)
  return _internal_smart_reply_config();
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* EvaluationConfig::unsafe_arena_release_smart_reply_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.EvaluationConfig.smart_reply_config)
  if (_internal_has_smart_reply_config()) {
    clear_has_model_specific_config();
    ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* temp = _impl_.model_specific_config_.smart_reply_config_;
    _impl_.model_specific_config_.smart_reply_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void EvaluationConfig::unsafe_arena_set_allocated_smart_reply_config(::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* smart_reply_config) {
  clear_model_specific_config();
  if (smart_reply_config) {
    set_has_smart_reply_config();
    _impl_.model_specific_config_.smart_reply_config_ = smart_reply_config;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.EvaluationConfig.smart_reply_config)
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* EvaluationConfig::_internal_mutable_smart_reply_config() {
  if (!_internal_has_smart_reply_config()) {
    clear_model_specific_config();
    set_has_smart_reply_config();
    _impl_.model_specific_config_.smart_reply_config_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig >(GetArenaForAllocation());
  }
  return _impl_.model_specific_config_.smart_reply_config_;
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* EvaluationConfig::mutable_smart_reply_config() {
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartReplyConfig* _msg = _internal_mutable_smart_reply_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.EvaluationConfig.smart_reply_config)
  return _msg;
}

// .google.cloud.dialogflow.v2.EvaluationConfig.SmartComposeConfig smart_compose_config = 4;
inline bool EvaluationConfig::_internal_has_smart_compose_config() const {
  return model_specific_config_case() == kSmartComposeConfig;
}
inline bool EvaluationConfig::has_smart_compose_config() const {
  return _internal_has_smart_compose_config();
}
inline void EvaluationConfig::set_has_smart_compose_config() {
  _impl_._oneof_case_[0] = kSmartComposeConfig;
}
inline void EvaluationConfig::clear_smart_compose_config() {
  if (_internal_has_smart_compose_config()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.model_specific_config_.smart_compose_config_;
    }
    clear_has_model_specific_config();
  }
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* EvaluationConfig::release_smart_compose_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.EvaluationConfig.smart_compose_config)
  if (_internal_has_smart_compose_config()) {
    clear_has_model_specific_config();
    ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* temp = _impl_.model_specific_config_.smart_compose_config_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.model_specific_config_.smart_compose_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig& EvaluationConfig::_internal_smart_compose_config() const {
  return _internal_has_smart_compose_config()
      ? *_impl_.model_specific_config_.smart_compose_config_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig&>(::google::cloud::dialogflow::v2::_EvaluationConfig_SmartComposeConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig& EvaluationConfig::smart_compose_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.EvaluationConfig.smart_compose_config)
  return _internal_smart_compose_config();
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* EvaluationConfig::unsafe_arena_release_smart_compose_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.EvaluationConfig.smart_compose_config)
  if (_internal_has_smart_compose_config()) {
    clear_has_model_specific_config();
    ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* temp = _impl_.model_specific_config_.smart_compose_config_;
    _impl_.model_specific_config_.smart_compose_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void EvaluationConfig::unsafe_arena_set_allocated_smart_compose_config(::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* smart_compose_config) {
  clear_model_specific_config();
  if (smart_compose_config) {
    set_has_smart_compose_config();
    _impl_.model_specific_config_.smart_compose_config_ = smart_compose_config;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.EvaluationConfig.smart_compose_config)
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* EvaluationConfig::_internal_mutable_smart_compose_config() {
  if (!_internal_has_smart_compose_config()) {
    clear_model_specific_config();
    set_has_smart_compose_config();
    _impl_.model_specific_config_.smart_compose_config_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig >(GetArenaForAllocation());
  }
  return _impl_.model_specific_config_.smart_compose_config_;
}
inline ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* EvaluationConfig::mutable_smart_compose_config() {
  ::google::cloud::dialogflow::v2::EvaluationConfig_SmartComposeConfig* _msg = _internal_mutable_smart_compose_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.EvaluationConfig.smart_compose_config)
  return _msg;
}

inline bool EvaluationConfig::has_model_specific_config() const {
  return model_specific_config_case() != MODEL_SPECIFIC_CONFIG_NOT_SET;
}
inline void EvaluationConfig::clear_has_model_specific_config() {
  _impl_._oneof_case_[0] = MODEL_SPECIFIC_CONFIG_NOT_SET;
}
inline EvaluationConfig::ModelSpecificConfigCase EvaluationConfig::model_specific_config_case() const {
  return EvaluationConfig::ModelSpecificConfigCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// InputDataset

// string dataset = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void InputDataset::clear_dataset() {
  _impl_.dataset_.ClearToEmpty();
}
inline const std::string& InputDataset::dataset() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.InputDataset.dataset)
  return _internal_dataset();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void InputDataset::set_dataset(ArgT0&& arg0, ArgT... args) {
 
 _impl_.dataset_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.InputDataset.dataset)
}
inline std::string* InputDataset::mutable_dataset() {
  std::string* _s = _internal_mutable_dataset();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.InputDataset.dataset)
  return _s;
}
inline const std::string& InputDataset::_internal_dataset() const {
  return _impl_.dataset_.Get();
}
inline void InputDataset::_internal_set_dataset(const std::string& value) {
  
  _impl_.dataset_.Set(value, GetArenaForAllocation());
}
inline std::string* InputDataset::_internal_mutable_dataset() {
  
  return _impl_.dataset_.Mutable(GetArenaForAllocation());
}
inline std::string* InputDataset::release_dataset() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.InputDataset.dataset)
  return _impl_.dataset_.Release();
}
inline void InputDataset::set_allocated_dataset(std::string* dataset) {
  if (dataset != nullptr) {
    
  } else {
    
  }
  _impl_.dataset_.SetAllocated(dataset, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dataset_.IsDefault()) {
    _impl_.dataset_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.InputDataset.dataset)
}

// -------------------------------------------------------------------

// ArticleSuggestionModelMetadata

// .google.cloud.dialogflow.v2.ConversationModel.ModelType training_model_type = 3 [(.google.api.field_behavior) = OPTIONAL];
inline void ArticleSuggestionModelMetadata::clear_training_model_type() {
  _impl_.training_model_type_ = 0;
}
inline ::google::cloud::dialogflow::v2::ConversationModel_ModelType ArticleSuggestionModelMetadata::_internal_training_model_type() const {
  return static_cast< ::google::cloud::dialogflow::v2::ConversationModel_ModelType >(_impl_.training_model_type_);
}
inline ::google::cloud::dialogflow::v2::ConversationModel_ModelType ArticleSuggestionModelMetadata::training_model_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ArticleSuggestionModelMetadata.training_model_type)
  return _internal_training_model_type();
}
inline void ArticleSuggestionModelMetadata::_internal_set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value) {
  
  _impl_.training_model_type_ = value;
}
inline void ArticleSuggestionModelMetadata::set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value) {
  _internal_set_training_model_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ArticleSuggestionModelMetadata.training_model_type)
}

// -------------------------------------------------------------------

// SmartReplyModelMetadata

// .google.cloud.dialogflow.v2.ConversationModel.ModelType training_model_type = 6 [(.google.api.field_behavior) = OPTIONAL];
inline void SmartReplyModelMetadata::clear_training_model_type() {
  _impl_.training_model_type_ = 0;
}
inline ::google::cloud::dialogflow::v2::ConversationModel_ModelType SmartReplyModelMetadata::_internal_training_model_type() const {
  return static_cast< ::google::cloud::dialogflow::v2::ConversationModel_ModelType >(_impl_.training_model_type_);
}
inline ::google::cloud::dialogflow::v2::ConversationModel_ModelType SmartReplyModelMetadata::training_model_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SmartReplyModelMetadata.training_model_type)
  return _internal_training_model_type();
}
inline void SmartReplyModelMetadata::_internal_set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value) {
  
  _impl_.training_model_type_ = value;
}
inline void SmartReplyModelMetadata::set_training_model_type(::google::cloud::dialogflow::v2::ConversationModel_ModelType value) {
  _internal_set_training_model_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SmartReplyModelMetadata.training_model_type)
}

// -------------------------------------------------------------------

// SmartReplyMetrics_TopNMetrics

// int32 n = 1;
inline void SmartReplyMetrics_TopNMetrics::clear_n() {
  _impl_.n_ = 0;
}
inline int32_t SmartReplyMetrics_TopNMetrics::_internal_n() const {
  return _impl_.n_;
}
inline int32_t SmartReplyMetrics_TopNMetrics::n() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics.n)
  return _internal_n();
}
inline void SmartReplyMetrics_TopNMetrics::_internal_set_n(int32_t value) {
  
  _impl_.n_ = value;
}
inline void SmartReplyMetrics_TopNMetrics::set_n(int32_t value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics.n)
}

// float recall = 2;
inline void SmartReplyMetrics_TopNMetrics::clear_recall() {
  _impl_.recall_ = 0;
}
inline float SmartReplyMetrics_TopNMetrics::_internal_recall() const {
  return _impl_.recall_;
}
inline float SmartReplyMetrics_TopNMetrics::recall() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics.recall)
  return _internal_recall();
}
inline void SmartReplyMetrics_TopNMetrics::_internal_set_recall(float value) {
  
  _impl_.recall_ = value;
}
inline void SmartReplyMetrics_TopNMetrics::set_recall(float value) {
  _internal_set_recall(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics.recall)
}

// -------------------------------------------------------------------

// SmartReplyMetrics

// float allowlist_coverage = 1;
inline void SmartReplyMetrics::clear_allowlist_coverage() {
  _impl_.allowlist_coverage_ = 0;
}
inline float SmartReplyMetrics::_internal_allowlist_coverage() const {
  return _impl_.allowlist_coverage_;
}
inline float SmartReplyMetrics::allowlist_coverage() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SmartReplyMetrics.allowlist_coverage)
  return _internal_allowlist_coverage();
}
inline void SmartReplyMetrics::_internal_set_allowlist_coverage(float value) {
  
  _impl_.allowlist_coverage_ = value;
}
inline void SmartReplyMetrics::set_allowlist_coverage(float value) {
  _internal_set_allowlist_coverage(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SmartReplyMetrics.allowlist_coverage)
}

// repeated .google.cloud.dialogflow.v2.SmartReplyMetrics.TopNMetrics top_n_metrics = 2;
inline int SmartReplyMetrics::_internal_top_n_metrics_size() const {
  return _impl_.top_n_metrics_.size();
}
inline int SmartReplyMetrics::top_n_metrics_size() const {
  return _internal_top_n_metrics_size();
}
inline void SmartReplyMetrics::clear_top_n_metrics() {
  _impl_.top_n_metrics_.Clear();
}
inline ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* SmartReplyMetrics::mutable_top_n_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.SmartReplyMetrics.top_n_metrics)
  return _impl_.top_n_metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics >*
SmartReplyMetrics::mutable_top_n_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.SmartReplyMetrics.top_n_metrics)
  return &_impl_.top_n_metrics_;
}
inline const ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics& SmartReplyMetrics::_internal_top_n_metrics(int index) const {
  return _impl_.top_n_metrics_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics& SmartReplyMetrics::top_n_metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SmartReplyMetrics.top_n_metrics)
  return _internal_top_n_metrics(index);
}
inline ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* SmartReplyMetrics::_internal_add_top_n_metrics() {
  return _impl_.top_n_metrics_.Add();
}
inline ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* SmartReplyMetrics::add_top_n_metrics() {
  ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics* _add = _internal_add_top_n_metrics();
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.SmartReplyMetrics.top_n_metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SmartReplyMetrics_TopNMetrics >&
SmartReplyMetrics::top_n_metrics() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.SmartReplyMetrics.top_n_metrics)
  return _impl_.top_n_metrics_;
}

// int64 conversation_count = 3;
inline void SmartReplyMetrics::clear_conversation_count() {
  _impl_.conversation_count_ = int64_t{0};
}
inline int64_t SmartReplyMetrics::_internal_conversation_count() const {
  return _impl_.conversation_count_;
}
inline int64_t SmartReplyMetrics::conversation_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SmartReplyMetrics.conversation_count)
  return _internal_conversation_count();
}
inline void SmartReplyMetrics::_internal_set_conversation_count(int64_t value) {
  
  _impl_.conversation_count_ = value;
}
inline void SmartReplyMetrics::set_conversation_count(int64_t value) {
  _internal_set_conversation_count(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SmartReplyMetrics.conversation_count)
}

// -------------------------------------------------------------------

// CreateConversationModelRequest

// string parent = 1;
inline void CreateConversationModelRequest::clear_parent() {
  _impl_.parent_.ClearToEmpty();
}
inline const std::string& CreateConversationModelRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelRequest.parent)
  return _internal_parent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreateConversationModelRequest::set_parent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.parent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationModelRequest.parent)
}
inline std::string* CreateConversationModelRequest::mutable_parent() {
  std::string* _s = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelRequest.parent)
  return _s;
}
inline const std::string& CreateConversationModelRequest::_internal_parent() const {
  return _impl_.parent_.Get();
}
inline void CreateConversationModelRequest::_internal_set_parent(const std::string& value) {
  
  _impl_.parent_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateConversationModelRequest::_internal_mutable_parent() {
  
  return _impl_.parent_.Mutable(GetArenaForAllocation());
}
inline std::string* CreateConversationModelRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelRequest.parent)
  return _impl_.parent_.Release();
}
inline void CreateConversationModelRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  _impl_.parent_.SetAllocated(parent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.parent_.IsDefault()) {
    _impl_.parent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelRequest.parent)
}

// .google.cloud.dialogflow.v2.ConversationModel conversation_model = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool CreateConversationModelRequest::_internal_has_conversation_model() const {
  return this != internal_default_instance() && _impl_.conversation_model_ != nullptr;
}
inline bool CreateConversationModelRequest::has_conversation_model() const {
  return _internal_has_conversation_model();
}
inline void CreateConversationModelRequest::clear_conversation_model() {
  if (GetArenaForAllocation() == nullptr && _impl_.conversation_model_ != nullptr) {
    delete _impl_.conversation_model_;
  }
  _impl_.conversation_model_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::ConversationModel& CreateConversationModelRequest::_internal_conversation_model() const {
  const ::google::cloud::dialogflow::v2::ConversationModel* p = _impl_.conversation_model_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::ConversationModel&>(
      ::google::cloud::dialogflow::v2::_ConversationModel_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::ConversationModel& CreateConversationModelRequest::conversation_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelRequest.conversation_model)
  return _internal_conversation_model();
}
inline void CreateConversationModelRequest::unsafe_arena_set_allocated_conversation_model(
    ::google::cloud::dialogflow::v2::ConversationModel* conversation_model) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conversation_model_);
  }
  _impl_.conversation_model_ = conversation_model;
  if (conversation_model) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelRequest.conversation_model)
}
inline ::google::cloud::dialogflow::v2::ConversationModel* CreateConversationModelRequest::release_conversation_model() {
  
  ::google::cloud::dialogflow::v2::ConversationModel* temp = _impl_.conversation_model_;
  _impl_.conversation_model_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationModel* CreateConversationModelRequest::unsafe_arena_release_conversation_model() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelRequest.conversation_model)
  
  ::google::cloud::dialogflow::v2::ConversationModel* temp = _impl_.conversation_model_;
  _impl_.conversation_model_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationModel* CreateConversationModelRequest::_internal_mutable_conversation_model() {
  
  if (_impl_.conversation_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::ConversationModel>(GetArenaForAllocation());
    _impl_.conversation_model_ = p;
  }
  return _impl_.conversation_model_;
}
inline ::google::cloud::dialogflow::v2::ConversationModel* CreateConversationModelRequest::mutable_conversation_model() {
  ::google::cloud::dialogflow::v2::ConversationModel* _msg = _internal_mutable_conversation_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelRequest.conversation_model)
  return _msg;
}
inline void CreateConversationModelRequest::set_allocated_conversation_model(::google::cloud::dialogflow::v2::ConversationModel* conversation_model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.conversation_model_;
  }
  if (conversation_model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(conversation_model);
    if (message_arena != submessage_arena) {
      conversation_model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conversation_model, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.conversation_model_ = conversation_model;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelRequest.conversation_model)
}

// -------------------------------------------------------------------

// GetConversationModelRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void GetConversationModelRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetConversationModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.GetConversationModelRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetConversationModelRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.GetConversationModelRequest.name)
}
inline std::string* GetConversationModelRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.GetConversationModelRequest.name)
  return _s;
}
inline const std::string& GetConversationModelRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GetConversationModelRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetConversationModelRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetConversationModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.GetConversationModelRequest.name)
  return _impl_.name_.Release();
}
inline void GetConversationModelRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.GetConversationModelRequest.name)
}

// -------------------------------------------------------------------

// ListConversationModelsRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED];
inline void ListConversationModelsRequest::clear_parent() {
  _impl_.parent_.ClearToEmpty();
}
inline const std::string& ListConversationModelsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelsRequest.parent)
  return _internal_parent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationModelsRequest::set_parent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.parent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelsRequest.parent)
}
inline std::string* ListConversationModelsRequest::mutable_parent() {
  std::string* _s = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelsRequest.parent)
  return _s;
}
inline const std::string& ListConversationModelsRequest::_internal_parent() const {
  return _impl_.parent_.Get();
}
inline void ListConversationModelsRequest::_internal_set_parent(const std::string& value) {
  
  _impl_.parent_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationModelsRequest::_internal_mutable_parent() {
  
  return _impl_.parent_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationModelsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationModelsRequest.parent)
  return _impl_.parent_.Release();
}
inline void ListConversationModelsRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  _impl_.parent_.SetAllocated(parent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.parent_.IsDefault()) {
    _impl_.parent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationModelsRequest.parent)
}

// int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void ListConversationModelsRequest::clear_page_size() {
  _impl_.page_size_ = 0;
}
inline int32_t ListConversationModelsRequest::_internal_page_size() const {
  return _impl_.page_size_;
}
inline int32_t ListConversationModelsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelsRequest.page_size)
  return _internal_page_size();
}
inline void ListConversationModelsRequest::_internal_set_page_size(int32_t value) {
  
  _impl_.page_size_ = value;
}
inline void ListConversationModelsRequest::set_page_size(int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelsRequest.page_size)
}

// string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
inline void ListConversationModelsRequest::clear_page_token() {
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& ListConversationModelsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelsRequest.page_token)
  return _internal_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationModelsRequest::set_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelsRequest.page_token)
}
inline std::string* ListConversationModelsRequest::mutable_page_token() {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelsRequest.page_token)
  return _s;
}
inline const std::string& ListConversationModelsRequest::_internal_page_token() const {
  return _impl_.page_token_.Get();
}
inline void ListConversationModelsRequest::_internal_set_page_token(const std::string& value) {
  
  _impl_.page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationModelsRequest::_internal_mutable_page_token() {
  
  return _impl_.page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationModelsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationModelsRequest.page_token)
  return _impl_.page_token_.Release();
}
inline void ListConversationModelsRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  _impl_.page_token_.SetAllocated(page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.page_token_.IsDefault()) {
    _impl_.page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationModelsRequest.page_token)
}

// -------------------------------------------------------------------

// ListConversationModelsResponse

// repeated .google.cloud.dialogflow.v2.ConversationModel conversation_models = 1;
inline int ListConversationModelsResponse::_internal_conversation_models_size() const {
  return _impl_.conversation_models_.size();
}
inline int ListConversationModelsResponse::conversation_models_size() const {
  return _internal_conversation_models_size();
}
inline void ListConversationModelsResponse::clear_conversation_models() {
  _impl_.conversation_models_.Clear();
}
inline ::google::cloud::dialogflow::v2::ConversationModel* ListConversationModelsResponse::mutable_conversation_models(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelsResponse.conversation_models)
  return _impl_.conversation_models_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModel >*
ListConversationModelsResponse::mutable_conversation_models() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.ListConversationModelsResponse.conversation_models)
  return &_impl_.conversation_models_;
}
inline const ::google::cloud::dialogflow::v2::ConversationModel& ListConversationModelsResponse::_internal_conversation_models(int index) const {
  return _impl_.conversation_models_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::ConversationModel& ListConversationModelsResponse::conversation_models(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelsResponse.conversation_models)
  return _internal_conversation_models(index);
}
inline ::google::cloud::dialogflow::v2::ConversationModel* ListConversationModelsResponse::_internal_add_conversation_models() {
  return _impl_.conversation_models_.Add();
}
inline ::google::cloud::dialogflow::v2::ConversationModel* ListConversationModelsResponse::add_conversation_models() {
  ::google::cloud::dialogflow::v2::ConversationModel* _add = _internal_add_conversation_models();
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.ListConversationModelsResponse.conversation_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModel >&
ListConversationModelsResponse::conversation_models() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.ListConversationModelsResponse.conversation_models)
  return _impl_.conversation_models_;
}

// string next_page_token = 2;
inline void ListConversationModelsResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& ListConversationModelsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelsResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationModelsResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelsResponse.next_page_token)
}
inline std::string* ListConversationModelsResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelsResponse.next_page_token)
  return _s;
}
inline const std::string& ListConversationModelsResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void ListConversationModelsResponse::_internal_set_next_page_token(const std::string& value) {
  
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationModelsResponse::_internal_mutable_next_page_token() {
  
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationModelsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationModelsResponse.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void ListConversationModelsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationModelsResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteConversationModelRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void DeleteConversationModelRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DeleteConversationModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeleteConversationModelRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeleteConversationModelRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeleteConversationModelRequest.name)
}
inline std::string* DeleteConversationModelRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeleteConversationModelRequest.name)
  return _s;
}
inline const std::string& DeleteConversationModelRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void DeleteConversationModelRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteConversationModelRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* DeleteConversationModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeleteConversationModelRequest.name)
  return _impl_.name_.Release();
}
inline void DeleteConversationModelRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeleteConversationModelRequest.name)
}

// -------------------------------------------------------------------

// DeployConversationModelRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void DeployConversationModelRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DeployConversationModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeployConversationModelRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeployConversationModelRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeployConversationModelRequest.name)
}
inline std::string* DeployConversationModelRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeployConversationModelRequest.name)
  return _s;
}
inline const std::string& DeployConversationModelRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void DeployConversationModelRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* DeployConversationModelRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* DeployConversationModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeployConversationModelRequest.name)
  return _impl_.name_.Release();
}
inline void DeployConversationModelRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeployConversationModelRequest.name)
}

// -------------------------------------------------------------------

// UndeployConversationModelRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void UndeployConversationModelRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& UndeployConversationModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UndeployConversationModelRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UndeployConversationModelRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.UndeployConversationModelRequest.name)
}
inline std::string* UndeployConversationModelRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UndeployConversationModelRequest.name)
  return _s;
}
inline const std::string& UndeployConversationModelRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void UndeployConversationModelRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* UndeployConversationModelRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* UndeployConversationModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UndeployConversationModelRequest.name)
  return _impl_.name_.Release();
}
inline void UndeployConversationModelRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UndeployConversationModelRequest.name)
}

// -------------------------------------------------------------------

// GetConversationModelEvaluationRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void GetConversationModelEvaluationRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetConversationModelEvaluationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetConversationModelEvaluationRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest.name)
}
inline std::string* GetConversationModelEvaluationRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest.name)
  return _s;
}
inline const std::string& GetConversationModelEvaluationRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GetConversationModelEvaluationRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetConversationModelEvaluationRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetConversationModelEvaluationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest.name)
  return _impl_.name_.Release();
}
inline void GetConversationModelEvaluationRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.GetConversationModelEvaluationRequest.name)
}

// -------------------------------------------------------------------

// ListConversationModelEvaluationsRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED];
inline void ListConversationModelEvaluationsRequest::clear_parent() {
  _impl_.parent_.ClearToEmpty();
}
inline const std::string& ListConversationModelEvaluationsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.parent)
  return _internal_parent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationModelEvaluationsRequest::set_parent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.parent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.parent)
}
inline std::string* ListConversationModelEvaluationsRequest::mutable_parent() {
  std::string* _s = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.parent)
  return _s;
}
inline const std::string& ListConversationModelEvaluationsRequest::_internal_parent() const {
  return _impl_.parent_.Get();
}
inline void ListConversationModelEvaluationsRequest::_internal_set_parent(const std::string& value) {
  
  _impl_.parent_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationModelEvaluationsRequest::_internal_mutable_parent() {
  
  return _impl_.parent_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationModelEvaluationsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.parent)
  return _impl_.parent_.Release();
}
inline void ListConversationModelEvaluationsRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  _impl_.parent_.SetAllocated(parent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.parent_.IsDefault()) {
    _impl_.parent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.parent)
}

// int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void ListConversationModelEvaluationsRequest::clear_page_size() {
  _impl_.page_size_ = 0;
}
inline int32_t ListConversationModelEvaluationsRequest::_internal_page_size() const {
  return _impl_.page_size_;
}
inline int32_t ListConversationModelEvaluationsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.page_size)
  return _internal_page_size();
}
inline void ListConversationModelEvaluationsRequest::_internal_set_page_size(int32_t value) {
  
  _impl_.page_size_ = value;
}
inline void ListConversationModelEvaluationsRequest::set_page_size(int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.page_size)
}

// string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
inline void ListConversationModelEvaluationsRequest::clear_page_token() {
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& ListConversationModelEvaluationsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.page_token)
  return _internal_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationModelEvaluationsRequest::set_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.page_token)
}
inline std::string* ListConversationModelEvaluationsRequest::mutable_page_token() {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.page_token)
  return _s;
}
inline const std::string& ListConversationModelEvaluationsRequest::_internal_page_token() const {
  return _impl_.page_token_.Get();
}
inline void ListConversationModelEvaluationsRequest::_internal_set_page_token(const std::string& value) {
  
  _impl_.page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationModelEvaluationsRequest::_internal_mutable_page_token() {
  
  return _impl_.page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationModelEvaluationsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.page_token)
  return _impl_.page_token_.Release();
}
inline void ListConversationModelEvaluationsRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  _impl_.page_token_.SetAllocated(page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.page_token_.IsDefault()) {
    _impl_.page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationModelEvaluationsRequest.page_token)
}

// -------------------------------------------------------------------

// ListConversationModelEvaluationsResponse

// repeated .google.cloud.dialogflow.v2.ConversationModelEvaluation conversation_model_evaluations = 1;
inline int ListConversationModelEvaluationsResponse::_internal_conversation_model_evaluations_size() const {
  return _impl_.conversation_model_evaluations_.size();
}
inline int ListConversationModelEvaluationsResponse::conversation_model_evaluations_size() const {
  return _internal_conversation_model_evaluations_size();
}
inline void ListConversationModelEvaluationsResponse::clear_conversation_model_evaluations() {
  _impl_.conversation_model_evaluations_.Clear();
}
inline ::google::cloud::dialogflow::v2::ConversationModelEvaluation* ListConversationModelEvaluationsResponse::mutable_conversation_model_evaluations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.conversation_model_evaluations)
  return _impl_.conversation_model_evaluations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModelEvaluation >*
ListConversationModelEvaluationsResponse::mutable_conversation_model_evaluations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.conversation_model_evaluations)
  return &_impl_.conversation_model_evaluations_;
}
inline const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& ListConversationModelEvaluationsResponse::_internal_conversation_model_evaluations(int index) const {
  return _impl_.conversation_model_evaluations_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& ListConversationModelEvaluationsResponse::conversation_model_evaluations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.conversation_model_evaluations)
  return _internal_conversation_model_evaluations(index);
}
inline ::google::cloud::dialogflow::v2::ConversationModelEvaluation* ListConversationModelEvaluationsResponse::_internal_add_conversation_model_evaluations() {
  return _impl_.conversation_model_evaluations_.Add();
}
inline ::google::cloud::dialogflow::v2::ConversationModelEvaluation* ListConversationModelEvaluationsResponse::add_conversation_model_evaluations() {
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* _add = _internal_add_conversation_model_evaluations();
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.conversation_model_evaluations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationModelEvaluation >&
ListConversationModelEvaluationsResponse::conversation_model_evaluations() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.conversation_model_evaluations)
  return _impl_.conversation_model_evaluations_;
}

// string next_page_token = 2;
inline void ListConversationModelEvaluationsResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& ListConversationModelEvaluationsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationModelEvaluationsResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.next_page_token)
}
inline std::string* ListConversationModelEvaluationsResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.next_page_token)
  return _s;
}
inline const std::string& ListConversationModelEvaluationsResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void ListConversationModelEvaluationsResponse::_internal_set_next_page_token(const std::string& value) {
  
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationModelEvaluationsResponse::_internal_mutable_next_page_token() {
  
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationModelEvaluationsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void ListConversationModelEvaluationsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationModelEvaluationsResponse.next_page_token)
}

// -------------------------------------------------------------------

// CreateConversationModelEvaluationRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void CreateConversationModelEvaluationRequest::clear_parent() {
  _impl_.parent_.ClearToEmpty();
}
inline const std::string& CreateConversationModelEvaluationRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.parent)
  return _internal_parent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreateConversationModelEvaluationRequest::set_parent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.parent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.parent)
}
inline std::string* CreateConversationModelEvaluationRequest::mutable_parent() {
  std::string* _s = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.parent)
  return _s;
}
inline const std::string& CreateConversationModelEvaluationRequest::_internal_parent() const {
  return _impl_.parent_.Get();
}
inline void CreateConversationModelEvaluationRequest::_internal_set_parent(const std::string& value) {
  
  _impl_.parent_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateConversationModelEvaluationRequest::_internal_mutable_parent() {
  
  return _impl_.parent_.Mutable(GetArenaForAllocation());
}
inline std::string* CreateConversationModelEvaluationRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.parent)
  return _impl_.parent_.Release();
}
inline void CreateConversationModelEvaluationRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  _impl_.parent_.SetAllocated(parent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.parent_.IsDefault()) {
    _impl_.parent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.parent)
}

// .google.cloud.dialogflow.v2.ConversationModelEvaluation conversation_model_evaluation = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool CreateConversationModelEvaluationRequest::_internal_has_conversation_model_evaluation() const {
  return this != internal_default_instance() && _impl_.conversation_model_evaluation_ != nullptr;
}
inline bool CreateConversationModelEvaluationRequest::has_conversation_model_evaluation() const {
  return _internal_has_conversation_model_evaluation();
}
inline void CreateConversationModelEvaluationRequest::clear_conversation_model_evaluation() {
  if (GetArenaForAllocation() == nullptr && _impl_.conversation_model_evaluation_ != nullptr) {
    delete _impl_.conversation_model_evaluation_;
  }
  _impl_.conversation_model_evaluation_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& CreateConversationModelEvaluationRequest::_internal_conversation_model_evaluation() const {
  const ::google::cloud::dialogflow::v2::ConversationModelEvaluation* p = _impl_.conversation_model_evaluation_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::ConversationModelEvaluation&>(
      ::google::cloud::dialogflow::v2::_ConversationModelEvaluation_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::ConversationModelEvaluation& CreateConversationModelEvaluationRequest::conversation_model_evaluation() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.conversation_model_evaluation)
  return _internal_conversation_model_evaluation();
}
inline void CreateConversationModelEvaluationRequest::unsafe_arena_set_allocated_conversation_model_evaluation(
    ::google::cloud::dialogflow::v2::ConversationModelEvaluation* conversation_model_evaluation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conversation_model_evaluation_);
  }
  _impl_.conversation_model_evaluation_ = conversation_model_evaluation;
  if (conversation_model_evaluation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.conversation_model_evaluation)
}
inline ::google::cloud::dialogflow::v2::ConversationModelEvaluation* CreateConversationModelEvaluationRequest::release_conversation_model_evaluation() {
  
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* temp = _impl_.conversation_model_evaluation_;
  _impl_.conversation_model_evaluation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationModelEvaluation* CreateConversationModelEvaluationRequest::unsafe_arena_release_conversation_model_evaluation() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.conversation_model_evaluation)
  
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* temp = _impl_.conversation_model_evaluation_;
  _impl_.conversation_model_evaluation_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationModelEvaluation* CreateConversationModelEvaluationRequest::_internal_mutable_conversation_model_evaluation() {
  
  if (_impl_.conversation_model_evaluation_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::ConversationModelEvaluation>(GetArenaForAllocation());
    _impl_.conversation_model_evaluation_ = p;
  }
  return _impl_.conversation_model_evaluation_;
}
inline ::google::cloud::dialogflow::v2::ConversationModelEvaluation* CreateConversationModelEvaluationRequest::mutable_conversation_model_evaluation() {
  ::google::cloud::dialogflow::v2::ConversationModelEvaluation* _msg = _internal_mutable_conversation_model_evaluation();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.conversation_model_evaluation)
  return _msg;
}
inline void CreateConversationModelEvaluationRequest::set_allocated_conversation_model_evaluation(::google::cloud::dialogflow::v2::ConversationModelEvaluation* conversation_model_evaluation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.conversation_model_evaluation_;
  }
  if (conversation_model_evaluation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(conversation_model_evaluation);
    if (message_arena != submessage_arena) {
      conversation_model_evaluation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conversation_model_evaluation, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.conversation_model_evaluation_ = conversation_model_evaluation;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelEvaluationRequest.conversation_model_evaluation)
}

// -------------------------------------------------------------------

// CreateConversationModelOperationMetadata

// string conversation_model = 1;
inline void CreateConversationModelOperationMetadata::clear_conversation_model() {
  _impl_.conversation_model_.ClearToEmpty();
}
inline const std::string& CreateConversationModelOperationMetadata::conversation_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.conversation_model)
  return _internal_conversation_model();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreateConversationModelOperationMetadata::set_conversation_model(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_model_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.conversation_model)
}
inline std::string* CreateConversationModelOperationMetadata::mutable_conversation_model() {
  std::string* _s = _internal_mutable_conversation_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.conversation_model)
  return _s;
}
inline const std::string& CreateConversationModelOperationMetadata::_internal_conversation_model() const {
  return _impl_.conversation_model_.Get();
}
inline void CreateConversationModelOperationMetadata::_internal_set_conversation_model(const std::string& value) {
  
  _impl_.conversation_model_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateConversationModelOperationMetadata::_internal_mutable_conversation_model() {
  
  return _impl_.conversation_model_.Mutable(GetArenaForAllocation());
}
inline std::string* CreateConversationModelOperationMetadata::release_conversation_model() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.conversation_model)
  return _impl_.conversation_model_.Release();
}
inline void CreateConversationModelOperationMetadata::set_allocated_conversation_model(std::string* conversation_model) {
  if (conversation_model != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_model_.SetAllocated(conversation_model, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_model_.IsDefault()) {
    _impl_.conversation_model_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.conversation_model)
}

// .google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.State state = 2;
inline void CreateConversationModelOperationMetadata::clear_state() {
  _impl_.state_ = 0;
}
inline ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State CreateConversationModelOperationMetadata::_internal_state() const {
  return static_cast< ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State >(_impl_.state_);
}
inline ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State CreateConversationModelOperationMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.state)
  return _internal_state();
}
inline void CreateConversationModelOperationMetadata::_internal_set_state(::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State value) {
  
  _impl_.state_ = value;
}
inline void CreateConversationModelOperationMetadata::set_state(::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.state)
}

// .google.protobuf.Timestamp create_time = 3;
inline bool CreateConversationModelOperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool CreateConversationModelOperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& CreateConversationModelOperationMetadata::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& CreateConversationModelOperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.create_time)
  return _internal_create_time();
}
inline void CreateConversationModelOperationMetadata::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelOperationMetadata::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelOperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelOperationMetadata::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelOperationMetadata::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.create_time)
  return _msg;
}
inline void CreateConversationModelOperationMetadata::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelOperationMetadata.create_time)
}

// -------------------------------------------------------------------

// DeployConversationModelOperationMetadata

// string conversation_model = 1;
inline void DeployConversationModelOperationMetadata::clear_conversation_model() {
  _impl_.conversation_model_.ClearToEmpty();
}
inline const std::string& DeployConversationModelOperationMetadata::conversation_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.conversation_model)
  return _internal_conversation_model();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeployConversationModelOperationMetadata::set_conversation_model(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_model_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.conversation_model)
}
inline std::string* DeployConversationModelOperationMetadata::mutable_conversation_model() {
  std::string* _s = _internal_mutable_conversation_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.conversation_model)
  return _s;
}
inline const std::string& DeployConversationModelOperationMetadata::_internal_conversation_model() const {
  return _impl_.conversation_model_.Get();
}
inline void DeployConversationModelOperationMetadata::_internal_set_conversation_model(const std::string& value) {
  
  _impl_.conversation_model_.Set(value, GetArenaForAllocation());
}
inline std::string* DeployConversationModelOperationMetadata::_internal_mutable_conversation_model() {
  
  return _impl_.conversation_model_.Mutable(GetArenaForAllocation());
}
inline std::string* DeployConversationModelOperationMetadata::release_conversation_model() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.conversation_model)
  return _impl_.conversation_model_.Release();
}
inline void DeployConversationModelOperationMetadata::set_allocated_conversation_model(std::string* conversation_model) {
  if (conversation_model != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_model_.SetAllocated(conversation_model, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_model_.IsDefault()) {
    _impl_.conversation_model_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.conversation_model)
}

// .google.protobuf.Timestamp create_time = 3;
inline bool DeployConversationModelOperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool DeployConversationModelOperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& DeployConversationModelOperationMetadata::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& DeployConversationModelOperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.create_time)
  return _internal_create_time();
}
inline void DeployConversationModelOperationMetadata::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeployConversationModelOperationMetadata::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeployConversationModelOperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeployConversationModelOperationMetadata::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeployConversationModelOperationMetadata::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.create_time)
  return _msg;
}
inline void DeployConversationModelOperationMetadata::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeployConversationModelOperationMetadata.create_time)
}

// -------------------------------------------------------------------

// UndeployConversationModelOperationMetadata

// string conversation_model = 1;
inline void UndeployConversationModelOperationMetadata::clear_conversation_model() {
  _impl_.conversation_model_.ClearToEmpty();
}
inline const std::string& UndeployConversationModelOperationMetadata::conversation_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.conversation_model)
  return _internal_conversation_model();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UndeployConversationModelOperationMetadata::set_conversation_model(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_model_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.conversation_model)
}
inline std::string* UndeployConversationModelOperationMetadata::mutable_conversation_model() {
  std::string* _s = _internal_mutable_conversation_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.conversation_model)
  return _s;
}
inline const std::string& UndeployConversationModelOperationMetadata::_internal_conversation_model() const {
  return _impl_.conversation_model_.Get();
}
inline void UndeployConversationModelOperationMetadata::_internal_set_conversation_model(const std::string& value) {
  
  _impl_.conversation_model_.Set(value, GetArenaForAllocation());
}
inline std::string* UndeployConversationModelOperationMetadata::_internal_mutable_conversation_model() {
  
  return _impl_.conversation_model_.Mutable(GetArenaForAllocation());
}
inline std::string* UndeployConversationModelOperationMetadata::release_conversation_model() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.conversation_model)
  return _impl_.conversation_model_.Release();
}
inline void UndeployConversationModelOperationMetadata::set_allocated_conversation_model(std::string* conversation_model) {
  if (conversation_model != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_model_.SetAllocated(conversation_model, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_model_.IsDefault()) {
    _impl_.conversation_model_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.conversation_model)
}

// .google.protobuf.Timestamp create_time = 3;
inline bool UndeployConversationModelOperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool UndeployConversationModelOperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& UndeployConversationModelOperationMetadata::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& UndeployConversationModelOperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.create_time)
  return _internal_create_time();
}
inline void UndeployConversationModelOperationMetadata::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* UndeployConversationModelOperationMetadata::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* UndeployConversationModelOperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* UndeployConversationModelOperationMetadata::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* UndeployConversationModelOperationMetadata::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.create_time)
  return _msg;
}
inline void UndeployConversationModelOperationMetadata::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UndeployConversationModelOperationMetadata.create_time)
}

// -------------------------------------------------------------------

// DeleteConversationModelOperationMetadata

// string conversation_model = 1;
inline void DeleteConversationModelOperationMetadata::clear_conversation_model() {
  _impl_.conversation_model_.ClearToEmpty();
}
inline const std::string& DeleteConversationModelOperationMetadata::conversation_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.conversation_model)
  return _internal_conversation_model();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeleteConversationModelOperationMetadata::set_conversation_model(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_model_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.conversation_model)
}
inline std::string* DeleteConversationModelOperationMetadata::mutable_conversation_model() {
  std::string* _s = _internal_mutable_conversation_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.conversation_model)
  return _s;
}
inline const std::string& DeleteConversationModelOperationMetadata::_internal_conversation_model() const {
  return _impl_.conversation_model_.Get();
}
inline void DeleteConversationModelOperationMetadata::_internal_set_conversation_model(const std::string& value) {
  
  _impl_.conversation_model_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteConversationModelOperationMetadata::_internal_mutable_conversation_model() {
  
  return _impl_.conversation_model_.Mutable(GetArenaForAllocation());
}
inline std::string* DeleteConversationModelOperationMetadata::release_conversation_model() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.conversation_model)
  return _impl_.conversation_model_.Release();
}
inline void DeleteConversationModelOperationMetadata::set_allocated_conversation_model(std::string* conversation_model) {
  if (conversation_model != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_model_.SetAllocated(conversation_model, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_model_.IsDefault()) {
    _impl_.conversation_model_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.conversation_model)
}

// .google.protobuf.Timestamp create_time = 3;
inline bool DeleteConversationModelOperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool DeleteConversationModelOperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& DeleteConversationModelOperationMetadata::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& DeleteConversationModelOperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.create_time)
  return _internal_create_time();
}
inline void DeleteConversationModelOperationMetadata::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeleteConversationModelOperationMetadata::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeleteConversationModelOperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeleteConversationModelOperationMetadata::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* DeleteConversationModelOperationMetadata::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.create_time)
  return _msg;
}
inline void DeleteConversationModelOperationMetadata::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeleteConversationModelOperationMetadata.create_time)
}

// -------------------------------------------------------------------

// CreateConversationModelEvaluationOperationMetadata

// string conversation_model_evaluation = 1;
inline void CreateConversationModelEvaluationOperationMetadata::clear_conversation_model_evaluation() {
  _impl_.conversation_model_evaluation_.ClearToEmpty();
}
inline const std::string& CreateConversationModelEvaluationOperationMetadata::conversation_model_evaluation() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model_evaluation)
  return _internal_conversation_model_evaluation();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreateConversationModelEvaluationOperationMetadata::set_conversation_model_evaluation(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_model_evaluation_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model_evaluation)
}
inline std::string* CreateConversationModelEvaluationOperationMetadata::mutable_conversation_model_evaluation() {
  std::string* _s = _internal_mutable_conversation_model_evaluation();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model_evaluation)
  return _s;
}
inline const std::string& CreateConversationModelEvaluationOperationMetadata::_internal_conversation_model_evaluation() const {
  return _impl_.conversation_model_evaluation_.Get();
}
inline void CreateConversationModelEvaluationOperationMetadata::_internal_set_conversation_model_evaluation(const std::string& value) {
  
  _impl_.conversation_model_evaluation_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateConversationModelEvaluationOperationMetadata::_internal_mutable_conversation_model_evaluation() {
  
  return _impl_.conversation_model_evaluation_.Mutable(GetArenaForAllocation());
}
inline std::string* CreateConversationModelEvaluationOperationMetadata::release_conversation_model_evaluation() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model_evaluation)
  return _impl_.conversation_model_evaluation_.Release();
}
inline void CreateConversationModelEvaluationOperationMetadata::set_allocated_conversation_model_evaluation(std::string* conversation_model_evaluation) {
  if (conversation_model_evaluation != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_model_evaluation_.SetAllocated(conversation_model_evaluation, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_model_evaluation_.IsDefault()) {
    _impl_.conversation_model_evaluation_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model_evaluation)
}

// string conversation_model = 4;
inline void CreateConversationModelEvaluationOperationMetadata::clear_conversation_model() {
  _impl_.conversation_model_.ClearToEmpty();
}
inline const std::string& CreateConversationModelEvaluationOperationMetadata::conversation_model() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model)
  return _internal_conversation_model();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreateConversationModelEvaluationOperationMetadata::set_conversation_model(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_model_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model)
}
inline std::string* CreateConversationModelEvaluationOperationMetadata::mutable_conversation_model() {
  std::string* _s = _internal_mutable_conversation_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model)
  return _s;
}
inline const std::string& CreateConversationModelEvaluationOperationMetadata::_internal_conversation_model() const {
  return _impl_.conversation_model_.Get();
}
inline void CreateConversationModelEvaluationOperationMetadata::_internal_set_conversation_model(const std::string& value) {
  
  _impl_.conversation_model_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateConversationModelEvaluationOperationMetadata::_internal_mutable_conversation_model() {
  
  return _impl_.conversation_model_.Mutable(GetArenaForAllocation());
}
inline std::string* CreateConversationModelEvaluationOperationMetadata::release_conversation_model() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model)
  return _impl_.conversation_model_.Release();
}
inline void CreateConversationModelEvaluationOperationMetadata::set_allocated_conversation_model(std::string* conversation_model) {
  if (conversation_model != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_model_.SetAllocated(conversation_model, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_model_.IsDefault()) {
    _impl_.conversation_model_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.conversation_model)
}

// .google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.State state = 2;
inline void CreateConversationModelEvaluationOperationMetadata::clear_state() {
  _impl_.state_ = 0;
}
inline ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State CreateConversationModelEvaluationOperationMetadata::_internal_state() const {
  return static_cast< ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State >(_impl_.state_);
}
inline ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State CreateConversationModelEvaluationOperationMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.state)
  return _internal_state();
}
inline void CreateConversationModelEvaluationOperationMetadata::_internal_set_state(::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State value) {
  
  _impl_.state_ = value;
}
inline void CreateConversationModelEvaluationOperationMetadata::set_state(::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.state)
}

// .google.protobuf.Timestamp create_time = 3;
inline bool CreateConversationModelEvaluationOperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool CreateConversationModelEvaluationOperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& CreateConversationModelEvaluationOperationMetadata::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& CreateConversationModelEvaluationOperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.create_time)
  return _internal_create_time();
}
inline void CreateConversationModelEvaluationOperationMetadata::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelEvaluationOperationMetadata::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelEvaluationOperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelEvaluationOperationMetadata::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* CreateConversationModelEvaluationOperationMetadata::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.create_time)
  return _msg;
}
inline void CreateConversationModelEvaluationOperationMetadata::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationModelEvaluationOperationMetadata.create_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2::ConversationModel_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2::ConversationModel_State>() {
  return ::google::cloud::dialogflow::v2::ConversationModel_State_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2::ConversationModel_ModelType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2::ConversationModel_ModelType>() {
  return ::google::cloud::dialogflow::v2::ConversationModel_ModelType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State>() {
  return ::google::cloud::dialogflow::v2::CreateConversationModelOperationMetadata_State_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State>() {
  return ::google::cloud::dialogflow::v2::CreateConversationModelEvaluationOperationMetadata_State_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fmodel_2eproto
