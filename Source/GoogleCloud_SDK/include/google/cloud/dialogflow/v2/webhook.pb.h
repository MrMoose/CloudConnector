// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2/webhook.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/cloud/dialogflow/v2/context.pb.h"
#include "google/cloud/dialogflow/v2/intent.pb.h"
#include "google/cloud/dialogflow/v2/session.pb.h"
#include "google/cloud/dialogflow/v2/session_entity_type.pb.h"
#include <google/protobuf/struct.pb.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto_metadata_getter(int index);
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {
class OriginalDetectIntentRequest;
struct OriginalDetectIntentRequestDefaultTypeInternal;
extern OriginalDetectIntentRequestDefaultTypeInternal _OriginalDetectIntentRequest_default_instance_;
class WebhookRequest;
struct WebhookRequestDefaultTypeInternal;
extern WebhookRequestDefaultTypeInternal _WebhookRequest_default_instance_;
class WebhookResponse;
struct WebhookResponseDefaultTypeInternal;
extern WebhookResponseDefaultTypeInternal _WebhookResponse_default_instance_;
}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::OriginalDetectIntentRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::WebhookRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::WebhookRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::WebhookResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::WebhookResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {

// ===================================================================

class WebhookRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.WebhookRequest) */ {
 public:
  inline WebhookRequest() : WebhookRequest(nullptr) {}
  virtual ~WebhookRequest();
  explicit constexpr WebhookRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WebhookRequest(const WebhookRequest& from);
  WebhookRequest(WebhookRequest&& from) noexcept
    : WebhookRequest() {
    *this = ::std::move(from);
  }

  inline WebhookRequest& operator=(const WebhookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WebhookRequest& operator=(WebhookRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WebhookRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WebhookRequest* internal_default_instance() {
    return reinterpret_cast<const WebhookRequest*>(
               &_WebhookRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WebhookRequest& a, WebhookRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WebhookRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WebhookRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WebhookRequest* New() const final {
    return CreateMaybeMessage<WebhookRequest>(nullptr);
  }

  WebhookRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WebhookRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WebhookRequest& from);
  void MergeFrom(const WebhookRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WebhookRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.WebhookRequest";
  }
  protected:
  explicit WebhookRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseIdFieldNumber = 1,
    kSessionFieldNumber = 4,
    kQueryResultFieldNumber = 2,
    kOriginalDetectIntentRequestFieldNumber = 3,
  };
  // string response_id = 1;
  void clear_response_id();
  const std::string& response_id() const;
  void set_response_id(const std::string& value);
  void set_response_id(std::string&& value);
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  std::string* mutable_response_id();
  std::string* release_response_id();
  void set_allocated_response_id(std::string* response_id);
  private:
  const std::string& _internal_response_id() const;
  void _internal_set_response_id(const std::string& value);
  std::string* _internal_mutable_response_id();
  public:

  // string session = 4;
  void clear_session();
  const std::string& session() const;
  void set_session(const std::string& value);
  void set_session(std::string&& value);
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  std::string* mutable_session();
  std::string* release_session();
  void set_allocated_session(std::string* session);
  private:
  const std::string& _internal_session() const;
  void _internal_set_session(const std::string& value);
  std::string* _internal_mutable_session();
  public:

  // .google.cloud.dialogflow.v2.QueryResult query_result = 2;
  bool has_query_result() const;
  private:
  bool _internal_has_query_result() const;
  public:
  void clear_query_result();
  const ::google::cloud::dialogflow::v2::QueryResult& query_result() const;
  ::google::cloud::dialogflow::v2::QueryResult* release_query_result();
  ::google::cloud::dialogflow::v2::QueryResult* mutable_query_result();
  void set_allocated_query_result(::google::cloud::dialogflow::v2::QueryResult* query_result);
  private:
  const ::google::cloud::dialogflow::v2::QueryResult& _internal_query_result() const;
  ::google::cloud::dialogflow::v2::QueryResult* _internal_mutable_query_result();
  public:
  void unsafe_arena_set_allocated_query_result(
      ::google::cloud::dialogflow::v2::QueryResult* query_result);
  ::google::cloud::dialogflow::v2::QueryResult* unsafe_arena_release_query_result();

  // .google.cloud.dialogflow.v2.OriginalDetectIntentRequest original_detect_intent_request = 3;
  bool has_original_detect_intent_request() const;
  private:
  bool _internal_has_original_detect_intent_request() const;
  public:
  void clear_original_detect_intent_request();
  const ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest& original_detect_intent_request() const;
  ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* release_original_detect_intent_request();
  ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* mutable_original_detect_intent_request();
  void set_allocated_original_detect_intent_request(::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* original_detect_intent_request);
  private:
  const ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest& _internal_original_detect_intent_request() const;
  ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* _internal_mutable_original_detect_intent_request();
  public:
  void unsafe_arena_set_allocated_original_detect_intent_request(
      ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* original_detect_intent_request);
  ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* unsafe_arena_release_original_detect_intent_request();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.WebhookRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_;
  ::google::cloud::dialogflow::v2::QueryResult* query_result_;
  ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* original_detect_intent_request_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto;
};
// -------------------------------------------------------------------

class WebhookResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.WebhookResponse) */ {
 public:
  inline WebhookResponse() : WebhookResponse(nullptr) {}
  virtual ~WebhookResponse();
  explicit constexpr WebhookResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WebhookResponse(const WebhookResponse& from);
  WebhookResponse(WebhookResponse&& from) noexcept
    : WebhookResponse() {
    *this = ::std::move(from);
  }

  inline WebhookResponse& operator=(const WebhookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WebhookResponse& operator=(WebhookResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WebhookResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WebhookResponse* internal_default_instance() {
    return reinterpret_cast<const WebhookResponse*>(
               &_WebhookResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(WebhookResponse& a, WebhookResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WebhookResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WebhookResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WebhookResponse* New() const final {
    return CreateMaybeMessage<WebhookResponse>(nullptr);
  }

  WebhookResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WebhookResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WebhookResponse& from);
  void MergeFrom(const WebhookResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WebhookResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.WebhookResponse";
  }
  protected:
  explicit WebhookResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFulfillmentMessagesFieldNumber = 2,
    kOutputContextsFieldNumber = 5,
    kSessionEntityTypesFieldNumber = 10,
    kFulfillmentTextFieldNumber = 1,
    kSourceFieldNumber = 3,
    kPayloadFieldNumber = 4,
    kFollowupEventInputFieldNumber = 6,
  };
  // repeated .google.cloud.dialogflow.v2.Intent.Message fulfillment_messages = 2;
  int fulfillment_messages_size() const;
  private:
  int _internal_fulfillment_messages_size() const;
  public:
  void clear_fulfillment_messages();
  ::google::cloud::dialogflow::v2::Intent_Message* mutable_fulfillment_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Intent_Message >*
      mutable_fulfillment_messages();
  private:
  const ::google::cloud::dialogflow::v2::Intent_Message& _internal_fulfillment_messages(int index) const;
  ::google::cloud::dialogflow::v2::Intent_Message* _internal_add_fulfillment_messages();
  public:
  const ::google::cloud::dialogflow::v2::Intent_Message& fulfillment_messages(int index) const;
  ::google::cloud::dialogflow::v2::Intent_Message* add_fulfillment_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Intent_Message >&
      fulfillment_messages() const;

  // repeated .google.cloud.dialogflow.v2.Context output_contexts = 5;
  int output_contexts_size() const;
  private:
  int _internal_output_contexts_size() const;
  public:
  void clear_output_contexts();
  ::google::cloud::dialogflow::v2::Context* mutable_output_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >*
      mutable_output_contexts();
  private:
  const ::google::cloud::dialogflow::v2::Context& _internal_output_contexts(int index) const;
  ::google::cloud::dialogflow::v2::Context* _internal_add_output_contexts();
  public:
  const ::google::cloud::dialogflow::v2::Context& output_contexts(int index) const;
  ::google::cloud::dialogflow::v2::Context* add_output_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >&
      output_contexts() const;

  // repeated .google.cloud.dialogflow.v2.SessionEntityType session_entity_types = 10;
  int session_entity_types_size() const;
  private:
  int _internal_session_entity_types_size() const;
  public:
  void clear_session_entity_types();
  ::google::cloud::dialogflow::v2::SessionEntityType* mutable_session_entity_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >*
      mutable_session_entity_types();
  private:
  const ::google::cloud::dialogflow::v2::SessionEntityType& _internal_session_entity_types(int index) const;
  ::google::cloud::dialogflow::v2::SessionEntityType* _internal_add_session_entity_types();
  public:
  const ::google::cloud::dialogflow::v2::SessionEntityType& session_entity_types(int index) const;
  ::google::cloud::dialogflow::v2::SessionEntityType* add_session_entity_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >&
      session_entity_types() const;

  // string fulfillment_text = 1;
  void clear_fulfillment_text();
  const std::string& fulfillment_text() const;
  void set_fulfillment_text(const std::string& value);
  void set_fulfillment_text(std::string&& value);
  void set_fulfillment_text(const char* value);
  void set_fulfillment_text(const char* value, size_t size);
  std::string* mutable_fulfillment_text();
  std::string* release_fulfillment_text();
  void set_allocated_fulfillment_text(std::string* fulfillment_text);
  private:
  const std::string& _internal_fulfillment_text() const;
  void _internal_set_fulfillment_text(const std::string& value);
  std::string* _internal_mutable_fulfillment_text();
  public:

  // string source = 3;
  void clear_source();
  const std::string& source() const;
  void set_source(const std::string& value);
  void set_source(std::string&& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  std::string* mutable_source();
  std::string* release_source();
  void set_allocated_source(std::string* source);
  private:
  const std::string& _internal_source() const;
  void _internal_set_source(const std::string& value);
  std::string* _internal_mutable_source();
  public:

  // .google.protobuf.Struct payload = 4;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const PROTOBUF_NAMESPACE_ID::Struct& payload() const;
  PROTOBUF_NAMESPACE_ID::Struct* release_payload();
  PROTOBUF_NAMESPACE_ID::Struct* mutable_payload();
  void set_allocated_payload(PROTOBUF_NAMESPACE_ID::Struct* payload);
  private:
  const PROTOBUF_NAMESPACE_ID::Struct& _internal_payload() const;
  PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_payload();
  public:
  void unsafe_arena_set_allocated_payload(
      PROTOBUF_NAMESPACE_ID::Struct* payload);
  PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_payload();

  // .google.cloud.dialogflow.v2.EventInput followup_event_input = 6;
  bool has_followup_event_input() const;
  private:
  bool _internal_has_followup_event_input() const;
  public:
  void clear_followup_event_input();
  const ::google::cloud::dialogflow::v2::EventInput& followup_event_input() const;
  ::google::cloud::dialogflow::v2::EventInput* release_followup_event_input();
  ::google::cloud::dialogflow::v2::EventInput* mutable_followup_event_input();
  void set_allocated_followup_event_input(::google::cloud::dialogflow::v2::EventInput* followup_event_input);
  private:
  const ::google::cloud::dialogflow::v2::EventInput& _internal_followup_event_input() const;
  ::google::cloud::dialogflow::v2::EventInput* _internal_mutable_followup_event_input();
  public:
  void unsafe_arena_set_allocated_followup_event_input(
      ::google::cloud::dialogflow::v2::EventInput* followup_event_input);
  ::google::cloud::dialogflow::v2::EventInput* unsafe_arena_release_followup_event_input();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.WebhookResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Intent_Message > fulfillment_messages_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context > output_contexts_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType > session_entity_types_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fulfillment_text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_;
  PROTOBUF_NAMESPACE_ID::Struct* payload_;
  ::google::cloud::dialogflow::v2::EventInput* followup_event_input_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto;
};
// -------------------------------------------------------------------

class OriginalDetectIntentRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.OriginalDetectIntentRequest) */ {
 public:
  inline OriginalDetectIntentRequest() : OriginalDetectIntentRequest(nullptr) {}
  virtual ~OriginalDetectIntentRequest();
  explicit constexpr OriginalDetectIntentRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OriginalDetectIntentRequest(const OriginalDetectIntentRequest& from);
  OriginalDetectIntentRequest(OriginalDetectIntentRequest&& from) noexcept
    : OriginalDetectIntentRequest() {
    *this = ::std::move(from);
  }

  inline OriginalDetectIntentRequest& operator=(const OriginalDetectIntentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OriginalDetectIntentRequest& operator=(OriginalDetectIntentRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OriginalDetectIntentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const OriginalDetectIntentRequest* internal_default_instance() {
    return reinterpret_cast<const OriginalDetectIntentRequest*>(
               &_OriginalDetectIntentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(OriginalDetectIntentRequest& a, OriginalDetectIntentRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(OriginalDetectIntentRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OriginalDetectIntentRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OriginalDetectIntentRequest* New() const final {
    return CreateMaybeMessage<OriginalDetectIntentRequest>(nullptr);
  }

  OriginalDetectIntentRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OriginalDetectIntentRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OriginalDetectIntentRequest& from);
  void MergeFrom(const OriginalDetectIntentRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OriginalDetectIntentRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.OriginalDetectIntentRequest";
  }
  protected:
  explicit OriginalDetectIntentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceFieldNumber = 1,
    kVersionFieldNumber = 2,
    kPayloadFieldNumber = 3,
  };
  // string source = 1;
  void clear_source();
  const std::string& source() const;
  void set_source(const std::string& value);
  void set_source(std::string&& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  std::string* mutable_source();
  std::string* release_source();
  void set_allocated_source(std::string* source);
  private:
  const std::string& _internal_source() const;
  void _internal_set_source(const std::string& value);
  std::string* _internal_mutable_source();
  public:

  // string version = 2;
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);
  private:
  const std::string& _internal_version() const;
  void _internal_set_version(const std::string& value);
  std::string* _internal_mutable_version();
  public:

  // .google.protobuf.Struct payload = 3;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const PROTOBUF_NAMESPACE_ID::Struct& payload() const;
  PROTOBUF_NAMESPACE_ID::Struct* release_payload();
  PROTOBUF_NAMESPACE_ID::Struct* mutable_payload();
  void set_allocated_payload(PROTOBUF_NAMESPACE_ID::Struct* payload);
  private:
  const PROTOBUF_NAMESPACE_ID::Struct& _internal_payload() const;
  PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_payload();
  public:
  void unsafe_arena_set_allocated_payload(
      PROTOBUF_NAMESPACE_ID::Struct* payload);
  PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_payload();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.OriginalDetectIntentRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  PROTOBUF_NAMESPACE_ID::Struct* payload_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WebhookRequest

// string session = 4;
inline void WebhookRequest::clear_session() {
  session_.ClearToEmpty();
}
inline const std::string& WebhookRequest::session() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookRequest.session)
  return _internal_session();
}
inline void WebhookRequest::set_session(const std::string& value) {
  _internal_set_session(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.WebhookRequest.session)
}
inline std::string* WebhookRequest::mutable_session() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookRequest.session)
  return _internal_mutable_session();
}
inline const std::string& WebhookRequest::_internal_session() const {
  return session_.Get();
}
inline void WebhookRequest::_internal_set_session(const std::string& value) {
  
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WebhookRequest::set_session(std::string&& value) {
  
  session_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.WebhookRequest.session)
}
inline void WebhookRequest::set_session(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.WebhookRequest.session)
}
inline void WebhookRequest::set_session(const char* value,
    size_t size) {
  
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.WebhookRequest.session)
}
inline std::string* WebhookRequest::_internal_mutable_session() {
  
  return session_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WebhookRequest::release_session() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookRequest.session)
  return session_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WebhookRequest::set_allocated_session(std::string* session) {
  if (session != nullptr) {
    
  } else {
    
  }
  session_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookRequest.session)
}

// string response_id = 1;
inline void WebhookRequest::clear_response_id() {
  response_id_.ClearToEmpty();
}
inline const std::string& WebhookRequest::response_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookRequest.response_id)
  return _internal_response_id();
}
inline void WebhookRequest::set_response_id(const std::string& value) {
  _internal_set_response_id(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.WebhookRequest.response_id)
}
inline std::string* WebhookRequest::mutable_response_id() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookRequest.response_id)
  return _internal_mutable_response_id();
}
inline const std::string& WebhookRequest::_internal_response_id() const {
  return response_id_.Get();
}
inline void WebhookRequest::_internal_set_response_id(const std::string& value) {
  
  response_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WebhookRequest::set_response_id(std::string&& value) {
  
  response_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.WebhookRequest.response_id)
}
inline void WebhookRequest::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  response_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.WebhookRequest.response_id)
}
inline void WebhookRequest::set_response_id(const char* value,
    size_t size) {
  
  response_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.WebhookRequest.response_id)
}
inline std::string* WebhookRequest::_internal_mutable_response_id() {
  
  return response_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WebhookRequest::release_response_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookRequest.response_id)
  return response_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WebhookRequest::set_allocated_response_id(std::string* response_id) {
  if (response_id != nullptr) {
    
  } else {
    
  }
  response_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), response_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookRequest.response_id)
}

// .google.cloud.dialogflow.v2.QueryResult query_result = 2;
inline bool WebhookRequest::_internal_has_query_result() const {
  return this != internal_default_instance() && query_result_ != nullptr;
}
inline bool WebhookRequest::has_query_result() const {
  return _internal_has_query_result();
}
inline const ::google::cloud::dialogflow::v2::QueryResult& WebhookRequest::_internal_query_result() const {
  const ::google::cloud::dialogflow::v2::QueryResult* p = query_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::QueryResult&>(
      ::google::cloud::dialogflow::v2::_QueryResult_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::QueryResult& WebhookRequest::query_result() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookRequest.query_result)
  return _internal_query_result();
}
inline void WebhookRequest::unsafe_arena_set_allocated_query_result(
    ::google::cloud::dialogflow::v2::QueryResult* query_result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(query_result_);
  }
  query_result_ = query_result;
  if (query_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.WebhookRequest.query_result)
}
inline ::google::cloud::dialogflow::v2::QueryResult* WebhookRequest::release_query_result() {
  
  ::google::cloud::dialogflow::v2::QueryResult* temp = query_result_;
  query_result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::cloud::dialogflow::v2::QueryResult* WebhookRequest::unsafe_arena_release_query_result() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookRequest.query_result)
  
  ::google::cloud::dialogflow::v2::QueryResult* temp = query_result_;
  query_result_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::QueryResult* WebhookRequest::_internal_mutable_query_result() {
  
  if (query_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::QueryResult>(GetArena());
    query_result_ = p;
  }
  return query_result_;
}
inline ::google::cloud::dialogflow::v2::QueryResult* WebhookRequest::mutable_query_result() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookRequest.query_result)
  return _internal_mutable_query_result();
}
inline void WebhookRequest::set_allocated_query_result(::google::cloud::dialogflow::v2::QueryResult* query_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(query_result_);
  }
  if (query_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(query_result)->GetArena();
    if (message_arena != submessage_arena) {
      query_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, query_result, submessage_arena);
    }
    
  } else {
    
  }
  query_result_ = query_result;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookRequest.query_result)
}

// .google.cloud.dialogflow.v2.OriginalDetectIntentRequest original_detect_intent_request = 3;
inline bool WebhookRequest::_internal_has_original_detect_intent_request() const {
  return this != internal_default_instance() && original_detect_intent_request_ != nullptr;
}
inline bool WebhookRequest::has_original_detect_intent_request() const {
  return _internal_has_original_detect_intent_request();
}
inline void WebhookRequest::clear_original_detect_intent_request() {
  if (GetArena() == nullptr && original_detect_intent_request_ != nullptr) {
    delete original_detect_intent_request_;
  }
  original_detect_intent_request_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest& WebhookRequest::_internal_original_detect_intent_request() const {
  const ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* p = original_detect_intent_request_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest&>(
      ::google::cloud::dialogflow::v2::_OriginalDetectIntentRequest_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest& WebhookRequest::original_detect_intent_request() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookRequest.original_detect_intent_request)
  return _internal_original_detect_intent_request();
}
inline void WebhookRequest::unsafe_arena_set_allocated_original_detect_intent_request(
    ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* original_detect_intent_request) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(original_detect_intent_request_);
  }
  original_detect_intent_request_ = original_detect_intent_request;
  if (original_detect_intent_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.WebhookRequest.original_detect_intent_request)
}
inline ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* WebhookRequest::release_original_detect_intent_request() {
  
  ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* temp = original_detect_intent_request_;
  original_detect_intent_request_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* WebhookRequest::unsafe_arena_release_original_detect_intent_request() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookRequest.original_detect_intent_request)
  
  ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* temp = original_detect_intent_request_;
  original_detect_intent_request_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* WebhookRequest::_internal_mutable_original_detect_intent_request() {
  
  if (original_detect_intent_request_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::OriginalDetectIntentRequest>(GetArena());
    original_detect_intent_request_ = p;
  }
  return original_detect_intent_request_;
}
inline ::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* WebhookRequest::mutable_original_detect_intent_request() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookRequest.original_detect_intent_request)
  return _internal_mutable_original_detect_intent_request();
}
inline void WebhookRequest::set_allocated_original_detect_intent_request(::google::cloud::dialogflow::v2::OriginalDetectIntentRequest* original_detect_intent_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete original_detect_intent_request_;
  }
  if (original_detect_intent_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(original_detect_intent_request);
    if (message_arena != submessage_arena) {
      original_detect_intent_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, original_detect_intent_request, submessage_arena);
    }
    
  } else {
    
  }
  original_detect_intent_request_ = original_detect_intent_request;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookRequest.original_detect_intent_request)
}

// -------------------------------------------------------------------

// WebhookResponse

// string fulfillment_text = 1;
inline void WebhookResponse::clear_fulfillment_text() {
  fulfillment_text_.ClearToEmpty();
}
inline const std::string& WebhookResponse::fulfillment_text() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
  return _internal_fulfillment_text();
}
inline void WebhookResponse::set_fulfillment_text(const std::string& value) {
  _internal_set_fulfillment_text(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
}
inline std::string* WebhookResponse::mutable_fulfillment_text() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
  return _internal_mutable_fulfillment_text();
}
inline const std::string& WebhookResponse::_internal_fulfillment_text() const {
  return fulfillment_text_.Get();
}
inline void WebhookResponse::_internal_set_fulfillment_text(const std::string& value) {
  
  fulfillment_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WebhookResponse::set_fulfillment_text(std::string&& value) {
  
  fulfillment_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
}
inline void WebhookResponse::set_fulfillment_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fulfillment_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
}
inline void WebhookResponse::set_fulfillment_text(const char* value,
    size_t size) {
  
  fulfillment_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
}
inline std::string* WebhookResponse::_internal_mutable_fulfillment_text() {
  
  return fulfillment_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WebhookResponse::release_fulfillment_text() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
  return fulfillment_text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WebhookResponse::set_allocated_fulfillment_text(std::string* fulfillment_text) {
  if (fulfillment_text != nullptr) {
    
  } else {
    
  }
  fulfillment_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fulfillment_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_text)
}

// repeated .google.cloud.dialogflow.v2.Intent.Message fulfillment_messages = 2;
inline int WebhookResponse::_internal_fulfillment_messages_size() const {
  return fulfillment_messages_.size();
}
inline int WebhookResponse::fulfillment_messages_size() const {
  return _internal_fulfillment_messages_size();
}
inline ::google::cloud::dialogflow::v2::Intent_Message* WebhookResponse::mutable_fulfillment_messages(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_messages)
  return fulfillment_messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Intent_Message >*
WebhookResponse::mutable_fulfillment_messages() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_messages)
  return &fulfillment_messages_;
}
inline const ::google::cloud::dialogflow::v2::Intent_Message& WebhookResponse::_internal_fulfillment_messages(int index) const {
  return fulfillment_messages_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::Intent_Message& WebhookResponse::fulfillment_messages(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_messages)
  return _internal_fulfillment_messages(index);
}
inline ::google::cloud::dialogflow::v2::Intent_Message* WebhookResponse::_internal_add_fulfillment_messages() {
  return fulfillment_messages_.Add();
}
inline ::google::cloud::dialogflow::v2::Intent_Message* WebhookResponse::add_fulfillment_messages() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_messages)
  return _internal_add_fulfillment_messages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Intent_Message >&
WebhookResponse::fulfillment_messages() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.WebhookResponse.fulfillment_messages)
  return fulfillment_messages_;
}

// string source = 3;
inline void WebhookResponse::clear_source() {
  source_.ClearToEmpty();
}
inline const std::string& WebhookResponse::source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookResponse.source)
  return _internal_source();
}
inline void WebhookResponse::set_source(const std::string& value) {
  _internal_set_source(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.WebhookResponse.source)
}
inline std::string* WebhookResponse::mutable_source() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookResponse.source)
  return _internal_mutable_source();
}
inline const std::string& WebhookResponse::_internal_source() const {
  return source_.Get();
}
inline void WebhookResponse::_internal_set_source(const std::string& value) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WebhookResponse::set_source(std::string&& value) {
  
  source_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.WebhookResponse.source)
}
inline void WebhookResponse::set_source(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.WebhookResponse.source)
}
inline void WebhookResponse::set_source(const char* value,
    size_t size) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.WebhookResponse.source)
}
inline std::string* WebhookResponse::_internal_mutable_source() {
  
  return source_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WebhookResponse::release_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookResponse.source)
  return source_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WebhookResponse::set_allocated_source(std::string* source) {
  if (source != nullptr) {
    
  } else {
    
  }
  source_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), source,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookResponse.source)
}

// .google.protobuf.Struct payload = 4;
inline bool WebhookResponse::_internal_has_payload() const {
  return this != internal_default_instance() && payload_ != nullptr;
}
inline bool WebhookResponse::has_payload() const {
  return _internal_has_payload();
}
inline const PROTOBUF_NAMESPACE_ID::Struct& WebhookResponse::_internal_payload() const {
  const PROTOBUF_NAMESPACE_ID::Struct* p = payload_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Struct&>(
      PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Struct& WebhookResponse::payload() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookResponse.payload)
  return _internal_payload();
}
inline void WebhookResponse::unsafe_arena_set_allocated_payload(
    PROTOBUF_NAMESPACE_ID::Struct* payload) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  payload_ = payload;
  if (payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.WebhookResponse.payload)
}
inline PROTOBUF_NAMESPACE_ID::Struct* WebhookResponse::release_payload() {
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = payload_;
  payload_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* WebhookResponse::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookResponse.payload)
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = payload_;
  payload_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* WebhookResponse::_internal_mutable_payload() {
  
  if (payload_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Struct>(GetArena());
    payload_ = p;
  }
  return payload_;
}
inline PROTOBUF_NAMESPACE_ID::Struct* WebhookResponse::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookResponse.payload)
  return _internal_mutable_payload();
}
inline void WebhookResponse::set_allocated_payload(PROTOBUF_NAMESPACE_ID::Struct* payload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  if (payload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload)->GetArena();
    if (message_arena != submessage_arena) {
      payload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookResponse.payload)
}

// repeated .google.cloud.dialogflow.v2.Context output_contexts = 5;
inline int WebhookResponse::_internal_output_contexts_size() const {
  return output_contexts_.size();
}
inline int WebhookResponse::output_contexts_size() const {
  return _internal_output_contexts_size();
}
inline ::google::cloud::dialogflow::v2::Context* WebhookResponse::mutable_output_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookResponse.output_contexts)
  return output_contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >*
WebhookResponse::mutable_output_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.WebhookResponse.output_contexts)
  return &output_contexts_;
}
inline const ::google::cloud::dialogflow::v2::Context& WebhookResponse::_internal_output_contexts(int index) const {
  return output_contexts_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::Context& WebhookResponse::output_contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookResponse.output_contexts)
  return _internal_output_contexts(index);
}
inline ::google::cloud::dialogflow::v2::Context* WebhookResponse::_internal_add_output_contexts() {
  return output_contexts_.Add();
}
inline ::google::cloud::dialogflow::v2::Context* WebhookResponse::add_output_contexts() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.WebhookResponse.output_contexts)
  return _internal_add_output_contexts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >&
WebhookResponse::output_contexts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.WebhookResponse.output_contexts)
  return output_contexts_;
}

// .google.cloud.dialogflow.v2.EventInput followup_event_input = 6;
inline bool WebhookResponse::_internal_has_followup_event_input() const {
  return this != internal_default_instance() && followup_event_input_ != nullptr;
}
inline bool WebhookResponse::has_followup_event_input() const {
  return _internal_has_followup_event_input();
}
inline const ::google::cloud::dialogflow::v2::EventInput& WebhookResponse::_internal_followup_event_input() const {
  const ::google::cloud::dialogflow::v2::EventInput* p = followup_event_input_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::EventInput&>(
      ::google::cloud::dialogflow::v2::_EventInput_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::EventInput& WebhookResponse::followup_event_input() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookResponse.followup_event_input)
  return _internal_followup_event_input();
}
inline void WebhookResponse::unsafe_arena_set_allocated_followup_event_input(
    ::google::cloud::dialogflow::v2::EventInput* followup_event_input) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(followup_event_input_);
  }
  followup_event_input_ = followup_event_input;
  if (followup_event_input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.WebhookResponse.followup_event_input)
}
inline ::google::cloud::dialogflow::v2::EventInput* WebhookResponse::release_followup_event_input() {
  
  ::google::cloud::dialogflow::v2::EventInput* temp = followup_event_input_;
  followup_event_input_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::cloud::dialogflow::v2::EventInput* WebhookResponse::unsafe_arena_release_followup_event_input() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.WebhookResponse.followup_event_input)
  
  ::google::cloud::dialogflow::v2::EventInput* temp = followup_event_input_;
  followup_event_input_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::EventInput* WebhookResponse::_internal_mutable_followup_event_input() {
  
  if (followup_event_input_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::EventInput>(GetArena());
    followup_event_input_ = p;
  }
  return followup_event_input_;
}
inline ::google::cloud::dialogflow::v2::EventInput* WebhookResponse::mutable_followup_event_input() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookResponse.followup_event_input)
  return _internal_mutable_followup_event_input();
}
inline void WebhookResponse::set_allocated_followup_event_input(::google::cloud::dialogflow::v2::EventInput* followup_event_input) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(followup_event_input_);
  }
  if (followup_event_input) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(followup_event_input)->GetArena();
    if (message_arena != submessage_arena) {
      followup_event_input = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, followup_event_input, submessage_arena);
    }
    
  } else {
    
  }
  followup_event_input_ = followup_event_input;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.WebhookResponse.followup_event_input)
}

// repeated .google.cloud.dialogflow.v2.SessionEntityType session_entity_types = 10;
inline int WebhookResponse::_internal_session_entity_types_size() const {
  return session_entity_types_.size();
}
inline int WebhookResponse::session_entity_types_size() const {
  return _internal_session_entity_types_size();
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* WebhookResponse::mutable_session_entity_types(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.WebhookResponse.session_entity_types)
  return session_entity_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >*
WebhookResponse::mutable_session_entity_types() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.WebhookResponse.session_entity_types)
  return &session_entity_types_;
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& WebhookResponse::_internal_session_entity_types(int index) const {
  return session_entity_types_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::SessionEntityType& WebhookResponse::session_entity_types(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.WebhookResponse.session_entity_types)
  return _internal_session_entity_types(index);
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* WebhookResponse::_internal_add_session_entity_types() {
  return session_entity_types_.Add();
}
inline ::google::cloud::dialogflow::v2::SessionEntityType* WebhookResponse::add_session_entity_types() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.WebhookResponse.session_entity_types)
  return _internal_add_session_entity_types();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::SessionEntityType >&
WebhookResponse::session_entity_types() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.WebhookResponse.session_entity_types)
  return session_entity_types_;
}

// -------------------------------------------------------------------

// OriginalDetectIntentRequest

// string source = 1;
inline void OriginalDetectIntentRequest::clear_source() {
  source_.ClearToEmpty();
}
inline const std::string& OriginalDetectIntentRequest::source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
  return _internal_source();
}
inline void OriginalDetectIntentRequest::set_source(const std::string& value) {
  _internal_set_source(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
}
inline std::string* OriginalDetectIntentRequest::mutable_source() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
  return _internal_mutable_source();
}
inline const std::string& OriginalDetectIntentRequest::_internal_source() const {
  return source_.Get();
}
inline void OriginalDetectIntentRequest::_internal_set_source(const std::string& value) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OriginalDetectIntentRequest::set_source(std::string&& value) {
  
  source_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
}
inline void OriginalDetectIntentRequest::set_source(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
}
inline void OriginalDetectIntentRequest::set_source(const char* value,
    size_t size) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
}
inline std::string* OriginalDetectIntentRequest::_internal_mutable_source() {
  
  return source_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OriginalDetectIntentRequest::release_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
  return source_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OriginalDetectIntentRequest::set_allocated_source(std::string* source) {
  if (source != nullptr) {
    
  } else {
    
  }
  source_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), source,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.source)
}

// string version = 2;
inline void OriginalDetectIntentRequest::clear_version() {
  version_.ClearToEmpty();
}
inline const std::string& OriginalDetectIntentRequest::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
  return _internal_version();
}
inline void OriginalDetectIntentRequest::set_version(const std::string& value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
}
inline std::string* OriginalDetectIntentRequest::mutable_version() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
  return _internal_mutable_version();
}
inline const std::string& OriginalDetectIntentRequest::_internal_version() const {
  return version_.Get();
}
inline void OriginalDetectIntentRequest::_internal_set_version(const std::string& value) {
  
  version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OriginalDetectIntentRequest::set_version(std::string&& value) {
  
  version_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
}
inline void OriginalDetectIntentRequest::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
}
inline void OriginalDetectIntentRequest::set_version(const char* value,
    size_t size) {
  
  version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
}
inline std::string* OriginalDetectIntentRequest::_internal_mutable_version() {
  
  return version_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OriginalDetectIntentRequest::release_version() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
  return version_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OriginalDetectIntentRequest::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.version)
}

// .google.protobuf.Struct payload = 3;
inline bool OriginalDetectIntentRequest::_internal_has_payload() const {
  return this != internal_default_instance() && payload_ != nullptr;
}
inline bool OriginalDetectIntentRequest::has_payload() const {
  return _internal_has_payload();
}
inline const PROTOBUF_NAMESPACE_ID::Struct& OriginalDetectIntentRequest::_internal_payload() const {
  const PROTOBUF_NAMESPACE_ID::Struct* p = payload_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Struct&>(
      PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Struct& OriginalDetectIntentRequest::payload() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.payload)
  return _internal_payload();
}
inline void OriginalDetectIntentRequest::unsafe_arena_set_allocated_payload(
    PROTOBUF_NAMESPACE_ID::Struct* payload) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  payload_ = payload;
  if (payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.payload)
}
inline PROTOBUF_NAMESPACE_ID::Struct* OriginalDetectIntentRequest::release_payload() {
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = payload_;
  payload_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* OriginalDetectIntentRequest::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.payload)
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = payload_;
  payload_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* OriginalDetectIntentRequest::_internal_mutable_payload() {
  
  if (payload_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Struct>(GetArena());
    payload_ = p;
  }
  return payload_;
}
inline PROTOBUF_NAMESPACE_ID::Struct* OriginalDetectIntentRequest::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.payload)
  return _internal_mutable_payload();
}
inline void OriginalDetectIntentRequest::set_allocated_payload(PROTOBUF_NAMESPACE_ID::Struct* payload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  if (payload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload)->GetArena();
    if (message_arena != submessage_arena) {
      payload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.OriginalDetectIntentRequest.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fwebhook_2eproto
