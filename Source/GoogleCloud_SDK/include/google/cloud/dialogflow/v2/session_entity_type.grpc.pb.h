// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2/session_entity_type.proto
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto__INCLUDED

#include "google/cloud/dialogflow/v2/session_entity_type.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {

// Service for managing [SessionEntityTypes][google.cloud.dialogflow.v2.SessionEntityType].
class SessionEntityTypes final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.dialogflow.v2.SessionEntityTypes";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Returns the list of all session entity types in the specified session.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>> AsyncListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>>(AsyncListSessionEntityTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>> PrepareAsyncListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>>(PrepareAsyncListSessionEntityTypesRaw(context, request, cq));
    }
    // Retrieves the specified session entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::google::cloud::dialogflow::v2::SessionEntityType* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>> AsyncGetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>>(AsyncGetSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>> PrepareAsyncGetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>>(PrepareAsyncGetSessionEntityTypeRaw(context, request, cq));
    }
    // Creates a session entity type.
    //
    // If the specified session entity type already exists, overrides the session
    // entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::google::cloud::dialogflow::v2::SessionEntityType* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>> AsyncCreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>>(AsyncCreateSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>> PrepareAsyncCreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>>(PrepareAsyncCreateSessionEntityTypeRaw(context, request, cq));
    }
    // Updates the specified session entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::google::cloud::dialogflow::v2::SessionEntityType* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>> AsyncUpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>>(AsyncUpdateSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>> PrepareAsyncUpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>>(PrepareAsyncUpdateSessionEntityTypeRaw(context, request, cq));
    }
    // Deletes the specified session entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteSessionEntityTypeRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Returns the list of all session entity types in the specified session.
      //
      // This method doesn't work with Google Assistant integration.
      // Contact Dialogflow support if you need to use session entities
      // with Google Assistant integration.
      virtual void ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Retrieves the specified session entity type.
      //
      // This method doesn't work with Google Assistant integration.
      // Contact Dialogflow support if you need to use session entities
      // with Google Assistant integration.
      virtual void GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a session entity type.
      //
      // If the specified session entity type already exists, overrides the session
      // entity type.
      //
      // This method doesn't work with Google Assistant integration.
      // Contact Dialogflow support if you need to use session entities
      // with Google Assistant integration.
      virtual void CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates the specified session entity type.
      //
      // This method doesn't work with Google Assistant integration.
      // Contact Dialogflow support if you need to use session entities
      // with Google Assistant integration.
      virtual void UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Deletes the specified session entity type.
      //
      // This method doesn't work with Google Assistant integration.
      // Contact Dialogflow support if you need to use session entities
      // with Google Assistant integration.
      virtual void DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* AsyncListSessionEntityTypesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* PrepareAsyncListSessionEntityTypesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>* AsyncGetSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>* PrepareAsyncGetSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>* AsyncCreateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>* PrepareAsyncCreateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>* AsyncUpdateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2::SessionEntityType>* PrepareAsyncUpdateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>> AsyncListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>>(AsyncListSessionEntityTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>> PrepareAsyncListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>>(PrepareAsyncListSessionEntityTypesRaw(context, request, cq));
    }
    ::grpc::Status GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::google::cloud::dialogflow::v2::SessionEntityType* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>> AsyncGetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>>(AsyncGetSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>> PrepareAsyncGetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>>(PrepareAsyncGetSessionEntityTypeRaw(context, request, cq));
    }
    ::grpc::Status CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::google::cloud::dialogflow::v2::SessionEntityType* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>> AsyncCreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>>(AsyncCreateSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>> PrepareAsyncCreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>>(PrepareAsyncCreateSessionEntityTypeRaw(context, request, cq));
    }
    ::grpc::Status UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::google::cloud::dialogflow::v2::SessionEntityType* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>> AsyncUpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>>(AsyncUpdateSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>> PrepareAsyncUpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>>(PrepareAsyncUpdateSessionEntityTypeRaw(context, request, cq));
    }
    ::grpc::Status DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteSessionEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteSessionEntityTypeRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListSessionEntityTypes(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteSessionEntityType(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* AsyncListSessionEntityTypesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* PrepareAsyncListSessionEntityTypesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>* AsyncGetSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>* PrepareAsyncGetSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>* AsyncCreateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>* PrepareAsyncCreateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>* AsyncUpdateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2::SessionEntityType>* PrepareAsyncUpdateSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteSessionEntityTypeRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListSessionEntityTypes_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSessionEntityType_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSessionEntityType_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSessionEntityType_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSessionEntityType_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Returns the list of all session entity types in the specified session.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status ListSessionEntityTypes(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response);
    // Retrieves the specified session entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status GetSessionEntityType(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response);
    // Creates a session entity type.
    //
    // If the specified session entity type already exists, overrides the session
    // entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status CreateSessionEntityType(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response);
    // Updates the specified session entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status UpdateSessionEntityType(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response);
    // Deletes the specified session entity type.
    //
    // This method doesn't work with Google Assistant integration.
    // Contact Dialogflow support if you need to use session entities
    // with Google Assistant integration.
    virtual ::grpc::Status DeleteSessionEntityType(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListSessionEntityTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListSessionEntityTypes() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListSessionEntityTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionEntityTypes(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSessionEntityTypes(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSessionEntityType() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSessionEntityType(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2::SessionEntityType>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSessionEntityType() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSessionEntityType(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2::SessionEntityType>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSessionEntityType() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSessionEntityType(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2::SessionEntityType>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSessionEntityType() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSessionEntityType(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListSessionEntityTypes<WithAsyncMethod_GetSessionEntityType<WithAsyncMethod_CreateSessionEntityType<WithAsyncMethod_UpdateSessionEntityType<WithAsyncMethod_DeleteSessionEntityType<Service > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListSessionEntityTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListSessionEntityTypes() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* request, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* response) { return this->ListSessionEntityTypes(context, request, response); }));}
    void SetMessageAllocatorFor_ListSessionEntityTypes(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListSessionEntityTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionEntityTypes(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListSessionEntityTypes(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListSessionEntityTypes(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response) { return this->GetSessionEntityType(context, request, response); }));}
    void SetMessageAllocatorFor_GetSessionEntityType(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response) { return this->CreateSessionEntityType(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSessionEntityType(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* request, ::google::cloud::dialogflow::v2::SessionEntityType* response) { return this->UpdateSessionEntityType(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSessionEntityType(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* request, ::google::protobuf::Empty* response) { return this->DeleteSessionEntityType(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSessionEntityType(
        ::grpc::experimental::MessageAllocator< ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_ListSessionEntityTypes<ExperimentalWithCallbackMethod_GetSessionEntityType<ExperimentalWithCallbackMethod_CreateSessionEntityType<ExperimentalWithCallbackMethod_UpdateSessionEntityType<ExperimentalWithCallbackMethod_DeleteSessionEntityType<Service > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_ListSessionEntityTypes<ExperimentalWithCallbackMethod_GetSessionEntityType<ExperimentalWithCallbackMethod_CreateSessionEntityType<ExperimentalWithCallbackMethod_UpdateSessionEntityType<ExperimentalWithCallbackMethod_DeleteSessionEntityType<Service > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ListSessionEntityTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListSessionEntityTypes() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListSessionEntityTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionEntityTypes(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSessionEntityType() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSessionEntityType() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSessionEntityType() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSessionEntityType() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListSessionEntityTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListSessionEntityTypes() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ListSessionEntityTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionEntityTypes(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSessionEntityTypes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSessionEntityType() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSessionEntityType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSessionEntityType() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSessionEntityType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSessionEntityType() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSessionEntityType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSessionEntityType() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSessionEntityType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListSessionEntityTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListSessionEntityTypes() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListSessionEntityTypes(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListSessionEntityTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionEntityTypes(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListSessionEntityTypes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListSessionEntityTypes(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSessionEntityType(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSessionEntityType(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSessionEntityType(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteSessionEntityType() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSessionEntityType(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteSessionEntityType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteSessionEntityType(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListSessionEntityTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListSessionEntityTypes() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* streamer) {
                       return this->StreamedListSessionEntityTypes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListSessionEntityTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListSessionEntityTypes(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest* /*request*/, ::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListSessionEntityTypes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2::ListSessionEntityTypesRequest,::google::cloud::dialogflow::v2::ListSessionEntityTypesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSessionEntityType() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>* streamer) {
                       return this->StreamedGetSessionEntityType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSessionEntityType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2::GetSessionEntityTypeRequest,::google::cloud::dialogflow::v2::SessionEntityType>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSessionEntityType() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>* streamer) {
                       return this->StreamedCreateSessionEntityType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSessionEntityType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2::CreateSessionEntityTypeRequest,::google::cloud::dialogflow::v2::SessionEntityType>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSessionEntityType() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest, ::google::cloud::dialogflow::v2::SessionEntityType>* streamer) {
                       return this->StreamedUpdateSessionEntityType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest* /*request*/, ::google::cloud::dialogflow::v2::SessionEntityType* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSessionEntityType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2::UpdateSessionEntityTypeRequest,::google::cloud::dialogflow::v2::SessionEntityType>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSessionEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSessionEntityType() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteSessionEntityType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSessionEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSessionEntityType(::grpc::ServerContext* /*context*/, const ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSessionEntityType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2::DeleteSessionEntityTypeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListSessionEntityTypes<WithStreamedUnaryMethod_GetSessionEntityType<WithStreamedUnaryMethod_CreateSessionEntityType<WithStreamedUnaryMethod_UpdateSessionEntityType<WithStreamedUnaryMethod_DeleteSessionEntityType<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListSessionEntityTypes<WithStreamedUnaryMethod_GetSessionEntityType<WithStreamedUnaryMethod_CreateSessionEntityType<WithStreamedUnaryMethod_UpdateSessionEntityType<WithStreamedUnaryMethod_DeleteSessionEntityType<Service > > > > > StreamedService;
};

}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fdialogflow_2fv2_2fsession_5fentity_5ftype_2eproto__INCLUDED
