// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2/conversation_profile.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include "google/cloud/dialogflow/v2/audio_config.pb.h"
#include "google/cloud/dialogflow/v2/participant.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {
class AutomatedAgentConfig;
struct AutomatedAgentConfigDefaultTypeInternal;
extern AutomatedAgentConfigDefaultTypeInternal _AutomatedAgentConfig_default_instance_;
class ClearSuggestionFeatureConfigOperationMetadata;
struct ClearSuggestionFeatureConfigOperationMetadataDefaultTypeInternal;
extern ClearSuggestionFeatureConfigOperationMetadataDefaultTypeInternal _ClearSuggestionFeatureConfigOperationMetadata_default_instance_;
class ClearSuggestionFeatureConfigRequest;
struct ClearSuggestionFeatureConfigRequestDefaultTypeInternal;
extern ClearSuggestionFeatureConfigRequestDefaultTypeInternal _ClearSuggestionFeatureConfigRequest_default_instance_;
class ConversationProfile;
struct ConversationProfileDefaultTypeInternal;
extern ConversationProfileDefaultTypeInternal _ConversationProfile_default_instance_;
class CreateConversationProfileRequest;
struct CreateConversationProfileRequestDefaultTypeInternal;
extern CreateConversationProfileRequestDefaultTypeInternal _CreateConversationProfileRequest_default_instance_;
class DeleteConversationProfileRequest;
struct DeleteConversationProfileRequestDefaultTypeInternal;
extern DeleteConversationProfileRequestDefaultTypeInternal _DeleteConversationProfileRequest_default_instance_;
class GetConversationProfileRequest;
struct GetConversationProfileRequestDefaultTypeInternal;
extern GetConversationProfileRequestDefaultTypeInternal _GetConversationProfileRequest_default_instance_;
class HumanAgentAssistantConfig;
struct HumanAgentAssistantConfigDefaultTypeInternal;
extern HumanAgentAssistantConfigDefaultTypeInternal _HumanAgentAssistantConfig_default_instance_;
class HumanAgentAssistantConfig_ConversationModelConfig;
struct HumanAgentAssistantConfig_ConversationModelConfigDefaultTypeInternal;
extern HumanAgentAssistantConfig_ConversationModelConfigDefaultTypeInternal _HumanAgentAssistantConfig_ConversationModelConfig_default_instance_;
class HumanAgentAssistantConfig_ConversationProcessConfig;
struct HumanAgentAssistantConfig_ConversationProcessConfigDefaultTypeInternal;
extern HumanAgentAssistantConfig_ConversationProcessConfigDefaultTypeInternal _HumanAgentAssistantConfig_ConversationProcessConfig_default_instance_;
class HumanAgentAssistantConfig_MessageAnalysisConfig;
struct HumanAgentAssistantConfig_MessageAnalysisConfigDefaultTypeInternal;
extern HumanAgentAssistantConfig_MessageAnalysisConfigDefaultTypeInternal _HumanAgentAssistantConfig_MessageAnalysisConfig_default_instance_;
class HumanAgentAssistantConfig_SuggestionConfig;
struct HumanAgentAssistantConfig_SuggestionConfigDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionConfigDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionConfig_default_instance_;
class HumanAgentAssistantConfig_SuggestionFeatureConfig;
struct HumanAgentAssistantConfig_SuggestionFeatureConfigDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionFeatureConfigDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionFeatureConfig_default_instance_;
class HumanAgentAssistantConfig_SuggestionQueryConfig;
struct HumanAgentAssistantConfig_SuggestionQueryConfigDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionQueryConfigDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionQueryConfig_default_instance_;
class HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings;
struct HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettingsDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettingsDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings_default_instance_;
class HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource;
struct HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySourceDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySourceDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_default_instance_;
class HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource;
struct HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySourceDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySourceDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource_default_instance_;
class HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource;
struct HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySourceDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySourceDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource_default_instance_;
class HumanAgentAssistantConfig_SuggestionTriggerSettings;
struct HumanAgentAssistantConfig_SuggestionTriggerSettingsDefaultTypeInternal;
extern HumanAgentAssistantConfig_SuggestionTriggerSettingsDefaultTypeInternal _HumanAgentAssistantConfig_SuggestionTriggerSettings_default_instance_;
class HumanAgentHandoffConfig;
struct HumanAgentHandoffConfigDefaultTypeInternal;
extern HumanAgentHandoffConfigDefaultTypeInternal _HumanAgentHandoffConfig_default_instance_;
class HumanAgentHandoffConfig_LivePersonConfig;
struct HumanAgentHandoffConfig_LivePersonConfigDefaultTypeInternal;
extern HumanAgentHandoffConfig_LivePersonConfigDefaultTypeInternal _HumanAgentHandoffConfig_LivePersonConfig_default_instance_;
class HumanAgentHandoffConfig_SalesforceLiveAgentConfig;
struct HumanAgentHandoffConfig_SalesforceLiveAgentConfigDefaultTypeInternal;
extern HumanAgentHandoffConfig_SalesforceLiveAgentConfigDefaultTypeInternal _HumanAgentHandoffConfig_SalesforceLiveAgentConfig_default_instance_;
class ListConversationProfilesRequest;
struct ListConversationProfilesRequestDefaultTypeInternal;
extern ListConversationProfilesRequestDefaultTypeInternal _ListConversationProfilesRequest_default_instance_;
class ListConversationProfilesResponse;
struct ListConversationProfilesResponseDefaultTypeInternal;
extern ListConversationProfilesResponseDefaultTypeInternal _ListConversationProfilesResponse_default_instance_;
class LoggingConfig;
struct LoggingConfigDefaultTypeInternal;
extern LoggingConfigDefaultTypeInternal _LoggingConfig_default_instance_;
class NotificationConfig;
struct NotificationConfigDefaultTypeInternal;
extern NotificationConfigDefaultTypeInternal _NotificationConfig_default_instance_;
class SetSuggestionFeatureConfigOperationMetadata;
struct SetSuggestionFeatureConfigOperationMetadataDefaultTypeInternal;
extern SetSuggestionFeatureConfigOperationMetadataDefaultTypeInternal _SetSuggestionFeatureConfigOperationMetadata_default_instance_;
class SetSuggestionFeatureConfigRequest;
struct SetSuggestionFeatureConfigRequestDefaultTypeInternal;
extern SetSuggestionFeatureConfigRequestDefaultTypeInternal _SetSuggestionFeatureConfigRequest_default_instance_;
class SuggestionFeature;
struct SuggestionFeatureDefaultTypeInternal;
extern SuggestionFeatureDefaultTypeInternal _SuggestionFeature_default_instance_;
class UpdateConversationProfileRequest;
struct UpdateConversationProfileRequestDefaultTypeInternal;
extern UpdateConversationProfileRequestDefaultTypeInternal _UpdateConversationProfileRequest_default_instance_;
}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::cloud::dialogflow::v2::AutomatedAgentConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::AutomatedAgentConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::ClearSuggestionFeatureConfigOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ClearSuggestionFeatureConfigOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::ClearSuggestionFeatureConfigRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ClearSuggestionFeatureConfigRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ConversationProfile* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ConversationProfile>(Arena*);
template<> ::google::cloud::dialogflow::v2::CreateConversationProfileRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::CreateConversationProfileRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeleteConversationProfileRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeleteConversationProfileRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::GetConversationProfileRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::GetConversationProfileRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentHandoffConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListConversationProfilesRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListConversationProfilesRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListConversationProfilesResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListConversationProfilesResponse>(Arena*);
template<> ::google::cloud::dialogflow::v2::LoggingConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::LoggingConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::NotificationConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::NotificationConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2::SetSuggestionFeatureConfigOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::SetSuggestionFeatureConfigOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2::SetSuggestionFeatureConfigRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::SetSuggestionFeatureConfigRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::SuggestionFeature* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::SuggestionFeature>(Arena*);
template<> ::google::cloud::dialogflow::v2::UpdateConversationProfileRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::UpdateConversationProfileRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {

enum NotificationConfig_MessageFormat : int {
  NotificationConfig_MessageFormat_MESSAGE_FORMAT_UNSPECIFIED = 0,
  NotificationConfig_MessageFormat_PROTO = 1,
  NotificationConfig_MessageFormat_JSON = 2,
  NotificationConfig_MessageFormat_NotificationConfig_MessageFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  NotificationConfig_MessageFormat_NotificationConfig_MessageFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool NotificationConfig_MessageFormat_IsValid(int value);
constexpr NotificationConfig_MessageFormat NotificationConfig_MessageFormat_MessageFormat_MIN = NotificationConfig_MessageFormat_MESSAGE_FORMAT_UNSPECIFIED;
constexpr NotificationConfig_MessageFormat NotificationConfig_MessageFormat_MessageFormat_MAX = NotificationConfig_MessageFormat_JSON;
constexpr int NotificationConfig_MessageFormat_MessageFormat_ARRAYSIZE = NotificationConfig_MessageFormat_MessageFormat_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NotificationConfig_MessageFormat_descriptor();
template<typename T>
inline const std::string& NotificationConfig_MessageFormat_Name(T enum_t_value) {
  static_assert(::std::is_same<T, NotificationConfig_MessageFormat>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function NotificationConfig_MessageFormat_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    NotificationConfig_MessageFormat_descriptor(), enum_t_value);
}
inline bool NotificationConfig_MessageFormat_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, NotificationConfig_MessageFormat* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<NotificationConfig_MessageFormat>(
    NotificationConfig_MessageFormat_descriptor(), name, value);
}
enum SuggestionFeature_Type : int {
  SuggestionFeature_Type_TYPE_UNSPECIFIED = 0,
  SuggestionFeature_Type_ARTICLE_SUGGESTION = 1,
  SuggestionFeature_Type_FAQ = 2,
  SuggestionFeature_Type_SMART_REPLY = 3,
  SuggestionFeature_Type_SuggestionFeature_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  SuggestionFeature_Type_SuggestionFeature_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool SuggestionFeature_Type_IsValid(int value);
constexpr SuggestionFeature_Type SuggestionFeature_Type_Type_MIN = SuggestionFeature_Type_TYPE_UNSPECIFIED;
constexpr SuggestionFeature_Type SuggestionFeature_Type_Type_MAX = SuggestionFeature_Type_SMART_REPLY;
constexpr int SuggestionFeature_Type_Type_ARRAYSIZE = SuggestionFeature_Type_Type_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SuggestionFeature_Type_descriptor();
template<typename T>
inline const std::string& SuggestionFeature_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SuggestionFeature_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SuggestionFeature_Type_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SuggestionFeature_Type_descriptor(), enum_t_value);
}
inline bool SuggestionFeature_Type_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SuggestionFeature_Type* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SuggestionFeature_Type>(
    SuggestionFeature_Type_descriptor(), name, value);
}
// ===================================================================

class ConversationProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ConversationProfile) */ {
 public:
  inline ConversationProfile() : ConversationProfile(nullptr) {}
  ~ConversationProfile() override;
  explicit PROTOBUF_CONSTEXPR ConversationProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConversationProfile(const ConversationProfile& from);
  ConversationProfile(ConversationProfile&& from) noexcept
    : ConversationProfile() {
    *this = ::std::move(from);
  }

  inline ConversationProfile& operator=(const ConversationProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConversationProfile& operator=(ConversationProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConversationProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConversationProfile* internal_default_instance() {
    return reinterpret_cast<const ConversationProfile*>(
               &_ConversationProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConversationProfile& a, ConversationProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(ConversationProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConversationProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConversationProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConversationProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ConversationProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ConversationProfile& from) {
    ConversationProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConversationProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ConversationProfile";
  }
  protected:
  explicit ConversationProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDisplayNameFieldNumber = 2,
    kLanguageCodeFieldNumber = 10,
    kSecuritySettingsFieldNumber = 13,
    kTimeZoneFieldNumber = 14,
    kAutomatedAgentConfigFieldNumber = 3,
    kHumanAgentAssistantConfigFieldNumber = 4,
    kHumanAgentHandoffConfigFieldNumber = 5,
    kNotificationConfigFieldNumber = 6,
    kLoggingConfigFieldNumber = 7,
    kNewMessageEventNotificationConfigFieldNumber = 8,
    kSttConfigFieldNumber = 9,
    kCreateTimeFieldNumber = 11,
    kUpdateTimeFieldNumber = 12,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_display_name();
  const std::string& display_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_display_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* display_name);
  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(const std::string& value);
  std::string* _internal_mutable_display_name();
  public:

  // string language_code = 10;
  void clear_language_code();
  const std::string& language_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_language_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_language_code();
  PROTOBUF_NODISCARD std::string* release_language_code();
  void set_allocated_language_code(std::string* language_code);
  private:
  const std::string& _internal_language_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_language_code(const std::string& value);
  std::string* _internal_mutable_language_code();
  public:

  // string security_settings = 13 [(.google.api.resource_reference) = {
  void clear_security_settings();
  const std::string& security_settings() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_security_settings(ArgT0&& arg0, ArgT... args);
  std::string* mutable_security_settings();
  PROTOBUF_NODISCARD std::string* release_security_settings();
  void set_allocated_security_settings(std::string* security_settings);
  private:
  const std::string& _internal_security_settings() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_security_settings(const std::string& value);
  std::string* _internal_mutable_security_settings();
  public:

  // string time_zone = 14;
  void clear_time_zone();
  const std::string& time_zone() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_time_zone(ArgT0&& arg0, ArgT... args);
  std::string* mutable_time_zone();
  PROTOBUF_NODISCARD std::string* release_time_zone();
  void set_allocated_time_zone(std::string* time_zone);
  private:
  const std::string& _internal_time_zone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_zone(const std::string& value);
  std::string* _internal_mutable_time_zone();
  public:

  // .google.cloud.dialogflow.v2.AutomatedAgentConfig automated_agent_config = 3;
  bool has_automated_agent_config() const;
  private:
  bool _internal_has_automated_agent_config() const;
  public:
  void clear_automated_agent_config();
  const ::google::cloud::dialogflow::v2::AutomatedAgentConfig& automated_agent_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::AutomatedAgentConfig* release_automated_agent_config();
  ::google::cloud::dialogflow::v2::AutomatedAgentConfig* mutable_automated_agent_config();
  void set_allocated_automated_agent_config(::google::cloud::dialogflow::v2::AutomatedAgentConfig* automated_agent_config);
  private:
  const ::google::cloud::dialogflow::v2::AutomatedAgentConfig& _internal_automated_agent_config() const;
  ::google::cloud::dialogflow::v2::AutomatedAgentConfig* _internal_mutable_automated_agent_config();
  public:
  void unsafe_arena_set_allocated_automated_agent_config(
      ::google::cloud::dialogflow::v2::AutomatedAgentConfig* automated_agent_config);
  ::google::cloud::dialogflow::v2::AutomatedAgentConfig* unsafe_arena_release_automated_agent_config();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig human_agent_assistant_config = 4;
  bool has_human_agent_assistant_config() const;
  private:
  bool _internal_has_human_agent_assistant_config() const;
  public:
  void clear_human_agent_assistant_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig& human_agent_assistant_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* release_human_agent_assistant_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* mutable_human_agent_assistant_config();
  void set_allocated_human_agent_assistant_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* human_agent_assistant_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig& _internal_human_agent_assistant_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* _internal_mutable_human_agent_assistant_config();
  public:
  void unsafe_arena_set_allocated_human_agent_assistant_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* human_agent_assistant_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* unsafe_arena_release_human_agent_assistant_config();

  // .google.cloud.dialogflow.v2.HumanAgentHandoffConfig human_agent_handoff_config = 5;
  bool has_human_agent_handoff_config() const;
  private:
  bool _internal_has_human_agent_handoff_config() const;
  public:
  void clear_human_agent_handoff_config();
  const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig& human_agent_handoff_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* release_human_agent_handoff_config();
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* mutable_human_agent_handoff_config();
  void set_allocated_human_agent_handoff_config(::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* human_agent_handoff_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig& _internal_human_agent_handoff_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* _internal_mutable_human_agent_handoff_config();
  public:
  void unsafe_arena_set_allocated_human_agent_handoff_config(
      ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* human_agent_handoff_config);
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* unsafe_arena_release_human_agent_handoff_config();

  // .google.cloud.dialogflow.v2.NotificationConfig notification_config = 6;
  bool has_notification_config() const;
  private:
  bool _internal_has_notification_config() const;
  public:
  void clear_notification_config();
  const ::google::cloud::dialogflow::v2::NotificationConfig& notification_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::NotificationConfig* release_notification_config();
  ::google::cloud::dialogflow::v2::NotificationConfig* mutable_notification_config();
  void set_allocated_notification_config(::google::cloud::dialogflow::v2::NotificationConfig* notification_config);
  private:
  const ::google::cloud::dialogflow::v2::NotificationConfig& _internal_notification_config() const;
  ::google::cloud::dialogflow::v2::NotificationConfig* _internal_mutable_notification_config();
  public:
  void unsafe_arena_set_allocated_notification_config(
      ::google::cloud::dialogflow::v2::NotificationConfig* notification_config);
  ::google::cloud::dialogflow::v2::NotificationConfig* unsafe_arena_release_notification_config();

  // .google.cloud.dialogflow.v2.LoggingConfig logging_config = 7;
  bool has_logging_config() const;
  private:
  bool _internal_has_logging_config() const;
  public:
  void clear_logging_config();
  const ::google::cloud::dialogflow::v2::LoggingConfig& logging_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::LoggingConfig* release_logging_config();
  ::google::cloud::dialogflow::v2::LoggingConfig* mutable_logging_config();
  void set_allocated_logging_config(::google::cloud::dialogflow::v2::LoggingConfig* logging_config);
  private:
  const ::google::cloud::dialogflow::v2::LoggingConfig& _internal_logging_config() const;
  ::google::cloud::dialogflow::v2::LoggingConfig* _internal_mutable_logging_config();
  public:
  void unsafe_arena_set_allocated_logging_config(
      ::google::cloud::dialogflow::v2::LoggingConfig* logging_config);
  ::google::cloud::dialogflow::v2::LoggingConfig* unsafe_arena_release_logging_config();

  // .google.cloud.dialogflow.v2.NotificationConfig new_message_event_notification_config = 8;
  bool has_new_message_event_notification_config() const;
  private:
  bool _internal_has_new_message_event_notification_config() const;
  public:
  void clear_new_message_event_notification_config();
  const ::google::cloud::dialogflow::v2::NotificationConfig& new_message_event_notification_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::NotificationConfig* release_new_message_event_notification_config();
  ::google::cloud::dialogflow::v2::NotificationConfig* mutable_new_message_event_notification_config();
  void set_allocated_new_message_event_notification_config(::google::cloud::dialogflow::v2::NotificationConfig* new_message_event_notification_config);
  private:
  const ::google::cloud::dialogflow::v2::NotificationConfig& _internal_new_message_event_notification_config() const;
  ::google::cloud::dialogflow::v2::NotificationConfig* _internal_mutable_new_message_event_notification_config();
  public:
  void unsafe_arena_set_allocated_new_message_event_notification_config(
      ::google::cloud::dialogflow::v2::NotificationConfig* new_message_event_notification_config);
  ::google::cloud::dialogflow::v2::NotificationConfig* unsafe_arena_release_new_message_event_notification_config();

  // .google.cloud.dialogflow.v2.SpeechToTextConfig stt_config = 9;
  bool has_stt_config() const;
  private:
  bool _internal_has_stt_config() const;
  public:
  void clear_stt_config();
  const ::google::cloud::dialogflow::v2::SpeechToTextConfig& stt_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::SpeechToTextConfig* release_stt_config();
  ::google::cloud::dialogflow::v2::SpeechToTextConfig* mutable_stt_config();
  void set_allocated_stt_config(::google::cloud::dialogflow::v2::SpeechToTextConfig* stt_config);
  private:
  const ::google::cloud::dialogflow::v2::SpeechToTextConfig& _internal_stt_config() const;
  ::google::cloud::dialogflow::v2::SpeechToTextConfig* _internal_mutable_stt_config();
  public:
  void unsafe_arena_set_allocated_stt_config(
      ::google::cloud::dialogflow::v2::SpeechToTextConfig* stt_config);
  ::google::cloud::dialogflow::v2::SpeechToTextConfig* unsafe_arena_release_stt_config();

  // .google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.protobuf.Timestamp update_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_update_time() const;
  private:
  bool _internal_has_update_time() const;
  public:
  void clear_update_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& update_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_update_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_update_time();
  void set_allocated_update_time(::PROTOBUF_NAMESPACE_ID::Timestamp* update_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_update_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_update_time();
  public:
  void unsafe_arena_set_allocated_update_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* update_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_update_time();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ConversationProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr display_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr language_code_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr security_settings_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_zone_;
    ::google::cloud::dialogflow::v2::AutomatedAgentConfig* automated_agent_config_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* human_agent_assistant_config_;
    ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* human_agent_handoff_config_;
    ::google::cloud::dialogflow::v2::NotificationConfig* notification_config_;
    ::google::cloud::dialogflow::v2::LoggingConfig* logging_config_;
    ::google::cloud::dialogflow::v2::NotificationConfig* new_message_event_notification_config_;
    ::google::cloud::dialogflow::v2::SpeechToTextConfig* stt_config_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* update_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class ListConversationProfilesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListConversationProfilesRequest) */ {
 public:
  inline ListConversationProfilesRequest() : ListConversationProfilesRequest(nullptr) {}
  ~ListConversationProfilesRequest() override;
  explicit PROTOBUF_CONSTEXPR ListConversationProfilesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListConversationProfilesRequest(const ListConversationProfilesRequest& from);
  ListConversationProfilesRequest(ListConversationProfilesRequest&& from) noexcept
    : ListConversationProfilesRequest() {
    *this = ::std::move(from);
  }

  inline ListConversationProfilesRequest& operator=(const ListConversationProfilesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListConversationProfilesRequest& operator=(ListConversationProfilesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListConversationProfilesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListConversationProfilesRequest* internal_default_instance() {
    return reinterpret_cast<const ListConversationProfilesRequest*>(
               &_ListConversationProfilesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ListConversationProfilesRequest& a, ListConversationProfilesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListConversationProfilesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListConversationProfilesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListConversationProfilesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListConversationProfilesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListConversationProfilesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListConversationProfilesRequest& from) {
    ListConversationProfilesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConversationProfilesRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListConversationProfilesRequest";
  }
  protected:
  explicit ListConversationProfilesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kPageTokenFieldNumber = 3,
    kPageSizeFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_parent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_parent();
  PROTOBUF_NODISCARD std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // string page_token = 3;
  void clear_page_token();
  const std::string& page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // int32 page_size = 2;
  void clear_page_size();
  int32_t page_size() const;
  void set_page_size(int32_t value);
  private:
  int32_t _internal_page_size() const;
  void _internal_set_page_size(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListConversationProfilesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
    int32_t page_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class ListConversationProfilesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListConversationProfilesResponse) */ {
 public:
  inline ListConversationProfilesResponse() : ListConversationProfilesResponse(nullptr) {}
  ~ListConversationProfilesResponse() override;
  explicit PROTOBUF_CONSTEXPR ListConversationProfilesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListConversationProfilesResponse(const ListConversationProfilesResponse& from);
  ListConversationProfilesResponse(ListConversationProfilesResponse&& from) noexcept
    : ListConversationProfilesResponse() {
    *this = ::std::move(from);
  }

  inline ListConversationProfilesResponse& operator=(const ListConversationProfilesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListConversationProfilesResponse& operator=(ListConversationProfilesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListConversationProfilesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListConversationProfilesResponse* internal_default_instance() {
    return reinterpret_cast<const ListConversationProfilesResponse*>(
               &_ListConversationProfilesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListConversationProfilesResponse& a, ListConversationProfilesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListConversationProfilesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListConversationProfilesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListConversationProfilesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListConversationProfilesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListConversationProfilesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListConversationProfilesResponse& from) {
    ListConversationProfilesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConversationProfilesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListConversationProfilesResponse";
  }
  protected:
  explicit ListConversationProfilesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationProfilesFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .google.cloud.dialogflow.v2.ConversationProfile conversation_profiles = 1;
  int conversation_profiles_size() const;
  private:
  int _internal_conversation_profiles_size() const;
  public:
  void clear_conversation_profiles();
  ::google::cloud::dialogflow::v2::ConversationProfile* mutable_conversation_profiles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationProfile >*
      mutable_conversation_profiles();
  private:
  const ::google::cloud::dialogflow::v2::ConversationProfile& _internal_conversation_profiles(int index) const;
  ::google::cloud::dialogflow::v2::ConversationProfile* _internal_add_conversation_profiles();
  public:
  const ::google::cloud::dialogflow::v2::ConversationProfile& conversation_profiles(int index) const;
  ::google::cloud::dialogflow::v2::ConversationProfile* add_conversation_profiles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationProfile >&
      conversation_profiles() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListConversationProfilesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationProfile > conversation_profiles_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class GetConversationProfileRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.GetConversationProfileRequest) */ {
 public:
  inline GetConversationProfileRequest() : GetConversationProfileRequest(nullptr) {}
  ~GetConversationProfileRequest() override;
  explicit PROTOBUF_CONSTEXPR GetConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetConversationProfileRequest(const GetConversationProfileRequest& from);
  GetConversationProfileRequest(GetConversationProfileRequest&& from) noexcept
    : GetConversationProfileRequest() {
    *this = ::std::move(from);
  }

  inline GetConversationProfileRequest& operator=(const GetConversationProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConversationProfileRequest& operator=(GetConversationProfileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConversationProfileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConversationProfileRequest* internal_default_instance() {
    return reinterpret_cast<const GetConversationProfileRequest*>(
               &_GetConversationProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetConversationProfileRequest& a, GetConversationProfileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConversationProfileRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConversationProfileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConversationProfileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConversationProfileRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetConversationProfileRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetConversationProfileRequest& from) {
    GetConversationProfileRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConversationProfileRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.GetConversationProfileRequest";
  }
  protected:
  explicit GetConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.GetConversationProfileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class CreateConversationProfileRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.CreateConversationProfileRequest) */ {
 public:
  inline CreateConversationProfileRequest() : CreateConversationProfileRequest(nullptr) {}
  ~CreateConversationProfileRequest() override;
  explicit PROTOBUF_CONSTEXPR CreateConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateConversationProfileRequest(const CreateConversationProfileRequest& from);
  CreateConversationProfileRequest(CreateConversationProfileRequest&& from) noexcept
    : CreateConversationProfileRequest() {
    *this = ::std::move(from);
  }

  inline CreateConversationProfileRequest& operator=(const CreateConversationProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConversationProfileRequest& operator=(CreateConversationProfileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConversationProfileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateConversationProfileRequest* internal_default_instance() {
    return reinterpret_cast<const CreateConversationProfileRequest*>(
               &_CreateConversationProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CreateConversationProfileRequest& a, CreateConversationProfileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateConversationProfileRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConversationProfileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConversationProfileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateConversationProfileRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreateConversationProfileRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreateConversationProfileRequest& from) {
    CreateConversationProfileRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateConversationProfileRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.CreateConversationProfileRequest";
  }
  protected:
  explicit CreateConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kConversationProfileFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_parent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_parent();
  PROTOBUF_NODISCARD std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // .google.cloud.dialogflow.v2.ConversationProfile conversation_profile = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_conversation_profile() const;
  private:
  bool _internal_has_conversation_profile() const;
  public:
  void clear_conversation_profile();
  const ::google::cloud::dialogflow::v2::ConversationProfile& conversation_profile() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::ConversationProfile* release_conversation_profile();
  ::google::cloud::dialogflow::v2::ConversationProfile* mutable_conversation_profile();
  void set_allocated_conversation_profile(::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile);
  private:
  const ::google::cloud::dialogflow::v2::ConversationProfile& _internal_conversation_profile() const;
  ::google::cloud::dialogflow::v2::ConversationProfile* _internal_mutable_conversation_profile();
  public:
  void unsafe_arena_set_allocated_conversation_profile(
      ::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile);
  ::google::cloud::dialogflow::v2::ConversationProfile* unsafe_arena_release_conversation_profile();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.CreateConversationProfileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
    ::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class UpdateConversationProfileRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.UpdateConversationProfileRequest) */ {
 public:
  inline UpdateConversationProfileRequest() : UpdateConversationProfileRequest(nullptr) {}
  ~UpdateConversationProfileRequest() override;
  explicit PROTOBUF_CONSTEXPR UpdateConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateConversationProfileRequest(const UpdateConversationProfileRequest& from);
  UpdateConversationProfileRequest(UpdateConversationProfileRequest&& from) noexcept
    : UpdateConversationProfileRequest() {
    *this = ::std::move(from);
  }

  inline UpdateConversationProfileRequest& operator=(const UpdateConversationProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateConversationProfileRequest& operator=(UpdateConversationProfileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateConversationProfileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateConversationProfileRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateConversationProfileRequest*>(
               &_UpdateConversationProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(UpdateConversationProfileRequest& a, UpdateConversationProfileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateConversationProfileRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateConversationProfileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateConversationProfileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateConversationProfileRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UpdateConversationProfileRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UpdateConversationProfileRequest& from) {
    UpdateConversationProfileRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateConversationProfileRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.UpdateConversationProfileRequest";
  }
  protected:
  explicit UpdateConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationProfileFieldNumber = 1,
    kUpdateMaskFieldNumber = 2,
  };
  // .google.cloud.dialogflow.v2.ConversationProfile conversation_profile = 1 [(.google.api.field_behavior) = REQUIRED];
  bool has_conversation_profile() const;
  private:
  bool _internal_has_conversation_profile() const;
  public:
  void clear_conversation_profile();
  const ::google::cloud::dialogflow::v2::ConversationProfile& conversation_profile() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::ConversationProfile* release_conversation_profile();
  ::google::cloud::dialogflow::v2::ConversationProfile* mutable_conversation_profile();
  void set_allocated_conversation_profile(::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile);
  private:
  const ::google::cloud::dialogflow::v2::ConversationProfile& _internal_conversation_profile() const;
  ::google::cloud::dialogflow::v2::ConversationProfile* _internal_mutable_conversation_profile();
  public:
  void unsafe_arena_set_allocated_conversation_profile(
      ::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile);
  ::google::cloud::dialogflow::v2::ConversationProfile* unsafe_arena_release_conversation_profile();

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_update_mask() const;
  private:
  bool _internal_has_update_mask() const;
  public:
  void clear_update_mask();
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FieldMask* release_update_mask();
  ::PROTOBUF_NAMESPACE_ID::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& _internal_update_mask() const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_update_mask();
  public:
  void unsafe_arena_set_allocated_update_mask(
      ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  ::PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.UpdateConversationProfileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile_;
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class DeleteConversationProfileRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeleteConversationProfileRequest) */ {
 public:
  inline DeleteConversationProfileRequest() : DeleteConversationProfileRequest(nullptr) {}
  ~DeleteConversationProfileRequest() override;
  explicit PROTOBUF_CONSTEXPR DeleteConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteConversationProfileRequest(const DeleteConversationProfileRequest& from);
  DeleteConversationProfileRequest(DeleteConversationProfileRequest&& from) noexcept
    : DeleteConversationProfileRequest() {
    *this = ::std::move(from);
  }

  inline DeleteConversationProfileRequest& operator=(const DeleteConversationProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteConversationProfileRequest& operator=(DeleteConversationProfileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteConversationProfileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteConversationProfileRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteConversationProfileRequest*>(
               &_DeleteConversationProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteConversationProfileRequest& a, DeleteConversationProfileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteConversationProfileRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteConversationProfileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteConversationProfileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteConversationProfileRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DeleteConversationProfileRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DeleteConversationProfileRequest& from) {
    DeleteConversationProfileRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteConversationProfileRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeleteConversationProfileRequest";
  }
  protected:
  explicit DeleteConversationProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeleteConversationProfileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class AutomatedAgentConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.AutomatedAgentConfig) */ {
 public:
  inline AutomatedAgentConfig() : AutomatedAgentConfig(nullptr) {}
  ~AutomatedAgentConfig() override;
  explicit PROTOBUF_CONSTEXPR AutomatedAgentConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AutomatedAgentConfig(const AutomatedAgentConfig& from);
  AutomatedAgentConfig(AutomatedAgentConfig&& from) noexcept
    : AutomatedAgentConfig() {
    *this = ::std::move(from);
  }

  inline AutomatedAgentConfig& operator=(const AutomatedAgentConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutomatedAgentConfig& operator=(AutomatedAgentConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutomatedAgentConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutomatedAgentConfig* internal_default_instance() {
    return reinterpret_cast<const AutomatedAgentConfig*>(
               &_AutomatedAgentConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AutomatedAgentConfig& a, AutomatedAgentConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(AutomatedAgentConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutomatedAgentConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutomatedAgentConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AutomatedAgentConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AutomatedAgentConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AutomatedAgentConfig& from) {
    AutomatedAgentConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutomatedAgentConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.AutomatedAgentConfig";
  }
  protected:
  explicit AutomatedAgentConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentFieldNumber = 1,
  };
  // string agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_agent();
  const std::string& agent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_agent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_agent();
  PROTOBUF_NODISCARD std::string* release_agent();
  void set_allocated_agent(std::string* agent);
  private:
  const std::string& _internal_agent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent(const std::string& value);
  std::string* _internal_mutable_agent();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.AutomatedAgentConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr agent_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionTriggerSettings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionTriggerSettings() : HumanAgentAssistantConfig_SuggestionTriggerSettings(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionTriggerSettings() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionTriggerSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionTriggerSettings(const HumanAgentAssistantConfig_SuggestionTriggerSettings& from);
  HumanAgentAssistantConfig_SuggestionTriggerSettings(HumanAgentAssistantConfig_SuggestionTriggerSettings&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionTriggerSettings() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionTriggerSettings& operator=(const HumanAgentAssistantConfig_SuggestionTriggerSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionTriggerSettings& operator=(HumanAgentAssistantConfig_SuggestionTriggerSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionTriggerSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_SuggestionTriggerSettings* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionTriggerSettings*>(
               &_HumanAgentAssistantConfig_SuggestionTriggerSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(HumanAgentAssistantConfig_SuggestionTriggerSettings& a, HumanAgentAssistantConfig_SuggestionTriggerSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionTriggerSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionTriggerSettings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionTriggerSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionTriggerSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionTriggerSettings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionTriggerSettings& from) {
    HumanAgentAssistantConfig_SuggestionTriggerSettings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionTriggerSettings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionTriggerSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNoSmalltalkFieldNumber = 1,
    kOnlyEndUserFieldNumber = 2,
  };
  // bool no_smalltalk = 1;
  void clear_no_smalltalk();
  bool no_smalltalk() const;
  void set_no_smalltalk(bool value);
  private:
  bool _internal_no_smalltalk() const;
  void _internal_set_no_smalltalk(bool value);
  public:

  // bool only_end_user = 2;
  void clear_only_end_user();
  bool only_end_user() const;
  void set_only_end_user(bool value);
  private:
  bool _internal_only_end_user() const;
  void _internal_set_only_end_user(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool no_smalltalk_;
    bool only_end_user_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionFeatureConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionFeatureConfig() : HumanAgentAssistantConfig_SuggestionFeatureConfig(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionFeatureConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionFeatureConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionFeatureConfig(const HumanAgentAssistantConfig_SuggestionFeatureConfig& from);
  HumanAgentAssistantConfig_SuggestionFeatureConfig(HumanAgentAssistantConfig_SuggestionFeatureConfig&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionFeatureConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionFeatureConfig& operator=(const HumanAgentAssistantConfig_SuggestionFeatureConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionFeatureConfig& operator=(HumanAgentAssistantConfig_SuggestionFeatureConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionFeatureConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_SuggestionFeatureConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionFeatureConfig*>(
               &_HumanAgentAssistantConfig_SuggestionFeatureConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(HumanAgentAssistantConfig_SuggestionFeatureConfig& a, HumanAgentAssistantConfig_SuggestionFeatureConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionFeatureConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionFeatureConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionFeatureConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionFeatureConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionFeatureConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionFeatureConfig& from) {
    HumanAgentAssistantConfig_SuggestionFeatureConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionFeatureConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionFeatureConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuggestionFeatureFieldNumber = 5,
    kQueryConfigFieldNumber = 6,
    kConversationModelConfigFieldNumber = 7,
    kConversationProcessConfigFieldNumber = 8,
    kSuggestionTriggerSettingsFieldNumber = 10,
    kEnableEventBasedSuggestionFieldNumber = 3,
  };
  // .google.cloud.dialogflow.v2.SuggestionFeature suggestion_feature = 5;
  bool has_suggestion_feature() const;
  private:
  bool _internal_has_suggestion_feature() const;
  public:
  void clear_suggestion_feature();
  const ::google::cloud::dialogflow::v2::SuggestionFeature& suggestion_feature() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::SuggestionFeature* release_suggestion_feature();
  ::google::cloud::dialogflow::v2::SuggestionFeature* mutable_suggestion_feature();
  void set_allocated_suggestion_feature(::google::cloud::dialogflow::v2::SuggestionFeature* suggestion_feature);
  private:
  const ::google::cloud::dialogflow::v2::SuggestionFeature& _internal_suggestion_feature() const;
  ::google::cloud::dialogflow::v2::SuggestionFeature* _internal_mutable_suggestion_feature();
  public:
  void unsafe_arena_set_allocated_suggestion_feature(
      ::google::cloud::dialogflow::v2::SuggestionFeature* suggestion_feature);
  ::google::cloud::dialogflow::v2::SuggestionFeature* unsafe_arena_release_suggestion_feature();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig query_config = 6;
  bool has_query_config() const;
  private:
  bool _internal_has_query_config() const;
  public:
  void clear_query_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig& query_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* release_query_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* mutable_query_config();
  void set_allocated_query_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* query_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig& _internal_query_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* _internal_mutable_query_config();
  public:
  void unsafe_arena_set_allocated_query_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* query_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* unsafe_arena_release_query_config();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig conversation_model_config = 7;
  bool has_conversation_model_config() const;
  private:
  bool _internal_has_conversation_model_config() const;
  public:
  void clear_conversation_model_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig& conversation_model_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* release_conversation_model_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* mutable_conversation_model_config();
  void set_allocated_conversation_model_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* conversation_model_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig& _internal_conversation_model_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* _internal_mutable_conversation_model_config();
  public:
  void unsafe_arena_set_allocated_conversation_model_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* conversation_model_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* unsafe_arena_release_conversation_model_config();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationProcessConfig conversation_process_config = 8;
  bool has_conversation_process_config() const;
  private:
  bool _internal_has_conversation_process_config() const;
  public:
  void clear_conversation_process_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig& conversation_process_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* release_conversation_process_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* mutable_conversation_process_config();
  void set_allocated_conversation_process_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* conversation_process_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig& _internal_conversation_process_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* _internal_mutable_conversation_process_config();
  public:
  void unsafe_arena_set_allocated_conversation_process_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* conversation_process_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* unsafe_arena_release_conversation_process_config();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings suggestion_trigger_settings = 10;
  bool has_suggestion_trigger_settings() const;
  private:
  bool _internal_has_suggestion_trigger_settings() const;
  public:
  void clear_suggestion_trigger_settings();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings& suggestion_trigger_settings() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* release_suggestion_trigger_settings();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* mutable_suggestion_trigger_settings();
  void set_allocated_suggestion_trigger_settings(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* suggestion_trigger_settings);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings& _internal_suggestion_trigger_settings() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* _internal_mutable_suggestion_trigger_settings();
  public:
  void unsafe_arena_set_allocated_suggestion_trigger_settings(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* suggestion_trigger_settings);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* unsafe_arena_release_suggestion_trigger_settings();

  // bool enable_event_based_suggestion = 3;
  void clear_enable_event_based_suggestion();
  bool enable_event_based_suggestion() const;
  void set_enable_event_based_suggestion(bool value);
  private:
  bool _internal_enable_event_based_suggestion() const;
  void _internal_set_enable_event_based_suggestion(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::cloud::dialogflow::v2::SuggestionFeature* suggestion_feature_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* query_config_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* conversation_model_config_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* conversation_process_config_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* suggestion_trigger_settings_;
    bool enable_event_based_suggestion_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionConfig() : HumanAgentAssistantConfig_SuggestionConfig(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionConfig(const HumanAgentAssistantConfig_SuggestionConfig& from);
  HumanAgentAssistantConfig_SuggestionConfig(HumanAgentAssistantConfig_SuggestionConfig&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionConfig& operator=(const HumanAgentAssistantConfig_SuggestionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionConfig& operator=(HumanAgentAssistantConfig_SuggestionConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_SuggestionConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionConfig*>(
               &_HumanAgentAssistantConfig_SuggestionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(HumanAgentAssistantConfig_SuggestionConfig& a, HumanAgentAssistantConfig_SuggestionConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionConfig& from) {
    HumanAgentAssistantConfig_SuggestionConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeatureConfigsFieldNumber = 2,
    kGroupSuggestionResponsesFieldNumber = 3,
  };
  // repeated .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig feature_configs = 2;
  int feature_configs_size() const;
  private:
  int _internal_feature_configs_size() const;
  public:
  void clear_feature_configs();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* mutable_feature_configs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig >*
      mutable_feature_configs();
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& _internal_feature_configs(int index) const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* _internal_add_feature_configs();
  public:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& feature_configs(int index) const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* add_feature_configs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig >&
      feature_configs() const;

  // bool group_suggestion_responses = 3;
  void clear_group_suggestion_responses();
  bool group_suggestion_responses() const;
  void set_group_suggestion_responses(bool value);
  private:
  bool _internal_group_suggestion_responses() const;
  void _internal_set_group_suggestion_responses(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig > feature_configs_;
    bool group_suggestion_responses_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource() : HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource(const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& from);
  HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource(HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& operator=(const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& operator=(HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource*>(
               &_HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& a, HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& from) {
    HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKnowledgeBasesFieldNumber = 1,
  };
  // repeated string knowledge_bases = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  int knowledge_bases_size() const;
  private:
  int _internal_knowledge_bases_size() const;
  public:
  void clear_knowledge_bases();
  const std::string& knowledge_bases(int index) const;
  std::string* mutable_knowledge_bases(int index);
  void set_knowledge_bases(int index, const std::string& value);
  void set_knowledge_bases(int index, std::string&& value);
  void set_knowledge_bases(int index, const char* value);
  void set_knowledge_bases(int index, const char* value, size_t size);
  std::string* add_knowledge_bases();
  void add_knowledge_bases(const std::string& value);
  void add_knowledge_bases(std::string&& value);
  void add_knowledge_bases(const char* value);
  void add_knowledge_bases(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& knowledge_bases() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_knowledge_bases();
  private:
  const std::string& _internal_knowledge_bases(int index) const;
  std::string* _internal_add_knowledge_bases();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> knowledge_bases_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource() : HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource(const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& from);
  HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource(HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& operator=(const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& operator=(HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource*>(
               &_HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& a, HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& from) {
    HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDocumentsFieldNumber = 1,
  };
  // repeated string documents = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  int documents_size() const;
  private:
  int _internal_documents_size() const;
  public:
  void clear_documents();
  const std::string& documents(int index) const;
  std::string* mutable_documents(int index);
  void set_documents(int index, const std::string& value);
  void set_documents(int index, std::string&& value);
  void set_documents(int index, const char* value);
  void set_documents(int index, const char* value, size_t size);
  std::string* add_documents();
  void add_documents(const std::string& value);
  void add_documents(std::string&& value);
  void add_documents(const char* value);
  void add_documents(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& documents() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_documents();
  private:
  const std::string& _internal_documents(int index) const;
  std::string* _internal_add_documents();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> documents_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource() : HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource(const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& from);
  HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& operator=(const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& operator=(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource*>(
               &_HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& a, HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& from) {
    HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentFieldNumber = 1,
  };
  // string agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_agent();
  const std::string& agent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_agent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_agent();
  PROTOBUF_NODISCARD std::string* release_agent();
  void set_allocated_agent(std::string* agent);
  private:
  const std::string& _internal_agent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent(const std::string& value);
  std::string* _internal_mutable_agent();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr agent_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings() : HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings(const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& from);
  HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings(HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& operator=(const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& operator=(HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings*>(
               &_HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& a, HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& from) {
    HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDropHandoffMessagesFieldNumber = 1,
    kDropVirtualAgentMessagesFieldNumber = 2,
    kDropIvrMessagesFieldNumber = 3,
  };
  // bool drop_handoff_messages = 1;
  void clear_drop_handoff_messages();
  bool drop_handoff_messages() const;
  void set_drop_handoff_messages(bool value);
  private:
  bool _internal_drop_handoff_messages() const;
  void _internal_set_drop_handoff_messages(bool value);
  public:

  // bool drop_virtual_agent_messages = 2;
  void clear_drop_virtual_agent_messages();
  bool drop_virtual_agent_messages() const;
  void set_drop_virtual_agent_messages(bool value);
  private:
  bool _internal_drop_virtual_agent_messages() const;
  void _internal_set_drop_virtual_agent_messages(bool value);
  public:

  // bool drop_ivr_messages = 3;
  void clear_drop_ivr_messages();
  bool drop_ivr_messages() const;
  void set_drop_ivr_messages(bool value);
  private:
  bool _internal_drop_ivr_messages() const;
  void _internal_set_drop_ivr_messages(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool drop_handoff_messages_;
    bool drop_virtual_agent_messages_;
    bool drop_ivr_messages_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_SuggestionQueryConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig) */ {
 public:
  inline HumanAgentAssistantConfig_SuggestionQueryConfig() : HumanAgentAssistantConfig_SuggestionQueryConfig(nullptr) {}
  ~HumanAgentAssistantConfig_SuggestionQueryConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_SuggestionQueryConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_SuggestionQueryConfig(const HumanAgentAssistantConfig_SuggestionQueryConfig& from);
  HumanAgentAssistantConfig_SuggestionQueryConfig(HumanAgentAssistantConfig_SuggestionQueryConfig&& from) noexcept
    : HumanAgentAssistantConfig_SuggestionQueryConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_SuggestionQueryConfig& operator=(const HumanAgentAssistantConfig_SuggestionQueryConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_SuggestionQueryConfig& operator=(HumanAgentAssistantConfig_SuggestionQueryConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_SuggestionQueryConfig& default_instance() {
    return *internal_default_instance();
  }
  enum QuerySourceCase {
    kKnowledgeBaseQuerySource = 1,
    kDocumentQuerySource = 2,
    kDialogflowQuerySource = 3,
    QUERY_SOURCE_NOT_SET = 0,
  };

  static inline const HumanAgentAssistantConfig_SuggestionQueryConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_SuggestionQueryConfig*>(
               &_HumanAgentAssistantConfig_SuggestionQueryConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(HumanAgentAssistantConfig_SuggestionQueryConfig& a, HumanAgentAssistantConfig_SuggestionQueryConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_SuggestionQueryConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_SuggestionQueryConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_SuggestionQueryConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_SuggestionQueryConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_SuggestionQueryConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_SuggestionQueryConfig& from) {
    HumanAgentAssistantConfig_SuggestionQueryConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_SuggestionQueryConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig";
  }
  protected:
  explicit HumanAgentAssistantConfig_SuggestionQueryConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource KnowledgeBaseQuerySource;
  typedef HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource DocumentQuerySource;
  typedef HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource DialogflowQuerySource;
  typedef HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings ContextFilterSettings;

  // accessors -------------------------------------------------------

  enum : int {
    kContextFilterSettingsFieldNumber = 7,
    kMaxResultsFieldNumber = 4,
    kConfidenceThresholdFieldNumber = 5,
    kKnowledgeBaseQuerySourceFieldNumber = 1,
    kDocumentQuerySourceFieldNumber = 2,
    kDialogflowQuerySourceFieldNumber = 3,
  };
  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings context_filter_settings = 7;
  bool has_context_filter_settings() const;
  private:
  bool _internal_has_context_filter_settings() const;
  public:
  void clear_context_filter_settings();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& context_filter_settings() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* release_context_filter_settings();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* mutable_context_filter_settings();
  void set_allocated_context_filter_settings(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* context_filter_settings);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& _internal_context_filter_settings() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* _internal_mutable_context_filter_settings();
  public:
  void unsafe_arena_set_allocated_context_filter_settings(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* context_filter_settings);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* unsafe_arena_release_context_filter_settings();

  // int32 max_results = 4;
  void clear_max_results();
  int32_t max_results() const;
  void set_max_results(int32_t value);
  private:
  int32_t _internal_max_results() const;
  void _internal_set_max_results(int32_t value);
  public:

  // float confidence_threshold = 5;
  void clear_confidence_threshold();
  float confidence_threshold() const;
  void set_confidence_threshold(float value);
  private:
  float _internal_confidence_threshold() const;
  void _internal_set_confidence_threshold(float value);
  public:

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource knowledge_base_query_source = 1;
  bool has_knowledge_base_query_source() const;
  private:
  bool _internal_has_knowledge_base_query_source() const;
  public:
  void clear_knowledge_base_query_source();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& knowledge_base_query_source() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* release_knowledge_base_query_source();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* mutable_knowledge_base_query_source();
  void set_allocated_knowledge_base_query_source(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* knowledge_base_query_source);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& _internal_knowledge_base_query_source() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* _internal_mutable_knowledge_base_query_source();
  public:
  void unsafe_arena_set_allocated_knowledge_base_query_source(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* knowledge_base_query_source);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* unsafe_arena_release_knowledge_base_query_source();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource document_query_source = 2;
  bool has_document_query_source() const;
  private:
  bool _internal_has_document_query_source() const;
  public:
  void clear_document_query_source();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& document_query_source() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* release_document_query_source();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* mutable_document_query_source();
  void set_allocated_document_query_source(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* document_query_source);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& _internal_document_query_source() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* _internal_mutable_document_query_source();
  public:
  void unsafe_arena_set_allocated_document_query_source(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* document_query_source);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* unsafe_arena_release_document_query_source();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource dialogflow_query_source = 3;
  bool has_dialogflow_query_source() const;
  private:
  bool _internal_has_dialogflow_query_source() const;
  public:
  void clear_dialogflow_query_source();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& dialogflow_query_source() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* release_dialogflow_query_source();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* mutable_dialogflow_query_source();
  void set_allocated_dialogflow_query_source(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* dialogflow_query_source);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& _internal_dialogflow_query_source() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* _internal_mutable_dialogflow_query_source();
  public:
  void unsafe_arena_set_allocated_dialogflow_query_source(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* dialogflow_query_source);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* unsafe_arena_release_dialogflow_query_source();

  void clear_query_source();
  QuerySourceCase query_source_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig)
 private:
  class _Internal;
  void set_has_knowledge_base_query_source();
  void set_has_document_query_source();
  void set_has_dialogflow_query_source();

  inline bool has_query_source() const;
  inline void clear_has_query_source();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* context_filter_settings_;
    int32_t max_results_;
    float confidence_threshold_;
    union QuerySourceUnion {
      constexpr QuerySourceUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* knowledge_base_query_source_;
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* document_query_source_;
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* dialogflow_query_source_;
    } query_source_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_ConversationModelConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig) */ {
 public:
  inline HumanAgentAssistantConfig_ConversationModelConfig() : HumanAgentAssistantConfig_ConversationModelConfig(nullptr) {}
  ~HumanAgentAssistantConfig_ConversationModelConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_ConversationModelConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_ConversationModelConfig(const HumanAgentAssistantConfig_ConversationModelConfig& from);
  HumanAgentAssistantConfig_ConversationModelConfig(HumanAgentAssistantConfig_ConversationModelConfig&& from) noexcept
    : HumanAgentAssistantConfig_ConversationModelConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_ConversationModelConfig& operator=(const HumanAgentAssistantConfig_ConversationModelConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_ConversationModelConfig& operator=(HumanAgentAssistantConfig_ConversationModelConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_ConversationModelConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_ConversationModelConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_ConversationModelConfig*>(
               &_HumanAgentAssistantConfig_ConversationModelConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(HumanAgentAssistantConfig_ConversationModelConfig& a, HumanAgentAssistantConfig_ConversationModelConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_ConversationModelConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_ConversationModelConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_ConversationModelConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_ConversationModelConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_ConversationModelConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_ConversationModelConfig& from) {
    HumanAgentAssistantConfig_ConversationModelConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_ConversationModelConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig";
  }
  protected:
  explicit HumanAgentAssistantConfig_ConversationModelConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelFieldNumber = 1,
  };
  // string model = 1 [(.google.api.resource_reference) = {
  void clear_model();
  const std::string& model() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_model(ArgT0&& arg0, ArgT... args);
  std::string* mutable_model();
  PROTOBUF_NODISCARD std::string* release_model();
  void set_allocated_model(std::string* model);
  private:
  const std::string& _internal_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model(const std::string& value);
  std::string* _internal_mutable_model();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_ConversationProcessConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationProcessConfig) */ {
 public:
  inline HumanAgentAssistantConfig_ConversationProcessConfig() : HumanAgentAssistantConfig_ConversationProcessConfig(nullptr) {}
  ~HumanAgentAssistantConfig_ConversationProcessConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_ConversationProcessConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_ConversationProcessConfig(const HumanAgentAssistantConfig_ConversationProcessConfig& from);
  HumanAgentAssistantConfig_ConversationProcessConfig(HumanAgentAssistantConfig_ConversationProcessConfig&& from) noexcept
    : HumanAgentAssistantConfig_ConversationProcessConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_ConversationProcessConfig& operator=(const HumanAgentAssistantConfig_ConversationProcessConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_ConversationProcessConfig& operator=(HumanAgentAssistantConfig_ConversationProcessConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_ConversationProcessConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_ConversationProcessConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_ConversationProcessConfig*>(
               &_HumanAgentAssistantConfig_ConversationProcessConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(HumanAgentAssistantConfig_ConversationProcessConfig& a, HumanAgentAssistantConfig_ConversationProcessConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_ConversationProcessConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_ConversationProcessConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_ConversationProcessConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_ConversationProcessConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_ConversationProcessConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_ConversationProcessConfig& from) {
    HumanAgentAssistantConfig_ConversationProcessConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_ConversationProcessConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationProcessConfig";
  }
  protected:
  explicit HumanAgentAssistantConfig_ConversationProcessConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecentSentencesCountFieldNumber = 2,
  };
  // int32 recent_sentences_count = 2;
  void clear_recent_sentences_count();
  int32_t recent_sentences_count() const;
  void set_recent_sentences_count(int32_t value);
  private:
  int32_t _internal_recent_sentences_count() const;
  void _internal_set_recent_sentences_count(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationProcessConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t recent_sentences_count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig_MessageAnalysisConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig) */ {
 public:
  inline HumanAgentAssistantConfig_MessageAnalysisConfig() : HumanAgentAssistantConfig_MessageAnalysisConfig(nullptr) {}
  ~HumanAgentAssistantConfig_MessageAnalysisConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig_MessageAnalysisConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig_MessageAnalysisConfig(const HumanAgentAssistantConfig_MessageAnalysisConfig& from);
  HumanAgentAssistantConfig_MessageAnalysisConfig(HumanAgentAssistantConfig_MessageAnalysisConfig&& from) noexcept
    : HumanAgentAssistantConfig_MessageAnalysisConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig_MessageAnalysisConfig& operator=(const HumanAgentAssistantConfig_MessageAnalysisConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig_MessageAnalysisConfig& operator=(HumanAgentAssistantConfig_MessageAnalysisConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig_MessageAnalysisConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig_MessageAnalysisConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig_MessageAnalysisConfig*>(
               &_HumanAgentAssistantConfig_MessageAnalysisConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(HumanAgentAssistantConfig_MessageAnalysisConfig& a, HumanAgentAssistantConfig_MessageAnalysisConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig_MessageAnalysisConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig_MessageAnalysisConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig_MessageAnalysisConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig_MessageAnalysisConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig_MessageAnalysisConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig_MessageAnalysisConfig& from) {
    HumanAgentAssistantConfig_MessageAnalysisConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig_MessageAnalysisConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig";
  }
  protected:
  explicit HumanAgentAssistantConfig_MessageAnalysisConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableEntityExtractionFieldNumber = 2,
    kEnableSentimentAnalysisFieldNumber = 3,
  };
  // bool enable_entity_extraction = 2;
  void clear_enable_entity_extraction();
  bool enable_entity_extraction() const;
  void set_enable_entity_extraction(bool value);
  private:
  bool _internal_enable_entity_extraction() const;
  void _internal_set_enable_entity_extraction(bool value);
  public:

  // bool enable_sentiment_analysis = 3;
  void clear_enable_sentiment_analysis();
  bool enable_sentiment_analysis() const;
  void set_enable_sentiment_analysis(bool value);
  private:
  bool _internal_enable_sentiment_analysis() const;
  void _internal_set_enable_sentiment_analysis(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool enable_entity_extraction_;
    bool enable_sentiment_analysis_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentAssistantConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentAssistantConfig) */ {
 public:
  inline HumanAgentAssistantConfig() : HumanAgentAssistantConfig(nullptr) {}
  ~HumanAgentAssistantConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentAssistantConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentAssistantConfig(const HumanAgentAssistantConfig& from);
  HumanAgentAssistantConfig(HumanAgentAssistantConfig&& from) noexcept
    : HumanAgentAssistantConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentAssistantConfig& operator=(const HumanAgentAssistantConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentAssistantConfig& operator=(HumanAgentAssistantConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentAssistantConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentAssistantConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentAssistantConfig*>(
               &_HumanAgentAssistantConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(HumanAgentAssistantConfig& a, HumanAgentAssistantConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentAssistantConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentAssistantConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentAssistantConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentAssistantConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentAssistantConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentAssistantConfig& from) {
    HumanAgentAssistantConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentAssistantConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentAssistantConfig";
  }
  protected:
  explicit HumanAgentAssistantConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HumanAgentAssistantConfig_SuggestionTriggerSettings SuggestionTriggerSettings;
  typedef HumanAgentAssistantConfig_SuggestionFeatureConfig SuggestionFeatureConfig;
  typedef HumanAgentAssistantConfig_SuggestionConfig SuggestionConfig;
  typedef HumanAgentAssistantConfig_SuggestionQueryConfig SuggestionQueryConfig;
  typedef HumanAgentAssistantConfig_ConversationModelConfig ConversationModelConfig;
  typedef HumanAgentAssistantConfig_ConversationProcessConfig ConversationProcessConfig;
  typedef HumanAgentAssistantConfig_MessageAnalysisConfig MessageAnalysisConfig;

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationConfigFieldNumber = 2,
    kHumanAgentSuggestionConfigFieldNumber = 3,
    kEndUserSuggestionConfigFieldNumber = 4,
    kMessageAnalysisConfigFieldNumber = 5,
  };
  // .google.cloud.dialogflow.v2.NotificationConfig notification_config = 2;
  bool has_notification_config() const;
  private:
  bool _internal_has_notification_config() const;
  public:
  void clear_notification_config();
  const ::google::cloud::dialogflow::v2::NotificationConfig& notification_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::NotificationConfig* release_notification_config();
  ::google::cloud::dialogflow::v2::NotificationConfig* mutable_notification_config();
  void set_allocated_notification_config(::google::cloud::dialogflow::v2::NotificationConfig* notification_config);
  private:
  const ::google::cloud::dialogflow::v2::NotificationConfig& _internal_notification_config() const;
  ::google::cloud::dialogflow::v2::NotificationConfig* _internal_mutable_notification_config();
  public:
  void unsafe_arena_set_allocated_notification_config(
      ::google::cloud::dialogflow::v2::NotificationConfig* notification_config);
  ::google::cloud::dialogflow::v2::NotificationConfig* unsafe_arena_release_notification_config();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig human_agent_suggestion_config = 3;
  bool has_human_agent_suggestion_config() const;
  private:
  bool _internal_has_human_agent_suggestion_config() const;
  public:
  void clear_human_agent_suggestion_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& human_agent_suggestion_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* release_human_agent_suggestion_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* mutable_human_agent_suggestion_config();
  void set_allocated_human_agent_suggestion_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* human_agent_suggestion_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& _internal_human_agent_suggestion_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* _internal_mutable_human_agent_suggestion_config();
  public:
  void unsafe_arena_set_allocated_human_agent_suggestion_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* human_agent_suggestion_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* unsafe_arena_release_human_agent_suggestion_config();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig end_user_suggestion_config = 4;
  bool has_end_user_suggestion_config() const;
  private:
  bool _internal_has_end_user_suggestion_config() const;
  public:
  void clear_end_user_suggestion_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& end_user_suggestion_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* release_end_user_suggestion_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* mutable_end_user_suggestion_config();
  void set_allocated_end_user_suggestion_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* end_user_suggestion_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& _internal_end_user_suggestion_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* _internal_mutable_end_user_suggestion_config();
  public:
  void unsafe_arena_set_allocated_end_user_suggestion_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* end_user_suggestion_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* unsafe_arena_release_end_user_suggestion_config();

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig message_analysis_config = 5;
  bool has_message_analysis_config() const;
  private:
  bool _internal_has_message_analysis_config() const;
  public:
  void clear_message_analysis_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig& message_analysis_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* release_message_analysis_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* mutable_message_analysis_config();
  void set_allocated_message_analysis_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* message_analysis_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig& _internal_message_analysis_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* _internal_mutable_message_analysis_config();
  public:
  void unsafe_arena_set_allocated_message_analysis_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* message_analysis_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* unsafe_arena_release_message_analysis_config();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentAssistantConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::cloud::dialogflow::v2::NotificationConfig* notification_config_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* human_agent_suggestion_config_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* end_user_suggestion_config_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* message_analysis_config_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentHandoffConfig_LivePersonConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig) */ {
 public:
  inline HumanAgentHandoffConfig_LivePersonConfig() : HumanAgentHandoffConfig_LivePersonConfig(nullptr) {}
  ~HumanAgentHandoffConfig_LivePersonConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentHandoffConfig_LivePersonConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentHandoffConfig_LivePersonConfig(const HumanAgentHandoffConfig_LivePersonConfig& from);
  HumanAgentHandoffConfig_LivePersonConfig(HumanAgentHandoffConfig_LivePersonConfig&& from) noexcept
    : HumanAgentHandoffConfig_LivePersonConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentHandoffConfig_LivePersonConfig& operator=(const HumanAgentHandoffConfig_LivePersonConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentHandoffConfig_LivePersonConfig& operator=(HumanAgentHandoffConfig_LivePersonConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentHandoffConfig_LivePersonConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentHandoffConfig_LivePersonConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentHandoffConfig_LivePersonConfig*>(
               &_HumanAgentHandoffConfig_LivePersonConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(HumanAgentHandoffConfig_LivePersonConfig& a, HumanAgentHandoffConfig_LivePersonConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentHandoffConfig_LivePersonConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentHandoffConfig_LivePersonConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentHandoffConfig_LivePersonConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentHandoffConfig_LivePersonConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentHandoffConfig_LivePersonConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentHandoffConfig_LivePersonConfig& from) {
    HumanAgentHandoffConfig_LivePersonConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentHandoffConfig_LivePersonConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig";
  }
  protected:
  explicit HumanAgentHandoffConfig_LivePersonConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNumberFieldNumber = 1,
  };
  // string account_number = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_number();
  const std::string& account_number() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_number(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_number();
  PROTOBUF_NODISCARD std::string* release_account_number();
  void set_allocated_account_number(std::string* account_number);
  private:
  const std::string& _internal_account_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_number(const std::string& value);
  std::string* _internal_mutable_account_number();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_number_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentHandoffConfig_SalesforceLiveAgentConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig) */ {
 public:
  inline HumanAgentHandoffConfig_SalesforceLiveAgentConfig() : HumanAgentHandoffConfig_SalesforceLiveAgentConfig(nullptr) {}
  ~HumanAgentHandoffConfig_SalesforceLiveAgentConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentHandoffConfig_SalesforceLiveAgentConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentHandoffConfig_SalesforceLiveAgentConfig(const HumanAgentHandoffConfig_SalesforceLiveAgentConfig& from);
  HumanAgentHandoffConfig_SalesforceLiveAgentConfig(HumanAgentHandoffConfig_SalesforceLiveAgentConfig&& from) noexcept
    : HumanAgentHandoffConfig_SalesforceLiveAgentConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentHandoffConfig_SalesforceLiveAgentConfig& operator=(const HumanAgentHandoffConfig_SalesforceLiveAgentConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentHandoffConfig_SalesforceLiveAgentConfig& operator=(HumanAgentHandoffConfig_SalesforceLiveAgentConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentHandoffConfig_SalesforceLiveAgentConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const HumanAgentHandoffConfig_SalesforceLiveAgentConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentHandoffConfig_SalesforceLiveAgentConfig*>(
               &_HumanAgentHandoffConfig_SalesforceLiveAgentConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(HumanAgentHandoffConfig_SalesforceLiveAgentConfig& a, HumanAgentHandoffConfig_SalesforceLiveAgentConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentHandoffConfig_SalesforceLiveAgentConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentHandoffConfig_SalesforceLiveAgentConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentHandoffConfig_SalesforceLiveAgentConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentHandoffConfig_SalesforceLiveAgentConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentHandoffConfig_SalesforceLiveAgentConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentHandoffConfig_SalesforceLiveAgentConfig& from) {
    HumanAgentHandoffConfig_SalesforceLiveAgentConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentHandoffConfig_SalesforceLiveAgentConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig";
  }
  protected:
  explicit HumanAgentHandoffConfig_SalesforceLiveAgentConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrganizationIdFieldNumber = 1,
    kDeploymentIdFieldNumber = 2,
    kButtonIdFieldNumber = 3,
    kEndpointDomainFieldNumber = 4,
  };
  // string organization_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_organization_id();
  const std::string& organization_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_organization_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_organization_id();
  PROTOBUF_NODISCARD std::string* release_organization_id();
  void set_allocated_organization_id(std::string* organization_id);
  private:
  const std::string& _internal_organization_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_organization_id(const std::string& value);
  std::string* _internal_mutable_organization_id();
  public:

  // string deployment_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_deployment_id();
  const std::string& deployment_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_deployment_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_deployment_id();
  PROTOBUF_NODISCARD std::string* release_deployment_id();
  void set_allocated_deployment_id(std::string* deployment_id);
  private:
  const std::string& _internal_deployment_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deployment_id(const std::string& value);
  std::string* _internal_mutable_deployment_id();
  public:

  // string button_id = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_button_id();
  const std::string& button_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_button_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_button_id();
  PROTOBUF_NODISCARD std::string* release_button_id();
  void set_allocated_button_id(std::string* button_id);
  private:
  const std::string& _internal_button_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_button_id(const std::string& value);
  std::string* _internal_mutable_button_id();
  public:

  // string endpoint_domain = 4 [(.google.api.field_behavior) = REQUIRED];
  void clear_endpoint_domain();
  const std::string& endpoint_domain() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_endpoint_domain(ArgT0&& arg0, ArgT... args);
  std::string* mutable_endpoint_domain();
  PROTOBUF_NODISCARD std::string* release_endpoint_domain();
  void set_allocated_endpoint_domain(std::string* endpoint_domain);
  private:
  const std::string& _internal_endpoint_domain() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endpoint_domain(const std::string& value);
  std::string* _internal_mutable_endpoint_domain();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr organization_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr deployment_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr button_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr endpoint_domain_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class HumanAgentHandoffConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.HumanAgentHandoffConfig) */ {
 public:
  inline HumanAgentHandoffConfig() : HumanAgentHandoffConfig(nullptr) {}
  ~HumanAgentHandoffConfig() override;
  explicit PROTOBUF_CONSTEXPR HumanAgentHandoffConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HumanAgentHandoffConfig(const HumanAgentHandoffConfig& from);
  HumanAgentHandoffConfig(HumanAgentHandoffConfig&& from) noexcept
    : HumanAgentHandoffConfig() {
    *this = ::std::move(from);
  }

  inline HumanAgentHandoffConfig& operator=(const HumanAgentHandoffConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumanAgentHandoffConfig& operator=(HumanAgentHandoffConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumanAgentHandoffConfig& default_instance() {
    return *internal_default_instance();
  }
  enum AgentServiceCase {
    kLivePersonConfig = 1,
    kSalesforceLiveAgentConfig = 2,
    AGENT_SERVICE_NOT_SET = 0,
  };

  static inline const HumanAgentHandoffConfig* internal_default_instance() {
    return reinterpret_cast<const HumanAgentHandoffConfig*>(
               &_HumanAgentHandoffConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(HumanAgentHandoffConfig& a, HumanAgentHandoffConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(HumanAgentHandoffConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumanAgentHandoffConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumanAgentHandoffConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HumanAgentHandoffConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HumanAgentHandoffConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HumanAgentHandoffConfig& from) {
    HumanAgentHandoffConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanAgentHandoffConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.HumanAgentHandoffConfig";
  }
  protected:
  explicit HumanAgentHandoffConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HumanAgentHandoffConfig_LivePersonConfig LivePersonConfig;
  typedef HumanAgentHandoffConfig_SalesforceLiveAgentConfig SalesforceLiveAgentConfig;

  // accessors -------------------------------------------------------

  enum : int {
    kLivePersonConfigFieldNumber = 1,
    kSalesforceLiveAgentConfigFieldNumber = 2,
  };
  // .google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig live_person_config = 1;
  bool has_live_person_config() const;
  private:
  bool _internal_has_live_person_config() const;
  public:
  void clear_live_person_config();
  const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig& live_person_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* release_live_person_config();
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* mutable_live_person_config();
  void set_allocated_live_person_config(::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* live_person_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig& _internal_live_person_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* _internal_mutable_live_person_config();
  public:
  void unsafe_arena_set_allocated_live_person_config(
      ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* live_person_config);
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* unsafe_arena_release_live_person_config();

  // .google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig salesforce_live_agent_config = 2;
  bool has_salesforce_live_agent_config() const;
  private:
  bool _internal_has_salesforce_live_agent_config() const;
  public:
  void clear_salesforce_live_agent_config();
  const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig& salesforce_live_agent_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* release_salesforce_live_agent_config();
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* mutable_salesforce_live_agent_config();
  void set_allocated_salesforce_live_agent_config(::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* salesforce_live_agent_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig& _internal_salesforce_live_agent_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* _internal_mutable_salesforce_live_agent_config();
  public:
  void unsafe_arena_set_allocated_salesforce_live_agent_config(
      ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* salesforce_live_agent_config);
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* unsafe_arena_release_salesforce_live_agent_config();

  void clear_agent_service();
  AgentServiceCase agent_service_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.HumanAgentHandoffConfig)
 private:
  class _Internal;
  void set_has_live_person_config();
  void set_has_salesforce_live_agent_config();

  inline bool has_agent_service() const;
  inline void clear_has_agent_service();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union AgentServiceUnion {
      constexpr AgentServiceUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* live_person_config_;
      ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* salesforce_live_agent_config_;
    } agent_service_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class NotificationConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.NotificationConfig) */ {
 public:
  inline NotificationConfig() : NotificationConfig(nullptr) {}
  ~NotificationConfig() override;
  explicit PROTOBUF_CONSTEXPR NotificationConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NotificationConfig(const NotificationConfig& from);
  NotificationConfig(NotificationConfig&& from) noexcept
    : NotificationConfig() {
    *this = ::std::move(from);
  }

  inline NotificationConfig& operator=(const NotificationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotificationConfig& operator=(NotificationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotificationConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotificationConfig* internal_default_instance() {
    return reinterpret_cast<const NotificationConfig*>(
               &_NotificationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(NotificationConfig& a, NotificationConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(NotificationConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotificationConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotificationConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NotificationConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NotificationConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const NotificationConfig& from) {
    NotificationConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotificationConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.NotificationConfig";
  }
  protected:
  explicit NotificationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NotificationConfig_MessageFormat MessageFormat;
  static constexpr MessageFormat MESSAGE_FORMAT_UNSPECIFIED =
    NotificationConfig_MessageFormat_MESSAGE_FORMAT_UNSPECIFIED;
  static constexpr MessageFormat PROTO =
    NotificationConfig_MessageFormat_PROTO;
  static constexpr MessageFormat JSON =
    NotificationConfig_MessageFormat_JSON;
  static inline bool MessageFormat_IsValid(int value) {
    return NotificationConfig_MessageFormat_IsValid(value);
  }
  static constexpr MessageFormat MessageFormat_MIN =
    NotificationConfig_MessageFormat_MessageFormat_MIN;
  static constexpr MessageFormat MessageFormat_MAX =
    NotificationConfig_MessageFormat_MessageFormat_MAX;
  static constexpr int MessageFormat_ARRAYSIZE =
    NotificationConfig_MessageFormat_MessageFormat_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MessageFormat_descriptor() {
    return NotificationConfig_MessageFormat_descriptor();
  }
  template<typename T>
  static inline const std::string& MessageFormat_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MessageFormat>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MessageFormat_Name.");
    return NotificationConfig_MessageFormat_Name(enum_t_value);
  }
  static inline bool MessageFormat_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MessageFormat* value) {
    return NotificationConfig_MessageFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTopicFieldNumber = 1,
    kMessageFormatFieldNumber = 2,
  };
  // string topic = 1;
  void clear_topic();
  const std::string& topic() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_topic(ArgT0&& arg0, ArgT... args);
  std::string* mutable_topic();
  PROTOBUF_NODISCARD std::string* release_topic();
  void set_allocated_topic(std::string* topic);
  private:
  const std::string& _internal_topic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const std::string& value);
  std::string* _internal_mutable_topic();
  public:

  // .google.cloud.dialogflow.v2.NotificationConfig.MessageFormat message_format = 2;
  void clear_message_format();
  ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat message_format() const;
  void set_message_format(::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat value);
  private:
  ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat _internal_message_format() const;
  void _internal_set_message_format(::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.NotificationConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr topic_;
    int message_format_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class LoggingConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.LoggingConfig) */ {
 public:
  inline LoggingConfig() : LoggingConfig(nullptr) {}
  ~LoggingConfig() override;
  explicit PROTOBUF_CONSTEXPR LoggingConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LoggingConfig(const LoggingConfig& from);
  LoggingConfig(LoggingConfig&& from) noexcept
    : LoggingConfig() {
    *this = ::std::move(from);
  }

  inline LoggingConfig& operator=(const LoggingConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoggingConfig& operator=(LoggingConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoggingConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoggingConfig* internal_default_instance() {
    return reinterpret_cast<const LoggingConfig*>(
               &_LoggingConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(LoggingConfig& a, LoggingConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(LoggingConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoggingConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoggingConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoggingConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const LoggingConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const LoggingConfig& from) {
    LoggingConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoggingConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.LoggingConfig";
  }
  protected:
  explicit LoggingConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableStackdriverLoggingFieldNumber = 3,
  };
  // bool enable_stackdriver_logging = 3;
  void clear_enable_stackdriver_logging();
  bool enable_stackdriver_logging() const;
  void set_enable_stackdriver_logging(bool value);
  private:
  bool _internal_enable_stackdriver_logging() const;
  void _internal_set_enable_stackdriver_logging(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.LoggingConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool enable_stackdriver_logging_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class SuggestionFeature final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.SuggestionFeature) */ {
 public:
  inline SuggestionFeature() : SuggestionFeature(nullptr) {}
  ~SuggestionFeature() override;
  explicit PROTOBUF_CONSTEXPR SuggestionFeature(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SuggestionFeature(const SuggestionFeature& from);
  SuggestionFeature(SuggestionFeature&& from) noexcept
    : SuggestionFeature() {
    *this = ::std::move(from);
  }

  inline SuggestionFeature& operator=(const SuggestionFeature& from) {
    CopyFrom(from);
    return *this;
  }
  inline SuggestionFeature& operator=(SuggestionFeature&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SuggestionFeature& default_instance() {
    return *internal_default_instance();
  }
  static inline const SuggestionFeature* internal_default_instance() {
    return reinterpret_cast<const SuggestionFeature*>(
               &_SuggestionFeature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(SuggestionFeature& a, SuggestionFeature& b) {
    a.Swap(&b);
  }
  inline void Swap(SuggestionFeature* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SuggestionFeature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SuggestionFeature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SuggestionFeature>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SuggestionFeature& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SuggestionFeature& from) {
    SuggestionFeature::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SuggestionFeature* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.SuggestionFeature";
  }
  protected:
  explicit SuggestionFeature(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SuggestionFeature_Type Type;
  static constexpr Type TYPE_UNSPECIFIED =
    SuggestionFeature_Type_TYPE_UNSPECIFIED;
  static constexpr Type ARTICLE_SUGGESTION =
    SuggestionFeature_Type_ARTICLE_SUGGESTION;
  static constexpr Type FAQ =
    SuggestionFeature_Type_FAQ;
  static constexpr Type SMART_REPLY =
    SuggestionFeature_Type_SMART_REPLY;
  static inline bool Type_IsValid(int value) {
    return SuggestionFeature_Type_IsValid(value);
  }
  static constexpr Type Type_MIN =
    SuggestionFeature_Type_Type_MIN;
  static constexpr Type Type_MAX =
    SuggestionFeature_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE =
    SuggestionFeature_Type_Type_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Type_descriptor() {
    return SuggestionFeature_Type_descriptor();
  }
  template<typename T>
  static inline const std::string& Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Type_Name.");
    return SuggestionFeature_Type_Name(enum_t_value);
  }
  static inline bool Type_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Type* value) {
    return SuggestionFeature_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
  };
  // .google.cloud.dialogflow.v2.SuggestionFeature.Type type = 1;
  void clear_type();
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type type() const;
  void set_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  private:
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type _internal_type() const;
  void _internal_set_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.SuggestionFeature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class SetSuggestionFeatureConfigRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest) */ {
 public:
  inline SetSuggestionFeatureConfigRequest() : SetSuggestionFeatureConfigRequest(nullptr) {}
  ~SetSuggestionFeatureConfigRequest() override;
  explicit PROTOBUF_CONSTEXPR SetSuggestionFeatureConfigRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetSuggestionFeatureConfigRequest(const SetSuggestionFeatureConfigRequest& from);
  SetSuggestionFeatureConfigRequest(SetSuggestionFeatureConfigRequest&& from) noexcept
    : SetSuggestionFeatureConfigRequest() {
    *this = ::std::move(from);
  }

  inline SetSuggestionFeatureConfigRequest& operator=(const SetSuggestionFeatureConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSuggestionFeatureConfigRequest& operator=(SetSuggestionFeatureConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSuggestionFeatureConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSuggestionFeatureConfigRequest* internal_default_instance() {
    return reinterpret_cast<const SetSuggestionFeatureConfigRequest*>(
               &_SetSuggestionFeatureConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(SetSuggestionFeatureConfigRequest& a, SetSuggestionFeatureConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSuggestionFeatureConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSuggestionFeatureConfigRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSuggestionFeatureConfigRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSuggestionFeatureConfigRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetSuggestionFeatureConfigRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SetSuggestionFeatureConfigRequest& from) {
    SetSuggestionFeatureConfigRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSuggestionFeatureConfigRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest";
  }
  protected:
  explicit SetSuggestionFeatureConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationProfileFieldNumber = 1,
    kSuggestionFeatureConfigFieldNumber = 3,
    kParticipantRoleFieldNumber = 2,
  };
  // string conversation_profile = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_conversation_profile();
  const std::string& conversation_profile() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_profile(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_profile();
  PROTOBUF_NODISCARD std::string* release_conversation_profile();
  void set_allocated_conversation_profile(std::string* conversation_profile);
  private:
  const std::string& _internal_conversation_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_profile(const std::string& value);
  std::string* _internal_mutable_conversation_profile();
  public:

  // .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig suggestion_feature_config = 3 [(.google.api.field_behavior) = REQUIRED];
  bool has_suggestion_feature_config() const;
  private:
  bool _internal_has_suggestion_feature_config() const;
  public:
  void clear_suggestion_feature_config();
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& suggestion_feature_config() const;
  PROTOBUF_NODISCARD ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* release_suggestion_feature_config();
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* mutable_suggestion_feature_config();
  void set_allocated_suggestion_feature_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* suggestion_feature_config);
  private:
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& _internal_suggestion_feature_config() const;
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* _internal_mutable_suggestion_feature_config();
  public:
  void unsafe_arena_set_allocated_suggestion_feature_config(
      ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* suggestion_feature_config);
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* unsafe_arena_release_suggestion_feature_config();

  // .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_participant_role();
  ::google::cloud::dialogflow::v2::Participant_Role participant_role() const;
  void set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  private:
  ::google::cloud::dialogflow::v2::Participant_Role _internal_participant_role() const;
  void _internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_profile_;
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* suggestion_feature_config_;
    int participant_role_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class ClearSuggestionFeatureConfigRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest) */ {
 public:
  inline ClearSuggestionFeatureConfigRequest() : ClearSuggestionFeatureConfigRequest(nullptr) {}
  ~ClearSuggestionFeatureConfigRequest() override;
  explicit PROTOBUF_CONSTEXPR ClearSuggestionFeatureConfigRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ClearSuggestionFeatureConfigRequest(const ClearSuggestionFeatureConfigRequest& from);
  ClearSuggestionFeatureConfigRequest(ClearSuggestionFeatureConfigRequest&& from) noexcept
    : ClearSuggestionFeatureConfigRequest() {
    *this = ::std::move(from);
  }

  inline ClearSuggestionFeatureConfigRequest& operator=(const ClearSuggestionFeatureConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearSuggestionFeatureConfigRequest& operator=(ClearSuggestionFeatureConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearSuggestionFeatureConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClearSuggestionFeatureConfigRequest* internal_default_instance() {
    return reinterpret_cast<const ClearSuggestionFeatureConfigRequest*>(
               &_ClearSuggestionFeatureConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(ClearSuggestionFeatureConfigRequest& a, ClearSuggestionFeatureConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ClearSuggestionFeatureConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearSuggestionFeatureConfigRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearSuggestionFeatureConfigRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ClearSuggestionFeatureConfigRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ClearSuggestionFeatureConfigRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ClearSuggestionFeatureConfigRequest& from) {
    ClearSuggestionFeatureConfigRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClearSuggestionFeatureConfigRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest";
  }
  protected:
  explicit ClearSuggestionFeatureConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationProfileFieldNumber = 1,
    kParticipantRoleFieldNumber = 2,
    kSuggestionFeatureTypeFieldNumber = 3,
  };
  // string conversation_profile = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_conversation_profile();
  const std::string& conversation_profile() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_profile(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_profile();
  PROTOBUF_NODISCARD std::string* release_conversation_profile();
  void set_allocated_conversation_profile(std::string* conversation_profile);
  private:
  const std::string& _internal_conversation_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_profile(const std::string& value);
  std::string* _internal_mutable_conversation_profile();
  public:

  // .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_participant_role();
  ::google::cloud::dialogflow::v2::Participant_Role participant_role() const;
  void set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  private:
  ::google::cloud::dialogflow::v2::Participant_Role _internal_participant_role() const;
  void _internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  public:

  // .google.cloud.dialogflow.v2.SuggestionFeature.Type suggestion_feature_type = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_suggestion_feature_type();
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type suggestion_feature_type() const;
  void set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  private:
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type _internal_suggestion_feature_type() const;
  void _internal_set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_profile_;
    int participant_role_;
    int suggestion_feature_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class SetSuggestionFeatureConfigOperationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata) */ {
 public:
  inline SetSuggestionFeatureConfigOperationMetadata() : SetSuggestionFeatureConfigOperationMetadata(nullptr) {}
  ~SetSuggestionFeatureConfigOperationMetadata() override;
  explicit PROTOBUF_CONSTEXPR SetSuggestionFeatureConfigOperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetSuggestionFeatureConfigOperationMetadata(const SetSuggestionFeatureConfigOperationMetadata& from);
  SetSuggestionFeatureConfigOperationMetadata(SetSuggestionFeatureConfigOperationMetadata&& from) noexcept
    : SetSuggestionFeatureConfigOperationMetadata() {
    *this = ::std::move(from);
  }

  inline SetSuggestionFeatureConfigOperationMetadata& operator=(const SetSuggestionFeatureConfigOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSuggestionFeatureConfigOperationMetadata& operator=(SetSuggestionFeatureConfigOperationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSuggestionFeatureConfigOperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSuggestionFeatureConfigOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const SetSuggestionFeatureConfigOperationMetadata*>(
               &_SetSuggestionFeatureConfigOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(SetSuggestionFeatureConfigOperationMetadata& a, SetSuggestionFeatureConfigOperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSuggestionFeatureConfigOperationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSuggestionFeatureConfigOperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSuggestionFeatureConfigOperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSuggestionFeatureConfigOperationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetSuggestionFeatureConfigOperationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SetSuggestionFeatureConfigOperationMetadata& from) {
    SetSuggestionFeatureConfigOperationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSuggestionFeatureConfigOperationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata";
  }
  protected:
  explicit SetSuggestionFeatureConfigOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationProfileFieldNumber = 1,
    kCreateTimeFieldNumber = 4,
    kParticipantRoleFieldNumber = 2,
    kSuggestionFeatureTypeFieldNumber = 3,
  };
  // string conversation_profile = 1;
  void clear_conversation_profile();
  const std::string& conversation_profile() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_profile(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_profile();
  PROTOBUF_NODISCARD std::string* release_conversation_profile();
  void set_allocated_conversation_profile(std::string* conversation_profile);
  private:
  const std::string& _internal_conversation_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_profile(const std::string& value);
  std::string* _internal_mutable_conversation_profile();
  public:

  // .google.protobuf.Timestamp create_time = 4;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_participant_role();
  ::google::cloud::dialogflow::v2::Participant_Role participant_role() const;
  void set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  private:
  ::google::cloud::dialogflow::v2::Participant_Role _internal_participant_role() const;
  void _internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  public:

  // .google.cloud.dialogflow.v2.SuggestionFeature.Type suggestion_feature_type = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_suggestion_feature_type();
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type suggestion_feature_type() const;
  void set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  private:
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type _internal_suggestion_feature_type() const;
  void _internal_set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_profile_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    int participant_role_;
    int suggestion_feature_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// -------------------------------------------------------------------

class ClearSuggestionFeatureConfigOperationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata) */ {
 public:
  inline ClearSuggestionFeatureConfigOperationMetadata() : ClearSuggestionFeatureConfigOperationMetadata(nullptr) {}
  ~ClearSuggestionFeatureConfigOperationMetadata() override;
  explicit PROTOBUF_CONSTEXPR ClearSuggestionFeatureConfigOperationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ClearSuggestionFeatureConfigOperationMetadata(const ClearSuggestionFeatureConfigOperationMetadata& from);
  ClearSuggestionFeatureConfigOperationMetadata(ClearSuggestionFeatureConfigOperationMetadata&& from) noexcept
    : ClearSuggestionFeatureConfigOperationMetadata() {
    *this = ::std::move(from);
  }

  inline ClearSuggestionFeatureConfigOperationMetadata& operator=(const ClearSuggestionFeatureConfigOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearSuggestionFeatureConfigOperationMetadata& operator=(ClearSuggestionFeatureConfigOperationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearSuggestionFeatureConfigOperationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClearSuggestionFeatureConfigOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const ClearSuggestionFeatureConfigOperationMetadata*>(
               &_ClearSuggestionFeatureConfigOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(ClearSuggestionFeatureConfigOperationMetadata& a, ClearSuggestionFeatureConfigOperationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(ClearSuggestionFeatureConfigOperationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearSuggestionFeatureConfigOperationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearSuggestionFeatureConfigOperationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ClearSuggestionFeatureConfigOperationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ClearSuggestionFeatureConfigOperationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ClearSuggestionFeatureConfigOperationMetadata& from) {
    ClearSuggestionFeatureConfigOperationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClearSuggestionFeatureConfigOperationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata";
  }
  protected:
  explicit ClearSuggestionFeatureConfigOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConversationProfileFieldNumber = 1,
    kCreateTimeFieldNumber = 4,
    kParticipantRoleFieldNumber = 2,
    kSuggestionFeatureTypeFieldNumber = 3,
  };
  // string conversation_profile = 1;
  void clear_conversation_profile();
  const std::string& conversation_profile() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_conversation_profile(ArgT0&& arg0, ArgT... args);
  std::string* mutable_conversation_profile();
  PROTOBUF_NODISCARD std::string* release_conversation_profile();
  void set_allocated_conversation_profile(std::string* conversation_profile);
  private:
  const std::string& _internal_conversation_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_profile(const std::string& value);
  std::string* _internal_mutable_conversation_profile();
  public:

  // .google.protobuf.Timestamp create_time = 4;
  bool has_create_time() const;
  private:
  bool _internal_has_create_time() const;
  public:
  void clear_create_time();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_create_time();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_create_time();
  void set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_create_time() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_create_time();
  public:
  void unsafe_arena_set_allocated_create_time(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_create_time();

  // .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_participant_role();
  ::google::cloud::dialogflow::v2::Participant_Role participant_role() const;
  void set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  private:
  ::google::cloud::dialogflow::v2::Participant_Role _internal_participant_role() const;
  void _internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value);
  public:

  // .google.cloud.dialogflow.v2.SuggestionFeature.Type suggestion_feature_type = 3 [(.google.api.field_behavior) = REQUIRED];
  void clear_suggestion_feature_type();
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type suggestion_feature_type() const;
  void set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  private:
  ::google::cloud::dialogflow::v2::SuggestionFeature_Type _internal_suggestion_feature_type() const;
  void _internal_set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr conversation_profile_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time_;
    int participant_role_;
    int suggestion_feature_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConversationProfile

// string name = 1;
inline void ConversationProfile::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ConversationProfile::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationProfile::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationProfile.name)
}
inline std::string* ConversationProfile::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.name)
  return _s;
}
inline const std::string& ConversationProfile::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ConversationProfile::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationProfile::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationProfile::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.name)
  return _impl_.name_.Release();
}
inline void ConversationProfile::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.name)
}

// string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
inline void ConversationProfile::clear_display_name() {
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& ConversationProfile::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.display_name)
  return _internal_display_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationProfile::set_display_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.display_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationProfile.display_name)
}
inline std::string* ConversationProfile::mutable_display_name() {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.display_name)
  return _s;
}
inline const std::string& ConversationProfile::_internal_display_name() const {
  return _impl_.display_name_.Get();
}
inline void ConversationProfile::_internal_set_display_name(const std::string& value) {
  
  _impl_.display_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationProfile::_internal_mutable_display_name() {
  
  return _impl_.display_name_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationProfile::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.display_name)
  return _impl_.display_name_.Release();
}
inline void ConversationProfile::set_allocated_display_name(std::string* display_name) {
  if (display_name != nullptr) {
    
  } else {
    
  }
  _impl_.display_name_.SetAllocated(display_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.display_name_.IsDefault()) {
    _impl_.display_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.display_name)
}

// .google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool ConversationProfile::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool ConversationProfile::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationProfile::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationProfile::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.create_time)
  return _internal_create_time();
}
inline void ConversationProfile::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.create_time)
  return _msg;
}
inline void ConversationProfile::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.create_time)
}

// .google.protobuf.Timestamp update_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool ConversationProfile::_internal_has_update_time() const {
  return this != internal_default_instance() && _impl_.update_time_ != nullptr;
}
inline bool ConversationProfile::has_update_time() const {
  return _internal_has_update_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationProfile::_internal_update_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.update_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ConversationProfile::update_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.update_time)
  return _internal_update_time();
}
inline void ConversationProfile::unsafe_arena_set_allocated_update_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* update_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_time_);
  }
  _impl_.update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.update_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::release_update_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.update_time_;
  _impl_.update_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::unsafe_arena_release_update_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.update_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.update_time_;
  _impl_.update_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::_internal_mutable_update_time() {
  
  if (_impl_.update_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.update_time_ = p;
  }
  return _impl_.update_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ConversationProfile::mutable_update_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_update_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.update_time)
  return _msg;
}
inline void ConversationProfile::set_allocated_update_time(::PROTOBUF_NAMESPACE_ID::Timestamp* update_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_time_);
  }
  if (update_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_time));
    if (message_arena != submessage_arena) {
      update_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.update_time)
}

// .google.cloud.dialogflow.v2.AutomatedAgentConfig automated_agent_config = 3;
inline bool ConversationProfile::_internal_has_automated_agent_config() const {
  return this != internal_default_instance() && _impl_.automated_agent_config_ != nullptr;
}
inline bool ConversationProfile::has_automated_agent_config() const {
  return _internal_has_automated_agent_config();
}
inline void ConversationProfile::clear_automated_agent_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.automated_agent_config_ != nullptr) {
    delete _impl_.automated_agent_config_;
  }
  _impl_.automated_agent_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::AutomatedAgentConfig& ConversationProfile::_internal_automated_agent_config() const {
  const ::google::cloud::dialogflow::v2::AutomatedAgentConfig* p = _impl_.automated_agent_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::AutomatedAgentConfig&>(
      ::google::cloud::dialogflow::v2::_AutomatedAgentConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::AutomatedAgentConfig& ConversationProfile::automated_agent_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.automated_agent_config)
  return _internal_automated_agent_config();
}
inline void ConversationProfile::unsafe_arena_set_allocated_automated_agent_config(
    ::google::cloud::dialogflow::v2::AutomatedAgentConfig* automated_agent_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.automated_agent_config_);
  }
  _impl_.automated_agent_config_ = automated_agent_config;
  if (automated_agent_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.automated_agent_config)
}
inline ::google::cloud::dialogflow::v2::AutomatedAgentConfig* ConversationProfile::release_automated_agent_config() {
  
  ::google::cloud::dialogflow::v2::AutomatedAgentConfig* temp = _impl_.automated_agent_config_;
  _impl_.automated_agent_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::AutomatedAgentConfig* ConversationProfile::unsafe_arena_release_automated_agent_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.automated_agent_config)
  
  ::google::cloud::dialogflow::v2::AutomatedAgentConfig* temp = _impl_.automated_agent_config_;
  _impl_.automated_agent_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::AutomatedAgentConfig* ConversationProfile::_internal_mutable_automated_agent_config() {
  
  if (_impl_.automated_agent_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::AutomatedAgentConfig>(GetArenaForAllocation());
    _impl_.automated_agent_config_ = p;
  }
  return _impl_.automated_agent_config_;
}
inline ::google::cloud::dialogflow::v2::AutomatedAgentConfig* ConversationProfile::mutable_automated_agent_config() {
  ::google::cloud::dialogflow::v2::AutomatedAgentConfig* _msg = _internal_mutable_automated_agent_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.automated_agent_config)
  return _msg;
}
inline void ConversationProfile::set_allocated_automated_agent_config(::google::cloud::dialogflow::v2::AutomatedAgentConfig* automated_agent_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.automated_agent_config_;
  }
  if (automated_agent_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(automated_agent_config);
    if (message_arena != submessage_arena) {
      automated_agent_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, automated_agent_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.automated_agent_config_ = automated_agent_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.automated_agent_config)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig human_agent_assistant_config = 4;
inline bool ConversationProfile::_internal_has_human_agent_assistant_config() const {
  return this != internal_default_instance() && _impl_.human_agent_assistant_config_ != nullptr;
}
inline bool ConversationProfile::has_human_agent_assistant_config() const {
  return _internal_has_human_agent_assistant_config();
}
inline void ConversationProfile::clear_human_agent_assistant_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.human_agent_assistant_config_ != nullptr) {
    delete _impl_.human_agent_assistant_config_;
  }
  _impl_.human_agent_assistant_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig& ConversationProfile::_internal_human_agent_assistant_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* p = _impl_.human_agent_assistant_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig& ConversationProfile::human_agent_assistant_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.human_agent_assistant_config)
  return _internal_human_agent_assistant_config();
}
inline void ConversationProfile::unsafe_arena_set_allocated_human_agent_assistant_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* human_agent_assistant_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.human_agent_assistant_config_);
  }
  _impl_.human_agent_assistant_config_ = human_agent_assistant_config;
  if (human_agent_assistant_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.human_agent_assistant_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* ConversationProfile::release_human_agent_assistant_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* temp = _impl_.human_agent_assistant_config_;
  _impl_.human_agent_assistant_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* ConversationProfile::unsafe_arena_release_human_agent_assistant_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.human_agent_assistant_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* temp = _impl_.human_agent_assistant_config_;
  _impl_.human_agent_assistant_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* ConversationProfile::_internal_mutable_human_agent_assistant_config() {
  
  if (_impl_.human_agent_assistant_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig>(GetArenaForAllocation());
    _impl_.human_agent_assistant_config_ = p;
  }
  return _impl_.human_agent_assistant_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* ConversationProfile::mutable_human_agent_assistant_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* _msg = _internal_mutable_human_agent_assistant_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.human_agent_assistant_config)
  return _msg;
}
inline void ConversationProfile::set_allocated_human_agent_assistant_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig* human_agent_assistant_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.human_agent_assistant_config_;
  }
  if (human_agent_assistant_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(human_agent_assistant_config);
    if (message_arena != submessage_arena) {
      human_agent_assistant_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, human_agent_assistant_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.human_agent_assistant_config_ = human_agent_assistant_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.human_agent_assistant_config)
}

// .google.cloud.dialogflow.v2.HumanAgentHandoffConfig human_agent_handoff_config = 5;
inline bool ConversationProfile::_internal_has_human_agent_handoff_config() const {
  return this != internal_default_instance() && _impl_.human_agent_handoff_config_ != nullptr;
}
inline bool ConversationProfile::has_human_agent_handoff_config() const {
  return _internal_has_human_agent_handoff_config();
}
inline void ConversationProfile::clear_human_agent_handoff_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.human_agent_handoff_config_ != nullptr) {
    delete _impl_.human_agent_handoff_config_;
  }
  _impl_.human_agent_handoff_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig& ConversationProfile::_internal_human_agent_handoff_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* p = _impl_.human_agent_handoff_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentHandoffConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig& ConversationProfile::human_agent_handoff_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.human_agent_handoff_config)
  return _internal_human_agent_handoff_config();
}
inline void ConversationProfile::unsafe_arena_set_allocated_human_agent_handoff_config(
    ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* human_agent_handoff_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.human_agent_handoff_config_);
  }
  _impl_.human_agent_handoff_config_ = human_agent_handoff_config;
  if (human_agent_handoff_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.human_agent_handoff_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* ConversationProfile::release_human_agent_handoff_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* temp = _impl_.human_agent_handoff_config_;
  _impl_.human_agent_handoff_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* ConversationProfile::unsafe_arena_release_human_agent_handoff_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.human_agent_handoff_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* temp = _impl_.human_agent_handoff_config_;
  _impl_.human_agent_handoff_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* ConversationProfile::_internal_mutable_human_agent_handoff_config() {
  
  if (_impl_.human_agent_handoff_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentHandoffConfig>(GetArenaForAllocation());
    _impl_.human_agent_handoff_config_ = p;
  }
  return _impl_.human_agent_handoff_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* ConversationProfile::mutable_human_agent_handoff_config() {
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* _msg = _internal_mutable_human_agent_handoff_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.human_agent_handoff_config)
  return _msg;
}
inline void ConversationProfile::set_allocated_human_agent_handoff_config(::google::cloud::dialogflow::v2::HumanAgentHandoffConfig* human_agent_handoff_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.human_agent_handoff_config_;
  }
  if (human_agent_handoff_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(human_agent_handoff_config);
    if (message_arena != submessage_arena) {
      human_agent_handoff_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, human_agent_handoff_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.human_agent_handoff_config_ = human_agent_handoff_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.human_agent_handoff_config)
}

// .google.cloud.dialogflow.v2.NotificationConfig notification_config = 6;
inline bool ConversationProfile::_internal_has_notification_config() const {
  return this != internal_default_instance() && _impl_.notification_config_ != nullptr;
}
inline bool ConversationProfile::has_notification_config() const {
  return _internal_has_notification_config();
}
inline void ConversationProfile::clear_notification_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.notification_config_ != nullptr) {
    delete _impl_.notification_config_;
  }
  _impl_.notification_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::NotificationConfig& ConversationProfile::_internal_notification_config() const {
  const ::google::cloud::dialogflow::v2::NotificationConfig* p = _impl_.notification_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::NotificationConfig&>(
      ::google::cloud::dialogflow::v2::_NotificationConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::NotificationConfig& ConversationProfile::notification_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.notification_config)
  return _internal_notification_config();
}
inline void ConversationProfile::unsafe_arena_set_allocated_notification_config(
    ::google::cloud::dialogflow::v2::NotificationConfig* notification_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.notification_config_);
  }
  _impl_.notification_config_ = notification_config;
  if (notification_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.notification_config)
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::release_notification_config() {
  
  ::google::cloud::dialogflow::v2::NotificationConfig* temp = _impl_.notification_config_;
  _impl_.notification_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::unsafe_arena_release_notification_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.notification_config)
  
  ::google::cloud::dialogflow::v2::NotificationConfig* temp = _impl_.notification_config_;
  _impl_.notification_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::_internal_mutable_notification_config() {
  
  if (_impl_.notification_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::NotificationConfig>(GetArenaForAllocation());
    _impl_.notification_config_ = p;
  }
  return _impl_.notification_config_;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::mutable_notification_config() {
  ::google::cloud::dialogflow::v2::NotificationConfig* _msg = _internal_mutable_notification_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.notification_config)
  return _msg;
}
inline void ConversationProfile::set_allocated_notification_config(::google::cloud::dialogflow::v2::NotificationConfig* notification_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.notification_config_;
  }
  if (notification_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(notification_config);
    if (message_arena != submessage_arena) {
      notification_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notification_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.notification_config_ = notification_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.notification_config)
}

// .google.cloud.dialogflow.v2.LoggingConfig logging_config = 7;
inline bool ConversationProfile::_internal_has_logging_config() const {
  return this != internal_default_instance() && _impl_.logging_config_ != nullptr;
}
inline bool ConversationProfile::has_logging_config() const {
  return _internal_has_logging_config();
}
inline void ConversationProfile::clear_logging_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.logging_config_ != nullptr) {
    delete _impl_.logging_config_;
  }
  _impl_.logging_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::LoggingConfig& ConversationProfile::_internal_logging_config() const {
  const ::google::cloud::dialogflow::v2::LoggingConfig* p = _impl_.logging_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::LoggingConfig&>(
      ::google::cloud::dialogflow::v2::_LoggingConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::LoggingConfig& ConversationProfile::logging_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.logging_config)
  return _internal_logging_config();
}
inline void ConversationProfile::unsafe_arena_set_allocated_logging_config(
    ::google::cloud::dialogflow::v2::LoggingConfig* logging_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.logging_config_);
  }
  _impl_.logging_config_ = logging_config;
  if (logging_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.logging_config)
}
inline ::google::cloud::dialogflow::v2::LoggingConfig* ConversationProfile::release_logging_config() {
  
  ::google::cloud::dialogflow::v2::LoggingConfig* temp = _impl_.logging_config_;
  _impl_.logging_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::LoggingConfig* ConversationProfile::unsafe_arena_release_logging_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.logging_config)
  
  ::google::cloud::dialogflow::v2::LoggingConfig* temp = _impl_.logging_config_;
  _impl_.logging_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::LoggingConfig* ConversationProfile::_internal_mutable_logging_config() {
  
  if (_impl_.logging_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::LoggingConfig>(GetArenaForAllocation());
    _impl_.logging_config_ = p;
  }
  return _impl_.logging_config_;
}
inline ::google::cloud::dialogflow::v2::LoggingConfig* ConversationProfile::mutable_logging_config() {
  ::google::cloud::dialogflow::v2::LoggingConfig* _msg = _internal_mutable_logging_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.logging_config)
  return _msg;
}
inline void ConversationProfile::set_allocated_logging_config(::google::cloud::dialogflow::v2::LoggingConfig* logging_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.logging_config_;
  }
  if (logging_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(logging_config);
    if (message_arena != submessage_arena) {
      logging_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, logging_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.logging_config_ = logging_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.logging_config)
}

// .google.cloud.dialogflow.v2.NotificationConfig new_message_event_notification_config = 8;
inline bool ConversationProfile::_internal_has_new_message_event_notification_config() const {
  return this != internal_default_instance() && _impl_.new_message_event_notification_config_ != nullptr;
}
inline bool ConversationProfile::has_new_message_event_notification_config() const {
  return _internal_has_new_message_event_notification_config();
}
inline void ConversationProfile::clear_new_message_event_notification_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.new_message_event_notification_config_ != nullptr) {
    delete _impl_.new_message_event_notification_config_;
  }
  _impl_.new_message_event_notification_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::NotificationConfig& ConversationProfile::_internal_new_message_event_notification_config() const {
  const ::google::cloud::dialogflow::v2::NotificationConfig* p = _impl_.new_message_event_notification_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::NotificationConfig&>(
      ::google::cloud::dialogflow::v2::_NotificationConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::NotificationConfig& ConversationProfile::new_message_event_notification_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.new_message_event_notification_config)
  return _internal_new_message_event_notification_config();
}
inline void ConversationProfile::unsafe_arena_set_allocated_new_message_event_notification_config(
    ::google::cloud::dialogflow::v2::NotificationConfig* new_message_event_notification_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.new_message_event_notification_config_);
  }
  _impl_.new_message_event_notification_config_ = new_message_event_notification_config;
  if (new_message_event_notification_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.new_message_event_notification_config)
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::release_new_message_event_notification_config() {
  
  ::google::cloud::dialogflow::v2::NotificationConfig* temp = _impl_.new_message_event_notification_config_;
  _impl_.new_message_event_notification_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::unsafe_arena_release_new_message_event_notification_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.new_message_event_notification_config)
  
  ::google::cloud::dialogflow::v2::NotificationConfig* temp = _impl_.new_message_event_notification_config_;
  _impl_.new_message_event_notification_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::_internal_mutable_new_message_event_notification_config() {
  
  if (_impl_.new_message_event_notification_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::NotificationConfig>(GetArenaForAllocation());
    _impl_.new_message_event_notification_config_ = p;
  }
  return _impl_.new_message_event_notification_config_;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* ConversationProfile::mutable_new_message_event_notification_config() {
  ::google::cloud::dialogflow::v2::NotificationConfig* _msg = _internal_mutable_new_message_event_notification_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.new_message_event_notification_config)
  return _msg;
}
inline void ConversationProfile::set_allocated_new_message_event_notification_config(::google::cloud::dialogflow::v2::NotificationConfig* new_message_event_notification_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.new_message_event_notification_config_;
  }
  if (new_message_event_notification_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(new_message_event_notification_config);
    if (message_arena != submessage_arena) {
      new_message_event_notification_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, new_message_event_notification_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.new_message_event_notification_config_ = new_message_event_notification_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.new_message_event_notification_config)
}

// .google.cloud.dialogflow.v2.SpeechToTextConfig stt_config = 9;
inline bool ConversationProfile::_internal_has_stt_config() const {
  return this != internal_default_instance() && _impl_.stt_config_ != nullptr;
}
inline bool ConversationProfile::has_stt_config() const {
  return _internal_has_stt_config();
}
inline const ::google::cloud::dialogflow::v2::SpeechToTextConfig& ConversationProfile::_internal_stt_config() const {
  const ::google::cloud::dialogflow::v2::SpeechToTextConfig* p = _impl_.stt_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::SpeechToTextConfig&>(
      ::google::cloud::dialogflow::v2::_SpeechToTextConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::SpeechToTextConfig& ConversationProfile::stt_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.stt_config)
  return _internal_stt_config();
}
inline void ConversationProfile::unsafe_arena_set_allocated_stt_config(
    ::google::cloud::dialogflow::v2::SpeechToTextConfig* stt_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stt_config_);
  }
  _impl_.stt_config_ = stt_config;
  if (stt_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.stt_config)
}
inline ::google::cloud::dialogflow::v2::SpeechToTextConfig* ConversationProfile::release_stt_config() {
  
  ::google::cloud::dialogflow::v2::SpeechToTextConfig* temp = _impl_.stt_config_;
  _impl_.stt_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::SpeechToTextConfig* ConversationProfile::unsafe_arena_release_stt_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.stt_config)
  
  ::google::cloud::dialogflow::v2::SpeechToTextConfig* temp = _impl_.stt_config_;
  _impl_.stt_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::SpeechToTextConfig* ConversationProfile::_internal_mutable_stt_config() {
  
  if (_impl_.stt_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::SpeechToTextConfig>(GetArenaForAllocation());
    _impl_.stt_config_ = p;
  }
  return _impl_.stt_config_;
}
inline ::google::cloud::dialogflow::v2::SpeechToTextConfig* ConversationProfile::mutable_stt_config() {
  ::google::cloud::dialogflow::v2::SpeechToTextConfig* _msg = _internal_mutable_stt_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.stt_config)
  return _msg;
}
inline void ConversationProfile::set_allocated_stt_config(::google::cloud::dialogflow::v2::SpeechToTextConfig* stt_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stt_config_);
  }
  if (stt_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stt_config));
    if (message_arena != submessage_arena) {
      stt_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stt_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.stt_config_ = stt_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.stt_config)
}

// string language_code = 10;
inline void ConversationProfile::clear_language_code() {
  _impl_.language_code_.ClearToEmpty();
}
inline const std::string& ConversationProfile::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.language_code)
  return _internal_language_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationProfile::set_language_code(ArgT0&& arg0, ArgT... args) {
 
 _impl_.language_code_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationProfile.language_code)
}
inline std::string* ConversationProfile::mutable_language_code() {
  std::string* _s = _internal_mutable_language_code();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.language_code)
  return _s;
}
inline const std::string& ConversationProfile::_internal_language_code() const {
  return _impl_.language_code_.Get();
}
inline void ConversationProfile::_internal_set_language_code(const std::string& value) {
  
  _impl_.language_code_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationProfile::_internal_mutable_language_code() {
  
  return _impl_.language_code_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationProfile::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.language_code)
  return _impl_.language_code_.Release();
}
inline void ConversationProfile::set_allocated_language_code(std::string* language_code) {
  if (language_code != nullptr) {
    
  } else {
    
  }
  _impl_.language_code_.SetAllocated(language_code, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.language_code_.IsDefault()) {
    _impl_.language_code_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.language_code)
}

// string time_zone = 14;
inline void ConversationProfile::clear_time_zone() {
  _impl_.time_zone_.ClearToEmpty();
}
inline const std::string& ConversationProfile::time_zone() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.time_zone)
  return _internal_time_zone();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationProfile::set_time_zone(ArgT0&& arg0, ArgT... args) {
 
 _impl_.time_zone_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationProfile.time_zone)
}
inline std::string* ConversationProfile::mutable_time_zone() {
  std::string* _s = _internal_mutable_time_zone();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.time_zone)
  return _s;
}
inline const std::string& ConversationProfile::_internal_time_zone() const {
  return _impl_.time_zone_.Get();
}
inline void ConversationProfile::_internal_set_time_zone(const std::string& value) {
  
  _impl_.time_zone_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationProfile::_internal_mutable_time_zone() {
  
  return _impl_.time_zone_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationProfile::release_time_zone() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.time_zone)
  return _impl_.time_zone_.Release();
}
inline void ConversationProfile::set_allocated_time_zone(std::string* time_zone) {
  if (time_zone != nullptr) {
    
  } else {
    
  }
  _impl_.time_zone_.SetAllocated(time_zone, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.time_zone_.IsDefault()) {
    _impl_.time_zone_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.time_zone)
}

// string security_settings = 13 [(.google.api.resource_reference) = {
inline void ConversationProfile::clear_security_settings() {
  _impl_.security_settings_.ClearToEmpty();
}
inline const std::string& ConversationProfile::security_settings() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ConversationProfile.security_settings)
  return _internal_security_settings();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ConversationProfile::set_security_settings(ArgT0&& arg0, ArgT... args) {
 
 _impl_.security_settings_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ConversationProfile.security_settings)
}
inline std::string* ConversationProfile::mutable_security_settings() {
  std::string* _s = _internal_mutable_security_settings();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ConversationProfile.security_settings)
  return _s;
}
inline const std::string& ConversationProfile::_internal_security_settings() const {
  return _impl_.security_settings_.Get();
}
inline void ConversationProfile::_internal_set_security_settings(const std::string& value) {
  
  _impl_.security_settings_.Set(value, GetArenaForAllocation());
}
inline std::string* ConversationProfile::_internal_mutable_security_settings() {
  
  return _impl_.security_settings_.Mutable(GetArenaForAllocation());
}
inline std::string* ConversationProfile::release_security_settings() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ConversationProfile.security_settings)
  return _impl_.security_settings_.Release();
}
inline void ConversationProfile::set_allocated_security_settings(std::string* security_settings) {
  if (security_settings != nullptr) {
    
  } else {
    
  }
  _impl_.security_settings_.SetAllocated(security_settings, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.security_settings_.IsDefault()) {
    _impl_.security_settings_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ConversationProfile.security_settings)
}

// -------------------------------------------------------------------

// ListConversationProfilesRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void ListConversationProfilesRequest::clear_parent() {
  _impl_.parent_.ClearToEmpty();
}
inline const std::string& ListConversationProfilesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationProfilesRequest.parent)
  return _internal_parent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationProfilesRequest::set_parent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.parent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationProfilesRequest.parent)
}
inline std::string* ListConversationProfilesRequest::mutable_parent() {
  std::string* _s = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationProfilesRequest.parent)
  return _s;
}
inline const std::string& ListConversationProfilesRequest::_internal_parent() const {
  return _impl_.parent_.Get();
}
inline void ListConversationProfilesRequest::_internal_set_parent(const std::string& value) {
  
  _impl_.parent_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationProfilesRequest::_internal_mutable_parent() {
  
  return _impl_.parent_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationProfilesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationProfilesRequest.parent)
  return _impl_.parent_.Release();
}
inline void ListConversationProfilesRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  _impl_.parent_.SetAllocated(parent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.parent_.IsDefault()) {
    _impl_.parent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationProfilesRequest.parent)
}

// int32 page_size = 2;
inline void ListConversationProfilesRequest::clear_page_size() {
  _impl_.page_size_ = 0;
}
inline int32_t ListConversationProfilesRequest::_internal_page_size() const {
  return _impl_.page_size_;
}
inline int32_t ListConversationProfilesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationProfilesRequest.page_size)
  return _internal_page_size();
}
inline void ListConversationProfilesRequest::_internal_set_page_size(int32_t value) {
  
  _impl_.page_size_ = value;
}
inline void ListConversationProfilesRequest::set_page_size(int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationProfilesRequest.page_size)
}

// string page_token = 3;
inline void ListConversationProfilesRequest::clear_page_token() {
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& ListConversationProfilesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationProfilesRequest.page_token)
  return _internal_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationProfilesRequest::set_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationProfilesRequest.page_token)
}
inline std::string* ListConversationProfilesRequest::mutable_page_token() {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationProfilesRequest.page_token)
  return _s;
}
inline const std::string& ListConversationProfilesRequest::_internal_page_token() const {
  return _impl_.page_token_.Get();
}
inline void ListConversationProfilesRequest::_internal_set_page_token(const std::string& value) {
  
  _impl_.page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationProfilesRequest::_internal_mutable_page_token() {
  
  return _impl_.page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationProfilesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationProfilesRequest.page_token)
  return _impl_.page_token_.Release();
}
inline void ListConversationProfilesRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  _impl_.page_token_.SetAllocated(page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.page_token_.IsDefault()) {
    _impl_.page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationProfilesRequest.page_token)
}

// -------------------------------------------------------------------

// ListConversationProfilesResponse

// repeated .google.cloud.dialogflow.v2.ConversationProfile conversation_profiles = 1;
inline int ListConversationProfilesResponse::_internal_conversation_profiles_size() const {
  return _impl_.conversation_profiles_.size();
}
inline int ListConversationProfilesResponse::conversation_profiles_size() const {
  return _internal_conversation_profiles_size();
}
inline void ListConversationProfilesResponse::clear_conversation_profiles() {
  _impl_.conversation_profiles_.Clear();
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* ListConversationProfilesResponse::mutable_conversation_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationProfilesResponse.conversation_profiles)
  return _impl_.conversation_profiles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationProfile >*
ListConversationProfilesResponse::mutable_conversation_profiles() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.ListConversationProfilesResponse.conversation_profiles)
  return &_impl_.conversation_profiles_;
}
inline const ::google::cloud::dialogflow::v2::ConversationProfile& ListConversationProfilesResponse::_internal_conversation_profiles(int index) const {
  return _impl_.conversation_profiles_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::ConversationProfile& ListConversationProfilesResponse::conversation_profiles(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationProfilesResponse.conversation_profiles)
  return _internal_conversation_profiles(index);
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* ListConversationProfilesResponse::_internal_add_conversation_profiles() {
  return _impl_.conversation_profiles_.Add();
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* ListConversationProfilesResponse::add_conversation_profiles() {
  ::google::cloud::dialogflow::v2::ConversationProfile* _add = _internal_add_conversation_profiles();
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.ListConversationProfilesResponse.conversation_profiles)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::ConversationProfile >&
ListConversationProfilesResponse::conversation_profiles() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.ListConversationProfilesResponse.conversation_profiles)
  return _impl_.conversation_profiles_;
}

// string next_page_token = 2;
inline void ListConversationProfilesResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& ListConversationProfilesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListConversationProfilesResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ListConversationProfilesResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListConversationProfilesResponse.next_page_token)
}
inline std::string* ListConversationProfilesResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListConversationProfilesResponse.next_page_token)
  return _s;
}
inline const std::string& ListConversationProfilesResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void ListConversationProfilesResponse::_internal_set_next_page_token(const std::string& value) {
  
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListConversationProfilesResponse::_internal_mutable_next_page_token() {
  
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* ListConversationProfilesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListConversationProfilesResponse.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void ListConversationProfilesResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListConversationProfilesResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetConversationProfileRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void GetConversationProfileRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetConversationProfileRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.GetConversationProfileRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetConversationProfileRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.GetConversationProfileRequest.name)
}
inline std::string* GetConversationProfileRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.GetConversationProfileRequest.name)
  return _s;
}
inline const std::string& GetConversationProfileRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GetConversationProfileRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetConversationProfileRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetConversationProfileRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.GetConversationProfileRequest.name)
  return _impl_.name_.Release();
}
inline void GetConversationProfileRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.GetConversationProfileRequest.name)
}

// -------------------------------------------------------------------

// CreateConversationProfileRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void CreateConversationProfileRequest::clear_parent() {
  _impl_.parent_.ClearToEmpty();
}
inline const std::string& CreateConversationProfileRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationProfileRequest.parent)
  return _internal_parent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreateConversationProfileRequest::set_parent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.parent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateConversationProfileRequest.parent)
}
inline std::string* CreateConversationProfileRequest::mutable_parent() {
  std::string* _s = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationProfileRequest.parent)
  return _s;
}
inline const std::string& CreateConversationProfileRequest::_internal_parent() const {
  return _impl_.parent_.Get();
}
inline void CreateConversationProfileRequest::_internal_set_parent(const std::string& value) {
  
  _impl_.parent_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateConversationProfileRequest::_internal_mutable_parent() {
  
  return _impl_.parent_.Mutable(GetArenaForAllocation());
}
inline std::string* CreateConversationProfileRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationProfileRequest.parent)
  return _impl_.parent_.Release();
}
inline void CreateConversationProfileRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  _impl_.parent_.SetAllocated(parent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.parent_.IsDefault()) {
    _impl_.parent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationProfileRequest.parent)
}

// .google.cloud.dialogflow.v2.ConversationProfile conversation_profile = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool CreateConversationProfileRequest::_internal_has_conversation_profile() const {
  return this != internal_default_instance() && _impl_.conversation_profile_ != nullptr;
}
inline bool CreateConversationProfileRequest::has_conversation_profile() const {
  return _internal_has_conversation_profile();
}
inline void CreateConversationProfileRequest::clear_conversation_profile() {
  if (GetArenaForAllocation() == nullptr && _impl_.conversation_profile_ != nullptr) {
    delete _impl_.conversation_profile_;
  }
  _impl_.conversation_profile_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::ConversationProfile& CreateConversationProfileRequest::_internal_conversation_profile() const {
  const ::google::cloud::dialogflow::v2::ConversationProfile* p = _impl_.conversation_profile_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::ConversationProfile&>(
      ::google::cloud::dialogflow::v2::_ConversationProfile_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::ConversationProfile& CreateConversationProfileRequest::conversation_profile() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateConversationProfileRequest.conversation_profile)
  return _internal_conversation_profile();
}
inline void CreateConversationProfileRequest::unsafe_arena_set_allocated_conversation_profile(
    ::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conversation_profile_);
  }
  _impl_.conversation_profile_ = conversation_profile;
  if (conversation_profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.CreateConversationProfileRequest.conversation_profile)
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* CreateConversationProfileRequest::release_conversation_profile() {
  
  ::google::cloud::dialogflow::v2::ConversationProfile* temp = _impl_.conversation_profile_;
  _impl_.conversation_profile_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* CreateConversationProfileRequest::unsafe_arena_release_conversation_profile() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateConversationProfileRequest.conversation_profile)
  
  ::google::cloud::dialogflow::v2::ConversationProfile* temp = _impl_.conversation_profile_;
  _impl_.conversation_profile_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* CreateConversationProfileRequest::_internal_mutable_conversation_profile() {
  
  if (_impl_.conversation_profile_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::ConversationProfile>(GetArenaForAllocation());
    _impl_.conversation_profile_ = p;
  }
  return _impl_.conversation_profile_;
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* CreateConversationProfileRequest::mutable_conversation_profile() {
  ::google::cloud::dialogflow::v2::ConversationProfile* _msg = _internal_mutable_conversation_profile();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateConversationProfileRequest.conversation_profile)
  return _msg;
}
inline void CreateConversationProfileRequest::set_allocated_conversation_profile(::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.conversation_profile_;
  }
  if (conversation_profile) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(conversation_profile);
    if (message_arena != submessage_arena) {
      conversation_profile = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conversation_profile, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.conversation_profile_ = conversation_profile;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateConversationProfileRequest.conversation_profile)
}

// -------------------------------------------------------------------

// UpdateConversationProfileRequest

// .google.cloud.dialogflow.v2.ConversationProfile conversation_profile = 1 [(.google.api.field_behavior) = REQUIRED];
inline bool UpdateConversationProfileRequest::_internal_has_conversation_profile() const {
  return this != internal_default_instance() && _impl_.conversation_profile_ != nullptr;
}
inline bool UpdateConversationProfileRequest::has_conversation_profile() const {
  return _internal_has_conversation_profile();
}
inline void UpdateConversationProfileRequest::clear_conversation_profile() {
  if (GetArenaForAllocation() == nullptr && _impl_.conversation_profile_ != nullptr) {
    delete _impl_.conversation_profile_;
  }
  _impl_.conversation_profile_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::ConversationProfile& UpdateConversationProfileRequest::_internal_conversation_profile() const {
  const ::google::cloud::dialogflow::v2::ConversationProfile* p = _impl_.conversation_profile_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::ConversationProfile&>(
      ::google::cloud::dialogflow::v2::_ConversationProfile_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::ConversationProfile& UpdateConversationProfileRequest::conversation_profile() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.conversation_profile)
  return _internal_conversation_profile();
}
inline void UpdateConversationProfileRequest::unsafe_arena_set_allocated_conversation_profile(
    ::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conversation_profile_);
  }
  _impl_.conversation_profile_ = conversation_profile;
  if (conversation_profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.conversation_profile)
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* UpdateConversationProfileRequest::release_conversation_profile() {
  
  ::google::cloud::dialogflow::v2::ConversationProfile* temp = _impl_.conversation_profile_;
  _impl_.conversation_profile_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* UpdateConversationProfileRequest::unsafe_arena_release_conversation_profile() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.conversation_profile)
  
  ::google::cloud::dialogflow::v2::ConversationProfile* temp = _impl_.conversation_profile_;
  _impl_.conversation_profile_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* UpdateConversationProfileRequest::_internal_mutable_conversation_profile() {
  
  if (_impl_.conversation_profile_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::ConversationProfile>(GetArenaForAllocation());
    _impl_.conversation_profile_ = p;
  }
  return _impl_.conversation_profile_;
}
inline ::google::cloud::dialogflow::v2::ConversationProfile* UpdateConversationProfileRequest::mutable_conversation_profile() {
  ::google::cloud::dialogflow::v2::ConversationProfile* _msg = _internal_mutable_conversation_profile();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.conversation_profile)
  return _msg;
}
inline void UpdateConversationProfileRequest::set_allocated_conversation_profile(::google::cloud::dialogflow::v2::ConversationProfile* conversation_profile) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.conversation_profile_;
  }
  if (conversation_profile) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(conversation_profile);
    if (message_arena != submessage_arena) {
      conversation_profile = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conversation_profile, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.conversation_profile_ = conversation_profile;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.conversation_profile)
}

// .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool UpdateConversationProfileRequest::_internal_has_update_mask() const {
  return this != internal_default_instance() && _impl_.update_mask_ != nullptr;
}
inline bool UpdateConversationProfileRequest::has_update_mask() const {
  return _internal_has_update_mask();
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& UpdateConversationProfileRequest::_internal_update_mask() const {
  const ::PROTOBUF_NAMESPACE_ID::FieldMask* p = _impl_.update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FieldMask&>(
      ::PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& UpdateConversationProfileRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.update_mask)
  return _internal_update_mask();
}
inline void UpdateConversationProfileRequest::unsafe_arena_set_allocated_update_mask(
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  _impl_.update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.update_mask)
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* UpdateConversationProfileRequest::release_update_mask() {
  
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* UpdateConversationProfileRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.update_mask)
  
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* UpdateConversationProfileRequest::_internal_mutable_update_mask() {
  
  if (_impl_.update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FieldMask>(GetArenaForAllocation());
    _impl_.update_mask_ = p;
  }
  return _impl_.update_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* UpdateConversationProfileRequest::mutable_update_mask() {
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _msg = _internal_mutable_update_mask();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.update_mask)
  return _msg;
}
inline void UpdateConversationProfileRequest::set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  if (update_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask));
    if (message_arena != submessage_arena) {
      update_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UpdateConversationProfileRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteConversationProfileRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void DeleteConversationProfileRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DeleteConversationProfileRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeleteConversationProfileRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DeleteConversationProfileRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeleteConversationProfileRequest.name)
}
inline std::string* DeleteConversationProfileRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeleteConversationProfileRequest.name)
  return _s;
}
inline const std::string& DeleteConversationProfileRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void DeleteConversationProfileRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteConversationProfileRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* DeleteConversationProfileRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeleteConversationProfileRequest.name)
  return _impl_.name_.Release();
}
inline void DeleteConversationProfileRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeleteConversationProfileRequest.name)
}

// -------------------------------------------------------------------

// AutomatedAgentConfig

// string agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void AutomatedAgentConfig::clear_agent() {
  _impl_.agent_.ClearToEmpty();
}
inline const std::string& AutomatedAgentConfig::agent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.AutomatedAgentConfig.agent)
  return _internal_agent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AutomatedAgentConfig::set_agent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.agent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.AutomatedAgentConfig.agent)
}
inline std::string* AutomatedAgentConfig::mutable_agent() {
  std::string* _s = _internal_mutable_agent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.AutomatedAgentConfig.agent)
  return _s;
}
inline const std::string& AutomatedAgentConfig::_internal_agent() const {
  return _impl_.agent_.Get();
}
inline void AutomatedAgentConfig::_internal_set_agent(const std::string& value) {
  
  _impl_.agent_.Set(value, GetArenaForAllocation());
}
inline std::string* AutomatedAgentConfig::_internal_mutable_agent() {
  
  return _impl_.agent_.Mutable(GetArenaForAllocation());
}
inline std::string* AutomatedAgentConfig::release_agent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.AutomatedAgentConfig.agent)
  return _impl_.agent_.Release();
}
inline void AutomatedAgentConfig::set_allocated_agent(std::string* agent) {
  if (agent != nullptr) {
    
  } else {
    
  }
  _impl_.agent_.SetAllocated(agent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.agent_.IsDefault()) {
    _impl_.agent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.AutomatedAgentConfig.agent)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionTriggerSettings

// bool no_smalltalk = 1;
inline void HumanAgentAssistantConfig_SuggestionTriggerSettings::clear_no_smalltalk() {
  _impl_.no_smalltalk_ = false;
}
inline bool HumanAgentAssistantConfig_SuggestionTriggerSettings::_internal_no_smalltalk() const {
  return _impl_.no_smalltalk_;
}
inline bool HumanAgentAssistantConfig_SuggestionTriggerSettings::no_smalltalk() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings.no_smalltalk)
  return _internal_no_smalltalk();
}
inline void HumanAgentAssistantConfig_SuggestionTriggerSettings::_internal_set_no_smalltalk(bool value) {
  
  _impl_.no_smalltalk_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionTriggerSettings::set_no_smalltalk(bool value) {
  _internal_set_no_smalltalk(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings.no_smalltalk)
}

// bool only_end_user = 2;
inline void HumanAgentAssistantConfig_SuggestionTriggerSettings::clear_only_end_user() {
  _impl_.only_end_user_ = false;
}
inline bool HumanAgentAssistantConfig_SuggestionTriggerSettings::_internal_only_end_user() const {
  return _impl_.only_end_user_;
}
inline bool HumanAgentAssistantConfig_SuggestionTriggerSettings::only_end_user() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings.only_end_user)
  return _internal_only_end_user();
}
inline void HumanAgentAssistantConfig_SuggestionTriggerSettings::_internal_set_only_end_user(bool value) {
  
  _impl_.only_end_user_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionTriggerSettings::set_only_end_user(bool value) {
  _internal_set_only_end_user(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings.only_end_user)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionFeatureConfig

// .google.cloud.dialogflow.v2.SuggestionFeature suggestion_feature = 5;
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_has_suggestion_feature() const {
  return this != internal_default_instance() && _impl_.suggestion_feature_ != nullptr;
}
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::has_suggestion_feature() const {
  return _internal_has_suggestion_feature();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::clear_suggestion_feature() {
  if (GetArenaForAllocation() == nullptr && _impl_.suggestion_feature_ != nullptr) {
    delete _impl_.suggestion_feature_;
  }
  _impl_.suggestion_feature_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::SuggestionFeature& HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_suggestion_feature() const {
  const ::google::cloud::dialogflow::v2::SuggestionFeature* p = _impl_.suggestion_feature_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::SuggestionFeature&>(
      ::google::cloud::dialogflow::v2::_SuggestionFeature_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::SuggestionFeature& HumanAgentAssistantConfig_SuggestionFeatureConfig::suggestion_feature() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_feature)
  return _internal_suggestion_feature();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_set_allocated_suggestion_feature(
    ::google::cloud::dialogflow::v2::SuggestionFeature* suggestion_feature) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.suggestion_feature_);
  }
  _impl_.suggestion_feature_ = suggestion_feature;
  if (suggestion_feature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_feature)
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature* HumanAgentAssistantConfig_SuggestionFeatureConfig::release_suggestion_feature() {
  
  ::google::cloud::dialogflow::v2::SuggestionFeature* temp = _impl_.suggestion_feature_;
  _impl_.suggestion_feature_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature* HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_release_suggestion_feature() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_feature)
  
  ::google::cloud::dialogflow::v2::SuggestionFeature* temp = _impl_.suggestion_feature_;
  _impl_.suggestion_feature_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature* HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_mutable_suggestion_feature() {
  
  if (_impl_.suggestion_feature_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::SuggestionFeature>(GetArenaForAllocation());
    _impl_.suggestion_feature_ = p;
  }
  return _impl_.suggestion_feature_;
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature* HumanAgentAssistantConfig_SuggestionFeatureConfig::mutable_suggestion_feature() {
  ::google::cloud::dialogflow::v2::SuggestionFeature* _msg = _internal_mutable_suggestion_feature();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_feature)
  return _msg;
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::set_allocated_suggestion_feature(::google::cloud::dialogflow::v2::SuggestionFeature* suggestion_feature) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.suggestion_feature_;
  }
  if (suggestion_feature) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(suggestion_feature);
    if (message_arena != submessage_arena) {
      suggestion_feature = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, suggestion_feature, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.suggestion_feature_ = suggestion_feature;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_feature)
}

// bool enable_event_based_suggestion = 3;
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::clear_enable_event_based_suggestion() {
  _impl_.enable_event_based_suggestion_ = false;
}
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_enable_event_based_suggestion() const {
  return _impl_.enable_event_based_suggestion_;
}
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::enable_event_based_suggestion() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.enable_event_based_suggestion)
  return _internal_enable_event_based_suggestion();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_set_enable_event_based_suggestion(bool value) {
  
  _impl_.enable_event_based_suggestion_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::set_enable_event_based_suggestion(bool value) {
  _internal_set_enable_event_based_suggestion(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.enable_event_based_suggestion)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionTriggerSettings suggestion_trigger_settings = 10;
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_has_suggestion_trigger_settings() const {
  return this != internal_default_instance() && _impl_.suggestion_trigger_settings_ != nullptr;
}
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::has_suggestion_trigger_settings() const {
  return _internal_has_suggestion_trigger_settings();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::clear_suggestion_trigger_settings() {
  if (GetArenaForAllocation() == nullptr && _impl_.suggestion_trigger_settings_ != nullptr) {
    delete _impl_.suggestion_trigger_settings_;
  }
  _impl_.suggestion_trigger_settings_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings& HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_suggestion_trigger_settings() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* p = _impl_.suggestion_trigger_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionTriggerSettings_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings& HumanAgentAssistantConfig_SuggestionFeatureConfig::suggestion_trigger_settings() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_trigger_settings)
  return _internal_suggestion_trigger_settings();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_set_allocated_suggestion_trigger_settings(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* suggestion_trigger_settings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.suggestion_trigger_settings_);
  }
  _impl_.suggestion_trigger_settings_ = suggestion_trigger_settings;
  if (suggestion_trigger_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_trigger_settings)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* HumanAgentAssistantConfig_SuggestionFeatureConfig::release_suggestion_trigger_settings() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* temp = _impl_.suggestion_trigger_settings_;
  _impl_.suggestion_trigger_settings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_release_suggestion_trigger_settings() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_trigger_settings)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* temp = _impl_.suggestion_trigger_settings_;
  _impl_.suggestion_trigger_settings_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_mutable_suggestion_trigger_settings() {
  
  if (_impl_.suggestion_trigger_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings>(GetArenaForAllocation());
    _impl_.suggestion_trigger_settings_ = p;
  }
  return _impl_.suggestion_trigger_settings_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* HumanAgentAssistantConfig_SuggestionFeatureConfig::mutable_suggestion_trigger_settings() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* _msg = _internal_mutable_suggestion_trigger_settings();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_trigger_settings)
  return _msg;
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::set_allocated_suggestion_trigger_settings(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionTriggerSettings* suggestion_trigger_settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.suggestion_trigger_settings_;
  }
  if (suggestion_trigger_settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(suggestion_trigger_settings);
    if (message_arena != submessage_arena) {
      suggestion_trigger_settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, suggestion_trigger_settings, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.suggestion_trigger_settings_ = suggestion_trigger_settings;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.suggestion_trigger_settings)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig query_config = 6;
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_has_query_config() const {
  return this != internal_default_instance() && _impl_.query_config_ != nullptr;
}
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::has_query_config() const {
  return _internal_has_query_config();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::clear_query_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.query_config_ != nullptr) {
    delete _impl_.query_config_;
  }
  _impl_.query_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig& HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_query_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* p = _impl_.query_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionQueryConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig& HumanAgentAssistantConfig_SuggestionFeatureConfig::query_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.query_config)
  return _internal_query_config();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_set_allocated_query_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* query_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.query_config_);
  }
  _impl_.query_config_ = query_config;
  if (query_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.query_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::release_query_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* temp = _impl_.query_config_;
  _impl_.query_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_release_query_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.query_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* temp = _impl_.query_config_;
  _impl_.query_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_mutable_query_config() {
  
  if (_impl_.query_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig>(GetArenaForAllocation());
    _impl_.query_config_ = p;
  }
  return _impl_.query_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::mutable_query_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* _msg = _internal_mutable_query_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.query_config)
  return _msg;
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::set_allocated_query_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig* query_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.query_config_;
  }
  if (query_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(query_config);
    if (message_arena != submessage_arena) {
      query_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, query_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.query_config_ = query_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.query_config)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig conversation_model_config = 7;
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_has_conversation_model_config() const {
  return this != internal_default_instance() && _impl_.conversation_model_config_ != nullptr;
}
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::has_conversation_model_config() const {
  return _internal_has_conversation_model_config();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::clear_conversation_model_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.conversation_model_config_ != nullptr) {
    delete _impl_.conversation_model_config_;
  }
  _impl_.conversation_model_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig& HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_conversation_model_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* p = _impl_.conversation_model_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_ConversationModelConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig& HumanAgentAssistantConfig_SuggestionFeatureConfig::conversation_model_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_model_config)
  return _internal_conversation_model_config();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_set_allocated_conversation_model_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* conversation_model_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conversation_model_config_);
  }
  _impl_.conversation_model_config_ = conversation_model_config;
  if (conversation_model_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_model_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::release_conversation_model_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* temp = _impl_.conversation_model_config_;
  _impl_.conversation_model_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_release_conversation_model_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_model_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* temp = _impl_.conversation_model_config_;
  _impl_.conversation_model_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_mutable_conversation_model_config() {
  
  if (_impl_.conversation_model_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig>(GetArenaForAllocation());
    _impl_.conversation_model_config_ = p;
  }
  return _impl_.conversation_model_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::mutable_conversation_model_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* _msg = _internal_mutable_conversation_model_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_model_config)
  return _msg;
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::set_allocated_conversation_model_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationModelConfig* conversation_model_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.conversation_model_config_;
  }
  if (conversation_model_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(conversation_model_config);
    if (message_arena != submessage_arena) {
      conversation_model_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conversation_model_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.conversation_model_config_ = conversation_model_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_model_config)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationProcessConfig conversation_process_config = 8;
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_has_conversation_process_config() const {
  return this != internal_default_instance() && _impl_.conversation_process_config_ != nullptr;
}
inline bool HumanAgentAssistantConfig_SuggestionFeatureConfig::has_conversation_process_config() const {
  return _internal_has_conversation_process_config();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::clear_conversation_process_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.conversation_process_config_ != nullptr) {
    delete _impl_.conversation_process_config_;
  }
  _impl_.conversation_process_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig& HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_conversation_process_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* p = _impl_.conversation_process_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_ConversationProcessConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig& HumanAgentAssistantConfig_SuggestionFeatureConfig::conversation_process_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_process_config)
  return _internal_conversation_process_config();
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_set_allocated_conversation_process_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* conversation_process_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conversation_process_config_);
  }
  _impl_.conversation_process_config_ = conversation_process_config;
  if (conversation_process_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_process_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::release_conversation_process_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* temp = _impl_.conversation_process_config_;
  _impl_.conversation_process_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::unsafe_arena_release_conversation_process_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_process_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* temp = _impl_.conversation_process_config_;
  _impl_.conversation_process_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::_internal_mutable_conversation_process_config() {
  
  if (_impl_.conversation_process_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig>(GetArenaForAllocation());
    _impl_.conversation_process_config_ = p;
  }
  return _impl_.conversation_process_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* HumanAgentAssistantConfig_SuggestionFeatureConfig::mutable_conversation_process_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* _msg = _internal_mutable_conversation_process_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_process_config)
  return _msg;
}
inline void HumanAgentAssistantConfig_SuggestionFeatureConfig::set_allocated_conversation_process_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_ConversationProcessConfig* conversation_process_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.conversation_process_config_;
  }
  if (conversation_process_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(conversation_process_config);
    if (message_arena != submessage_arena) {
      conversation_process_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conversation_process_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.conversation_process_config_ = conversation_process_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig.conversation_process_config)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionConfig

// repeated .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig feature_configs = 2;
inline int HumanAgentAssistantConfig_SuggestionConfig::_internal_feature_configs_size() const {
  return _impl_.feature_configs_.size();
}
inline int HumanAgentAssistantConfig_SuggestionConfig::feature_configs_size() const {
  return _internal_feature_configs_size();
}
inline void HumanAgentAssistantConfig_SuggestionConfig::clear_feature_configs() {
  _impl_.feature_configs_.Clear();
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* HumanAgentAssistantConfig_SuggestionConfig::mutable_feature_configs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.feature_configs)
  return _impl_.feature_configs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig >*
HumanAgentAssistantConfig_SuggestionConfig::mutable_feature_configs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.feature_configs)
  return &_impl_.feature_configs_;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& HumanAgentAssistantConfig_SuggestionConfig::_internal_feature_configs(int index) const {
  return _impl_.feature_configs_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& HumanAgentAssistantConfig_SuggestionConfig::feature_configs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.feature_configs)
  return _internal_feature_configs(index);
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* HumanAgentAssistantConfig_SuggestionConfig::_internal_add_feature_configs() {
  return _impl_.feature_configs_.Add();
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* HumanAgentAssistantConfig_SuggestionConfig::add_feature_configs() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* _add = _internal_add_feature_configs();
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.feature_configs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig >&
HumanAgentAssistantConfig_SuggestionConfig::feature_configs() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.feature_configs)
  return _impl_.feature_configs_;
}

// bool group_suggestion_responses = 3;
inline void HumanAgentAssistantConfig_SuggestionConfig::clear_group_suggestion_responses() {
  _impl_.group_suggestion_responses_ = false;
}
inline bool HumanAgentAssistantConfig_SuggestionConfig::_internal_group_suggestion_responses() const {
  return _impl_.group_suggestion_responses_;
}
inline bool HumanAgentAssistantConfig_SuggestionConfig::group_suggestion_responses() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses)
  return _internal_group_suggestion_responses();
}
inline void HumanAgentAssistantConfig_SuggestionConfig::_internal_set_group_suggestion_responses(bool value) {
  
  _impl_.group_suggestion_responses_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionConfig::set_group_suggestion_responses(bool value) {
  _internal_set_group_suggestion_responses(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource

// repeated string knowledge_bases = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline int HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::_internal_knowledge_bases_size() const {
  return _impl_.knowledge_bases_.size();
}
inline int HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::knowledge_bases_size() const {
  return _internal_knowledge_bases_size();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::clear_knowledge_bases() {
  _impl_.knowledge_bases_.Clear();
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::add_knowledge_bases() {
  std::string* _s = _internal_add_knowledge_bases();
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
  return _s;
}
inline const std::string& HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::_internal_knowledge_bases(int index) const {
  return _impl_.knowledge_bases_.Get(index);
}
inline const std::string& HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::knowledge_bases(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
  return _internal_knowledge_bases(index);
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::mutable_knowledge_bases(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
  return _impl_.knowledge_bases_.Mutable(index);
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::set_knowledge_bases(int index, const std::string& value) {
  _impl_.knowledge_bases_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::set_knowledge_bases(int index, std::string&& value) {
  _impl_.knowledge_bases_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::set_knowledge_bases(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.knowledge_bases_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::set_knowledge_bases(int index, const char* value, size_t size) {
  _impl_.knowledge_bases_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::_internal_add_knowledge_bases() {
  return _impl_.knowledge_bases_.Add();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::add_knowledge_bases(const std::string& value) {
  _impl_.knowledge_bases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::add_knowledge_bases(std::string&& value) {
  _impl_.knowledge_bases_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::add_knowledge_bases(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.knowledge_bases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::add_knowledge_bases(const char* value, size_t size) {
  _impl_.knowledge_bases_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::knowledge_bases() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
  return _impl_.knowledge_bases_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource::mutable_knowledge_bases() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource.knowledge_bases)
  return &_impl_.knowledge_bases_;
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource

// repeated string documents = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline int HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::_internal_documents_size() const {
  return _impl_.documents_.size();
}
inline int HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::documents_size() const {
  return _internal_documents_size();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::clear_documents() {
  _impl_.documents_.Clear();
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::add_documents() {
  std::string* _s = _internal_add_documents();
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
  return _s;
}
inline const std::string& HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::_internal_documents(int index) const {
  return _impl_.documents_.Get(index);
}
inline const std::string& HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::documents(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
  return _internal_documents(index);
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::mutable_documents(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
  return _impl_.documents_.Mutable(index);
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::set_documents(int index, const std::string& value) {
  _impl_.documents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::set_documents(int index, std::string&& value) {
  _impl_.documents_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::set_documents(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.documents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::set_documents(int index, const char* value, size_t size) {
  _impl_.documents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::_internal_add_documents() {
  return _impl_.documents_.Add();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::add_documents(const std::string& value) {
  _impl_.documents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::add_documents(std::string&& value) {
  _impl_.documents_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::add_documents(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.documents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::add_documents(const char* value, size_t size) {
  _impl_.documents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::documents() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
  return _impl_.documents_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource::mutable_documents() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource.documents)
  return &_impl_.documents_;
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource

// string agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::clear_agent() {
  _impl_.agent_.ClearToEmpty();
}
inline const std::string& HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::agent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.agent)
  return _internal_agent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::set_agent(ArgT0&& arg0, ArgT... args) {
 
 _impl_.agent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.agent)
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::mutable_agent() {
  std::string* _s = _internal_mutable_agent();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.agent)
  return _s;
}
inline const std::string& HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::_internal_agent() const {
  return _impl_.agent_.Get();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::_internal_set_agent(const std::string& value) {
  
  _impl_.agent_.Set(value, GetArenaForAllocation());
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::_internal_mutable_agent() {
  
  return _impl_.agent_.Mutable(GetArenaForAllocation());
}
inline std::string* HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::release_agent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.agent)
  return _impl_.agent_.Release();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource::set_allocated_agent(std::string* agent) {
  if (agent != nullptr) {
    
  } else {
    
  }
  _impl_.agent_.SetAllocated(agent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.agent_.IsDefault()) {
    _impl_.agent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource.agent)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings

// bool drop_handoff_messages = 1;
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::clear_drop_handoff_messages() {
  _impl_.drop_handoff_messages_ = false;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::_internal_drop_handoff_messages() const {
  return _impl_.drop_handoff_messages_;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::drop_handoff_messages() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings.drop_handoff_messages)
  return _internal_drop_handoff_messages();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::_internal_set_drop_handoff_messages(bool value) {
  
  _impl_.drop_handoff_messages_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::set_drop_handoff_messages(bool value) {
  _internal_set_drop_handoff_messages(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings.drop_handoff_messages)
}

// bool drop_virtual_agent_messages = 2;
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::clear_drop_virtual_agent_messages() {
  _impl_.drop_virtual_agent_messages_ = false;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::_internal_drop_virtual_agent_messages() const {
  return _impl_.drop_virtual_agent_messages_;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::drop_virtual_agent_messages() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings.drop_virtual_agent_messages)
  return _internal_drop_virtual_agent_messages();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::_internal_set_drop_virtual_agent_messages(bool value) {
  
  _impl_.drop_virtual_agent_messages_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::set_drop_virtual_agent_messages(bool value) {
  _internal_set_drop_virtual_agent_messages(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings.drop_virtual_agent_messages)
}

// bool drop_ivr_messages = 3;
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::clear_drop_ivr_messages() {
  _impl_.drop_ivr_messages_ = false;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::_internal_drop_ivr_messages() const {
  return _impl_.drop_ivr_messages_;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::drop_ivr_messages() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings.drop_ivr_messages)
  return _internal_drop_ivr_messages();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::_internal_set_drop_ivr_messages(bool value) {
  
  _impl_.drop_ivr_messages_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings::set_drop_ivr_messages(bool value) {
  _internal_set_drop_ivr_messages(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings.drop_ivr_messages)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_SuggestionQueryConfig

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.KnowledgeBaseQuerySource knowledge_base_query_source = 1;
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_has_knowledge_base_query_source() const {
  return query_source_case() == kKnowledgeBaseQuerySource;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::has_knowledge_base_query_source() const {
  return _internal_has_knowledge_base_query_source();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::set_has_knowledge_base_query_source() {
  _impl_._oneof_case_[0] = kKnowledgeBaseQuerySource;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::clear_knowledge_base_query_source() {
  if (_internal_has_knowledge_base_query_source()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.query_source_.knowledge_base_query_source_;
    }
    clear_has_query_source();
  }
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::release_knowledge_base_query_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.knowledge_base_query_source)
  if (_internal_has_knowledge_base_query_source()) {
    clear_has_query_source();
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* temp = _impl_.query_source_.knowledge_base_query_source_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.query_source_.knowledge_base_query_source_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_knowledge_base_query_source() const {
  return _internal_has_knowledge_base_query_source()
      ? *_impl_.query_source_.knowledge_base_query_source_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource&>(::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource& HumanAgentAssistantConfig_SuggestionQueryConfig::knowledge_base_query_source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.knowledge_base_query_source)
  return _internal_knowledge_base_query_source();
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_release_knowledge_base_query_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.knowledge_base_query_source)
  if (_internal_has_knowledge_base_query_source()) {
    clear_has_query_source();
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* temp = _impl_.query_source_.knowledge_base_query_source_;
    _impl_.query_source_.knowledge_base_query_source_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_set_allocated_knowledge_base_query_source(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* knowledge_base_query_source) {
  clear_query_source();
  if (knowledge_base_query_source) {
    set_has_knowledge_base_query_source();
    _impl_.query_source_.knowledge_base_query_source_ = knowledge_base_query_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.knowledge_base_query_source)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_mutable_knowledge_base_query_source() {
  if (!_internal_has_knowledge_base_query_source()) {
    clear_query_source();
    set_has_knowledge_base_query_source();
    _impl_.query_source_.knowledge_base_query_source_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource >(GetArenaForAllocation());
  }
  return _impl_.query_source_.knowledge_base_query_source_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::mutable_knowledge_base_query_source() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_KnowledgeBaseQuerySource* _msg = _internal_mutable_knowledge_base_query_source();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.knowledge_base_query_source)
  return _msg;
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DocumentQuerySource document_query_source = 2;
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_has_document_query_source() const {
  return query_source_case() == kDocumentQuerySource;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::has_document_query_source() const {
  return _internal_has_document_query_source();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::set_has_document_query_source() {
  _impl_._oneof_case_[0] = kDocumentQuerySource;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::clear_document_query_source() {
  if (_internal_has_document_query_source()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.query_source_.document_query_source_;
    }
    clear_has_query_source();
  }
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::release_document_query_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.document_query_source)
  if (_internal_has_document_query_source()) {
    clear_has_query_source();
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* temp = _impl_.query_source_.document_query_source_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.query_source_.document_query_source_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_document_query_source() const {
  return _internal_has_document_query_source()
      ? *_impl_.query_source_.document_query_source_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource&>(::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource& HumanAgentAssistantConfig_SuggestionQueryConfig::document_query_source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.document_query_source)
  return _internal_document_query_source();
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_release_document_query_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.document_query_source)
  if (_internal_has_document_query_source()) {
    clear_has_query_source();
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* temp = _impl_.query_source_.document_query_source_;
    _impl_.query_source_.document_query_source_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_set_allocated_document_query_source(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* document_query_source) {
  clear_query_source();
  if (document_query_source) {
    set_has_document_query_source();
    _impl_.query_source_.document_query_source_ = document_query_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.document_query_source)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_mutable_document_query_source() {
  if (!_internal_has_document_query_source()) {
    clear_query_source();
    set_has_document_query_source();
    _impl_.query_source_.document_query_source_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource >(GetArenaForAllocation());
  }
  return _impl_.query_source_.document_query_source_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::mutable_document_query_source() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DocumentQuerySource* _msg = _internal_mutable_document_query_source();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.document_query_source)
  return _msg;
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.DialogflowQuerySource dialogflow_query_source = 3;
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_has_dialogflow_query_source() const {
  return query_source_case() == kDialogflowQuerySource;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::has_dialogflow_query_source() const {
  return _internal_has_dialogflow_query_source();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::set_has_dialogflow_query_source() {
  _impl_._oneof_case_[0] = kDialogflowQuerySource;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::clear_dialogflow_query_source() {
  if (_internal_has_dialogflow_query_source()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.query_source_.dialogflow_query_source_;
    }
    clear_has_query_source();
  }
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::release_dialogflow_query_source() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.dialogflow_query_source)
  if (_internal_has_dialogflow_query_source()) {
    clear_has_query_source();
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* temp = _impl_.query_source_.dialogflow_query_source_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.query_source_.dialogflow_query_source_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_dialogflow_query_source() const {
  return _internal_has_dialogflow_query_source()
      ? *_impl_.query_source_.dialogflow_query_source_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource&>(::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource& HumanAgentAssistantConfig_SuggestionQueryConfig::dialogflow_query_source() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.dialogflow_query_source)
  return _internal_dialogflow_query_source();
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_release_dialogflow_query_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.dialogflow_query_source)
  if (_internal_has_dialogflow_query_source()) {
    clear_has_query_source();
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* temp = _impl_.query_source_.dialogflow_query_source_;
    _impl_.query_source_.dialogflow_query_source_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_set_allocated_dialogflow_query_source(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* dialogflow_query_source) {
  clear_query_source();
  if (dialogflow_query_source) {
    set_has_dialogflow_query_source();
    _impl_.query_source_.dialogflow_query_source_ = dialogflow_query_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.dialogflow_query_source)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_mutable_dialogflow_query_source() {
  if (!_internal_has_dialogflow_query_source()) {
    clear_query_source();
    set_has_dialogflow_query_source();
    _impl_.query_source_.dialogflow_query_source_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource >(GetArenaForAllocation());
  }
  return _impl_.query_source_.dialogflow_query_source_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* HumanAgentAssistantConfig_SuggestionQueryConfig::mutable_dialogflow_query_source() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_DialogflowQuerySource* _msg = _internal_mutable_dialogflow_query_source();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.dialogflow_query_source)
  return _msg;
}

// int32 max_results = 4;
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::clear_max_results() {
  _impl_.max_results_ = 0;
}
inline int32_t HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_max_results() const {
  return _impl_.max_results_;
}
inline int32_t HumanAgentAssistantConfig_SuggestionQueryConfig::max_results() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.max_results)
  return _internal_max_results();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_set_max_results(int32_t value) {
  
  _impl_.max_results_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::set_max_results(int32_t value) {
  _internal_set_max_results(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.max_results)
}

// float confidence_threshold = 5;
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::clear_confidence_threshold() {
  _impl_.confidence_threshold_ = 0;
}
inline float HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_confidence_threshold() const {
  return _impl_.confidence_threshold_;
}
inline float HumanAgentAssistantConfig_SuggestionQueryConfig::confidence_threshold() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.confidence_threshold)
  return _internal_confidence_threshold();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_set_confidence_threshold(float value) {
  
  _impl_.confidence_threshold_ = value;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::set_confidence_threshold(float value) {
  _internal_set_confidence_threshold(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.confidence_threshold)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.ContextFilterSettings context_filter_settings = 7;
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_has_context_filter_settings() const {
  return this != internal_default_instance() && _impl_.context_filter_settings_ != nullptr;
}
inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::has_context_filter_settings() const {
  return _internal_has_context_filter_settings();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::clear_context_filter_settings() {
  if (GetArenaForAllocation() == nullptr && _impl_.context_filter_settings_ != nullptr) {
    delete _impl_.context_filter_settings_;
  }
  _impl_.context_filter_settings_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_context_filter_settings() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* p = _impl_.context_filter_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings& HumanAgentAssistantConfig_SuggestionQueryConfig::context_filter_settings() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.context_filter_settings)
  return _internal_context_filter_settings();
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_set_allocated_context_filter_settings(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* context_filter_settings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_filter_settings_);
  }
  _impl_.context_filter_settings_ = context_filter_settings;
  if (context_filter_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.context_filter_settings)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* HumanAgentAssistantConfig_SuggestionQueryConfig::release_context_filter_settings() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* temp = _impl_.context_filter_settings_;
  _impl_.context_filter_settings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* HumanAgentAssistantConfig_SuggestionQueryConfig::unsafe_arena_release_context_filter_settings() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.context_filter_settings)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* temp = _impl_.context_filter_settings_;
  _impl_.context_filter_settings_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* HumanAgentAssistantConfig_SuggestionQueryConfig::_internal_mutable_context_filter_settings() {
  
  if (_impl_.context_filter_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings>(GetArenaForAllocation());
    _impl_.context_filter_settings_ = p;
  }
  return _impl_.context_filter_settings_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* HumanAgentAssistantConfig_SuggestionQueryConfig::mutable_context_filter_settings() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* _msg = _internal_mutable_context_filter_settings();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.context_filter_settings)
  return _msg;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::set_allocated_context_filter_settings(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionQueryConfig_ContextFilterSettings* context_filter_settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.context_filter_settings_;
  }
  if (context_filter_settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(context_filter_settings);
    if (message_arena != submessage_arena) {
      context_filter_settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context_filter_settings, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.context_filter_settings_ = context_filter_settings;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionQueryConfig.context_filter_settings)
}

inline bool HumanAgentAssistantConfig_SuggestionQueryConfig::has_query_source() const {
  return query_source_case() != QUERY_SOURCE_NOT_SET;
}
inline void HumanAgentAssistantConfig_SuggestionQueryConfig::clear_has_query_source() {
  _impl_._oneof_case_[0] = QUERY_SOURCE_NOT_SET;
}
inline HumanAgentAssistantConfig_SuggestionQueryConfig::QuerySourceCase HumanAgentAssistantConfig_SuggestionQueryConfig::query_source_case() const {
  return HumanAgentAssistantConfig_SuggestionQueryConfig::QuerySourceCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// HumanAgentAssistantConfig_ConversationModelConfig

// string model = 1 [(.google.api.resource_reference) = {
inline void HumanAgentAssistantConfig_ConversationModelConfig::clear_model() {
  _impl_.model_.ClearToEmpty();
}
inline const std::string& HumanAgentAssistantConfig_ConversationModelConfig::model() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig.model)
  return _internal_model();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HumanAgentAssistantConfig_ConversationModelConfig::set_model(ArgT0&& arg0, ArgT... args) {
 
 _impl_.model_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig.model)
}
inline std::string* HumanAgentAssistantConfig_ConversationModelConfig::mutable_model() {
  std::string* _s = _internal_mutable_model();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig.model)
  return _s;
}
inline const std::string& HumanAgentAssistantConfig_ConversationModelConfig::_internal_model() const {
  return _impl_.model_.Get();
}
inline void HumanAgentAssistantConfig_ConversationModelConfig::_internal_set_model(const std::string& value) {
  
  _impl_.model_.Set(value, GetArenaForAllocation());
}
inline std::string* HumanAgentAssistantConfig_ConversationModelConfig::_internal_mutable_model() {
  
  return _impl_.model_.Mutable(GetArenaForAllocation());
}
inline std::string* HumanAgentAssistantConfig_ConversationModelConfig::release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig.model)
  return _impl_.model_.Release();
}
inline void HumanAgentAssistantConfig_ConversationModelConfig::set_allocated_model(std::string* model) {
  if (model != nullptr) {
    
  } else {
    
  }
  _impl_.model_.SetAllocated(model, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.model_.IsDefault()) {
    _impl_.model_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationModelConfig.model)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_ConversationProcessConfig

// int32 recent_sentences_count = 2;
inline void HumanAgentAssistantConfig_ConversationProcessConfig::clear_recent_sentences_count() {
  _impl_.recent_sentences_count_ = 0;
}
inline int32_t HumanAgentAssistantConfig_ConversationProcessConfig::_internal_recent_sentences_count() const {
  return _impl_.recent_sentences_count_;
}
inline int32_t HumanAgentAssistantConfig_ConversationProcessConfig::recent_sentences_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationProcessConfig.recent_sentences_count)
  return _internal_recent_sentences_count();
}
inline void HumanAgentAssistantConfig_ConversationProcessConfig::_internal_set_recent_sentences_count(int32_t value) {
  
  _impl_.recent_sentences_count_ = value;
}
inline void HumanAgentAssistantConfig_ConversationProcessConfig::set_recent_sentences_count(int32_t value) {
  _internal_set_recent_sentences_count(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.ConversationProcessConfig.recent_sentences_count)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig_MessageAnalysisConfig

// bool enable_entity_extraction = 2;
inline void HumanAgentAssistantConfig_MessageAnalysisConfig::clear_enable_entity_extraction() {
  _impl_.enable_entity_extraction_ = false;
}
inline bool HumanAgentAssistantConfig_MessageAnalysisConfig::_internal_enable_entity_extraction() const {
  return _impl_.enable_entity_extraction_;
}
inline bool HumanAgentAssistantConfig_MessageAnalysisConfig::enable_entity_extraction() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig.enable_entity_extraction)
  return _internal_enable_entity_extraction();
}
inline void HumanAgentAssistantConfig_MessageAnalysisConfig::_internal_set_enable_entity_extraction(bool value) {
  
  _impl_.enable_entity_extraction_ = value;
}
inline void HumanAgentAssistantConfig_MessageAnalysisConfig::set_enable_entity_extraction(bool value) {
  _internal_set_enable_entity_extraction(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig.enable_entity_extraction)
}

// bool enable_sentiment_analysis = 3;
inline void HumanAgentAssistantConfig_MessageAnalysisConfig::clear_enable_sentiment_analysis() {
  _impl_.enable_sentiment_analysis_ = false;
}
inline bool HumanAgentAssistantConfig_MessageAnalysisConfig::_internal_enable_sentiment_analysis() const {
  return _impl_.enable_sentiment_analysis_;
}
inline bool HumanAgentAssistantConfig_MessageAnalysisConfig::enable_sentiment_analysis() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig.enable_sentiment_analysis)
  return _internal_enable_sentiment_analysis();
}
inline void HumanAgentAssistantConfig_MessageAnalysisConfig::_internal_set_enable_sentiment_analysis(bool value) {
  
  _impl_.enable_sentiment_analysis_ = value;
}
inline void HumanAgentAssistantConfig_MessageAnalysisConfig::set_enable_sentiment_analysis(bool value) {
  _internal_set_enable_sentiment_analysis(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig.enable_sentiment_analysis)
}

// -------------------------------------------------------------------

// HumanAgentAssistantConfig

// .google.cloud.dialogflow.v2.NotificationConfig notification_config = 2;
inline bool HumanAgentAssistantConfig::_internal_has_notification_config() const {
  return this != internal_default_instance() && _impl_.notification_config_ != nullptr;
}
inline bool HumanAgentAssistantConfig::has_notification_config() const {
  return _internal_has_notification_config();
}
inline void HumanAgentAssistantConfig::clear_notification_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.notification_config_ != nullptr) {
    delete _impl_.notification_config_;
  }
  _impl_.notification_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::NotificationConfig& HumanAgentAssistantConfig::_internal_notification_config() const {
  const ::google::cloud::dialogflow::v2::NotificationConfig* p = _impl_.notification_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::NotificationConfig&>(
      ::google::cloud::dialogflow::v2::_NotificationConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::NotificationConfig& HumanAgentAssistantConfig::notification_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.notification_config)
  return _internal_notification_config();
}
inline void HumanAgentAssistantConfig::unsafe_arena_set_allocated_notification_config(
    ::google::cloud::dialogflow::v2::NotificationConfig* notification_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.notification_config_);
  }
  _impl_.notification_config_ = notification_config;
  if (notification_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.notification_config)
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* HumanAgentAssistantConfig::release_notification_config() {
  
  ::google::cloud::dialogflow::v2::NotificationConfig* temp = _impl_.notification_config_;
  _impl_.notification_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* HumanAgentAssistantConfig::unsafe_arena_release_notification_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.notification_config)
  
  ::google::cloud::dialogflow::v2::NotificationConfig* temp = _impl_.notification_config_;
  _impl_.notification_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* HumanAgentAssistantConfig::_internal_mutable_notification_config() {
  
  if (_impl_.notification_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::NotificationConfig>(GetArenaForAllocation());
    _impl_.notification_config_ = p;
  }
  return _impl_.notification_config_;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig* HumanAgentAssistantConfig::mutable_notification_config() {
  ::google::cloud::dialogflow::v2::NotificationConfig* _msg = _internal_mutable_notification_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.notification_config)
  return _msg;
}
inline void HumanAgentAssistantConfig::set_allocated_notification_config(::google::cloud::dialogflow::v2::NotificationConfig* notification_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.notification_config_;
  }
  if (notification_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(notification_config);
    if (message_arena != submessage_arena) {
      notification_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notification_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.notification_config_ = notification_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.notification_config)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig human_agent_suggestion_config = 3;
inline bool HumanAgentAssistantConfig::_internal_has_human_agent_suggestion_config() const {
  return this != internal_default_instance() && _impl_.human_agent_suggestion_config_ != nullptr;
}
inline bool HumanAgentAssistantConfig::has_human_agent_suggestion_config() const {
  return _internal_has_human_agent_suggestion_config();
}
inline void HumanAgentAssistantConfig::clear_human_agent_suggestion_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.human_agent_suggestion_config_ != nullptr) {
    delete _impl_.human_agent_suggestion_config_;
  }
  _impl_.human_agent_suggestion_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& HumanAgentAssistantConfig::_internal_human_agent_suggestion_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* p = _impl_.human_agent_suggestion_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& HumanAgentAssistantConfig::human_agent_suggestion_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.human_agent_suggestion_config)
  return _internal_human_agent_suggestion_config();
}
inline void HumanAgentAssistantConfig::unsafe_arena_set_allocated_human_agent_suggestion_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* human_agent_suggestion_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.human_agent_suggestion_config_);
  }
  _impl_.human_agent_suggestion_config_ = human_agent_suggestion_config;
  if (human_agent_suggestion_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.human_agent_suggestion_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::release_human_agent_suggestion_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* temp = _impl_.human_agent_suggestion_config_;
  _impl_.human_agent_suggestion_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::unsafe_arena_release_human_agent_suggestion_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.human_agent_suggestion_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* temp = _impl_.human_agent_suggestion_config_;
  _impl_.human_agent_suggestion_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::_internal_mutable_human_agent_suggestion_config() {
  
  if (_impl_.human_agent_suggestion_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig>(GetArenaForAllocation());
    _impl_.human_agent_suggestion_config_ = p;
  }
  return _impl_.human_agent_suggestion_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::mutable_human_agent_suggestion_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* _msg = _internal_mutable_human_agent_suggestion_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.human_agent_suggestion_config)
  return _msg;
}
inline void HumanAgentAssistantConfig::set_allocated_human_agent_suggestion_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* human_agent_suggestion_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.human_agent_suggestion_config_;
  }
  if (human_agent_suggestion_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(human_agent_suggestion_config);
    if (message_arena != submessage_arena) {
      human_agent_suggestion_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, human_agent_suggestion_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.human_agent_suggestion_config_ = human_agent_suggestion_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.human_agent_suggestion_config)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig end_user_suggestion_config = 4;
inline bool HumanAgentAssistantConfig::_internal_has_end_user_suggestion_config() const {
  return this != internal_default_instance() && _impl_.end_user_suggestion_config_ != nullptr;
}
inline bool HumanAgentAssistantConfig::has_end_user_suggestion_config() const {
  return _internal_has_end_user_suggestion_config();
}
inline void HumanAgentAssistantConfig::clear_end_user_suggestion_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.end_user_suggestion_config_ != nullptr) {
    delete _impl_.end_user_suggestion_config_;
  }
  _impl_.end_user_suggestion_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& HumanAgentAssistantConfig::_internal_end_user_suggestion_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* p = _impl_.end_user_suggestion_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig& HumanAgentAssistantConfig::end_user_suggestion_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.end_user_suggestion_config)
  return _internal_end_user_suggestion_config();
}
inline void HumanAgentAssistantConfig::unsafe_arena_set_allocated_end_user_suggestion_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* end_user_suggestion_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.end_user_suggestion_config_);
  }
  _impl_.end_user_suggestion_config_ = end_user_suggestion_config;
  if (end_user_suggestion_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.end_user_suggestion_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::release_end_user_suggestion_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* temp = _impl_.end_user_suggestion_config_;
  _impl_.end_user_suggestion_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::unsafe_arena_release_end_user_suggestion_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.end_user_suggestion_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* temp = _impl_.end_user_suggestion_config_;
  _impl_.end_user_suggestion_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::_internal_mutable_end_user_suggestion_config() {
  
  if (_impl_.end_user_suggestion_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig>(GetArenaForAllocation());
    _impl_.end_user_suggestion_config_ = p;
  }
  return _impl_.end_user_suggestion_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* HumanAgentAssistantConfig::mutable_end_user_suggestion_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* _msg = _internal_mutable_end_user_suggestion_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.end_user_suggestion_config)
  return _msg;
}
inline void HumanAgentAssistantConfig::set_allocated_end_user_suggestion_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionConfig* end_user_suggestion_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.end_user_suggestion_config_;
  }
  if (end_user_suggestion_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(end_user_suggestion_config);
    if (message_arena != submessage_arena) {
      end_user_suggestion_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end_user_suggestion_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.end_user_suggestion_config_ = end_user_suggestion_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.end_user_suggestion_config)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig message_analysis_config = 5;
inline bool HumanAgentAssistantConfig::_internal_has_message_analysis_config() const {
  return this != internal_default_instance() && _impl_.message_analysis_config_ != nullptr;
}
inline bool HumanAgentAssistantConfig::has_message_analysis_config() const {
  return _internal_has_message_analysis_config();
}
inline void HumanAgentAssistantConfig::clear_message_analysis_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.message_analysis_config_ != nullptr) {
    delete _impl_.message_analysis_config_;
  }
  _impl_.message_analysis_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig& HumanAgentAssistantConfig::_internal_message_analysis_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* p = _impl_.message_analysis_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_MessageAnalysisConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig& HumanAgentAssistantConfig::message_analysis_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.message_analysis_config)
  return _internal_message_analysis_config();
}
inline void HumanAgentAssistantConfig::unsafe_arena_set_allocated_message_analysis_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* message_analysis_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.message_analysis_config_);
  }
  _impl_.message_analysis_config_ = message_analysis_config;
  if (message_analysis_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.message_analysis_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* HumanAgentAssistantConfig::release_message_analysis_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* temp = _impl_.message_analysis_config_;
  _impl_.message_analysis_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* HumanAgentAssistantConfig::unsafe_arena_release_message_analysis_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.message_analysis_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* temp = _impl_.message_analysis_config_;
  _impl_.message_analysis_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* HumanAgentAssistantConfig::_internal_mutable_message_analysis_config() {
  
  if (_impl_.message_analysis_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig>(GetArenaForAllocation());
    _impl_.message_analysis_config_ = p;
  }
  return _impl_.message_analysis_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* HumanAgentAssistantConfig::mutable_message_analysis_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* _msg = _internal_mutable_message_analysis_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.message_analysis_config)
  return _msg;
}
inline void HumanAgentAssistantConfig::set_allocated_message_analysis_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_MessageAnalysisConfig* message_analysis_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.message_analysis_config_;
  }
  if (message_analysis_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(message_analysis_config);
    if (message_arena != submessage_arena) {
      message_analysis_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message_analysis_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.message_analysis_config_ = message_analysis_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentAssistantConfig.message_analysis_config)
}

// -------------------------------------------------------------------

// HumanAgentHandoffConfig_LivePersonConfig

// string account_number = 1 [(.google.api.field_behavior) = REQUIRED];
inline void HumanAgentHandoffConfig_LivePersonConfig::clear_account_number() {
  _impl_.account_number_.ClearToEmpty();
}
inline const std::string& HumanAgentHandoffConfig_LivePersonConfig::account_number() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig.account_number)
  return _internal_account_number();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HumanAgentHandoffConfig_LivePersonConfig::set_account_number(ArgT0&& arg0, ArgT... args) {
 
 _impl_.account_number_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig.account_number)
}
inline std::string* HumanAgentHandoffConfig_LivePersonConfig::mutable_account_number() {
  std::string* _s = _internal_mutable_account_number();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig.account_number)
  return _s;
}
inline const std::string& HumanAgentHandoffConfig_LivePersonConfig::_internal_account_number() const {
  return _impl_.account_number_.Get();
}
inline void HumanAgentHandoffConfig_LivePersonConfig::_internal_set_account_number(const std::string& value) {
  
  _impl_.account_number_.Set(value, GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_LivePersonConfig::_internal_mutable_account_number() {
  
  return _impl_.account_number_.Mutable(GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_LivePersonConfig::release_account_number() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig.account_number)
  return _impl_.account_number_.Release();
}
inline void HumanAgentHandoffConfig_LivePersonConfig::set_allocated_account_number(std::string* account_number) {
  if (account_number != nullptr) {
    
  } else {
    
  }
  _impl_.account_number_.SetAllocated(account_number, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.account_number_.IsDefault()) {
    _impl_.account_number_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig.account_number)
}

// -------------------------------------------------------------------

// HumanAgentHandoffConfig_SalesforceLiveAgentConfig

// string organization_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::clear_organization_id() {
  _impl_.organization_id_.ClearToEmpty();
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::organization_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.organization_id)
  return _internal_organization_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_organization_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.organization_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.organization_id)
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::mutable_organization_id() {
  std::string* _s = _internal_mutable_organization_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.organization_id)
  return _s;
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_organization_id() const {
  return _impl_.organization_id_.Get();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_set_organization_id(const std::string& value) {
  
  _impl_.organization_id_.Set(value, GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_mutable_organization_id() {
  
  return _impl_.organization_id_.Mutable(GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::release_organization_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.organization_id)
  return _impl_.organization_id_.Release();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_allocated_organization_id(std::string* organization_id) {
  if (organization_id != nullptr) {
    
  } else {
    
  }
  _impl_.organization_id_.SetAllocated(organization_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.organization_id_.IsDefault()) {
    _impl_.organization_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.organization_id)
}

// string deployment_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::clear_deployment_id() {
  _impl_.deployment_id_.ClearToEmpty();
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::deployment_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.deployment_id)
  return _internal_deployment_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_deployment_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.deployment_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.deployment_id)
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::mutable_deployment_id() {
  std::string* _s = _internal_mutable_deployment_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.deployment_id)
  return _s;
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_deployment_id() const {
  return _impl_.deployment_id_.Get();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_set_deployment_id(const std::string& value) {
  
  _impl_.deployment_id_.Set(value, GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_mutable_deployment_id() {
  
  return _impl_.deployment_id_.Mutable(GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::release_deployment_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.deployment_id)
  return _impl_.deployment_id_.Release();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_allocated_deployment_id(std::string* deployment_id) {
  if (deployment_id != nullptr) {
    
  } else {
    
  }
  _impl_.deployment_id_.SetAllocated(deployment_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.deployment_id_.IsDefault()) {
    _impl_.deployment_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.deployment_id)
}

// string button_id = 3 [(.google.api.field_behavior) = REQUIRED];
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::clear_button_id() {
  _impl_.button_id_.ClearToEmpty();
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::button_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.button_id)
  return _internal_button_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_button_id(ArgT0&& arg0, ArgT... args) {
 
 _impl_.button_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.button_id)
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::mutable_button_id() {
  std::string* _s = _internal_mutable_button_id();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.button_id)
  return _s;
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_button_id() const {
  return _impl_.button_id_.Get();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_set_button_id(const std::string& value) {
  
  _impl_.button_id_.Set(value, GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_mutable_button_id() {
  
  return _impl_.button_id_.Mutable(GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::release_button_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.button_id)
  return _impl_.button_id_.Release();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_allocated_button_id(std::string* button_id) {
  if (button_id != nullptr) {
    
  } else {
    
  }
  _impl_.button_id_.SetAllocated(button_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.button_id_.IsDefault()) {
    _impl_.button_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.button_id)
}

// string endpoint_domain = 4 [(.google.api.field_behavior) = REQUIRED];
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::clear_endpoint_domain() {
  _impl_.endpoint_domain_.ClearToEmpty();
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::endpoint_domain() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.endpoint_domain)
  return _internal_endpoint_domain();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_endpoint_domain(ArgT0&& arg0, ArgT... args) {
 
 _impl_.endpoint_domain_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.endpoint_domain)
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::mutable_endpoint_domain() {
  std::string* _s = _internal_mutable_endpoint_domain();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.endpoint_domain)
  return _s;
}
inline const std::string& HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_endpoint_domain() const {
  return _impl_.endpoint_domain_.Get();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_set_endpoint_domain(const std::string& value) {
  
  _impl_.endpoint_domain_.Set(value, GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::_internal_mutable_endpoint_domain() {
  
  return _impl_.endpoint_domain_.Mutable(GetArenaForAllocation());
}
inline std::string* HumanAgentHandoffConfig_SalesforceLiveAgentConfig::release_endpoint_domain() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.endpoint_domain)
  return _impl_.endpoint_domain_.Release();
}
inline void HumanAgentHandoffConfig_SalesforceLiveAgentConfig::set_allocated_endpoint_domain(std::string* endpoint_domain) {
  if (endpoint_domain != nullptr) {
    
  } else {
    
  }
  _impl_.endpoint_domain_.SetAllocated(endpoint_domain, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.endpoint_domain_.IsDefault()) {
    _impl_.endpoint_domain_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig.endpoint_domain)
}

// -------------------------------------------------------------------

// HumanAgentHandoffConfig

// .google.cloud.dialogflow.v2.HumanAgentHandoffConfig.LivePersonConfig live_person_config = 1;
inline bool HumanAgentHandoffConfig::_internal_has_live_person_config() const {
  return agent_service_case() == kLivePersonConfig;
}
inline bool HumanAgentHandoffConfig::has_live_person_config() const {
  return _internal_has_live_person_config();
}
inline void HumanAgentHandoffConfig::set_has_live_person_config() {
  _impl_._oneof_case_[0] = kLivePersonConfig;
}
inline void HumanAgentHandoffConfig::clear_live_person_config() {
  if (_internal_has_live_person_config()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.agent_service_.live_person_config_;
    }
    clear_has_agent_service();
  }
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* HumanAgentHandoffConfig::release_live_person_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.live_person_config)
  if (_internal_has_live_person_config()) {
    clear_has_agent_service();
    ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* temp = _impl_.agent_service_.live_person_config_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.agent_service_.live_person_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig& HumanAgentHandoffConfig::_internal_live_person_config() const {
  return _internal_has_live_person_config()
      ? *_impl_.agent_service_.live_person_config_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig&>(::google::cloud::dialogflow::v2::_HumanAgentHandoffConfig_LivePersonConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig& HumanAgentHandoffConfig::live_person_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.live_person_config)
  return _internal_live_person_config();
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* HumanAgentHandoffConfig::unsafe_arena_release_live_person_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.live_person_config)
  if (_internal_has_live_person_config()) {
    clear_has_agent_service();
    ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* temp = _impl_.agent_service_.live_person_config_;
    _impl_.agent_service_.live_person_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HumanAgentHandoffConfig::unsafe_arena_set_allocated_live_person_config(::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* live_person_config) {
  clear_agent_service();
  if (live_person_config) {
    set_has_live_person_config();
    _impl_.agent_service_.live_person_config_ = live_person_config;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.live_person_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* HumanAgentHandoffConfig::_internal_mutable_live_person_config() {
  if (!_internal_has_live_person_config()) {
    clear_agent_service();
    set_has_live_person_config();
    _impl_.agent_service_.live_person_config_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig >(GetArenaForAllocation());
  }
  return _impl_.agent_service_.live_person_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* HumanAgentHandoffConfig::mutable_live_person_config() {
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_LivePersonConfig* _msg = _internal_mutable_live_person_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.live_person_config)
  return _msg;
}

// .google.cloud.dialogflow.v2.HumanAgentHandoffConfig.SalesforceLiveAgentConfig salesforce_live_agent_config = 2;
inline bool HumanAgentHandoffConfig::_internal_has_salesforce_live_agent_config() const {
  return agent_service_case() == kSalesforceLiveAgentConfig;
}
inline bool HumanAgentHandoffConfig::has_salesforce_live_agent_config() const {
  return _internal_has_salesforce_live_agent_config();
}
inline void HumanAgentHandoffConfig::set_has_salesforce_live_agent_config() {
  _impl_._oneof_case_[0] = kSalesforceLiveAgentConfig;
}
inline void HumanAgentHandoffConfig::clear_salesforce_live_agent_config() {
  if (_internal_has_salesforce_live_agent_config()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.agent_service_.salesforce_live_agent_config_;
    }
    clear_has_agent_service();
  }
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* HumanAgentHandoffConfig::release_salesforce_live_agent_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.salesforce_live_agent_config)
  if (_internal_has_salesforce_live_agent_config()) {
    clear_has_agent_service();
    ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* temp = _impl_.agent_service_.salesforce_live_agent_config_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.agent_service_.salesforce_live_agent_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig& HumanAgentHandoffConfig::_internal_salesforce_live_agent_config() const {
  return _internal_has_salesforce_live_agent_config()
      ? *_impl_.agent_service_.salesforce_live_agent_config_
      : reinterpret_cast< ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig&>(::google::cloud::dialogflow::v2::_HumanAgentHandoffConfig_SalesforceLiveAgentConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig& HumanAgentHandoffConfig::salesforce_live_agent_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.salesforce_live_agent_config)
  return _internal_salesforce_live_agent_config();
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* HumanAgentHandoffConfig::unsafe_arena_release_salesforce_live_agent_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.salesforce_live_agent_config)
  if (_internal_has_salesforce_live_agent_config()) {
    clear_has_agent_service();
    ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* temp = _impl_.agent_service_.salesforce_live_agent_config_;
    _impl_.agent_service_.salesforce_live_agent_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HumanAgentHandoffConfig::unsafe_arena_set_allocated_salesforce_live_agent_config(::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* salesforce_live_agent_config) {
  clear_agent_service();
  if (salesforce_live_agent_config) {
    set_has_salesforce_live_agent_config();
    _impl_.agent_service_.salesforce_live_agent_config_ = salesforce_live_agent_config;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.salesforce_live_agent_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* HumanAgentHandoffConfig::_internal_mutable_salesforce_live_agent_config() {
  if (!_internal_has_salesforce_live_agent_config()) {
    clear_agent_service();
    set_has_salesforce_live_agent_config();
    _impl_.agent_service_.salesforce_live_agent_config_ = CreateMaybeMessage< ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig >(GetArenaForAllocation());
  }
  return _impl_.agent_service_.salesforce_live_agent_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* HumanAgentHandoffConfig::mutable_salesforce_live_agent_config() {
  ::google::cloud::dialogflow::v2::HumanAgentHandoffConfig_SalesforceLiveAgentConfig* _msg = _internal_mutable_salesforce_live_agent_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.HumanAgentHandoffConfig.salesforce_live_agent_config)
  return _msg;
}

inline bool HumanAgentHandoffConfig::has_agent_service() const {
  return agent_service_case() != AGENT_SERVICE_NOT_SET;
}
inline void HumanAgentHandoffConfig::clear_has_agent_service() {
  _impl_._oneof_case_[0] = AGENT_SERVICE_NOT_SET;
}
inline HumanAgentHandoffConfig::AgentServiceCase HumanAgentHandoffConfig::agent_service_case() const {
  return HumanAgentHandoffConfig::AgentServiceCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// NotificationConfig

// string topic = 1;
inline void NotificationConfig::clear_topic() {
  _impl_.topic_.ClearToEmpty();
}
inline const std::string& NotificationConfig::topic() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.NotificationConfig.topic)
  return _internal_topic();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void NotificationConfig::set_topic(ArgT0&& arg0, ArgT... args) {
 
 _impl_.topic_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.NotificationConfig.topic)
}
inline std::string* NotificationConfig::mutable_topic() {
  std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.NotificationConfig.topic)
  return _s;
}
inline const std::string& NotificationConfig::_internal_topic() const {
  return _impl_.topic_.Get();
}
inline void NotificationConfig::_internal_set_topic(const std::string& value) {
  
  _impl_.topic_.Set(value, GetArenaForAllocation());
}
inline std::string* NotificationConfig::_internal_mutable_topic() {
  
  return _impl_.topic_.Mutable(GetArenaForAllocation());
}
inline std::string* NotificationConfig::release_topic() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.NotificationConfig.topic)
  return _impl_.topic_.Release();
}
inline void NotificationConfig::set_allocated_topic(std::string* topic) {
  if (topic != nullptr) {
    
  } else {
    
  }
  _impl_.topic_.SetAllocated(topic, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.NotificationConfig.topic)
}

// .google.cloud.dialogflow.v2.NotificationConfig.MessageFormat message_format = 2;
inline void NotificationConfig::clear_message_format() {
  _impl_.message_format_ = 0;
}
inline ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat NotificationConfig::_internal_message_format() const {
  return static_cast< ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat >(_impl_.message_format_);
}
inline ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat NotificationConfig::message_format() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.NotificationConfig.message_format)
  return _internal_message_format();
}
inline void NotificationConfig::_internal_set_message_format(::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat value) {
  
  _impl_.message_format_ = value;
}
inline void NotificationConfig::set_message_format(::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat value) {
  _internal_set_message_format(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.NotificationConfig.message_format)
}

// -------------------------------------------------------------------

// LoggingConfig

// bool enable_stackdriver_logging = 3;
inline void LoggingConfig::clear_enable_stackdriver_logging() {
  _impl_.enable_stackdriver_logging_ = false;
}
inline bool LoggingConfig::_internal_enable_stackdriver_logging() const {
  return _impl_.enable_stackdriver_logging_;
}
inline bool LoggingConfig::enable_stackdriver_logging() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.LoggingConfig.enable_stackdriver_logging)
  return _internal_enable_stackdriver_logging();
}
inline void LoggingConfig::_internal_set_enable_stackdriver_logging(bool value) {
  
  _impl_.enable_stackdriver_logging_ = value;
}
inline void LoggingConfig::set_enable_stackdriver_logging(bool value) {
  _internal_set_enable_stackdriver_logging(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.LoggingConfig.enable_stackdriver_logging)
}

// -------------------------------------------------------------------

// SuggestionFeature

// .google.cloud.dialogflow.v2.SuggestionFeature.Type type = 1;
inline void SuggestionFeature::clear_type() {
  _impl_.type_ = 0;
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type SuggestionFeature::_internal_type() const {
  return static_cast< ::google::cloud::dialogflow::v2::SuggestionFeature_Type >(_impl_.type_);
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type SuggestionFeature::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SuggestionFeature.type)
  return _internal_type();
}
inline void SuggestionFeature::_internal_set_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  
  _impl_.type_ = value;
}
inline void SuggestionFeature::set_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SuggestionFeature.type)
}

// -------------------------------------------------------------------

// SetSuggestionFeatureConfigRequest

// string conversation_profile = 1 [(.google.api.field_behavior) = REQUIRED];
inline void SetSuggestionFeatureConfigRequest::clear_conversation_profile() {
  _impl_.conversation_profile_.ClearToEmpty();
}
inline const std::string& SetSuggestionFeatureConfigRequest::conversation_profile() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.conversation_profile)
  return _internal_conversation_profile();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SetSuggestionFeatureConfigRequest::set_conversation_profile(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_profile_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.conversation_profile)
}
inline std::string* SetSuggestionFeatureConfigRequest::mutable_conversation_profile() {
  std::string* _s = _internal_mutable_conversation_profile();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.conversation_profile)
  return _s;
}
inline const std::string& SetSuggestionFeatureConfigRequest::_internal_conversation_profile() const {
  return _impl_.conversation_profile_.Get();
}
inline void SetSuggestionFeatureConfigRequest::_internal_set_conversation_profile(const std::string& value) {
  
  _impl_.conversation_profile_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSuggestionFeatureConfigRequest::_internal_mutable_conversation_profile() {
  
  return _impl_.conversation_profile_.Mutable(GetArenaForAllocation());
}
inline std::string* SetSuggestionFeatureConfigRequest::release_conversation_profile() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.conversation_profile)
  return _impl_.conversation_profile_.Release();
}
inline void SetSuggestionFeatureConfigRequest::set_allocated_conversation_profile(std::string* conversation_profile) {
  if (conversation_profile != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_profile_.SetAllocated(conversation_profile, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_profile_.IsDefault()) {
    _impl_.conversation_profile_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.conversation_profile)
}

// .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
inline void SetSuggestionFeatureConfigRequest::clear_participant_role() {
  _impl_.participant_role_ = 0;
}
inline ::google::cloud::dialogflow::v2::Participant_Role SetSuggestionFeatureConfigRequest::_internal_participant_role() const {
  return static_cast< ::google::cloud::dialogflow::v2::Participant_Role >(_impl_.participant_role_);
}
inline ::google::cloud::dialogflow::v2::Participant_Role SetSuggestionFeatureConfigRequest::participant_role() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.participant_role)
  return _internal_participant_role();
}
inline void SetSuggestionFeatureConfigRequest::_internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  
  _impl_.participant_role_ = value;
}
inline void SetSuggestionFeatureConfigRequest::set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  _internal_set_participant_role(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.participant_role)
}

// .google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionFeatureConfig suggestion_feature_config = 3 [(.google.api.field_behavior) = REQUIRED];
inline bool SetSuggestionFeatureConfigRequest::_internal_has_suggestion_feature_config() const {
  return this != internal_default_instance() && _impl_.suggestion_feature_config_ != nullptr;
}
inline bool SetSuggestionFeatureConfigRequest::has_suggestion_feature_config() const {
  return _internal_has_suggestion_feature_config();
}
inline void SetSuggestionFeatureConfigRequest::clear_suggestion_feature_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.suggestion_feature_config_ != nullptr) {
    delete _impl_.suggestion_feature_config_;
  }
  _impl_.suggestion_feature_config_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& SetSuggestionFeatureConfigRequest::_internal_suggestion_feature_config() const {
  const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* p = _impl_.suggestion_feature_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig&>(
      ::google::cloud::dialogflow::v2::_HumanAgentAssistantConfig_SuggestionFeatureConfig_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig& SetSuggestionFeatureConfigRequest::suggestion_feature_config() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.suggestion_feature_config)
  return _internal_suggestion_feature_config();
}
inline void SetSuggestionFeatureConfigRequest::unsafe_arena_set_allocated_suggestion_feature_config(
    ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* suggestion_feature_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.suggestion_feature_config_);
  }
  _impl_.suggestion_feature_config_ = suggestion_feature_config;
  if (suggestion_feature_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.suggestion_feature_config)
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* SetSuggestionFeatureConfigRequest::release_suggestion_feature_config() {
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* temp = _impl_.suggestion_feature_config_;
  _impl_.suggestion_feature_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* SetSuggestionFeatureConfigRequest::unsafe_arena_release_suggestion_feature_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.suggestion_feature_config)
  
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* temp = _impl_.suggestion_feature_config_;
  _impl_.suggestion_feature_config_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* SetSuggestionFeatureConfigRequest::_internal_mutable_suggestion_feature_config() {
  
  if (_impl_.suggestion_feature_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig>(GetArenaForAllocation());
    _impl_.suggestion_feature_config_ = p;
  }
  return _impl_.suggestion_feature_config_;
}
inline ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* SetSuggestionFeatureConfigRequest::mutable_suggestion_feature_config() {
  ::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* _msg = _internal_mutable_suggestion_feature_config();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.suggestion_feature_config)
  return _msg;
}
inline void SetSuggestionFeatureConfigRequest::set_allocated_suggestion_feature_config(::google::cloud::dialogflow::v2::HumanAgentAssistantConfig_SuggestionFeatureConfig* suggestion_feature_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.suggestion_feature_config_;
  }
  if (suggestion_feature_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(suggestion_feature_config);
    if (message_arena != submessage_arena) {
      suggestion_feature_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, suggestion_feature_config, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.suggestion_feature_config_ = suggestion_feature_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigRequest.suggestion_feature_config)
}

// -------------------------------------------------------------------

// ClearSuggestionFeatureConfigRequest

// string conversation_profile = 1 [(.google.api.field_behavior) = REQUIRED];
inline void ClearSuggestionFeatureConfigRequest::clear_conversation_profile() {
  _impl_.conversation_profile_.ClearToEmpty();
}
inline const std::string& ClearSuggestionFeatureConfigRequest::conversation_profile() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.conversation_profile)
  return _internal_conversation_profile();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ClearSuggestionFeatureConfigRequest::set_conversation_profile(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_profile_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.conversation_profile)
}
inline std::string* ClearSuggestionFeatureConfigRequest::mutable_conversation_profile() {
  std::string* _s = _internal_mutable_conversation_profile();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.conversation_profile)
  return _s;
}
inline const std::string& ClearSuggestionFeatureConfigRequest::_internal_conversation_profile() const {
  return _impl_.conversation_profile_.Get();
}
inline void ClearSuggestionFeatureConfigRequest::_internal_set_conversation_profile(const std::string& value) {
  
  _impl_.conversation_profile_.Set(value, GetArenaForAllocation());
}
inline std::string* ClearSuggestionFeatureConfigRequest::_internal_mutable_conversation_profile() {
  
  return _impl_.conversation_profile_.Mutable(GetArenaForAllocation());
}
inline std::string* ClearSuggestionFeatureConfigRequest::release_conversation_profile() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.conversation_profile)
  return _impl_.conversation_profile_.Release();
}
inline void ClearSuggestionFeatureConfigRequest::set_allocated_conversation_profile(std::string* conversation_profile) {
  if (conversation_profile != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_profile_.SetAllocated(conversation_profile, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_profile_.IsDefault()) {
    _impl_.conversation_profile_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.conversation_profile)
}

// .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
inline void ClearSuggestionFeatureConfigRequest::clear_participant_role() {
  _impl_.participant_role_ = 0;
}
inline ::google::cloud::dialogflow::v2::Participant_Role ClearSuggestionFeatureConfigRequest::_internal_participant_role() const {
  return static_cast< ::google::cloud::dialogflow::v2::Participant_Role >(_impl_.participant_role_);
}
inline ::google::cloud::dialogflow::v2::Participant_Role ClearSuggestionFeatureConfigRequest::participant_role() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.participant_role)
  return _internal_participant_role();
}
inline void ClearSuggestionFeatureConfigRequest::_internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  
  _impl_.participant_role_ = value;
}
inline void ClearSuggestionFeatureConfigRequest::set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  _internal_set_participant_role(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.participant_role)
}

// .google.cloud.dialogflow.v2.SuggestionFeature.Type suggestion_feature_type = 3 [(.google.api.field_behavior) = REQUIRED];
inline void ClearSuggestionFeatureConfigRequest::clear_suggestion_feature_type() {
  _impl_.suggestion_feature_type_ = 0;
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type ClearSuggestionFeatureConfigRequest::_internal_suggestion_feature_type() const {
  return static_cast< ::google::cloud::dialogflow::v2::SuggestionFeature_Type >(_impl_.suggestion_feature_type_);
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type ClearSuggestionFeatureConfigRequest::suggestion_feature_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.suggestion_feature_type)
  return _internal_suggestion_feature_type();
}
inline void ClearSuggestionFeatureConfigRequest::_internal_set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  
  _impl_.suggestion_feature_type_ = value;
}
inline void ClearSuggestionFeatureConfigRequest::set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  _internal_set_suggestion_feature_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigRequest.suggestion_feature_type)
}

// -------------------------------------------------------------------

// SetSuggestionFeatureConfigOperationMetadata

// string conversation_profile = 1;
inline void SetSuggestionFeatureConfigOperationMetadata::clear_conversation_profile() {
  _impl_.conversation_profile_.ClearToEmpty();
}
inline const std::string& SetSuggestionFeatureConfigOperationMetadata::conversation_profile() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.conversation_profile)
  return _internal_conversation_profile();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SetSuggestionFeatureConfigOperationMetadata::set_conversation_profile(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_profile_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.conversation_profile)
}
inline std::string* SetSuggestionFeatureConfigOperationMetadata::mutable_conversation_profile() {
  std::string* _s = _internal_mutable_conversation_profile();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.conversation_profile)
  return _s;
}
inline const std::string& SetSuggestionFeatureConfigOperationMetadata::_internal_conversation_profile() const {
  return _impl_.conversation_profile_.Get();
}
inline void SetSuggestionFeatureConfigOperationMetadata::_internal_set_conversation_profile(const std::string& value) {
  
  _impl_.conversation_profile_.Set(value, GetArenaForAllocation());
}
inline std::string* SetSuggestionFeatureConfigOperationMetadata::_internal_mutable_conversation_profile() {
  
  return _impl_.conversation_profile_.Mutable(GetArenaForAllocation());
}
inline std::string* SetSuggestionFeatureConfigOperationMetadata::release_conversation_profile() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.conversation_profile)
  return _impl_.conversation_profile_.Release();
}
inline void SetSuggestionFeatureConfigOperationMetadata::set_allocated_conversation_profile(std::string* conversation_profile) {
  if (conversation_profile != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_profile_.SetAllocated(conversation_profile, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_profile_.IsDefault()) {
    _impl_.conversation_profile_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.conversation_profile)
}

// .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
inline void SetSuggestionFeatureConfigOperationMetadata::clear_participant_role() {
  _impl_.participant_role_ = 0;
}
inline ::google::cloud::dialogflow::v2::Participant_Role SetSuggestionFeatureConfigOperationMetadata::_internal_participant_role() const {
  return static_cast< ::google::cloud::dialogflow::v2::Participant_Role >(_impl_.participant_role_);
}
inline ::google::cloud::dialogflow::v2::Participant_Role SetSuggestionFeatureConfigOperationMetadata::participant_role() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.participant_role)
  return _internal_participant_role();
}
inline void SetSuggestionFeatureConfigOperationMetadata::_internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  
  _impl_.participant_role_ = value;
}
inline void SetSuggestionFeatureConfigOperationMetadata::set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  _internal_set_participant_role(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.participant_role)
}

// .google.cloud.dialogflow.v2.SuggestionFeature.Type suggestion_feature_type = 3 [(.google.api.field_behavior) = REQUIRED];
inline void SetSuggestionFeatureConfigOperationMetadata::clear_suggestion_feature_type() {
  _impl_.suggestion_feature_type_ = 0;
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type SetSuggestionFeatureConfigOperationMetadata::_internal_suggestion_feature_type() const {
  return static_cast< ::google::cloud::dialogflow::v2::SuggestionFeature_Type >(_impl_.suggestion_feature_type_);
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type SetSuggestionFeatureConfigOperationMetadata::suggestion_feature_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.suggestion_feature_type)
  return _internal_suggestion_feature_type();
}
inline void SetSuggestionFeatureConfigOperationMetadata::_internal_set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  
  _impl_.suggestion_feature_type_ = value;
}
inline void SetSuggestionFeatureConfigOperationMetadata::set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  _internal_set_suggestion_feature_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.suggestion_feature_type)
}

// .google.protobuf.Timestamp create_time = 4;
inline bool SetSuggestionFeatureConfigOperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool SetSuggestionFeatureConfigOperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& SetSuggestionFeatureConfigOperationMetadata::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& SetSuggestionFeatureConfigOperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.create_time)
  return _internal_create_time();
}
inline void SetSuggestionFeatureConfigOperationMetadata::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* SetSuggestionFeatureConfigOperationMetadata::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* SetSuggestionFeatureConfigOperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* SetSuggestionFeatureConfigOperationMetadata::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* SetSuggestionFeatureConfigOperationMetadata::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.create_time)
  return _msg;
}
inline void SetSuggestionFeatureConfigOperationMetadata::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.SetSuggestionFeatureConfigOperationMetadata.create_time)
}

// -------------------------------------------------------------------

// ClearSuggestionFeatureConfigOperationMetadata

// string conversation_profile = 1;
inline void ClearSuggestionFeatureConfigOperationMetadata::clear_conversation_profile() {
  _impl_.conversation_profile_.ClearToEmpty();
}
inline const std::string& ClearSuggestionFeatureConfigOperationMetadata::conversation_profile() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.conversation_profile)
  return _internal_conversation_profile();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ClearSuggestionFeatureConfigOperationMetadata::set_conversation_profile(ArgT0&& arg0, ArgT... args) {
 
 _impl_.conversation_profile_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.conversation_profile)
}
inline std::string* ClearSuggestionFeatureConfigOperationMetadata::mutable_conversation_profile() {
  std::string* _s = _internal_mutable_conversation_profile();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.conversation_profile)
  return _s;
}
inline const std::string& ClearSuggestionFeatureConfigOperationMetadata::_internal_conversation_profile() const {
  return _impl_.conversation_profile_.Get();
}
inline void ClearSuggestionFeatureConfigOperationMetadata::_internal_set_conversation_profile(const std::string& value) {
  
  _impl_.conversation_profile_.Set(value, GetArenaForAllocation());
}
inline std::string* ClearSuggestionFeatureConfigOperationMetadata::_internal_mutable_conversation_profile() {
  
  return _impl_.conversation_profile_.Mutable(GetArenaForAllocation());
}
inline std::string* ClearSuggestionFeatureConfigOperationMetadata::release_conversation_profile() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.conversation_profile)
  return _impl_.conversation_profile_.Release();
}
inline void ClearSuggestionFeatureConfigOperationMetadata::set_allocated_conversation_profile(std::string* conversation_profile) {
  if (conversation_profile != nullptr) {
    
  } else {
    
  }
  _impl_.conversation_profile_.SetAllocated(conversation_profile, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.conversation_profile_.IsDefault()) {
    _impl_.conversation_profile_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.conversation_profile)
}

// .google.cloud.dialogflow.v2.Participant.Role participant_role = 2 [(.google.api.field_behavior) = REQUIRED];
inline void ClearSuggestionFeatureConfigOperationMetadata::clear_participant_role() {
  _impl_.participant_role_ = 0;
}
inline ::google::cloud::dialogflow::v2::Participant_Role ClearSuggestionFeatureConfigOperationMetadata::_internal_participant_role() const {
  return static_cast< ::google::cloud::dialogflow::v2::Participant_Role >(_impl_.participant_role_);
}
inline ::google::cloud::dialogflow::v2::Participant_Role ClearSuggestionFeatureConfigOperationMetadata::participant_role() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.participant_role)
  return _internal_participant_role();
}
inline void ClearSuggestionFeatureConfigOperationMetadata::_internal_set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  
  _impl_.participant_role_ = value;
}
inline void ClearSuggestionFeatureConfigOperationMetadata::set_participant_role(::google::cloud::dialogflow::v2::Participant_Role value) {
  _internal_set_participant_role(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.participant_role)
}

// .google.cloud.dialogflow.v2.SuggestionFeature.Type suggestion_feature_type = 3 [(.google.api.field_behavior) = REQUIRED];
inline void ClearSuggestionFeatureConfigOperationMetadata::clear_suggestion_feature_type() {
  _impl_.suggestion_feature_type_ = 0;
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type ClearSuggestionFeatureConfigOperationMetadata::_internal_suggestion_feature_type() const {
  return static_cast< ::google::cloud::dialogflow::v2::SuggestionFeature_Type >(_impl_.suggestion_feature_type_);
}
inline ::google::cloud::dialogflow::v2::SuggestionFeature_Type ClearSuggestionFeatureConfigOperationMetadata::suggestion_feature_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.suggestion_feature_type)
  return _internal_suggestion_feature_type();
}
inline void ClearSuggestionFeatureConfigOperationMetadata::_internal_set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  
  _impl_.suggestion_feature_type_ = value;
}
inline void ClearSuggestionFeatureConfigOperationMetadata::set_suggestion_feature_type(::google::cloud::dialogflow::v2::SuggestionFeature_Type value) {
  _internal_set_suggestion_feature_type(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.suggestion_feature_type)
}

// .google.protobuf.Timestamp create_time = 4;
inline bool ClearSuggestionFeatureConfigOperationMetadata::_internal_has_create_time() const {
  return this != internal_default_instance() && _impl_.create_time_ != nullptr;
}
inline bool ClearSuggestionFeatureConfigOperationMetadata::has_create_time() const {
  return _internal_has_create_time();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ClearSuggestionFeatureConfigOperationMetadata::_internal_create_time() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.create_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& ClearSuggestionFeatureConfigOperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.create_time)
  return _internal_create_time();
}
inline void ClearSuggestionFeatureConfigOperationMetadata::unsafe_arena_set_allocated_create_time(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  _impl_.create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.create_time)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ClearSuggestionFeatureConfigOperationMetadata::release_create_time() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ClearSuggestionFeatureConfigOperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.create_time)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.create_time_;
  _impl_.create_time_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ClearSuggestionFeatureConfigOperationMetadata::_internal_mutable_create_time() {
  
  if (_impl_.create_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.create_time_ = p;
  }
  return _impl_.create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* ClearSuggestionFeatureConfigOperationMetadata::mutable_create_time() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.create_time)
  return _msg;
}
inline void ClearSuggestionFeatureConfigOperationMetadata::set_allocated_create_time(::PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_time_);
  }
  if (create_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(create_time));
    if (message_arena != submessage_arena) {
      create_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ClearSuggestionFeatureConfigOperationMetadata.create_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat>() {
  return ::google::cloud::dialogflow::v2::NotificationConfig_MessageFormat_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2::SuggestionFeature_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2::SuggestionFeature_Type>() {
  return ::google::cloud::dialogflow::v2::SuggestionFeature_Type_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fconversation_5fprofile_2eproto
