// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2/context.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(int index);
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {
class Context;
struct ContextDefaultTypeInternal;
extern ContextDefaultTypeInternal _Context_default_instance_;
class CreateContextRequest;
struct CreateContextRequestDefaultTypeInternal;
extern CreateContextRequestDefaultTypeInternal _CreateContextRequest_default_instance_;
class DeleteAllContextsRequest;
struct DeleteAllContextsRequestDefaultTypeInternal;
extern DeleteAllContextsRequestDefaultTypeInternal _DeleteAllContextsRequest_default_instance_;
class DeleteContextRequest;
struct DeleteContextRequestDefaultTypeInternal;
extern DeleteContextRequestDefaultTypeInternal _DeleteContextRequest_default_instance_;
class GetContextRequest;
struct GetContextRequestDefaultTypeInternal;
extern GetContextRequestDefaultTypeInternal _GetContextRequest_default_instance_;
class ListContextsRequest;
struct ListContextsRequestDefaultTypeInternal;
extern ListContextsRequestDefaultTypeInternal _ListContextsRequest_default_instance_;
class ListContextsResponse;
struct ListContextsResponseDefaultTypeInternal;
extern ListContextsResponseDefaultTypeInternal _ListContextsResponse_default_instance_;
class UpdateContextRequest;
struct UpdateContextRequestDefaultTypeInternal;
extern UpdateContextRequestDefaultTypeInternal _UpdateContextRequest_default_instance_;
}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::cloud::dialogflow::v2::Context* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::Context>(Arena*);
template<> ::google::cloud::dialogflow::v2::CreateContextRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::CreateContextRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeleteAllContextsRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeleteAllContextsRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::DeleteContextRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::DeleteContextRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::GetContextRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::GetContextRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListContextsRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListContextsRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2::ListContextsResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::ListContextsResponse>(Arena*);
template<> ::google::cloud::dialogflow::v2::UpdateContextRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2::UpdateContextRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2 {

// ===================================================================

class Context PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.Context) */ {
 public:
  inline Context() : Context(nullptr) {}
  virtual ~Context();
  explicit constexpr Context(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Context(const Context& from);
  Context(Context&& from) noexcept
    : Context() {
    *this = ::std::move(from);
  }

  inline Context& operator=(const Context& from) {
    CopyFrom(from);
    return *this;
  }
  inline Context& operator=(Context&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Context& default_instance() {
    return *internal_default_instance();
  }
  static inline const Context* internal_default_instance() {
    return reinterpret_cast<const Context*>(
               &_Context_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Context& a, Context& b) {
    a.Swap(&b);
  }
  inline void Swap(Context* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Context* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Context* New() const final {
    return CreateMaybeMessage<Context>(nullptr);
  }

  Context* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Context>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Context& from);
  void MergeFrom(const Context& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Context* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.Context";
  }
  protected:
  explicit Context(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kParametersFieldNumber = 3,
    kLifespanCountFieldNumber = 2,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Struct parameters = 3 [(.google.api.field_behavior) = OPTIONAL];
  bool has_parameters() const;
  private:
  bool _internal_has_parameters() const;
  public:
  void clear_parameters();
  const PROTOBUF_NAMESPACE_ID::Struct& parameters() const;
  PROTOBUF_NAMESPACE_ID::Struct* release_parameters();
  PROTOBUF_NAMESPACE_ID::Struct* mutable_parameters();
  void set_allocated_parameters(PROTOBUF_NAMESPACE_ID::Struct* parameters);
  private:
  const PROTOBUF_NAMESPACE_ID::Struct& _internal_parameters() const;
  PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_parameters();
  public:
  void unsafe_arena_set_allocated_parameters(
      PROTOBUF_NAMESPACE_ID::Struct* parameters);
  PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_parameters();

  // int32 lifespan_count = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_lifespan_count();
  ::PROTOBUF_NAMESPACE_ID::int32 lifespan_count() const;
  void set_lifespan_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lifespan_count() const;
  void _internal_set_lifespan_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.Context)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  PROTOBUF_NAMESPACE_ID::Struct* parameters_;
  ::PROTOBUF_NAMESPACE_ID::int32 lifespan_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// -------------------------------------------------------------------

class ListContextsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListContextsRequest) */ {
 public:
  inline ListContextsRequest() : ListContextsRequest(nullptr) {}
  virtual ~ListContextsRequest();
  explicit constexpr ListContextsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListContextsRequest(const ListContextsRequest& from);
  ListContextsRequest(ListContextsRequest&& from) noexcept
    : ListContextsRequest() {
    *this = ::std::move(from);
  }

  inline ListContextsRequest& operator=(const ListContextsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListContextsRequest& operator=(ListContextsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListContextsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListContextsRequest* internal_default_instance() {
    return reinterpret_cast<const ListContextsRequest*>(
               &_ListContextsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ListContextsRequest& a, ListContextsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListContextsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListContextsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListContextsRequest* New() const final {
    return CreateMaybeMessage<ListContextsRequest>(nullptr);
  }

  ListContextsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListContextsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListContextsRequest& from);
  void MergeFrom(const ListContextsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListContextsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListContextsRequest";
  }
  protected:
  explicit ListContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kPageTokenFieldNumber = 3,
    kPageSizeFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  void set_parent(const std::string& value);
  void set_parent(std::string&& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  std::string* mutable_parent();
  std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_token();
  const std::string& page_token() const;
  void set_page_token(const std::string& value);
  void set_page_token(std::string&& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  std::string* mutable_page_token();
  std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  void clear_page_size();
  ::PROTOBUF_NAMESPACE_ID::int32 page_size() const;
  void set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page_size() const;
  void _internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListContextsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// -------------------------------------------------------------------

class ListContextsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.ListContextsResponse) */ {
 public:
  inline ListContextsResponse() : ListContextsResponse(nullptr) {}
  virtual ~ListContextsResponse();
  explicit constexpr ListContextsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListContextsResponse(const ListContextsResponse& from);
  ListContextsResponse(ListContextsResponse&& from) noexcept
    : ListContextsResponse() {
    *this = ::std::move(from);
  }

  inline ListContextsResponse& operator=(const ListContextsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListContextsResponse& operator=(ListContextsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListContextsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListContextsResponse* internal_default_instance() {
    return reinterpret_cast<const ListContextsResponse*>(
               &_ListContextsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListContextsResponse& a, ListContextsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListContextsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListContextsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListContextsResponse* New() const final {
    return CreateMaybeMessage<ListContextsResponse>(nullptr);
  }

  ListContextsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListContextsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListContextsResponse& from);
  void MergeFrom(const ListContextsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListContextsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.ListContextsResponse";
  }
  protected:
  explicit ListContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .google.cloud.dialogflow.v2.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::google::cloud::dialogflow::v2::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >*
      mutable_contexts();
  private:
  const ::google::cloud::dialogflow::v2::Context& _internal_contexts(int index) const;
  ::google::cloud::dialogflow::v2::Context* _internal_add_contexts();
  public:
  const ::google::cloud::dialogflow::v2::Context& contexts(int index) const;
  ::google::cloud::dialogflow::v2::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >&
      contexts() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  void set_next_page_token(const std::string& value);
  void set_next_page_token(std::string&& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  std::string* mutable_next_page_token();
  std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.ListContextsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context > contexts_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// -------------------------------------------------------------------

class GetContextRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.GetContextRequest) */ {
 public:
  inline GetContextRequest() : GetContextRequest(nullptr) {}
  virtual ~GetContextRequest();
  explicit constexpr GetContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextRequest(const GetContextRequest& from);
  GetContextRequest(GetContextRequest&& from) noexcept
    : GetContextRequest() {
    *this = ::std::move(from);
  }

  inline GetContextRequest& operator=(const GetContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextRequest& operator=(GetContextRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextRequest*>(
               &_GetContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetContextRequest& a, GetContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetContextRequest* New() const final {
    return CreateMaybeMessage<GetContextRequest>(nullptr);
  }

  GetContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetContextRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetContextRequest& from);
  void MergeFrom(const GetContextRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.GetContextRequest";
  }
  protected:
  explicit GetContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.GetContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// -------------------------------------------------------------------

class CreateContextRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.CreateContextRequest) */ {
 public:
  inline CreateContextRequest() : CreateContextRequest(nullptr) {}
  virtual ~CreateContextRequest();
  explicit constexpr CreateContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateContextRequest(const CreateContextRequest& from);
  CreateContextRequest(CreateContextRequest&& from) noexcept
    : CreateContextRequest() {
    *this = ::std::move(from);
  }

  inline CreateContextRequest& operator=(const CreateContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateContextRequest& operator=(CreateContextRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateContextRequest* internal_default_instance() {
    return reinterpret_cast<const CreateContextRequest*>(
               &_CreateContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CreateContextRequest& a, CreateContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateContextRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateContextRequest* New() const final {
    return CreateMaybeMessage<CreateContextRequest>(nullptr);
  }

  CreateContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateContextRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateContextRequest& from);
  void MergeFrom(const CreateContextRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateContextRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.CreateContextRequest";
  }
  protected:
  explicit CreateContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
    kContextFieldNumber = 2,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  void set_parent(const std::string& value);
  void set_parent(std::string&& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  std::string* mutable_parent();
  std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // .google.cloud.dialogflow.v2.Context context = 2 [(.google.api.field_behavior) = REQUIRED];
  bool has_context() const;
  private:
  bool _internal_has_context() const;
  public:
  void clear_context();
  const ::google::cloud::dialogflow::v2::Context& context() const;
  ::google::cloud::dialogflow::v2::Context* release_context();
  ::google::cloud::dialogflow::v2::Context* mutable_context();
  void set_allocated_context(::google::cloud::dialogflow::v2::Context* context);
  private:
  const ::google::cloud::dialogflow::v2::Context& _internal_context() const;
  ::google::cloud::dialogflow::v2::Context* _internal_mutable_context();
  public:
  void unsafe_arena_set_allocated_context(
      ::google::cloud::dialogflow::v2::Context* context);
  ::google::cloud::dialogflow::v2::Context* unsafe_arena_release_context();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.CreateContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
  ::google::cloud::dialogflow::v2::Context* context_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// -------------------------------------------------------------------

class UpdateContextRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.UpdateContextRequest) */ {
 public:
  inline UpdateContextRequest() : UpdateContextRequest(nullptr) {}
  virtual ~UpdateContextRequest();
  explicit constexpr UpdateContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateContextRequest(const UpdateContextRequest& from);
  UpdateContextRequest(UpdateContextRequest&& from) noexcept
    : UpdateContextRequest() {
    *this = ::std::move(from);
  }

  inline UpdateContextRequest& operator=(const UpdateContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateContextRequest& operator=(UpdateContextRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateContextRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateContextRequest*>(
               &_UpdateContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(UpdateContextRequest& a, UpdateContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateContextRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateContextRequest* New() const final {
    return CreateMaybeMessage<UpdateContextRequest>(nullptr);
  }

  UpdateContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateContextRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateContextRequest& from);
  void MergeFrom(const UpdateContextRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateContextRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.UpdateContextRequest";
  }
  protected:
  explicit UpdateContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextFieldNumber = 1,
    kUpdateMaskFieldNumber = 2,
  };
  // .google.cloud.dialogflow.v2.Context context = 1 [(.google.api.field_behavior) = REQUIRED];
  bool has_context() const;
  private:
  bool _internal_has_context() const;
  public:
  void clear_context();
  const ::google::cloud::dialogflow::v2::Context& context() const;
  ::google::cloud::dialogflow::v2::Context* release_context();
  ::google::cloud::dialogflow::v2::Context* mutable_context();
  void set_allocated_context(::google::cloud::dialogflow::v2::Context* context);
  private:
  const ::google::cloud::dialogflow::v2::Context& _internal_context() const;
  ::google::cloud::dialogflow::v2::Context* _internal_mutable_context();
  public:
  void unsafe_arena_set_allocated_context(
      ::google::cloud::dialogflow::v2::Context* context);
  ::google::cloud::dialogflow::v2::Context* unsafe_arena_release_context();

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  bool has_update_mask() const;
  private:
  bool _internal_has_update_mask() const;
  public:
  void clear_update_mask();
  const PROTOBUF_NAMESPACE_ID::FieldMask& update_mask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* release_update_mask();
  PROTOBUF_NAMESPACE_ID::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  private:
  const PROTOBUF_NAMESPACE_ID::FieldMask& _internal_update_mask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_update_mask();
  public:
  void unsafe_arena_set_allocated_update_mask(
      PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.UpdateContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::dialogflow::v2::Context* context_;
  PROTOBUF_NAMESPACE_ID::FieldMask* update_mask_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// -------------------------------------------------------------------

class DeleteContextRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeleteContextRequest) */ {
 public:
  inline DeleteContextRequest() : DeleteContextRequest(nullptr) {}
  virtual ~DeleteContextRequest();
  explicit constexpr DeleteContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteContextRequest(const DeleteContextRequest& from);
  DeleteContextRequest(DeleteContextRequest&& from) noexcept
    : DeleteContextRequest() {
    *this = ::std::move(from);
  }

  inline DeleteContextRequest& operator=(const DeleteContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteContextRequest& operator=(DeleteContextRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteContextRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteContextRequest*>(
               &_DeleteContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteContextRequest& a, DeleteContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteContextRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteContextRequest* New() const final {
    return CreateMaybeMessage<DeleteContextRequest>(nullptr);
  }

  DeleteContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteContextRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteContextRequest& from);
  void MergeFrom(const DeleteContextRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteContextRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeleteContextRequest";
  }
  protected:
  explicit DeleteContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeleteContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// -------------------------------------------------------------------

class DeleteAllContextsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2.DeleteAllContextsRequest) */ {
 public:
  inline DeleteAllContextsRequest() : DeleteAllContextsRequest(nullptr) {}
  virtual ~DeleteAllContextsRequest();
  explicit constexpr DeleteAllContextsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteAllContextsRequest(const DeleteAllContextsRequest& from);
  DeleteAllContextsRequest(DeleteAllContextsRequest&& from) noexcept
    : DeleteAllContextsRequest() {
    *this = ::std::move(from);
  }

  inline DeleteAllContextsRequest& operator=(const DeleteAllContextsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAllContextsRequest& operator=(DeleteAllContextsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteAllContextsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAllContextsRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAllContextsRequest*>(
               &_DeleteAllContextsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeleteAllContextsRequest& a, DeleteAllContextsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteAllContextsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAllContextsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteAllContextsRequest* New() const final {
    return CreateMaybeMessage<DeleteAllContextsRequest>(nullptr);
  }

  DeleteAllContextsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteAllContextsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteAllContextsRequest& from);
  void MergeFrom(const DeleteAllContextsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteAllContextsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.cloud.dialogflow.v2.DeleteAllContextsRequest";
  }
  protected:
  explicit DeleteAllContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentFieldNumber = 1,
  };
  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  void clear_parent();
  const std::string& parent() const;
  void set_parent(const std::string& value);
  void set_parent(std::string&& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  std::string* mutable_parent();
  std::string* release_parent();
  void set_allocated_parent(std::string* parent);
  private:
  const std::string& _internal_parent() const;
  void _internal_set_parent(const std::string& value);
  std::string* _internal_mutable_parent();
  public:

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DeleteAllContextsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Context

// string name = 1 [(.google.api.field_behavior) = REQUIRED];
inline void Context::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Context::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.Context.name)
  return _internal_name();
}
inline void Context::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.Context.name)
}
inline std::string* Context::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.Context.name)
  return _internal_mutable_name();
}
inline const std::string& Context::_internal_name() const {
  return name_.Get();
}
inline void Context::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Context::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.Context.name)
}
inline void Context::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.Context.name)
}
inline void Context::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.Context.name)
}
inline std::string* Context::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Context::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.Context.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Context::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.Context.name)
}

// int32 lifespan_count = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void Context::clear_lifespan_count() {
  lifespan_count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Context::_internal_lifespan_count() const {
  return lifespan_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Context::lifespan_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.Context.lifespan_count)
  return _internal_lifespan_count();
}
inline void Context::_internal_set_lifespan_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lifespan_count_ = value;
}
inline void Context::set_lifespan_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lifespan_count(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.Context.lifespan_count)
}

// .google.protobuf.Struct parameters = 3 [(.google.api.field_behavior) = OPTIONAL];
inline bool Context::_internal_has_parameters() const {
  return this != internal_default_instance() && parameters_ != nullptr;
}
inline bool Context::has_parameters() const {
  return _internal_has_parameters();
}
inline const PROTOBUF_NAMESPACE_ID::Struct& Context::_internal_parameters() const {
  const PROTOBUF_NAMESPACE_ID::Struct* p = parameters_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Struct&>(
      PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Struct& Context::parameters() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.Context.parameters)
  return _internal_parameters();
}
inline void Context::unsafe_arena_set_allocated_parameters(
    PROTOBUF_NAMESPACE_ID::Struct* parameters) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parameters_);
  }
  parameters_ = parameters;
  if (parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.Context.parameters)
}
inline PROTOBUF_NAMESPACE_ID::Struct* Context::release_parameters() {
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = parameters_;
  parameters_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* Context::unsafe_arena_release_parameters() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.Context.parameters)
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = parameters_;
  parameters_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* Context::_internal_mutable_parameters() {
  
  if (parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Struct>(GetArena());
    parameters_ = p;
  }
  return parameters_;
}
inline PROTOBUF_NAMESPACE_ID::Struct* Context::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.Context.parameters)
  return _internal_mutable_parameters();
}
inline void Context::set_allocated_parameters(PROTOBUF_NAMESPACE_ID::Struct* parameters) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(parameters_);
  }
  if (parameters) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parameters)->GetArena();
    if (message_arena != submessage_arena) {
      parameters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parameters, submessage_arena);
    }
    
  } else {
    
  }
  parameters_ = parameters;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.Context.parameters)
}

// -------------------------------------------------------------------

// ListContextsRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void ListContextsRequest::clear_parent() {
  parent_.ClearToEmpty();
}
inline const std::string& ListContextsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListContextsRequest.parent)
  return _internal_parent();
}
inline void ListContextsRequest::set_parent(const std::string& value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListContextsRequest.parent)
}
inline std::string* ListContextsRequest::mutable_parent() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListContextsRequest.parent)
  return _internal_mutable_parent();
}
inline const std::string& ListContextsRequest::_internal_parent() const {
  return parent_.Get();
}
inline void ListContextsRequest::_internal_set_parent(const std::string& value) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListContextsRequest::set_parent(std::string&& value) {
  
  parent_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.ListContextsRequest.parent)
}
inline void ListContextsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.ListContextsRequest.parent)
}
inline void ListContextsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.ListContextsRequest.parent)
}
inline std::string* ListContextsRequest::_internal_mutable_parent() {
  
  return parent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListContextsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListContextsRequest.parent)
  return parent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListContextsRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), parent,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListContextsRequest.parent)
}

// int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
inline void ListContextsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListContextsRequest::_internal_page_size() const {
  return page_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListContextsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListContextsRequest.page_size)
  return _internal_page_size();
}
inline void ListContextsRequest::_internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_size_ = value;
}
inline void ListContextsRequest::set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListContextsRequest.page_size)
}

// string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
inline void ListContextsRequest::clear_page_token() {
  page_token_.ClearToEmpty();
}
inline const std::string& ListContextsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
  return _internal_page_token();
}
inline void ListContextsRequest::set_page_token(const std::string& value) {
  _internal_set_page_token(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
}
inline std::string* ListContextsRequest::mutable_page_token() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
  return _internal_mutable_page_token();
}
inline const std::string& ListContextsRequest::_internal_page_token() const {
  return page_token_.Get();
}
inline void ListContextsRequest::_internal_set_page_token(const std::string& value) {
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListContextsRequest::set_page_token(std::string&& value) {
  
  page_token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
}
inline void ListContextsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
}
inline void ListContextsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
}
inline std::string* ListContextsRequest::_internal_mutable_page_token() {
  
  return page_token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListContextsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
  return page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListContextsRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListContextsRequest.page_token)
}

// -------------------------------------------------------------------

// ListContextsResponse

// repeated .google.cloud.dialogflow.v2.Context contexts = 1;
inline int ListContextsResponse::_internal_contexts_size() const {
  return contexts_.size();
}
inline int ListContextsResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline void ListContextsResponse::clear_contexts() {
  contexts_.Clear();
}
inline ::google::cloud::dialogflow::v2::Context* ListContextsResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListContextsResponse.contexts)
  return contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >*
ListContextsResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2.ListContextsResponse.contexts)
  return &contexts_;
}
inline const ::google::cloud::dialogflow::v2::Context& ListContextsResponse::_internal_contexts(int index) const {
  return contexts_.Get(index);
}
inline const ::google::cloud::dialogflow::v2::Context& ListContextsResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListContextsResponse.contexts)
  return _internal_contexts(index);
}
inline ::google::cloud::dialogflow::v2::Context* ListContextsResponse::_internal_add_contexts() {
  return contexts_.Add();
}
inline ::google::cloud::dialogflow::v2::Context* ListContextsResponse::add_contexts() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2.ListContextsResponse.contexts)
  return _internal_add_contexts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::cloud::dialogflow::v2::Context >&
ListContextsResponse::contexts() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2.ListContextsResponse.contexts)
  return contexts_;
}

// string next_page_token = 2;
inline void ListContextsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty();
}
inline const std::string& ListContextsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
  return _internal_next_page_token();
}
inline void ListContextsResponse::set_next_page_token(const std::string& value) {
  _internal_set_next_page_token(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
}
inline std::string* ListContextsResponse::mutable_next_page_token() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
  return _internal_mutable_next_page_token();
}
inline const std::string& ListContextsResponse::_internal_next_page_token() const {
  return next_page_token_.Get();
}
inline void ListContextsResponse::_internal_set_next_page_token(const std::string& value) {
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListContextsResponse::set_next_page_token(std::string&& value) {
  
  next_page_token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
}
inline void ListContextsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
}
inline void ListContextsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
}
inline std::string* ListContextsResponse::_internal_mutable_next_page_token() {
  
  return next_page_token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListContextsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
  return next_page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListContextsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.ListContextsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetContextRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void GetContextRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetContextRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.GetContextRequest.name)
  return _internal_name();
}
inline void GetContextRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.GetContextRequest.name)
}
inline std::string* GetContextRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.GetContextRequest.name)
  return _internal_mutable_name();
}
inline const std::string& GetContextRequest::_internal_name() const {
  return name_.Get();
}
inline void GetContextRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetContextRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.GetContextRequest.name)
}
inline void GetContextRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.GetContextRequest.name)
}
inline void GetContextRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.GetContextRequest.name)
}
inline std::string* GetContextRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetContextRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.GetContextRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetContextRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.GetContextRequest.name)
}

// -------------------------------------------------------------------

// CreateContextRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void CreateContextRequest::clear_parent() {
  parent_.ClearToEmpty();
}
inline const std::string& CreateContextRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateContextRequest.parent)
  return _internal_parent();
}
inline void CreateContextRequest::set_parent(const std::string& value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.CreateContextRequest.parent)
}
inline std::string* CreateContextRequest::mutable_parent() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateContextRequest.parent)
  return _internal_mutable_parent();
}
inline const std::string& CreateContextRequest::_internal_parent() const {
  return parent_.Get();
}
inline void CreateContextRequest::_internal_set_parent(const std::string& value) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CreateContextRequest::set_parent(std::string&& value) {
  
  parent_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.CreateContextRequest.parent)
}
inline void CreateContextRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.CreateContextRequest.parent)
}
inline void CreateContextRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.CreateContextRequest.parent)
}
inline std::string* CreateContextRequest::_internal_mutable_parent() {
  
  return parent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CreateContextRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateContextRequest.parent)
  return parent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateContextRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), parent,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateContextRequest.parent)
}

// .google.cloud.dialogflow.v2.Context context = 2 [(.google.api.field_behavior) = REQUIRED];
inline bool CreateContextRequest::_internal_has_context() const {
  return this != internal_default_instance() && context_ != nullptr;
}
inline bool CreateContextRequest::has_context() const {
  return _internal_has_context();
}
inline void CreateContextRequest::clear_context() {
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::Context& CreateContextRequest::_internal_context() const {
  const ::google::cloud::dialogflow::v2::Context* p = context_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::Context&>(
      ::google::cloud::dialogflow::v2::_Context_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::Context& CreateContextRequest::context() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.CreateContextRequest.context)
  return _internal_context();
}
inline void CreateContextRequest::unsafe_arena_set_allocated_context(
    ::google::cloud::dialogflow::v2::Context* context) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(context_);
  }
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.CreateContextRequest.context)
}
inline ::google::cloud::dialogflow::v2::Context* CreateContextRequest::release_context() {
  
  ::google::cloud::dialogflow::v2::Context* temp = context_;
  context_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::cloud::dialogflow::v2::Context* CreateContextRequest::unsafe_arena_release_context() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.CreateContextRequest.context)
  
  ::google::cloud::dialogflow::v2::Context* temp = context_;
  context_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::Context* CreateContextRequest::_internal_mutable_context() {
  
  if (context_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::Context>(GetArena());
    context_ = p;
  }
  return context_;
}
inline ::google::cloud::dialogflow::v2::Context* CreateContextRequest::mutable_context() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.CreateContextRequest.context)
  return _internal_mutable_context();
}
inline void CreateContextRequest::set_allocated_context(::google::cloud::dialogflow::v2::Context* context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete context_;
  }
  if (context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(context);
    if (message_arena != submessage_arena) {
      context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.CreateContextRequest.context)
}

// -------------------------------------------------------------------

// UpdateContextRequest

// .google.cloud.dialogflow.v2.Context context = 1 [(.google.api.field_behavior) = REQUIRED];
inline bool UpdateContextRequest::_internal_has_context() const {
  return this != internal_default_instance() && context_ != nullptr;
}
inline bool UpdateContextRequest::has_context() const {
  return _internal_has_context();
}
inline void UpdateContextRequest::clear_context() {
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
}
inline const ::google::cloud::dialogflow::v2::Context& UpdateContextRequest::_internal_context() const {
  const ::google::cloud::dialogflow::v2::Context* p = context_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::cloud::dialogflow::v2::Context&>(
      ::google::cloud::dialogflow::v2::_Context_default_instance_);
}
inline const ::google::cloud::dialogflow::v2::Context& UpdateContextRequest::context() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UpdateContextRequest.context)
  return _internal_context();
}
inline void UpdateContextRequest::unsafe_arena_set_allocated_context(
    ::google::cloud::dialogflow::v2::Context* context) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(context_);
  }
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.UpdateContextRequest.context)
}
inline ::google::cloud::dialogflow::v2::Context* UpdateContextRequest::release_context() {
  
  ::google::cloud::dialogflow::v2::Context* temp = context_;
  context_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::google::cloud::dialogflow::v2::Context* UpdateContextRequest::unsafe_arena_release_context() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UpdateContextRequest.context)
  
  ::google::cloud::dialogflow::v2::Context* temp = context_;
  context_ = nullptr;
  return temp;
}
inline ::google::cloud::dialogflow::v2::Context* UpdateContextRequest::_internal_mutable_context() {
  
  if (context_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2::Context>(GetArena());
    context_ = p;
  }
  return context_;
}
inline ::google::cloud::dialogflow::v2::Context* UpdateContextRequest::mutable_context() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UpdateContextRequest.context)
  return _internal_mutable_context();
}
inline void UpdateContextRequest::set_allocated_context(::google::cloud::dialogflow::v2::Context* context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete context_;
  }
  if (context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(context);
    if (message_arena != submessage_arena) {
      context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UpdateContextRequest.context)
}

// .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
inline bool UpdateContextRequest::_internal_has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != nullptr;
}
inline bool UpdateContextRequest::has_update_mask() const {
  return _internal_has_update_mask();
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateContextRequest::_internal_update_mask() const {
  const PROTOBUF_NAMESPACE_ID::FieldMask* p = update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FieldMask&>(
      PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateContextRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.UpdateContextRequest.update_mask)
  return _internal_update_mask();
}
inline void UpdateContextRequest::unsafe_arena_set_allocated_update_mask(
    PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask_);
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2.UpdateContextRequest.update_mask)
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateContextRequest::release_update_mask() {
  
  PROTOBUF_NAMESPACE_ID::FieldMask* temp = update_mask_;
  update_mask_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateContextRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.UpdateContextRequest.update_mask)
  
  PROTOBUF_NAMESPACE_ID::FieldMask* temp = update_mask_;
  update_mask_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateContextRequest::_internal_mutable_update_mask() {
  
  if (update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FieldMask>(GetArena());
    update_mask_ = p;
  }
  return update_mask_;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateContextRequest::mutable_update_mask() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.UpdateContextRequest.update_mask)
  return _internal_mutable_update_mask();
}
inline void UpdateContextRequest::set_allocated_update_mask(PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask)->GetArena();
    if (message_arena != submessage_arena) {
      update_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.UpdateContextRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteContextRequest

// string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void DeleteContextRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& DeleteContextRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeleteContextRequest.name)
  return _internal_name();
}
inline void DeleteContextRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeleteContextRequest.name)
}
inline std::string* DeleteContextRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeleteContextRequest.name)
  return _internal_mutable_name();
}
inline const std::string& DeleteContextRequest::_internal_name() const {
  return name_.Get();
}
inline void DeleteContextRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DeleteContextRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.DeleteContextRequest.name)
}
inline void DeleteContextRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.DeleteContextRequest.name)
}
inline void DeleteContextRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.DeleteContextRequest.name)
}
inline std::string* DeleteContextRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DeleteContextRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeleteContextRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteContextRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeleteContextRequest.name)
}

// -------------------------------------------------------------------

// DeleteAllContextsRequest

// string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline void DeleteAllContextsRequest::clear_parent() {
  parent_.ClearToEmpty();
}
inline const std::string& DeleteAllContextsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
  return _internal_parent();
}
inline void DeleteAllContextsRequest::set_parent(const std::string& value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
}
inline std::string* DeleteAllContextsRequest::mutable_parent() {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
  return _internal_mutable_parent();
}
inline const std::string& DeleteAllContextsRequest::_internal_parent() const {
  return parent_.Get();
}
inline void DeleteAllContextsRequest::_internal_set_parent(const std::string& value) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DeleteAllContextsRequest::set_parent(std::string&& value) {
  
  parent_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
}
inline void DeleteAllContextsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
}
inline void DeleteAllContextsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
}
inline std::string* DeleteAllContextsRequest::_internal_mutable_parent() {
  
  return parent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DeleteAllContextsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
  return parent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteAllContextsRequest::set_allocated_parent(std::string* parent) {
  if (parent != nullptr) {
    
  } else {
    
  }
  parent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), parent,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2.DeleteAllContextsRequest.parent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2_2fcontext_2eproto
