// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/billing.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fbilling_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fbilling_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/metric.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fbilling_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2fbilling_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fbilling_2eproto;
namespace google {
namespace api {
class Billing;
struct BillingDefaultTypeInternal;
extern BillingDefaultTypeInternal _Billing_default_instance_;
class Billing_BillingDestination;
struct Billing_BillingDestinationDefaultTypeInternal;
extern Billing_BillingDestinationDefaultTypeInternal _Billing_BillingDestination_default_instance_;
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::api::Billing* Arena::CreateMaybeMessage<::google::api::Billing>(Arena*);
template<> ::google::api::Billing_BillingDestination* Arena::CreateMaybeMessage<::google::api::Billing_BillingDestination>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace api {

// ===================================================================

class Billing_BillingDestination final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Billing.BillingDestination) */ {
 public:
  inline Billing_BillingDestination() : Billing_BillingDestination(nullptr) {}
  ~Billing_BillingDestination() override;
  explicit constexpr Billing_BillingDestination(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Billing_BillingDestination(const Billing_BillingDestination& from);
  Billing_BillingDestination(Billing_BillingDestination&& from) noexcept
    : Billing_BillingDestination() {
    *this = ::std::move(from);
  }

  inline Billing_BillingDestination& operator=(const Billing_BillingDestination& from) {
    CopyFrom(from);
    return *this;
  }
  inline Billing_BillingDestination& operator=(Billing_BillingDestination&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Billing_BillingDestination& default_instance() {
    return *internal_default_instance();
  }
  static inline const Billing_BillingDestination* internal_default_instance() {
    return reinterpret_cast<const Billing_BillingDestination*>(
               &_Billing_BillingDestination_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Billing_BillingDestination& a, Billing_BillingDestination& b) {
    a.Swap(&b);
  }
  inline void Swap(Billing_BillingDestination* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Billing_BillingDestination* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Billing_BillingDestination* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Billing_BillingDestination>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Billing_BillingDestination& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Billing_BillingDestination& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Billing_BillingDestination* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Billing.BillingDestination";
  }
  protected:
  explicit Billing_BillingDestination(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 2,
    kMonitoredResourceFieldNumber = 1,
  };
  // repeated string metrics = 2;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;
  public:
  void clear_metrics();
  const std::string& metrics(int index) const;
  std::string* mutable_metrics(int index);
  void set_metrics(int index, const std::string& value);
  void set_metrics(int index, std::string&& value);
  void set_metrics(int index, const char* value);
  void set_metrics(int index, const char* value, size_t size);
  std::string* add_metrics();
  void add_metrics(const std::string& value);
  void add_metrics(std::string&& value);
  void add_metrics(const char* value);
  void add_metrics(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& metrics() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_metrics();
  private:
  const std::string& _internal_metrics(int index) const;
  std::string* _internal_add_metrics();
  public:

  // string monitored_resource = 1;
  void clear_monitored_resource();
  const std::string& monitored_resource() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_monitored_resource(ArgT0&& arg0, ArgT... args);
  std::string* mutable_monitored_resource();
  PROTOBUF_NODISCARD std::string* release_monitored_resource();
  void set_allocated_monitored_resource(std::string* monitored_resource);
  private:
  const std::string& _internal_monitored_resource() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_monitored_resource(const std::string& value);
  std::string* _internal_mutable_monitored_resource();
  public:

  // @@protoc_insertion_point(class_scope:google.api.Billing.BillingDestination)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> metrics_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr monitored_resource_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fbilling_2eproto;
};
// -------------------------------------------------------------------

class Billing final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Billing) */ {
 public:
  inline Billing() : Billing(nullptr) {}
  ~Billing() override;
  explicit constexpr Billing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Billing(const Billing& from);
  Billing(Billing&& from) noexcept
    : Billing() {
    *this = ::std::move(from);
  }

  inline Billing& operator=(const Billing& from) {
    CopyFrom(from);
    return *this;
  }
  inline Billing& operator=(Billing&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Billing& default_instance() {
    return *internal_default_instance();
  }
  static inline const Billing* internal_default_instance() {
    return reinterpret_cast<const Billing*>(
               &_Billing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Billing& a, Billing& b) {
    a.Swap(&b);
  }
  inline void Swap(Billing* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Billing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Billing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Billing>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Billing& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Billing& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Billing* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Billing";
  }
  protected:
  explicit Billing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Billing_BillingDestination BillingDestination;

  // accessors -------------------------------------------------------

  enum : int {
    kConsumerDestinationsFieldNumber = 8,
  };
  // repeated .google.api.Billing.BillingDestination consumer_destinations = 8;
  int consumer_destinations_size() const;
  private:
  int _internal_consumer_destinations_size() const;
  public:
  void clear_consumer_destinations();
  ::google::api::Billing_BillingDestination* mutable_consumer_destinations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Billing_BillingDestination >*
      mutable_consumer_destinations();
  private:
  const ::google::api::Billing_BillingDestination& _internal_consumer_destinations(int index) const;
  ::google::api::Billing_BillingDestination* _internal_add_consumer_destinations();
  public:
  const ::google::api::Billing_BillingDestination& consumer_destinations(int index) const;
  ::google::api::Billing_BillingDestination* add_consumer_destinations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Billing_BillingDestination >&
      consumer_destinations() const;

  // @@protoc_insertion_point(class_scope:google.api.Billing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Billing_BillingDestination > consumer_destinations_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fbilling_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Billing_BillingDestination

// string monitored_resource = 1;
inline void Billing_BillingDestination::clear_monitored_resource() {
  monitored_resource_.ClearToEmpty();
}
inline const std::string& Billing_BillingDestination::monitored_resource() const {
  // @@protoc_insertion_point(field_get:google.api.Billing.BillingDestination.monitored_resource)
  return _internal_monitored_resource();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Billing_BillingDestination::set_monitored_resource(ArgT0&& arg0, ArgT... args) {
 
 monitored_resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:google.api.Billing.BillingDestination.monitored_resource)
}
inline std::string* Billing_BillingDestination::mutable_monitored_resource() {
  std::string* _s = _internal_mutable_monitored_resource();
  // @@protoc_insertion_point(field_mutable:google.api.Billing.BillingDestination.monitored_resource)
  return _s;
}
inline const std::string& Billing_BillingDestination::_internal_monitored_resource() const {
  return monitored_resource_.Get();
}
inline void Billing_BillingDestination::_internal_set_monitored_resource(const std::string& value) {
  
  monitored_resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Billing_BillingDestination::_internal_mutable_monitored_resource() {
  
  return monitored_resource_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Billing_BillingDestination::release_monitored_resource() {
  // @@protoc_insertion_point(field_release:google.api.Billing.BillingDestination.monitored_resource)
  return monitored_resource_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Billing_BillingDestination::set_allocated_monitored_resource(std::string* monitored_resource) {
  if (monitored_resource != nullptr) {
    
  } else {
    
  }
  monitored_resource_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), monitored_resource,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (monitored_resource_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    monitored_resource_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.api.Billing.BillingDestination.monitored_resource)
}

// repeated string metrics = 2;
inline int Billing_BillingDestination::_internal_metrics_size() const {
  return metrics_.size();
}
inline int Billing_BillingDestination::metrics_size() const {
  return _internal_metrics_size();
}
inline void Billing_BillingDestination::clear_metrics() {
  metrics_.Clear();
}
inline std::string* Billing_BillingDestination::add_metrics() {
  std::string* _s = _internal_add_metrics();
  // @@protoc_insertion_point(field_add_mutable:google.api.Billing.BillingDestination.metrics)
  return _s;
}
inline const std::string& Billing_BillingDestination::_internal_metrics(int index) const {
  return metrics_.Get(index);
}
inline const std::string& Billing_BillingDestination::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Billing.BillingDestination.metrics)
  return _internal_metrics(index);
}
inline std::string* Billing_BillingDestination::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Billing.BillingDestination.metrics)
  return metrics_.Mutable(index);
}
inline void Billing_BillingDestination::set_metrics(int index, const std::string& value) {
  metrics_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.api.Billing.BillingDestination.metrics)
}
inline void Billing_BillingDestination::set_metrics(int index, std::string&& value) {
  metrics_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.api.Billing.BillingDestination.metrics)
}
inline void Billing_BillingDestination::set_metrics(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  metrics_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.Billing.BillingDestination.metrics)
}
inline void Billing_BillingDestination::set_metrics(int index, const char* value, size_t size) {
  metrics_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.Billing.BillingDestination.metrics)
}
inline std::string* Billing_BillingDestination::_internal_add_metrics() {
  return metrics_.Add();
}
inline void Billing_BillingDestination::add_metrics(const std::string& value) {
  metrics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.Billing.BillingDestination.metrics)
}
inline void Billing_BillingDestination::add_metrics(std::string&& value) {
  metrics_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.api.Billing.BillingDestination.metrics)
}
inline void Billing_BillingDestination::add_metrics(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  metrics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.Billing.BillingDestination.metrics)
}
inline void Billing_BillingDestination::add_metrics(const char* value, size_t size) {
  metrics_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.Billing.BillingDestination.metrics)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Billing_BillingDestination::metrics() const {
  // @@protoc_insertion_point(field_list:google.api.Billing.BillingDestination.metrics)
  return metrics_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Billing_BillingDestination::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Billing.BillingDestination.metrics)
  return &metrics_;
}

// -------------------------------------------------------------------

// Billing

// repeated .google.api.Billing.BillingDestination consumer_destinations = 8;
inline int Billing::_internal_consumer_destinations_size() const {
  return consumer_destinations_.size();
}
inline int Billing::consumer_destinations_size() const {
  return _internal_consumer_destinations_size();
}
inline void Billing::clear_consumer_destinations() {
  consumer_destinations_.Clear();
}
inline ::google::api::Billing_BillingDestination* Billing::mutable_consumer_destinations(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Billing.consumer_destinations)
  return consumer_destinations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Billing_BillingDestination >*
Billing::mutable_consumer_destinations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Billing.consumer_destinations)
  return &consumer_destinations_;
}
inline const ::google::api::Billing_BillingDestination& Billing::_internal_consumer_destinations(int index) const {
  return consumer_destinations_.Get(index);
}
inline const ::google::api::Billing_BillingDestination& Billing::consumer_destinations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Billing.consumer_destinations)
  return _internal_consumer_destinations(index);
}
inline ::google::api::Billing_BillingDestination* Billing::_internal_add_consumer_destinations() {
  return consumer_destinations_.Add();
}
inline ::google::api::Billing_BillingDestination* Billing::add_consumer_destinations() {
  ::google::api::Billing_BillingDestination* _add = _internal_add_consumer_destinations();
  // @@protoc_insertion_point(field_add:google.api.Billing.consumer_destinations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Billing_BillingDestination >&
Billing::consumer_destinations() const {
  // @@protoc_insertion_point(field_list:google.api.Billing.consumer_destinations)
  return consumer_destinations_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fbilling_2eproto
