// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/routing.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2frouting_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2frouting_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2frouting_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2frouting_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2frouting_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_google_2fapi_2frouting_2eproto_metadata_getter(int index);
namespace google {
namespace api {
class RoutingParameter;
struct RoutingParameterDefaultTypeInternal;
extern RoutingParameterDefaultTypeInternal _RoutingParameter_default_instance_;
class RoutingRule;
struct RoutingRuleDefaultTypeInternal;
extern RoutingRuleDefaultTypeInternal _RoutingRule_default_instance_;
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::api::RoutingParameter* Arena::CreateMaybeMessage<::google::api::RoutingParameter>(Arena*);
template<> ::google::api::RoutingRule* Arena::CreateMaybeMessage<::google::api::RoutingRule>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace api {

// ===================================================================

class RoutingRule PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.RoutingRule) */ {
 public:
  inline RoutingRule() : RoutingRule(nullptr) {}
  virtual ~RoutingRule();
  explicit constexpr RoutingRule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RoutingRule(const RoutingRule& from);
  RoutingRule(RoutingRule&& from) noexcept
    : RoutingRule() {
    *this = ::std::move(from);
  }

  inline RoutingRule& operator=(const RoutingRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoutingRule& operator=(RoutingRule&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoutingRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoutingRule* internal_default_instance() {
    return reinterpret_cast<const RoutingRule*>(
               &_RoutingRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RoutingRule& a, RoutingRule& b) {
    a.Swap(&b);
  }
  inline void Swap(RoutingRule* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoutingRule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoutingRule* New() const final {
    return CreateMaybeMessage<RoutingRule>(nullptr);
  }

  RoutingRule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoutingRule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoutingRule& from);
  void MergeFrom(const RoutingRule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoutingRule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.RoutingRule";
  }
  protected:
  explicit RoutingRule(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fapi_2frouting_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoutingParametersFieldNumber = 2,
  };
  // repeated .google.api.RoutingParameter routing_parameters = 2;
  int routing_parameters_size() const;
  private:
  int _internal_routing_parameters_size() const;
  public:
  void clear_routing_parameters();
  ::google::api::RoutingParameter* mutable_routing_parameters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::RoutingParameter >*
      mutable_routing_parameters();
  private:
  const ::google::api::RoutingParameter& _internal_routing_parameters(int index) const;
  ::google::api::RoutingParameter* _internal_add_routing_parameters();
  public:
  const ::google::api::RoutingParameter& routing_parameters(int index) const;
  ::google::api::RoutingParameter* add_routing_parameters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::RoutingParameter >&
      routing_parameters() const;

  // @@protoc_insertion_point(class_scope:google.api.RoutingRule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::RoutingParameter > routing_parameters_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2frouting_2eproto;
};
// -------------------------------------------------------------------

class RoutingParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.RoutingParameter) */ {
 public:
  inline RoutingParameter() : RoutingParameter(nullptr) {}
  virtual ~RoutingParameter();
  explicit constexpr RoutingParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RoutingParameter(const RoutingParameter& from);
  RoutingParameter(RoutingParameter&& from) noexcept
    : RoutingParameter() {
    *this = ::std::move(from);
  }

  inline RoutingParameter& operator=(const RoutingParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoutingParameter& operator=(RoutingParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoutingParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoutingParameter* internal_default_instance() {
    return reinterpret_cast<const RoutingParameter*>(
               &_RoutingParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RoutingParameter& a, RoutingParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(RoutingParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoutingParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoutingParameter* New() const final {
    return CreateMaybeMessage<RoutingParameter>(nullptr);
  }

  RoutingParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoutingParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoutingParameter& from);
  void MergeFrom(const RoutingParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoutingParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.RoutingParameter";
  }
  protected:
  explicit RoutingParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fapi_2frouting_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kPathTemplateFieldNumber = 2,
  };
  // string field = 1;
  void clear_field();
  const std::string& field() const;
  void set_field(const std::string& value);
  void set_field(std::string&& value);
  void set_field(const char* value);
  void set_field(const char* value, size_t size);
  std::string* mutable_field();
  std::string* release_field();
  void set_allocated_field(std::string* field);
  private:
  const std::string& _internal_field() const;
  void _internal_set_field(const std::string& value);
  std::string* _internal_mutable_field();
  public:

  // string path_template = 2;
  void clear_path_template();
  const std::string& path_template() const;
  void set_path_template(const std::string& value);
  void set_path_template(std::string&& value);
  void set_path_template(const char* value);
  void set_path_template(const char* value, size_t size);
  std::string* mutable_path_template();
  std::string* release_path_template();
  void set_allocated_path_template(std::string* path_template);
  private:
  const std::string& _internal_path_template() const;
  void _internal_set_path_template(const std::string& value);
  std::string* _internal_mutable_path_template();
  public:

  // @@protoc_insertion_point(class_scope:google.api.RoutingParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_template_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2frouting_2eproto;
};
// ===================================================================

static const int kRoutingFieldNumber = 72295729;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::google::api::RoutingRule >, 11, false >
  routing;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RoutingRule

// repeated .google.api.RoutingParameter routing_parameters = 2;
inline int RoutingRule::_internal_routing_parameters_size() const {
  return routing_parameters_.size();
}
inline int RoutingRule::routing_parameters_size() const {
  return _internal_routing_parameters_size();
}
inline void RoutingRule::clear_routing_parameters() {
  routing_parameters_.Clear();
}
inline ::google::api::RoutingParameter* RoutingRule::mutable_routing_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.RoutingRule.routing_parameters)
  return routing_parameters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::RoutingParameter >*
RoutingRule::mutable_routing_parameters() {
  // @@protoc_insertion_point(field_mutable_list:google.api.RoutingRule.routing_parameters)
  return &routing_parameters_;
}
inline const ::google::api::RoutingParameter& RoutingRule::_internal_routing_parameters(int index) const {
  return routing_parameters_.Get(index);
}
inline const ::google::api::RoutingParameter& RoutingRule::routing_parameters(int index) const {
  // @@protoc_insertion_point(field_get:google.api.RoutingRule.routing_parameters)
  return _internal_routing_parameters(index);
}
inline ::google::api::RoutingParameter* RoutingRule::_internal_add_routing_parameters() {
  return routing_parameters_.Add();
}
inline ::google::api::RoutingParameter* RoutingRule::add_routing_parameters() {
  // @@protoc_insertion_point(field_add:google.api.RoutingRule.routing_parameters)
  return _internal_add_routing_parameters();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::RoutingParameter >&
RoutingRule::routing_parameters() const {
  // @@protoc_insertion_point(field_list:google.api.RoutingRule.routing_parameters)
  return routing_parameters_;
}

// -------------------------------------------------------------------

// RoutingParameter

// string field = 1;
inline void RoutingParameter::clear_field() {
  field_.ClearToEmpty();
}
inline const std::string& RoutingParameter::field() const {
  // @@protoc_insertion_point(field_get:google.api.RoutingParameter.field)
  return _internal_field();
}
inline void RoutingParameter::set_field(const std::string& value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:google.api.RoutingParameter.field)
}
inline std::string* RoutingParameter::mutable_field() {
  // @@protoc_insertion_point(field_mutable:google.api.RoutingParameter.field)
  return _internal_mutable_field();
}
inline const std::string& RoutingParameter::_internal_field() const {
  return field_.Get();
}
inline void RoutingParameter::_internal_set_field(const std::string& value) {
  
  field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RoutingParameter::set_field(std::string&& value) {
  
  field_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.api.RoutingParameter.field)
}
inline void RoutingParameter::set_field(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.api.RoutingParameter.field)
}
inline void RoutingParameter::set_field(const char* value,
    size_t size) {
  
  field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.api.RoutingParameter.field)
}
inline std::string* RoutingParameter::_internal_mutable_field() {
  
  return field_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RoutingParameter::release_field() {
  // @@protoc_insertion_point(field_release:google.api.RoutingParameter.field)
  return field_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RoutingParameter::set_allocated_field(std::string* field) {
  if (field != nullptr) {
    
  } else {
    
  }
  field_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.api.RoutingParameter.field)
}

// string path_template = 2;
inline void RoutingParameter::clear_path_template() {
  path_template_.ClearToEmpty();
}
inline const std::string& RoutingParameter::path_template() const {
  // @@protoc_insertion_point(field_get:google.api.RoutingParameter.path_template)
  return _internal_path_template();
}
inline void RoutingParameter::set_path_template(const std::string& value) {
  _internal_set_path_template(value);
  // @@protoc_insertion_point(field_set:google.api.RoutingParameter.path_template)
}
inline std::string* RoutingParameter::mutable_path_template() {
  // @@protoc_insertion_point(field_mutable:google.api.RoutingParameter.path_template)
  return _internal_mutable_path_template();
}
inline const std::string& RoutingParameter::_internal_path_template() const {
  return path_template_.Get();
}
inline void RoutingParameter::_internal_set_path_template(const std::string& value) {
  
  path_template_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RoutingParameter::set_path_template(std::string&& value) {
  
  path_template_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.api.RoutingParameter.path_template)
}
inline void RoutingParameter::set_path_template(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_template_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.api.RoutingParameter.path_template)
}
inline void RoutingParameter::set_path_template(const char* value,
    size_t size) {
  
  path_template_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.api.RoutingParameter.path_template)
}
inline std::string* RoutingParameter::_internal_mutable_path_template() {
  
  return path_template_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RoutingParameter::release_path_template() {
  // @@protoc_insertion_point(field_release:google.api.RoutingParameter.path_template)
  return path_template_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RoutingParameter::set_allocated_path_template(std::string* path_template) {
  if (path_template != nullptr) {
    
  } else {
    
  }
  path_template_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path_template,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.api.RoutingParameter.path_template)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2frouting_2eproto
