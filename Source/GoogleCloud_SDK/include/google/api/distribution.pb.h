// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/distribution.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fdistribution_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fdistribution_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fdistribution_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2fdistribution_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fdistribution_2eproto;
namespace google {
namespace api {
class Distribution;
struct DistributionDefaultTypeInternal;
extern DistributionDefaultTypeInternal _Distribution_default_instance_;
class Distribution_BucketOptions;
struct Distribution_BucketOptionsDefaultTypeInternal;
extern Distribution_BucketOptionsDefaultTypeInternal _Distribution_BucketOptions_default_instance_;
class Distribution_BucketOptions_Explicit;
struct Distribution_BucketOptions_ExplicitDefaultTypeInternal;
extern Distribution_BucketOptions_ExplicitDefaultTypeInternal _Distribution_BucketOptions_Explicit_default_instance_;
class Distribution_BucketOptions_Exponential;
struct Distribution_BucketOptions_ExponentialDefaultTypeInternal;
extern Distribution_BucketOptions_ExponentialDefaultTypeInternal _Distribution_BucketOptions_Exponential_default_instance_;
class Distribution_BucketOptions_Linear;
struct Distribution_BucketOptions_LinearDefaultTypeInternal;
extern Distribution_BucketOptions_LinearDefaultTypeInternal _Distribution_BucketOptions_Linear_default_instance_;
class Distribution_Exemplar;
struct Distribution_ExemplarDefaultTypeInternal;
extern Distribution_ExemplarDefaultTypeInternal _Distribution_Exemplar_default_instance_;
class Distribution_Range;
struct Distribution_RangeDefaultTypeInternal;
extern Distribution_RangeDefaultTypeInternal _Distribution_Range_default_instance_;
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::api::Distribution* Arena::CreateMaybeMessage<::google::api::Distribution>(Arena*);
template<> ::google::api::Distribution_BucketOptions* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions>(Arena*);
template<> ::google::api::Distribution_BucketOptions_Explicit* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions_Explicit>(Arena*);
template<> ::google::api::Distribution_BucketOptions_Exponential* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions_Exponential>(Arena*);
template<> ::google::api::Distribution_BucketOptions_Linear* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions_Linear>(Arena*);
template<> ::google::api::Distribution_Exemplar* Arena::CreateMaybeMessage<::google::api::Distribution_Exemplar>(Arena*);
template<> ::google::api::Distribution_Range* Arena::CreateMaybeMessage<::google::api::Distribution_Range>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace api {

// ===================================================================

class Distribution_Range final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.Range) */ {
 public:
  inline Distribution_Range() : Distribution_Range(nullptr) {}
  ~Distribution_Range() override;
  explicit PROTOBUF_CONSTEXPR Distribution_Range(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Distribution_Range(const Distribution_Range& from);
  Distribution_Range(Distribution_Range&& from) noexcept
    : Distribution_Range() {
    *this = ::std::move(from);
  }

  inline Distribution_Range& operator=(const Distribution_Range& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution_Range& operator=(Distribution_Range&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution_Range& default_instance() {
    return *internal_default_instance();
  }
  static inline const Distribution_Range* internal_default_instance() {
    return reinterpret_cast<const Distribution_Range*>(
               &_Distribution_Range_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Distribution_Range& a, Distribution_Range& b) {
    a.Swap(&b);
  }
  inline void Swap(Distribution_Range* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution_Range* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution_Range* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Distribution_Range>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Distribution_Range& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Distribution_Range& from) {
    Distribution_Range::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_Range* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Distribution.Range";
  }
  protected:
  explicit Distribution_Range(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // double min = 1;
  void clear_min();
  double min() const;
  void set_min(double value);
  private:
  double _internal_min() const;
  void _internal_set_min(double value);
  public:

  // double max = 2;
  void clear_max();
  double max() const;
  void set_max(double value);
  private:
  double _internal_max() const;
  void _internal_set_max(double value);
  public:

  // @@protoc_insertion_point(class_scope:google.api.Distribution.Range)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double min_;
    double max_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fdistribution_2eproto;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions_Linear final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions.Linear) */ {
 public:
  inline Distribution_BucketOptions_Linear() : Distribution_BucketOptions_Linear(nullptr) {}
  ~Distribution_BucketOptions_Linear() override;
  explicit PROTOBUF_CONSTEXPR Distribution_BucketOptions_Linear(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Distribution_BucketOptions_Linear(const Distribution_BucketOptions_Linear& from);
  Distribution_BucketOptions_Linear(Distribution_BucketOptions_Linear&& from) noexcept
    : Distribution_BucketOptions_Linear() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions_Linear& operator=(const Distribution_BucketOptions_Linear& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution_BucketOptions_Linear& operator=(Distribution_BucketOptions_Linear&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution_BucketOptions_Linear& default_instance() {
    return *internal_default_instance();
  }
  static inline const Distribution_BucketOptions_Linear* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions_Linear*>(
               &_Distribution_BucketOptions_Linear_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Distribution_BucketOptions_Linear& a, Distribution_BucketOptions_Linear& b) {
    a.Swap(&b);
  }
  inline void Swap(Distribution_BucketOptions_Linear* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution_BucketOptions_Linear* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution_BucketOptions_Linear* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Linear>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Distribution_BucketOptions_Linear& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Distribution_BucketOptions_Linear& from) {
    Distribution_BucketOptions_Linear::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions_Linear* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Distribution.BucketOptions.Linear";
  }
  protected:
  explicit Distribution_BucketOptions_Linear(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWidthFieldNumber = 2,
    kOffsetFieldNumber = 3,
    kNumFiniteBucketsFieldNumber = 1,
  };
  // double width = 2;
  void clear_width();
  double width() const;
  void set_width(double value);
  private:
  double _internal_width() const;
  void _internal_set_width(double value);
  public:

  // double offset = 3;
  void clear_offset();
  double offset() const;
  void set_offset(double value);
  private:
  double _internal_offset() const;
  void _internal_set_offset(double value);
  public:

  // int32 num_finite_buckets = 1;
  void clear_num_finite_buckets();
  int32_t num_finite_buckets() const;
  void set_num_finite_buckets(int32_t value);
  private:
  int32_t _internal_num_finite_buckets() const;
  void _internal_set_num_finite_buckets(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Linear)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double width_;
    double offset_;
    int32_t num_finite_buckets_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fdistribution_2eproto;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions_Exponential final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions.Exponential) */ {
 public:
  inline Distribution_BucketOptions_Exponential() : Distribution_BucketOptions_Exponential(nullptr) {}
  ~Distribution_BucketOptions_Exponential() override;
  explicit PROTOBUF_CONSTEXPR Distribution_BucketOptions_Exponential(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Distribution_BucketOptions_Exponential(const Distribution_BucketOptions_Exponential& from);
  Distribution_BucketOptions_Exponential(Distribution_BucketOptions_Exponential&& from) noexcept
    : Distribution_BucketOptions_Exponential() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions_Exponential& operator=(const Distribution_BucketOptions_Exponential& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution_BucketOptions_Exponential& operator=(Distribution_BucketOptions_Exponential&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution_BucketOptions_Exponential& default_instance() {
    return *internal_default_instance();
  }
  static inline const Distribution_BucketOptions_Exponential* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions_Exponential*>(
               &_Distribution_BucketOptions_Exponential_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Distribution_BucketOptions_Exponential& a, Distribution_BucketOptions_Exponential& b) {
    a.Swap(&b);
  }
  inline void Swap(Distribution_BucketOptions_Exponential* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution_BucketOptions_Exponential* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution_BucketOptions_Exponential* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Exponential>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Distribution_BucketOptions_Exponential& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Distribution_BucketOptions_Exponential& from) {
    Distribution_BucketOptions_Exponential::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions_Exponential* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Distribution.BucketOptions.Exponential";
  }
  protected:
  explicit Distribution_BucketOptions_Exponential(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGrowthFactorFieldNumber = 2,
    kScaleFieldNumber = 3,
    kNumFiniteBucketsFieldNumber = 1,
  };
  // double growth_factor = 2;
  void clear_growth_factor();
  double growth_factor() const;
  void set_growth_factor(double value);
  private:
  double _internal_growth_factor() const;
  void _internal_set_growth_factor(double value);
  public:

  // double scale = 3;
  void clear_scale();
  double scale() const;
  void set_scale(double value);
  private:
  double _internal_scale() const;
  void _internal_set_scale(double value);
  public:

  // int32 num_finite_buckets = 1;
  void clear_num_finite_buckets();
  int32_t num_finite_buckets() const;
  void set_num_finite_buckets(int32_t value);
  private:
  int32_t _internal_num_finite_buckets() const;
  void _internal_set_num_finite_buckets(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Exponential)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double growth_factor_;
    double scale_;
    int32_t num_finite_buckets_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fdistribution_2eproto;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions_Explicit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions.Explicit) */ {
 public:
  inline Distribution_BucketOptions_Explicit() : Distribution_BucketOptions_Explicit(nullptr) {}
  ~Distribution_BucketOptions_Explicit() override;
  explicit PROTOBUF_CONSTEXPR Distribution_BucketOptions_Explicit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Distribution_BucketOptions_Explicit(const Distribution_BucketOptions_Explicit& from);
  Distribution_BucketOptions_Explicit(Distribution_BucketOptions_Explicit&& from) noexcept
    : Distribution_BucketOptions_Explicit() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions_Explicit& operator=(const Distribution_BucketOptions_Explicit& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution_BucketOptions_Explicit& operator=(Distribution_BucketOptions_Explicit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution_BucketOptions_Explicit& default_instance() {
    return *internal_default_instance();
  }
  static inline const Distribution_BucketOptions_Explicit* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions_Explicit*>(
               &_Distribution_BucketOptions_Explicit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Distribution_BucketOptions_Explicit& a, Distribution_BucketOptions_Explicit& b) {
    a.Swap(&b);
  }
  inline void Swap(Distribution_BucketOptions_Explicit* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution_BucketOptions_Explicit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution_BucketOptions_Explicit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Explicit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Distribution_BucketOptions_Explicit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Distribution_BucketOptions_Explicit& from) {
    Distribution_BucketOptions_Explicit::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions_Explicit* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Distribution.BucketOptions.Explicit";
  }
  protected:
  explicit Distribution_BucketOptions_Explicit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoundsFieldNumber = 1,
  };
  // repeated double bounds = 1;
  int bounds_size() const;
  private:
  int _internal_bounds_size() const;
  public:
  void clear_bounds();
  private:
  double _internal_bounds(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_bounds() const;
  void _internal_add_bounds(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_bounds();
  public:
  double bounds(int index) const;
  void set_bounds(int index, double value);
  void add_bounds(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      bounds() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_bounds();

  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Explicit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > bounds_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fdistribution_2eproto;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions) */ {
 public:
  inline Distribution_BucketOptions() : Distribution_BucketOptions(nullptr) {}
  ~Distribution_BucketOptions() override;
  explicit PROTOBUF_CONSTEXPR Distribution_BucketOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Distribution_BucketOptions(const Distribution_BucketOptions& from);
  Distribution_BucketOptions(Distribution_BucketOptions&& from) noexcept
    : Distribution_BucketOptions() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions& operator=(const Distribution_BucketOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution_BucketOptions& operator=(Distribution_BucketOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution_BucketOptions& default_instance() {
    return *internal_default_instance();
  }
  enum OptionsCase {
    kLinearBuckets = 1,
    kExponentialBuckets = 2,
    kExplicitBuckets = 3,
    OPTIONS_NOT_SET = 0,
  };

  static inline const Distribution_BucketOptions* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions*>(
               &_Distribution_BucketOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Distribution_BucketOptions& a, Distribution_BucketOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(Distribution_BucketOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution_BucketOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution_BucketOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Distribution_BucketOptions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Distribution_BucketOptions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Distribution_BucketOptions& from) {
    Distribution_BucketOptions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Distribution.BucketOptions";
  }
  protected:
  explicit Distribution_BucketOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Distribution_BucketOptions_Linear Linear;
  typedef Distribution_BucketOptions_Exponential Exponential;
  typedef Distribution_BucketOptions_Explicit Explicit;

  // accessors -------------------------------------------------------

  enum : int {
    kLinearBucketsFieldNumber = 1,
    kExponentialBucketsFieldNumber = 2,
    kExplicitBucketsFieldNumber = 3,
  };
  // .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
  bool has_linear_buckets() const;
  private:
  bool _internal_has_linear_buckets() const;
  public:
  void clear_linear_buckets();
  const ::google::api::Distribution_BucketOptions_Linear& linear_buckets() const;
  PROTOBUF_NODISCARD ::google::api::Distribution_BucketOptions_Linear* release_linear_buckets();
  ::google::api::Distribution_BucketOptions_Linear* mutable_linear_buckets();
  void set_allocated_linear_buckets(::google::api::Distribution_BucketOptions_Linear* linear_buckets);
  private:
  const ::google::api::Distribution_BucketOptions_Linear& _internal_linear_buckets() const;
  ::google::api::Distribution_BucketOptions_Linear* _internal_mutable_linear_buckets();
  public:
  void unsafe_arena_set_allocated_linear_buckets(
      ::google::api::Distribution_BucketOptions_Linear* linear_buckets);
  ::google::api::Distribution_BucketOptions_Linear* unsafe_arena_release_linear_buckets();

  // .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
  bool has_exponential_buckets() const;
  private:
  bool _internal_has_exponential_buckets() const;
  public:
  void clear_exponential_buckets();
  const ::google::api::Distribution_BucketOptions_Exponential& exponential_buckets() const;
  PROTOBUF_NODISCARD ::google::api::Distribution_BucketOptions_Exponential* release_exponential_buckets();
  ::google::api::Distribution_BucketOptions_Exponential* mutable_exponential_buckets();
  void set_allocated_exponential_buckets(::google::api::Distribution_BucketOptions_Exponential* exponential_buckets);
  private:
  const ::google::api::Distribution_BucketOptions_Exponential& _internal_exponential_buckets() const;
  ::google::api::Distribution_BucketOptions_Exponential* _internal_mutable_exponential_buckets();
  public:
  void unsafe_arena_set_allocated_exponential_buckets(
      ::google::api::Distribution_BucketOptions_Exponential* exponential_buckets);
  ::google::api::Distribution_BucketOptions_Exponential* unsafe_arena_release_exponential_buckets();

  // .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
  bool has_explicit_buckets() const;
  private:
  bool _internal_has_explicit_buckets() const;
  public:
  void clear_explicit_buckets();
  const ::google::api::Distribution_BucketOptions_Explicit& explicit_buckets() const;
  PROTOBUF_NODISCARD ::google::api::Distribution_BucketOptions_Explicit* release_explicit_buckets();
  ::google::api::Distribution_BucketOptions_Explicit* mutable_explicit_buckets();
  void set_allocated_explicit_buckets(::google::api::Distribution_BucketOptions_Explicit* explicit_buckets);
  private:
  const ::google::api::Distribution_BucketOptions_Explicit& _internal_explicit_buckets() const;
  ::google::api::Distribution_BucketOptions_Explicit* _internal_mutable_explicit_buckets();
  public:
  void unsafe_arena_set_allocated_explicit_buckets(
      ::google::api::Distribution_BucketOptions_Explicit* explicit_buckets);
  ::google::api::Distribution_BucketOptions_Explicit* unsafe_arena_release_explicit_buckets();

  void clear_options();
  OptionsCase options_case() const;
  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions)
 private:
  class _Internal;
  void set_has_linear_buckets();
  void set_has_exponential_buckets();
  void set_has_explicit_buckets();

  inline bool has_options() const;
  inline void clear_has_options();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union OptionsUnion {
      constexpr OptionsUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::google::api::Distribution_BucketOptions_Linear* linear_buckets_;
      ::google::api::Distribution_BucketOptions_Exponential* exponential_buckets_;
      ::google::api::Distribution_BucketOptions_Explicit* explicit_buckets_;
    } options_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fdistribution_2eproto;
};
// -------------------------------------------------------------------

class Distribution_Exemplar final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.Exemplar) */ {
 public:
  inline Distribution_Exemplar() : Distribution_Exemplar(nullptr) {}
  ~Distribution_Exemplar() override;
  explicit PROTOBUF_CONSTEXPR Distribution_Exemplar(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Distribution_Exemplar(const Distribution_Exemplar& from);
  Distribution_Exemplar(Distribution_Exemplar&& from) noexcept
    : Distribution_Exemplar() {
    *this = ::std::move(from);
  }

  inline Distribution_Exemplar& operator=(const Distribution_Exemplar& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution_Exemplar& operator=(Distribution_Exemplar&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution_Exemplar& default_instance() {
    return *internal_default_instance();
  }
  static inline const Distribution_Exemplar* internal_default_instance() {
    return reinterpret_cast<const Distribution_Exemplar*>(
               &_Distribution_Exemplar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Distribution_Exemplar& a, Distribution_Exemplar& b) {
    a.Swap(&b);
  }
  inline void Swap(Distribution_Exemplar* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution_Exemplar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution_Exemplar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Distribution_Exemplar>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Distribution_Exemplar& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Distribution_Exemplar& from) {
    Distribution_Exemplar::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_Exemplar* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Distribution.Exemplar";
  }
  protected:
  explicit Distribution_Exemplar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttachmentsFieldNumber = 3,
    kTimestampFieldNumber = 2,
    kValueFieldNumber = 1,
  };
  // repeated .google.protobuf.Any attachments = 3;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;
  public:
  void clear_attachments();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_attachments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
      mutable_attachments();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_attachments(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_add_attachments();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Any& attachments(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* add_attachments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
      attachments() const;

  // .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_timestamp();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_timestamp() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_timestamp();
  public:
  void unsafe_arena_set_allocated_timestamp(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_timestamp();

  // double value = 1;
  void clear_value();
  double value() const;
  void set_value(double value);
  private:
  double _internal_value() const;
  void _internal_set_value(double value);
  public:

  // @@protoc_insertion_point(class_scope:google.api.Distribution.Exemplar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any > attachments_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp_;
    double value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fdistribution_2eproto;
};
// -------------------------------------------------------------------

class Distribution final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution) */ {
 public:
  inline Distribution() : Distribution(nullptr) {}
  ~Distribution() override;
  explicit PROTOBUF_CONSTEXPR Distribution(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Distribution(const Distribution& from);
  Distribution(Distribution&& from) noexcept
    : Distribution() {
    *this = ::std::move(from);
  }

  inline Distribution& operator=(const Distribution& from) {
    CopyFrom(from);
    return *this;
  }
  inline Distribution& operator=(Distribution&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Distribution& default_instance() {
    return *internal_default_instance();
  }
  static inline const Distribution* internal_default_instance() {
    return reinterpret_cast<const Distribution*>(
               &_Distribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Distribution& a, Distribution& b) {
    a.Swap(&b);
  }
  inline void Swap(Distribution* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Distribution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Distribution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Distribution>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Distribution& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Distribution& from) {
    Distribution::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.Distribution";
  }
  protected:
  explicit Distribution(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Distribution_Range Range;
  typedef Distribution_BucketOptions BucketOptions;
  typedef Distribution_Exemplar Exemplar;

  // accessors -------------------------------------------------------

  enum : int {
    kBucketCountsFieldNumber = 7,
    kExemplarsFieldNumber = 10,
    kRangeFieldNumber = 4,
    kBucketOptionsFieldNumber = 6,
    kCountFieldNumber = 1,
    kMeanFieldNumber = 2,
    kSumOfSquaredDeviationFieldNumber = 3,
  };
  // repeated int64 bucket_counts = 7;
  int bucket_counts_size() const;
  private:
  int _internal_bucket_counts_size() const;
  public:
  void clear_bucket_counts();
  private:
  int64_t _internal_bucket_counts(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_bucket_counts() const;
  void _internal_add_bucket_counts(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_bucket_counts();
  public:
  int64_t bucket_counts(int index) const;
  void set_bucket_counts(int index, int64_t value);
  void add_bucket_counts(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      bucket_counts() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_bucket_counts();

  // repeated .google.api.Distribution.Exemplar exemplars = 10;
  int exemplars_size() const;
  private:
  int _internal_exemplars_size() const;
  public:
  void clear_exemplars();
  ::google::api::Distribution_Exemplar* mutable_exemplars(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Distribution_Exemplar >*
      mutable_exemplars();
  private:
  const ::google::api::Distribution_Exemplar& _internal_exemplars(int index) const;
  ::google::api::Distribution_Exemplar* _internal_add_exemplars();
  public:
  const ::google::api::Distribution_Exemplar& exemplars(int index) const;
  ::google::api::Distribution_Exemplar* add_exemplars();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Distribution_Exemplar >&
      exemplars() const;

  // .google.api.Distribution.Range range = 4;
  bool has_range() const;
  private:
  bool _internal_has_range() const;
  public:
  void clear_range();
  const ::google::api::Distribution_Range& range() const;
  PROTOBUF_NODISCARD ::google::api::Distribution_Range* release_range();
  ::google::api::Distribution_Range* mutable_range();
  void set_allocated_range(::google::api::Distribution_Range* range);
  private:
  const ::google::api::Distribution_Range& _internal_range() const;
  ::google::api::Distribution_Range* _internal_mutable_range();
  public:
  void unsafe_arena_set_allocated_range(
      ::google::api::Distribution_Range* range);
  ::google::api::Distribution_Range* unsafe_arena_release_range();

  // .google.api.Distribution.BucketOptions bucket_options = 6;
  bool has_bucket_options() const;
  private:
  bool _internal_has_bucket_options() const;
  public:
  void clear_bucket_options();
  const ::google::api::Distribution_BucketOptions& bucket_options() const;
  PROTOBUF_NODISCARD ::google::api::Distribution_BucketOptions* release_bucket_options();
  ::google::api::Distribution_BucketOptions* mutable_bucket_options();
  void set_allocated_bucket_options(::google::api::Distribution_BucketOptions* bucket_options);
  private:
  const ::google::api::Distribution_BucketOptions& _internal_bucket_options() const;
  ::google::api::Distribution_BucketOptions* _internal_mutable_bucket_options();
  public:
  void unsafe_arena_set_allocated_bucket_options(
      ::google::api::Distribution_BucketOptions* bucket_options);
  ::google::api::Distribution_BucketOptions* unsafe_arena_release_bucket_options();

  // int64 count = 1;
  void clear_count();
  int64_t count() const;
  void set_count(int64_t value);
  private:
  int64_t _internal_count() const;
  void _internal_set_count(int64_t value);
  public:

  // double mean = 2;
  void clear_mean();
  double mean() const;
  void set_mean(double value);
  private:
  double _internal_mean() const;
  void _internal_set_mean(double value);
  public:

  // double sum_of_squared_deviation = 3;
  void clear_sum_of_squared_deviation();
  double sum_of_squared_deviation() const;
  void set_sum_of_squared_deviation(double value);
  private:
  double _internal_sum_of_squared_deviation() const;
  void _internal_set_sum_of_squared_deviation(double value);
  public:

  // @@protoc_insertion_point(class_scope:google.api.Distribution)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > bucket_counts_;
    mutable std::atomic<int> _bucket_counts_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Distribution_Exemplar > exemplars_;
    ::google::api::Distribution_Range* range_;
    ::google::api::Distribution_BucketOptions* bucket_options_;
    int64_t count_;
    double mean_;
    double sum_of_squared_deviation_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fdistribution_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Distribution_Range

// double min = 1;
inline void Distribution_Range::clear_min() {
  _impl_.min_ = 0;
}
inline double Distribution_Range::_internal_min() const {
  return _impl_.min_;
}
inline double Distribution_Range::min() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Range.min)
  return _internal_min();
}
inline void Distribution_Range::_internal_set_min(double value) {
  
  _impl_.min_ = value;
}
inline void Distribution_Range::set_min(double value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.Range.min)
}

// double max = 2;
inline void Distribution_Range::clear_max() {
  _impl_.max_ = 0;
}
inline double Distribution_Range::_internal_max() const {
  return _impl_.max_;
}
inline double Distribution_Range::max() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Range.max)
  return _internal_max();
}
inline void Distribution_Range::_internal_set_max(double value) {
  
  _impl_.max_ = value;
}
inline void Distribution_Range::set_max(double value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.Range.max)
}

// -------------------------------------------------------------------

// Distribution_BucketOptions_Linear

// int32 num_finite_buckets = 1;
inline void Distribution_BucketOptions_Linear::clear_num_finite_buckets() {
  _impl_.num_finite_buckets_ = 0;
}
inline int32_t Distribution_BucketOptions_Linear::_internal_num_finite_buckets() const {
  return _impl_.num_finite_buckets_;
}
inline int32_t Distribution_BucketOptions_Linear::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Linear.num_finite_buckets)
  return _internal_num_finite_buckets();
}
inline void Distribution_BucketOptions_Linear::_internal_set_num_finite_buckets(int32_t value) {
  
  _impl_.num_finite_buckets_ = value;
}
inline void Distribution_BucketOptions_Linear::set_num_finite_buckets(int32_t value) {
  _internal_set_num_finite_buckets(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Linear.num_finite_buckets)
}

// double width = 2;
inline void Distribution_BucketOptions_Linear::clear_width() {
  _impl_.width_ = 0;
}
inline double Distribution_BucketOptions_Linear::_internal_width() const {
  return _impl_.width_;
}
inline double Distribution_BucketOptions_Linear::width() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Linear.width)
  return _internal_width();
}
inline void Distribution_BucketOptions_Linear::_internal_set_width(double value) {
  
  _impl_.width_ = value;
}
inline void Distribution_BucketOptions_Linear::set_width(double value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Linear.width)
}

// double offset = 3;
inline void Distribution_BucketOptions_Linear::clear_offset() {
  _impl_.offset_ = 0;
}
inline double Distribution_BucketOptions_Linear::_internal_offset() const {
  return _impl_.offset_;
}
inline double Distribution_BucketOptions_Linear::offset() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Linear.offset)
  return _internal_offset();
}
inline void Distribution_BucketOptions_Linear::_internal_set_offset(double value) {
  
  _impl_.offset_ = value;
}
inline void Distribution_BucketOptions_Linear::set_offset(double value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Linear.offset)
}

// -------------------------------------------------------------------

// Distribution_BucketOptions_Exponential

// int32 num_finite_buckets = 1;
inline void Distribution_BucketOptions_Exponential::clear_num_finite_buckets() {
  _impl_.num_finite_buckets_ = 0;
}
inline int32_t Distribution_BucketOptions_Exponential::_internal_num_finite_buckets() const {
  return _impl_.num_finite_buckets_;
}
inline int32_t Distribution_BucketOptions_Exponential::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Exponential.num_finite_buckets)
  return _internal_num_finite_buckets();
}
inline void Distribution_BucketOptions_Exponential::_internal_set_num_finite_buckets(int32_t value) {
  
  _impl_.num_finite_buckets_ = value;
}
inline void Distribution_BucketOptions_Exponential::set_num_finite_buckets(int32_t value) {
  _internal_set_num_finite_buckets(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Exponential.num_finite_buckets)
}

// double growth_factor = 2;
inline void Distribution_BucketOptions_Exponential::clear_growth_factor() {
  _impl_.growth_factor_ = 0;
}
inline double Distribution_BucketOptions_Exponential::_internal_growth_factor() const {
  return _impl_.growth_factor_;
}
inline double Distribution_BucketOptions_Exponential::growth_factor() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Exponential.growth_factor)
  return _internal_growth_factor();
}
inline void Distribution_BucketOptions_Exponential::_internal_set_growth_factor(double value) {
  
  _impl_.growth_factor_ = value;
}
inline void Distribution_BucketOptions_Exponential::set_growth_factor(double value) {
  _internal_set_growth_factor(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Exponential.growth_factor)
}

// double scale = 3;
inline void Distribution_BucketOptions_Exponential::clear_scale() {
  _impl_.scale_ = 0;
}
inline double Distribution_BucketOptions_Exponential::_internal_scale() const {
  return _impl_.scale_;
}
inline double Distribution_BucketOptions_Exponential::scale() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Exponential.scale)
  return _internal_scale();
}
inline void Distribution_BucketOptions_Exponential::_internal_set_scale(double value) {
  
  _impl_.scale_ = value;
}
inline void Distribution_BucketOptions_Exponential::set_scale(double value) {
  _internal_set_scale(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Exponential.scale)
}

// -------------------------------------------------------------------

// Distribution_BucketOptions_Explicit

// repeated double bounds = 1;
inline int Distribution_BucketOptions_Explicit::_internal_bounds_size() const {
  return _impl_.bounds_.size();
}
inline int Distribution_BucketOptions_Explicit::bounds_size() const {
  return _internal_bounds_size();
}
inline void Distribution_BucketOptions_Explicit::clear_bounds() {
  _impl_.bounds_.Clear();
}
inline double Distribution_BucketOptions_Explicit::_internal_bounds(int index) const {
  return _impl_.bounds_.Get(index);
}
inline double Distribution_BucketOptions_Explicit::bounds(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Explicit.bounds)
  return _internal_bounds(index);
}
inline void Distribution_BucketOptions_Explicit::set_bounds(int index, double value) {
  _impl_.bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Explicit.bounds)
}
inline void Distribution_BucketOptions_Explicit::_internal_add_bounds(double value) {
  _impl_.bounds_.Add(value);
}
inline void Distribution_BucketOptions_Explicit::add_bounds(double value) {
  _internal_add_bounds(value);
  // @@protoc_insertion_point(field_add:google.api.Distribution.BucketOptions.Explicit.bounds)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Distribution_BucketOptions_Explicit::_internal_bounds() const {
  return _impl_.bounds_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Distribution_BucketOptions_Explicit::bounds() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.BucketOptions.Explicit.bounds)
  return _internal_bounds();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Distribution_BucketOptions_Explicit::_internal_mutable_bounds() {
  return &_impl_.bounds_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Distribution_BucketOptions_Explicit::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.BucketOptions.Explicit.bounds)
  return _internal_mutable_bounds();
}

// -------------------------------------------------------------------

// Distribution_BucketOptions

// .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
inline bool Distribution_BucketOptions::_internal_has_linear_buckets() const {
  return options_case() == kLinearBuckets;
}
inline bool Distribution_BucketOptions::has_linear_buckets() const {
  return _internal_has_linear_buckets();
}
inline void Distribution_BucketOptions::set_has_linear_buckets() {
  _impl_._oneof_case_[0] = kLinearBuckets;
}
inline void Distribution_BucketOptions::clear_linear_buckets() {
  if (_internal_has_linear_buckets()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.options_.linear_buckets_;
    }
    clear_has_options();
  }
}
inline ::google::api::Distribution_BucketOptions_Linear* Distribution_BucketOptions::release_linear_buckets() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.BucketOptions.linear_buckets)
  if (_internal_has_linear_buckets()) {
    clear_has_options();
    ::google::api::Distribution_BucketOptions_Linear* temp = _impl_.options_.linear_buckets_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.options_.linear_buckets_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::Distribution_BucketOptions_Linear& Distribution_BucketOptions::_internal_linear_buckets() const {
  return _internal_has_linear_buckets()
      ? *_impl_.options_.linear_buckets_
      : reinterpret_cast< ::google::api::Distribution_BucketOptions_Linear&>(::google::api::_Distribution_BucketOptions_Linear_default_instance_);
}
inline const ::google::api::Distribution_BucketOptions_Linear& Distribution_BucketOptions::linear_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.linear_buckets)
  return _internal_linear_buckets();
}
inline ::google::api::Distribution_BucketOptions_Linear* Distribution_BucketOptions::unsafe_arena_release_linear_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.Distribution.BucketOptions.linear_buckets)
  if (_internal_has_linear_buckets()) {
    clear_has_options();
    ::google::api::Distribution_BucketOptions_Linear* temp = _impl_.options_.linear_buckets_;
    _impl_.options_.linear_buckets_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Distribution_BucketOptions::unsafe_arena_set_allocated_linear_buckets(::google::api::Distribution_BucketOptions_Linear* linear_buckets) {
  clear_options();
  if (linear_buckets) {
    set_has_linear_buckets();
    _impl_.options_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.Distribution.BucketOptions.linear_buckets)
}
inline ::google::api::Distribution_BucketOptions_Linear* Distribution_BucketOptions::_internal_mutable_linear_buckets() {
  if (!_internal_has_linear_buckets()) {
    clear_options();
    set_has_linear_buckets();
    _impl_.options_.linear_buckets_ = CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Linear >(GetArenaForAllocation());
  }
  return _impl_.options_.linear_buckets_;
}
inline ::google::api::Distribution_BucketOptions_Linear* Distribution_BucketOptions::mutable_linear_buckets() {
  ::google::api::Distribution_BucketOptions_Linear* _msg = _internal_mutable_linear_buckets();
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.BucketOptions.linear_buckets)
  return _msg;
}

// .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
inline bool Distribution_BucketOptions::_internal_has_exponential_buckets() const {
  return options_case() == kExponentialBuckets;
}
inline bool Distribution_BucketOptions::has_exponential_buckets() const {
  return _internal_has_exponential_buckets();
}
inline void Distribution_BucketOptions::set_has_exponential_buckets() {
  _impl_._oneof_case_[0] = kExponentialBuckets;
}
inline void Distribution_BucketOptions::clear_exponential_buckets() {
  if (_internal_has_exponential_buckets()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.options_.exponential_buckets_;
    }
    clear_has_options();
  }
}
inline ::google::api::Distribution_BucketOptions_Exponential* Distribution_BucketOptions::release_exponential_buckets() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.BucketOptions.exponential_buckets)
  if (_internal_has_exponential_buckets()) {
    clear_has_options();
    ::google::api::Distribution_BucketOptions_Exponential* temp = _impl_.options_.exponential_buckets_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.options_.exponential_buckets_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::Distribution_BucketOptions_Exponential& Distribution_BucketOptions::_internal_exponential_buckets() const {
  return _internal_has_exponential_buckets()
      ? *_impl_.options_.exponential_buckets_
      : reinterpret_cast< ::google::api::Distribution_BucketOptions_Exponential&>(::google::api::_Distribution_BucketOptions_Exponential_default_instance_);
}
inline const ::google::api::Distribution_BucketOptions_Exponential& Distribution_BucketOptions::exponential_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.exponential_buckets)
  return _internal_exponential_buckets();
}
inline ::google::api::Distribution_BucketOptions_Exponential* Distribution_BucketOptions::unsafe_arena_release_exponential_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.Distribution.BucketOptions.exponential_buckets)
  if (_internal_has_exponential_buckets()) {
    clear_has_options();
    ::google::api::Distribution_BucketOptions_Exponential* temp = _impl_.options_.exponential_buckets_;
    _impl_.options_.exponential_buckets_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Distribution_BucketOptions::unsafe_arena_set_allocated_exponential_buckets(::google::api::Distribution_BucketOptions_Exponential* exponential_buckets) {
  clear_options();
  if (exponential_buckets) {
    set_has_exponential_buckets();
    _impl_.options_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.Distribution.BucketOptions.exponential_buckets)
}
inline ::google::api::Distribution_BucketOptions_Exponential* Distribution_BucketOptions::_internal_mutable_exponential_buckets() {
  if (!_internal_has_exponential_buckets()) {
    clear_options();
    set_has_exponential_buckets();
    _impl_.options_.exponential_buckets_ = CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Exponential >(GetArenaForAllocation());
  }
  return _impl_.options_.exponential_buckets_;
}
inline ::google::api::Distribution_BucketOptions_Exponential* Distribution_BucketOptions::mutable_exponential_buckets() {
  ::google::api::Distribution_BucketOptions_Exponential* _msg = _internal_mutable_exponential_buckets();
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.BucketOptions.exponential_buckets)
  return _msg;
}

// .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
inline bool Distribution_BucketOptions::_internal_has_explicit_buckets() const {
  return options_case() == kExplicitBuckets;
}
inline bool Distribution_BucketOptions::has_explicit_buckets() const {
  return _internal_has_explicit_buckets();
}
inline void Distribution_BucketOptions::set_has_explicit_buckets() {
  _impl_._oneof_case_[0] = kExplicitBuckets;
}
inline void Distribution_BucketOptions::clear_explicit_buckets() {
  if (_internal_has_explicit_buckets()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.options_.explicit_buckets_;
    }
    clear_has_options();
  }
}
inline ::google::api::Distribution_BucketOptions_Explicit* Distribution_BucketOptions::release_explicit_buckets() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.BucketOptions.explicit_buckets)
  if (_internal_has_explicit_buckets()) {
    clear_has_options();
    ::google::api::Distribution_BucketOptions_Explicit* temp = _impl_.options_.explicit_buckets_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.options_.explicit_buckets_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::Distribution_BucketOptions_Explicit& Distribution_BucketOptions::_internal_explicit_buckets() const {
  return _internal_has_explicit_buckets()
      ? *_impl_.options_.explicit_buckets_
      : reinterpret_cast< ::google::api::Distribution_BucketOptions_Explicit&>(::google::api::_Distribution_BucketOptions_Explicit_default_instance_);
}
inline const ::google::api::Distribution_BucketOptions_Explicit& Distribution_BucketOptions::explicit_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.explicit_buckets)
  return _internal_explicit_buckets();
}
inline ::google::api::Distribution_BucketOptions_Explicit* Distribution_BucketOptions::unsafe_arena_release_explicit_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.Distribution.BucketOptions.explicit_buckets)
  if (_internal_has_explicit_buckets()) {
    clear_has_options();
    ::google::api::Distribution_BucketOptions_Explicit* temp = _impl_.options_.explicit_buckets_;
    _impl_.options_.explicit_buckets_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Distribution_BucketOptions::unsafe_arena_set_allocated_explicit_buckets(::google::api::Distribution_BucketOptions_Explicit* explicit_buckets) {
  clear_options();
  if (explicit_buckets) {
    set_has_explicit_buckets();
    _impl_.options_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.Distribution.BucketOptions.explicit_buckets)
}
inline ::google::api::Distribution_BucketOptions_Explicit* Distribution_BucketOptions::_internal_mutable_explicit_buckets() {
  if (!_internal_has_explicit_buckets()) {
    clear_options();
    set_has_explicit_buckets();
    _impl_.options_.explicit_buckets_ = CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Explicit >(GetArenaForAllocation());
  }
  return _impl_.options_.explicit_buckets_;
}
inline ::google::api::Distribution_BucketOptions_Explicit* Distribution_BucketOptions::mutable_explicit_buckets() {
  ::google::api::Distribution_BucketOptions_Explicit* _msg = _internal_mutable_explicit_buckets();
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.BucketOptions.explicit_buckets)
  return _msg;
}

inline bool Distribution_BucketOptions::has_options() const {
  return options_case() != OPTIONS_NOT_SET;
}
inline void Distribution_BucketOptions::clear_has_options() {
  _impl_._oneof_case_[0] = OPTIONS_NOT_SET;
}
inline Distribution_BucketOptions::OptionsCase Distribution_BucketOptions::options_case() const {
  return Distribution_BucketOptions::OptionsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Distribution_Exemplar

// double value = 1;
inline void Distribution_Exemplar::clear_value() {
  _impl_.value_ = 0;
}
inline double Distribution_Exemplar::_internal_value() const {
  return _impl_.value_;
}
inline double Distribution_Exemplar::value() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Exemplar.value)
  return _internal_value();
}
inline void Distribution_Exemplar::_internal_set_value(double value) {
  
  _impl_.value_ = value;
}
inline void Distribution_Exemplar::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.Exemplar.value)
}

// .google.protobuf.Timestamp timestamp = 2;
inline bool Distribution_Exemplar::_internal_has_timestamp() const {
  return this != internal_default_instance() && _impl_.timestamp_ != nullptr;
}
inline bool Distribution_Exemplar::has_timestamp() const {
  return _internal_has_timestamp();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& Distribution_Exemplar::_internal_timestamp() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& Distribution_Exemplar::timestamp() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Exemplar.timestamp)
  return _internal_timestamp();
}
inline void Distribution_Exemplar::unsafe_arena_set_allocated_timestamp(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.Distribution.Exemplar.timestamp)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Distribution_Exemplar::release_timestamp() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Distribution_Exemplar::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.Exemplar.timestamp)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Distribution_Exemplar::_internal_mutable_timestamp() {
  
  if (_impl_.timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.timestamp_ = p;
  }
  return _impl_.timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* Distribution_Exemplar::mutable_timestamp() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.Exemplar.timestamp)
  return _msg;
}
inline void Distribution_Exemplar::set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  if (timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp));
    if (message_arena != submessage_arena) {
      timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.Exemplar.timestamp)
}

// repeated .google.protobuf.Any attachments = 3;
inline int Distribution_Exemplar::_internal_attachments_size() const {
  return _impl_.attachments_.size();
}
inline int Distribution_Exemplar::attachments_size() const {
  return _internal_attachments_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* Distribution_Exemplar::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.Exemplar.attachments)
  return _impl_.attachments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
Distribution_Exemplar::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.Exemplar.attachments)
  return &_impl_.attachments_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& Distribution_Exemplar::_internal_attachments(int index) const {
  return _impl_.attachments_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& Distribution_Exemplar::attachments(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Exemplar.attachments)
  return _internal_attachments(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Any* Distribution_Exemplar::_internal_add_attachments() {
  return _impl_.attachments_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* Distribution_Exemplar::add_attachments() {
  ::PROTOBUF_NAMESPACE_ID::Any* _add = _internal_add_attachments();
  // @@protoc_insertion_point(field_add:google.api.Distribution.Exemplar.attachments)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
Distribution_Exemplar::attachments() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.Exemplar.attachments)
  return _impl_.attachments_;
}

// -------------------------------------------------------------------

// Distribution

// int64 count = 1;
inline void Distribution::clear_count() {
  _impl_.count_ = int64_t{0};
}
inline int64_t Distribution::_internal_count() const {
  return _impl_.count_;
}
inline int64_t Distribution::count() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.count)
  return _internal_count();
}
inline void Distribution::_internal_set_count(int64_t value) {
  
  _impl_.count_ = value;
}
inline void Distribution::set_count(int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.count)
}

// double mean = 2;
inline void Distribution::clear_mean() {
  _impl_.mean_ = 0;
}
inline double Distribution::_internal_mean() const {
  return _impl_.mean_;
}
inline double Distribution::mean() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.mean)
  return _internal_mean();
}
inline void Distribution::_internal_set_mean(double value) {
  
  _impl_.mean_ = value;
}
inline void Distribution::set_mean(double value) {
  _internal_set_mean(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.mean)
}

// double sum_of_squared_deviation = 3;
inline void Distribution::clear_sum_of_squared_deviation() {
  _impl_.sum_of_squared_deviation_ = 0;
}
inline double Distribution::_internal_sum_of_squared_deviation() const {
  return _impl_.sum_of_squared_deviation_;
}
inline double Distribution::sum_of_squared_deviation() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.sum_of_squared_deviation)
  return _internal_sum_of_squared_deviation();
}
inline void Distribution::_internal_set_sum_of_squared_deviation(double value) {
  
  _impl_.sum_of_squared_deviation_ = value;
}
inline void Distribution::set_sum_of_squared_deviation(double value) {
  _internal_set_sum_of_squared_deviation(value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.sum_of_squared_deviation)
}

// .google.api.Distribution.Range range = 4;
inline bool Distribution::_internal_has_range() const {
  return this != internal_default_instance() && _impl_.range_ != nullptr;
}
inline bool Distribution::has_range() const {
  return _internal_has_range();
}
inline void Distribution::clear_range() {
  if (GetArenaForAllocation() == nullptr && _impl_.range_ != nullptr) {
    delete _impl_.range_;
  }
  _impl_.range_ = nullptr;
}
inline const ::google::api::Distribution_Range& Distribution::_internal_range() const {
  const ::google::api::Distribution_Range* p = _impl_.range_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::api::Distribution_Range&>(
      ::google::api::_Distribution_Range_default_instance_);
}
inline const ::google::api::Distribution_Range& Distribution::range() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.range)
  return _internal_range();
}
inline void Distribution::unsafe_arena_set_allocated_range(
    ::google::api::Distribution_Range* range) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.range_);
  }
  _impl_.range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.Distribution.range)
}
inline ::google::api::Distribution_Range* Distribution::release_range() {
  
  ::google::api::Distribution_Range* temp = _impl_.range_;
  _impl_.range_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::api::Distribution_Range* Distribution::unsafe_arena_release_range() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.range)
  
  ::google::api::Distribution_Range* temp = _impl_.range_;
  _impl_.range_ = nullptr;
  return temp;
}
inline ::google::api::Distribution_Range* Distribution::_internal_mutable_range() {
  
  if (_impl_.range_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::api::Distribution_Range>(GetArenaForAllocation());
    _impl_.range_ = p;
  }
  return _impl_.range_;
}
inline ::google::api::Distribution_Range* Distribution::mutable_range() {
  ::google::api::Distribution_Range* _msg = _internal_mutable_range();
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.range)
  return _msg;
}
inline void Distribution::set_allocated_range(::google::api::Distribution_Range* range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.range_;
  }
  if (range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(range);
    if (message_arena != submessage_arena) {
      range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.range_ = range;
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.range)
}

// .google.api.Distribution.BucketOptions bucket_options = 6;
inline bool Distribution::_internal_has_bucket_options() const {
  return this != internal_default_instance() && _impl_.bucket_options_ != nullptr;
}
inline bool Distribution::has_bucket_options() const {
  return _internal_has_bucket_options();
}
inline void Distribution::clear_bucket_options() {
  if (GetArenaForAllocation() == nullptr && _impl_.bucket_options_ != nullptr) {
    delete _impl_.bucket_options_;
  }
  _impl_.bucket_options_ = nullptr;
}
inline const ::google::api::Distribution_BucketOptions& Distribution::_internal_bucket_options() const {
  const ::google::api::Distribution_BucketOptions* p = _impl_.bucket_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::api::Distribution_BucketOptions&>(
      ::google::api::_Distribution_BucketOptions_default_instance_);
}
inline const ::google::api::Distribution_BucketOptions& Distribution::bucket_options() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.bucket_options)
  return _internal_bucket_options();
}
inline void Distribution::unsafe_arena_set_allocated_bucket_options(
    ::google::api::Distribution_BucketOptions* bucket_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.bucket_options_);
  }
  _impl_.bucket_options_ = bucket_options;
  if (bucket_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.Distribution.bucket_options)
}
inline ::google::api::Distribution_BucketOptions* Distribution::release_bucket_options() {
  
  ::google::api::Distribution_BucketOptions* temp = _impl_.bucket_options_;
  _impl_.bucket_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::google::api::Distribution_BucketOptions* Distribution::unsafe_arena_release_bucket_options() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.bucket_options)
  
  ::google::api::Distribution_BucketOptions* temp = _impl_.bucket_options_;
  _impl_.bucket_options_ = nullptr;
  return temp;
}
inline ::google::api::Distribution_BucketOptions* Distribution::_internal_mutable_bucket_options() {
  
  if (_impl_.bucket_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::api::Distribution_BucketOptions>(GetArenaForAllocation());
    _impl_.bucket_options_ = p;
  }
  return _impl_.bucket_options_;
}
inline ::google::api::Distribution_BucketOptions* Distribution::mutable_bucket_options() {
  ::google::api::Distribution_BucketOptions* _msg = _internal_mutable_bucket_options();
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.bucket_options)
  return _msg;
}
inline void Distribution::set_allocated_bucket_options(::google::api::Distribution_BucketOptions* bucket_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.bucket_options_;
  }
  if (bucket_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bucket_options);
    if (message_arena != submessage_arena) {
      bucket_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bucket_options, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.bucket_options_ = bucket_options;
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.bucket_options)
}

// repeated int64 bucket_counts = 7;
inline int Distribution::_internal_bucket_counts_size() const {
  return _impl_.bucket_counts_.size();
}
inline int Distribution::bucket_counts_size() const {
  return _internal_bucket_counts_size();
}
inline void Distribution::clear_bucket_counts() {
  _impl_.bucket_counts_.Clear();
}
inline int64_t Distribution::_internal_bucket_counts(int index) const {
  return _impl_.bucket_counts_.Get(index);
}
inline int64_t Distribution::bucket_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.bucket_counts)
  return _internal_bucket_counts(index);
}
inline void Distribution::set_bucket_counts(int index, int64_t value) {
  _impl_.bucket_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.bucket_counts)
}
inline void Distribution::_internal_add_bucket_counts(int64_t value) {
  _impl_.bucket_counts_.Add(value);
}
inline void Distribution::add_bucket_counts(int64_t value) {
  _internal_add_bucket_counts(value);
  // @@protoc_insertion_point(field_add:google.api.Distribution.bucket_counts)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
Distribution::_internal_bucket_counts() const {
  return _impl_.bucket_counts_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
Distribution::bucket_counts() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.bucket_counts)
  return _internal_bucket_counts();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
Distribution::_internal_mutable_bucket_counts() {
  return &_impl_.bucket_counts_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
Distribution::mutable_bucket_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.bucket_counts)
  return _internal_mutable_bucket_counts();
}

// repeated .google.api.Distribution.Exemplar exemplars = 10;
inline int Distribution::_internal_exemplars_size() const {
  return _impl_.exemplars_.size();
}
inline int Distribution::exemplars_size() const {
  return _internal_exemplars_size();
}
inline void Distribution::clear_exemplars() {
  _impl_.exemplars_.Clear();
}
inline ::google::api::Distribution_Exemplar* Distribution::mutable_exemplars(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.exemplars)
  return _impl_.exemplars_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Distribution_Exemplar >*
Distribution::mutable_exemplars() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.exemplars)
  return &_impl_.exemplars_;
}
inline const ::google::api::Distribution_Exemplar& Distribution::_internal_exemplars(int index) const {
  return _impl_.exemplars_.Get(index);
}
inline const ::google::api::Distribution_Exemplar& Distribution::exemplars(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.exemplars)
  return _internal_exemplars(index);
}
inline ::google::api::Distribution_Exemplar* Distribution::_internal_add_exemplars() {
  return _impl_.exemplars_.Add();
}
inline ::google::api::Distribution_Exemplar* Distribution::add_exemplars() {
  ::google::api::Distribution_Exemplar* _add = _internal_add_exemplars();
  // @@protoc_insertion_point(field_add:google.api.Distribution.exemplars)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::Distribution_Exemplar >&
Distribution::exemplars() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.exemplars)
  return _impl_.exemplars_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fdistribution_2eproto
